{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/头像.jpg","path":"img/头像.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1646808030005},{"_id":"source/_posts/CANoe学习笔记/CANoe学习笔记.md","hash":"887d487f4895cff8a7ce24e0aab74c1d98787a07","modified":1655797046156},{"_id":"source/_posts/CNN/channel的理.md","hash":"068020744269e01afac160f41d7c9c9b72fcab88","modified":1654580464214},{"_id":"source/_posts/ESP32CAM/OpenCV读取ESP32CAM的视频流.md","hash":"38569ed8844deb76ed2138745779a83e114852d9","modified":1656325007895},{"_id":"source/_posts/ESP32CAM/使用ESP32CAM读取视频流.md","hash":"61e61590c18a55b156bcc6f07a4906d98da4a8e4","modified":1656323263754},{"_id":"source/_posts/IP摄像头rstp流/IP摄像头实现远程目标检测.md","hash":"39a6c786583755770557877402ce403a1b861d5c","modified":1655718187865},{"_id":"source/_posts/IP摄像头rstp流/OpenCV+YOLO+IP摄像头实现目标检测.md","hash":"36122e3d25adfe891f0ecd2d99855a640084abc9","modified":1656325013422},{"_id":"source/_posts/MQTT/基于MQTT实现esp32远程控制.md","hash":"14fe4b56db6f5f2b3a738a59e32760620c9f36f8","modified":1656491595006},{"_id":"source/_posts/OpenCV的坑/踩坑记录.md","hash":"8ea7ea07fe7afe50a641f2ce1cf9984ea9ff9a83","modified":1653470335628},{"_id":"source/_posts/Python_language/format.md","hash":"de58e894a89bd635edfeeab67eabdc0797558bd5","modified":1652773188334},{"_id":"source/_posts/Python_language/with_as.md","hash":"974777881c448314bb8c4327e756f73df1d5ca71","modified":1652772864798},{"_id":"source/_posts/YOLOv5/yolo训练自己的训练集.md","hash":"6d5fd5316d14d8548ab204a7f09740f728f4011d","modified":1654767809646},{"_id":"source/_posts/YOLOv5/实现目标检测-单目标.md","hash":"634f2c9290677469f5ae931d95b8f4120ec66d6f","modified":1654743799876},{"_id":"source/_posts/YOLOv5/实现目标检测-多目标.md","hash":"79b5815ffe9ba6539384dd71b95e6a1b7e4b3361","modified":1654743996485},{"_id":"source/_posts/YOLOv5/配置环境.md","hash":"61e27c788f99880e11d8b1d17d938fc18b6fd421","modified":1654072899288},{"_id":"source/_posts/esp32-weather/esp32_Json.md","hash":"c8061c6913c70b779309c0133676819a4484385b","modified":1648115205443},{"_id":"source/_posts/esp32-weather/esp32_WiFi+Json+U8g2.md","hash":"f06e65d19a83b376e2fcb439a557e3521313aabd","modified":1648605067817},{"_id":"source/_posts/esp32-weather/esp32_WiFi.md","hash":"b1fa979b6032843e3d77cab9383a4a82b9907c31","modified":1648115199931},{"_id":"source/_posts/esp32-weather/esp32_picture.md","hash":"ed668544e9885cca897ed4320ee00a2eec5cf2e5","modified":1648115204332},{"_id":"source/_posts/esp32-weather/esp32_weather.md","hash":"5d2b7d49b659b27c979b79fd9dacf00f3d842ed0","modified":1648115203288},{"_id":"source/_posts/esp32-weather/esp32_weatherCode.md","hash":"fcbd7e1802aca66b7336e5980b50555e35e84c1d","modified":1648605046049},{"_id":"source/_posts/esp32-weather/esp32_weatherpicture_H.md","hash":"2ce63c412b176dd699cd17a3027c2bb6958ec023","modified":1648605053421},{"_id":"source/_posts/esp32-weather/esp32and0.96LED_connect.md","hash":"846336c7ec9b1a8762e2bd54205d8e3a71eee740","modified":1648115198179},{"_id":"source/_posts/esp32-weather/esp_Time.md","hash":"82de5ba84be33876c8fcfaaeb575980dd53a89f5","modified":1648115206652},{"_id":"source/_posts/learning/BODAS-Using.md","hash":"2b5ee21aaaff5a6a0b5bc19cbb131ee669a8aa6d","modified":1649402235240},{"_id":"source/_posts/learning/CAN_DataAnalysis.md","hash":"4273776aaa5842fbf7cc4b6f742759b10fd1f810","modified":1652143604722},{"_id":"source/_posts/learning/Car-controlmodel.md","hash":"12ed3a8dd8a6123bbfe6842801d44091392ec015","modified":1648605020488},{"_id":"source/_posts/learning/EletricityKnowledge.md","hash":"8311825fdd0c38b288ca8c64b17bc4d7c3736d30","modified":1649410502838},{"_id":"source/_posts/learning/FunctionCall.md","hash":"4d1a25577ccae7d17ab182371532475146e124c5","modified":1648605087101},{"_id":"source/_posts/learning/IDE_Install.md","hash":"7d4527253747259e70a1e6d59685c31ee5950122","modified":1650525488267},{"_id":"source/_posts/learning/Language.md","hash":"1b0e549a7198b82a4ae32148a71c72025dc58b49","modified":1648115194283},{"_id":"source/_posts/learning/SAE_J1939.md","hash":"00a0b978b839dde5e03ed2545eb6a9737f975148","modified":1648605105833},{"_id":"source/_posts/learning/Using-polyspace.md","hash":"82421e0a1ac7c2f8ba5090d65588feffa5d50648","modified":1648718727903},{"_id":"source/_posts/learning/hello-world.md","hash":"3ff91a8ba935145c6482e040563b04d85cf269e6","modified":1648605114676},{"_id":"source/_posts/learning/卷积学习与理解.md","hash":"e7e0dd9dc8494d21f518679492d4615346bc136d","modified":1652671224876},{"_id":"source/_posts/numpy/interp.md","hash":"49aa2e1c1edad9f8880e4427df220c08f4e06e23","modified":1652671042258},{"_id":"source/_posts/numpy/numpy降维方法.md","hash":"2d18793f9844300135ed7dda00ce1d0da99de602","modified":1654072873409},{"_id":"source/_posts/numpy/ravel.md","hash":"affabaec860cb32bf9c153c4582f84a86f561b00","modified":1652772852113},{"_id":"source/_posts/numpy/数组取整列元素方法.md","hash":"3357d8b5b3a4b7b89e9660bd2263c27c3bb26884","modified":1652772003537},{"_id":"source/_posts/目标检测小项目/人像识别.md","hash":"bb58a24d3ece524f404ba36db61e58166d933453","modified":1654076183024},{"_id":"source/_posts/OpenCV/Canny边缘检测/OpenCV-Canny边缘检测.md","hash":"b166d8a3ac1a67738ac397b6b85c267a29e2ee2d","modified":1653534726571},{"_id":"source/_posts/OpenCV/Canny边缘检测/OpenCV-边缘检测数学推导.md","hash":"2468231ecf85c194b2f70f36d91e2b334fa94ecf","modified":1654161381579},{"_id":"source/_posts/OpenCV/OpenCV小项目/OpenCV+mediapipe实现简单手势识别.md","hash":"b60d96f1192bfb6922ecf4c9ccac6224bad18d6c","modified":1652345010223},{"_id":"source/_posts/OpenCV/OpenCV小项目/OpenCV-ORC手写数字识别.md","hash":"afd5403907ba8d9848cced424224116a7d27e481","modified":1653559635440},{"_id":"source/_posts/OpenCV/OpenCV小项目/OpenCV-手势控制电脑音量.md","hash":"56c2847dee3b1faa3b55f728ca8debb5b2985b88","modified":1652686414726},{"_id":"source/_posts/OpenCV/OpenCV小项目/OpenCV-手势调节音量基础实现.md","hash":"ccdf05d06bd09c052af975186d5036309105b871","modified":1652672030938},{"_id":"source/_posts/OpenCV/OpenCV小项目/OpenCV-远程控制手机拍照发邮件.md","hash":"52835bca0019d6c9a39872c451c8fd480a7ebd25","modified":1651917369987},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-Otherbase.md","hash":"29f245979a56e741391e3e402e06cb6c2d99ef97","modified":1649671768488},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-Videobase.md","hash":"1a9de206f851ca12accc5bfdac5fcaa0c6fc44a6","modified":1649751652379},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-picturebase.md","hash":"9c736e86babde22eff42f14184cfd8c0253acd54","modified":1649670952261},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-picturebyNumpy.md","hash":"723ec5fae376e3c7243b4866a1fbc0e780c5e0d5","modified":1649820088394},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-为图像设置边框（填充）.md","hash":"f094ae856685420e58765443478d971fce84f237","modified":1649751768240},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-图像上的运算.md","hash":"f9394748fbf754319c4de87a7c00169775f344e9","modified":1651918173148},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-图像几何变换.md","hash":"5b1db70880fce804aad7cb80e74ac092ccc782e5","modified":1651917323900},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-性能衡量和提升技术.md","hash":"58fc25946ffc5cec6f125bd9cf048d24c64d3ed9","modified":1649899071961},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-改变颜色空间.md","hash":"afef3ae09dbaf0e9331dfc06b4e094c4d013996e","modified":1651917436293},{"_id":"source/_posts/OpenCV/图像入门/OpenCV-查找HSV对应的BGR值.md","hash":"4a2cdd85d30360cd575104974b5c82d59d3fe616","modified":1651917438035},{"_id":"source/_posts/OpenCV/图像梯度/OpenCV-图像梯度.md","hash":"0fd5e862e88bdfef8f66fdb0cf67f772abc02de0","modified":1653534701409},{"_id":"source/_posts/OpenCV/图像过滤/OpenCV-图像模糊（图像平滑）.md","hash":"5d8191ffae83d1baabdc295b45f12aa8cf660b93","modified":1651917381826},{"_id":"source/_posts/OpenCV/图像过滤/OpenCV-图像过滤（2D卷积）.md","hash":"b0244d310b56fdb8e80353aeda4040d9270f6919","modified":1651917439938},{"_id":"source/_posts/OpenCV/图像金字塔/s使用图像金字塔进行图像融合.md","hash":"27673cb12a6181ea0c48d30972a7c2b983d9c0bf","modified":1655103563616},{"_id":"source/_posts/OpenCV/图像金字塔/图像金字塔.md","hash":"271a76f52e6465b7a13fa748873bef33903451f4","modified":1655103588797},{"_id":"source/_posts/OpenCV/图像阈值/OpenCV-图像阈值.md","hash":"0e0917c4caeef3defa7e5a2eb1fe9b409f8e4ce2","modified":1651917345831},{"_id":"source/_posts/OpenCV/解析rtsp视频流/OpenCV解析IP摄像头视频流.md","hash":"16980fad07dce38423208badd040c2b88ea025d8","modified":1655796244292},{"_id":"source/_posts/OpenCV/轮廓/OpenCV-轮廓.md","hash":"a59be3868de7bb37e7d6201eaa7b20e7347d7a3c","modified":1653639716618},{"_id":"source/_posts/OpenCV/轮廓/轮廓属性.md","hash":"1c6283b9195b51967e69a25b5a392199cfbd1bd1","modified":1655103760878},{"_id":"source/_posts/OpenCV/轮廓/轮廓特征.md","hash":"40d5690b7dd59c669af52c78b89abbd4ec6bb386","modified":1655103707673},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1646808029977},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1646808029977},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1646808029978},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1646808029980},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1646808029979},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1646808029978},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1646808029980},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1646808029983},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1646808029982},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1646808030011},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1646808029983},{"_id":"themes/yilia/_config.yml","hash":"0fd39740602e84a631df303b26c880eaf059e67d","modified":1653641959550},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1646808029986},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1646808029984},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1646808030063},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1646808029987},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1646808029985},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1646808030007},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1646808030007},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1646808030008},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1646808030010},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1646808030010},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1646808030008},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1646808030009},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1646808030058},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1646808030012},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"c70f367f54064a441e574c913f5e0ea121d0f899","modified":1653533094294},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1646808029988},{"_id":"themes/yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1646808030063},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1646808029991},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1646808030050},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1646808029992},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1646808029992},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1646808029993},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"38d11f858fe1117b4f9b760d0b12c73ccb02cb2f","modified":1653641945413},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1646808029989},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1646808029990},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1646808029993},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1646808029996},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1646808029994},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"88bf398711bc8db8576a71eb2607728ae3855b34","modified":1653641116432},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1646808029997},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1646808030006},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1646808030006},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1646808030052},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1646808030053},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1646808030055},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1646808030051},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1646808030056},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1646808030052},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1646808030054},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1646808030057},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1646808030057},{"_id":"themes/yilia/source/img/头像.jpg","hash":"a0a02a42ccc937dc0771d392c33f84c777d58ad7","modified":1646809339259},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1646808030012},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1646808030013},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1646808030013},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1646808030016},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1646808030014},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1646808030018},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1646808030017},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1646808030027},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1646808030015},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1646808030017},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1646808030023},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1646808030028},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1646808030029},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1646808030032},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1646808030028},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1646808030034},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1646808030032},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1646808030033},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1646808030033},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1646808030034},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1646808030035},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1646808030035},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1646808030036},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1646808030037},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1646808030038},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1646808030037},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1646808030038},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1646808030040},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1646808030044},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1646808030041},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1646808030040},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1646808030041},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1646808030046},{"_id":"themes/yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1646808030042},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1646808030047},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1646808030048},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1646808029998},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1646808029998},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1646808030049},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1646808029999},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1646808030000},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1646808030049},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1646808030001},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1646808030002},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1646808030050},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1646808030003},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1646808030003},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1646808030000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1646808030002},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1646808030019},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1646808030020},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1646808030022},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1646808030022},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1646808030024},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1646808030023},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1646808030029},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1646808030025},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1646808030031},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1646808030026},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1646808030027},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1646808030030},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1646808030059},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1646808030062},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1646808030005},{"_id":"public/content.json","hash":"953c601298e283a7871f04e2754ec62d34300851","modified":1656491718051},{"_id":"public/2022/06/29/MQTT/基于MQTT实现esp32远程控制/index.html","hash":"780640064dd0d12d176eddcfe8b495ebceab35be","modified":1656491718051},{"_id":"public/2022/06/27/ESP32CAM/OpenCV读取ESP32CAM的视频流/index.html","hash":"dcb7a2b406ba2a55fce3f1b57dc7fa4949e47a77","modified":1656491718051},{"_id":"public/2022/06/27/IP摄像头rstp流/OpenCV+YOLO+IP摄像头实现目标检测/index.html","hash":"f38a96c57821d525e36473067af78aefc90d52cc","modified":1656491718051},{"_id":"public/2022/06/27/ESP32CAM/使用ESP32CAM读取视频流/index.html","hash":"6830e4d860b555c9a8c0d701ed7891c2212643bd","modified":1656491718051},{"_id":"public/2022/06/21/CANoe学习笔记/CANoe学习笔记/index.html","hash":"6ce853f3545f7e3b1987d93847560e606ccc1011","modified":1656491718051},{"_id":"public/2022/06/20/IP摄像头rstp流/IP摄像头实现远程目标检测/index.html","hash":"eb1ac5ca73e49a7d200efcdd8c130a3cf1e360a3","modified":1656491718051},{"_id":"public/2022/06/20/OpenCV/解析rtsp视频流/OpenCV解析IP摄像头视频流/index.html","hash":"8964040f8feb2963792ac1ab3a548a13a5452d8e","modified":1656491718051},{"_id":"public/2022/06/13/OpenCV/轮廓/轮廓特征/index.html","hash":"78acd1b027e3510703e5290843583810e2178066","modified":1656491718051},{"_id":"public/2022/06/13/OpenCV/轮廓/轮廓属性/index.html","hash":"4382f5abe7d04d5e4127c867ba337c7929ccfa3c","modified":1656491718051},{"_id":"public/2022/06/13/OpenCV/图像金字塔/s使用图像金字塔进行图像融合/index.html","hash":"6955526e9dd7b8520e8e6b827c5ac31695964310","modified":1656491718051},{"_id":"public/2022/06/13/OpenCV/图像金字塔/图像金字塔/index.html","hash":"ebdb53abeb625e07901ea1c62fb1c1dc64a4ee12","modified":1656491718051},{"_id":"public/2022/06/09/YOLOv5/yolo训练自己的训练集/index.html","hash":"65f14c2779f55ab9eb8e2dd312ba369394f1c99e","modified":1656491718051},{"_id":"public/2022/06/09/YOLOv5/实现目标检测-多目标/index.html","hash":"84cc1852f9e46b3ec8a3bb7c442449aabc7b79ee","modified":1656491718051},{"_id":"public/2022/06/09/YOLOv5/实现目标检测-单目标/index.html","hash":"be495566aa86c1b3a19bb998fa84ac84ff5a3bf7","modified":1656491718051},{"_id":"public/2022/06/06/CNN/channel的理/index.html","hash":"58d318fcce59a2d60507d746f16d27c5b9813e1f","modified":1656491718051},{"_id":"public/2022/06/02/OpenCV/Canny边缘检测/OpenCV-边缘检测数学推导/index.html","hash":"40017feb7b824c15b7e5b77b3da76b661fdd6fd0","modified":1656491718051},{"_id":"public/2022/06/01/目标检测小项目/人像识别/index.html","hash":"625572dd3cac0641a390543163093501cf1498eb","modified":1656491718051},{"_id":"public/2022/05/31/YOLOv5/配置环境/index.html","hash":"c1600db8f35e51c09eda0da7055be9c44e441528","modified":1656491718051},{"_id":"public/2022/05/27/OpenCV/轮廓/OpenCV-轮廓/index.html","hash":"e121eacc5e6f19faf5f21400443b972e1dd1c07e","modified":1656491718051},{"_id":"public/2022/05/26/OpenCV/OpenCV小项目/OpenCV-ORC手写数字识别/index.html","hash":"24bc39979d8a31e2179672b6e711d490e9a71a69","modified":1656491718051},{"_id":"public/2022/05/26/numpy/numpy降维方法/index.html","hash":"5a8634eda222d101e41ab74f7b79c729bbfd13a2","modified":1656491718051},{"_id":"public/2022/05/26/OpenCV/Canny边缘检测/OpenCV-Canny边缘检测/index.html","hash":"c90552413ba3338876d447106d82bc38872b778e","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像梯度/OpenCV-图像梯度/index.html","hash":"562ce5a1d280d2533918e832362fca3b72a718a8","modified":1656491718051},{"_id":"public/2022/05/25/Python_language/with_as/index.html","hash":"41514de18df8bb2d240eb200d43ef96969c9102c","modified":1656491718051},{"_id":"public/2022/05/25/Python_language/format/index.html","hash":"633d19e23dcd3fc66acee4250b8f8ffc0b3f7403","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV的坑/踩坑记录/index.html","hash":"74508beadf37de54fced42efe4d0a00bcdfe82d6","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/OpenCV小项目/OpenCV-远程控制手机拍照发邮件/index.html","hash":"caa734df5aa0e6379cf4079a22aa05330b152eb2","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-查找HSV对应的BGR值/index.html","hash":"74c386f5cd122568e5fd7c2a829462e41831efbd","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-改变颜色空间/index.html","hash":"1d9efa996eee7caa8bce6dc76f0c8d9a461039e9","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/OpenCV小项目/OpenCV-手势调节音量基础实现/index.html","hash":"d93d544d04599bcc5bcaf75b771fc92fb4364256","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/OpenCV小项目/OpenCV-手势控制电脑音量/index.html","hash":"f3bf8018cab166fb4393b2976c48f97dea9ee833","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-性能衡量和提升技术/index.html","hash":"aa49a598a78a8e0f5869347ed6edb2655a442b67","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像阈值/OpenCV-图像阈值/index.html","hash":"9f1bab4914135a0fb0ed56f97d1d014db8c3200e","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像过滤/OpenCV-图像过滤（2D卷积）/index.html","hash":"07c90bdc300bd2c09b313d676247baf1d819d02b","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像过滤/OpenCV-图像模糊（图像平滑）/index.html","hash":"de7ca9a04293af9ad8cd0d30e18be17a9dfdfb07","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-图像几何变换/index.html","hash":"7660cf598776fde836987f2018d366ad52e01f7a","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-图像上的运算/index.html","hash":"636a829dea9d7751fcfb67c701d9bec88c08e72f","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-Videobase/index.html","hash":"1cd0634dda1cd4e6680fb55a9f58bb1dbef273f6","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-为图像设置边框（填充）/index.html","hash":"fe3dfea7d50ef8ee1b042beaed174c4dc7496b7e","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-picturebyNumpy/index.html","hash":"e92a7a6ea4f05d45dcd6393585c868ac491fb3df","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-picturebase/index.html","hash":"04b557380000865b1007392748e3e9f15e95d260","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/图像入门/OpenCV-Otherbase/index.html","hash":"ab478fea59d31bdbe16ef33de96da87f23da3f31","modified":1656491718051},{"_id":"public/2022/05/25/OpenCV/OpenCV小项目/OpenCV+mediapipe实现简单手势识别/index.html","hash":"3ced09478f0861b9d0e0c32894d92306f26dd8b4","modified":1656491718051},{"_id":"public/2022/05/25/numpy/数组取整列元素方法/index.html","hash":"d5117f2b8748aaa2af8001d1e88bb7a90646e0af","modified":1656491718051},{"_id":"public/2022/05/25/numpy/interp/index.html","hash":"93f5c33182856672916d6b5e2fe91547d9b2a199","modified":1656491718051},{"_id":"public/2022/05/25/numpy/ravel/index.html","hash":"0cb92b966ef8a1ef973e8c5a5a87302227c1b489","modified":1656491718051},{"_id":"public/2022/05/25/learning/卷积学习与理解/index.html","hash":"16058b17385c704ddb9f9f28bf0aa2f8f72d1996","modified":1656491718051},{"_id":"public/2022/05/25/learning/Using-polyspace/index.html","hash":"748948c560b346506352b3115cd302b62857f7c2","modified":1656491718051},{"_id":"public/2022/05/25/learning/SAE_J1939/index.html","hash":"24849f64c593b3f3246959884ffb48a28efc9f25","modified":1656491718051},{"_id":"public/2022/05/25/learning/Language/index.html","hash":"d4331448e7595d106d98f1055de47dd29a2d81da","modified":1656491718051},{"_id":"public/2022/05/25/learning/IDE_Install/index.html","hash":"8e57235dc9b2b888a4a3159ed9ae5f42fb666920","modified":1656491718051},{"_id":"public/2022/05/25/learning/hello-world/index.html","hash":"6e6a882b825d544e861eccfb1f11df4ecdb9f64e","modified":1656491718051},{"_id":"public/2022/05/25/learning/FunctionCall/index.html","hash":"dbebc8fa35bd9666dc14dabf1465329d88e82a8a","modified":1656491718051},{"_id":"public/2022/05/25/learning/EletricityKnowledge/index.html","hash":"b786557a1086394f3fb947e5a88ee6adf6ca9baf","modified":1656491718051},{"_id":"public/2022/05/25/learning/CAN_DataAnalysis/index.html","hash":"bbd6033308e5ec218e6faf5245bacc0299bfcc17","modified":1656491718051},{"_id":"public/2022/05/25/learning/Car-controlmodel/index.html","hash":"7e470aaa9c2eebc5c9d1f1d28675391b8b7481c6","modified":1656491718051},{"_id":"public/2022/05/25/learning/BODAS-Using/index.html","hash":"d7ed7305d03b79dd0129567357d40040295a8e40","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp_Time/index.html","hash":"d07bdf0e8dcd2f7fa37853ffff3f67699832c72a","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp32_WiFi/index.html","hash":"0a8b43574c403ef10b78c2b87dfd6d7eead615a0","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp32_WiFi+Json+U8g2/index.html","hash":"4d43ae236dfed674e6b26b073e4344dfc1a7aa93","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp32_weatherpicture_H/index.html","hash":"5fa515d18c350beba64beeb733e45d0450d5ed9d","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp32_weatherCode/index.html","hash":"9783eda44ec570c5a12147709713f5b10a07d0e9","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp32_weather/index.html","hash":"26979ad024e1742557ad3871e3a97561cefab73d","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp32_Json/index.html","hash":"d46cae4d233511baeda2b5471328b7df3ab664be","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp32_picture/index.html","hash":"a60ff75ec81179dfbff9495183fe2a10a7d48b86","modified":1656491718051},{"_id":"public/2022/05/25/esp32-weather/esp32and0.96LED_connect/index.html","hash":"31457b68a716e46948ecf1d5482820aebccd54cf","modified":1656491718051},{"_id":"public/archives/index.html","hash":"0e65af102ab84767dbe011e4d0b65fd6d95528a6","modified":1656491718051},{"_id":"public/archives/page/2/index.html","hash":"bda9e617f8bf42b6aaecc50bff9a53167f6576b3","modified":1656491718051},{"_id":"public/archives/page/3/index.html","hash":"3a7bdeeded872862fe7848aaa96d0fa20f136df4","modified":1656491718051},{"_id":"public/archives/page/4/index.html","hash":"1f77f5fff8f8dca7267cdf7cf5904ed588e75196","modified":1656491718051},{"_id":"public/archives/page/5/index.html","hash":"25eea644c02173b85731dca09e93ea1b95d3bca7","modified":1656491718051},{"_id":"public/archives/page/6/index.html","hash":"5f7cb9d98f12adfdb6ec8167995e57b4b824e330","modified":1656491718051},{"_id":"public/archives/page/7/index.html","hash":"656d0e45e160a28c8c30fec53ac4ffa5ecb62991","modified":1656491718051},{"_id":"public/archives/2022/index.html","hash":"b423fe2de0287d9ad3355196bbfc99be484a73aa","modified":1656491718051},{"_id":"public/archives/2022/page/2/index.html","hash":"04956ec13e2dade1a0128f40012ef0ec22dcffdf","modified":1656491718051},{"_id":"public/archives/2022/page/3/index.html","hash":"88f1940154b7701d4f895b45decf507fdb863f8e","modified":1656491718051},{"_id":"public/archives/2022/page/4/index.html","hash":"6097e72c40de8a04b19cc962b769a5f50cfd9d6b","modified":1656491718051},{"_id":"public/archives/2022/page/5/index.html","hash":"e9f2f87124813c1957246291cd4a3ee0409a29ee","modified":1656491718051},{"_id":"public/archives/2022/page/6/index.html","hash":"1904e9fa5efa850a58ca23550d2451f1aa96b3d4","modified":1656491718051},{"_id":"public/archives/2022/page/7/index.html","hash":"3f395dd2e78569e28b645b0f00333acb4e8c6763","modified":1656491718051},{"_id":"public/archives/2022/05/index.html","hash":"6f392e0a596d918d743aef15c6862130f261aefb","modified":1656491718051},{"_id":"public/archives/2022/05/page/2/index.html","hash":"ce182d4e709fdfa500adba09427471bfaaa3f878","modified":1656491718051},{"_id":"public/archives/2022/05/page/3/index.html","hash":"f39d8d56647befb2c61649bc0701afa8a16df69c","modified":1656491718051},{"_id":"public/archives/2022/05/page/4/index.html","hash":"f2a3103c73424118b7b664f9a91748c649a06f37","modified":1656491718051},{"_id":"public/archives/2022/05/page/5/index.html","hash":"4a570749f9c68ab9270a603ac294a2a64fefff02","modified":1656491718051},{"_id":"public/archives/2022/06/index.html","hash":"cf74e319e096ecdb35add4845652043dbbc65193","modified":1656491718051},{"_id":"public/archives/2022/06/page/2/index.html","hash":"8c64f61e3799ed87c92a490c0105603c31a409f6","modified":1656491718051},{"_id":"public/index.html","hash":"4e3a1b8b503e4247c637c69cf513d0b292f0fb2f","modified":1656491718051},{"_id":"public/page/2/index.html","hash":"abd5db688459137c8c1ba9e81107478d6b22ece1","modified":1656491718051},{"_id":"public/page/3/index.html","hash":"0b00566b878aa9187b5659c53118dff31160a148","modified":1656491718051},{"_id":"public/page/4/index.html","hash":"411ffd72b966d817e591c039d77a7ee88e59eb12","modified":1656491718051},{"_id":"public/page/5/index.html","hash":"9cdb77ad8c804284c100051e22e2952e130f1183","modified":1656491718051},{"_id":"public/page/6/index.html","hash":"91336ed290174a6028a3ee3e88de8468809a4d78","modified":1656491718051},{"_id":"public/page/7/index.html","hash":"6134cb8c102d48da667f8c2c8f4fbfdb3814cbe0","modified":1656491718051},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1656491718051},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1656491718051},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1656491718051},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1656491718051},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1656491718051},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1656491718051},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1656491718051},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1656491718051},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1656491718051},{"_id":"public/img/头像.jpg","hash":"a0a02a42ccc937dc0771d392c33f84c777d58ad7","modified":1656491718051},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1656491718051},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1656491718051},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1656491718051},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1656491718051}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CANoe官方教程学习笔记","_content":"# CANoe官方教程学习笔记\n<!--more-->\n## 前言\n这是大佬的学习笔记我这里是转载，也是为了便于我以后查看。大佬只写了部分，如果后续有机会我会续写这个笔记\n大佬笔记链接：\n[CANoe学习笔记(1) 新建工程及通道配置步骤图解](https://blog.csdn.net/weixin_39199083/article/details/119849874)\n[CANoe学习笔记(2) Trace窗口介绍图解](https://blog.csdn.net/weixin_39199083/article/details/119850946)\n[CANoe学习笔记(3) Graphic窗口介绍图解](https://blog.csdn.net/weixin_39199083/article/details/119854539)\n[CANoe学习笔记(6) logging Block数据记录模块图解](https://blog.csdn.net/weixin_39199083/article/details/119857703)\n[CANoe学习笔记(9) 发送模块CAN IG图解](https://blog.csdn.net/weixin_39199083/article/details/119856986)\n\n\n","source":"_posts/CANoe学习笔记/CANoe学习笔记.md","raw":"---\ntitle: CANoe官方教程学习笔记\n---\n# CANoe官方教程学习笔记\n<!--more-->\n## 前言\n这是大佬的学习笔记我这里是转载，也是为了便于我以后查看。大佬只写了部分，如果后续有机会我会续写这个笔记\n大佬笔记链接：\n[CANoe学习笔记(1) 新建工程及通道配置步骤图解](https://blog.csdn.net/weixin_39199083/article/details/119849874)\n[CANoe学习笔记(2) Trace窗口介绍图解](https://blog.csdn.net/weixin_39199083/article/details/119850946)\n[CANoe学习笔记(3) Graphic窗口介绍图解](https://blog.csdn.net/weixin_39199083/article/details/119854539)\n[CANoe学习笔记(6) logging Block数据记录模块图解](https://blog.csdn.net/weixin_39199083/article/details/119857703)\n[CANoe学习笔记(9) 发送模块CAN IG图解](https://blog.csdn.net/weixin_39199083/article/details/119856986)\n\n\n","slug":"CANoe学习笔记/CANoe学习笔记","published":1,"date":"2022-06-21T07:25:24.308Z","updated":"2022-06-21T07:37:26.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceend000068ur370d6hub","content":"<h1 id=\"CANoe官方教程学习笔记\"><a href=\"#CANoe官方教程学习笔记\" class=\"headerlink\" title=\"CANoe官方教程学习笔记\"></a>CANoe官方教程学习笔记</h1><span id=\"more\"></span>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这是大佬的学习笔记我这里是转载，也是为了便于我以后查看。大佬只写了部分，如果后续有机会我会续写这个笔记<br>大佬笔记链接：<br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119849874\">CANoe学习笔记(1) 新建工程及通道配置步骤图解</a><br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119850946\">CANoe学习笔记(2) Trace窗口介绍图解</a><br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119854539\">CANoe学习笔记(3) Graphic窗口介绍图解</a><br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119857703\">CANoe学习笔记(6) logging Block数据记录模块图解</a><br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119856986\">CANoe学习笔记(9) 发送模块CAN IG图解</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"CANoe官方教程学习笔记\"><a href=\"#CANoe官方教程学习笔记\" class=\"headerlink\" title=\"CANoe官方教程学习笔记\"></a>CANoe官方教程学习笔记</h1>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>这是大佬的学习笔记我这里是转载，也是为了便于我以后查看。大佬只写了部分，如果后续有机会我会续写这个笔记<br>大佬笔记链接：<br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119849874\">CANoe学习笔记(1) 新建工程及通道配置步骤图解</a><br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119850946\">CANoe学习笔记(2) Trace窗口介绍图解</a><br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119854539\">CANoe学习笔记(3) Graphic窗口介绍图解</a><br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119857703\">CANoe学习笔记(6) logging Block数据记录模块图解</a><br><a href=\"https://blog.csdn.net/weixin_39199083/article/details/119856986\">CANoe学习笔记(9) 发送模块CAN IG图解</a></p>"},{"title":"CNN中channel的理解","_content":"#  Channel\nchannel 翻译 通道\n最开始我的理解是图像的通道数，例如彩色图像的channel=3，灰度图像channel=1\n在学习CNN的时候看网上的博文说一般的channel = 32 o r64\n我这就很不理解我们所接触的不就是灰度图像和彩色图像吗？不就是channel要么等于1要么等于3吗？\n随后我就在网上查阅了很多资料看了很多文章，终于理解了为什么他们说channel一般等于32 or 64\n**或许说的不对，也当做一个学习记录，后续发现错了我会修改**\n我们在对灰度图像处理时，**卷积核数量**默认为1。此时图像size为（6 ，6， 1）,卷积核为（3， 3， 1）,进行卷积后得到的图像size（4, 4, 1）channel = 1与卷积核的channel一致\n在处理彩色图像时，卷积核数量由我们自行设置，假设我们设置为1（ps:卷积核数量为1）\n此时图像size(6, 6, 3),卷积核size（3, 3 ，3），进行卷积后得到的图像size（4, 4, 1）channel = 1与 卷积核的channel不一致！\n假设我们把卷积核数量设为3\n此时图像size(6, 6, 3),卷积核size（3, 3 ，3），进行卷积后得到的图像size（4, 4, 3）channel = 3与 卷积核的channel一致！\n***这就说明了卷积运算后图像的channel就是进行卷积核数量。***\n如果我们把卷积核数量弄为64，那么卷积后图像的channel不就等于64了吗。\n所以我感觉CNN的channel并不是我最开始理解的channel，我觉得把它理解为对应卷积运算核个数更合适。\n在CV里有很多东西不是它原本的意义，就像卷积不是真正的卷积（没有物理意义），只是表示卷积这一运算方式而已。\n\n那么问题来了，对卷积后的图像在卷积此时卷积核的channel应该等于多少？\n假设对卷积得到的图像为size（4, 4, 2）再进行卷积这个时候卷积核的channel不就得等于2就是卷积核size（3， 3，2）\n\n这里是一些我学习的链接：\n[学习参考1](https://blog.csdn.net/Xiao_Bai_Ke/article/details/98998767?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2-98998767-blog-106979250.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2-98998767-blog-106979250.nonecase&utm_relevant_index=3)\n[学习参考2](https://www.zhihu.com/question/47158818)\n[学习参考3](https://www.zhihu.com/zvideo/1294313119628353536)\n[学习参考4](https://morvanzhou.github.io/tutorials/machine-learning/torch/4-01-CNN/)\n","source":"_posts/CNN/channel的理.md","raw":"---\ntitle: CNN中channel的理解\n---\n#  Channel\nchannel 翻译 通道\n最开始我的理解是图像的通道数，例如彩色图像的channel=3，灰度图像channel=1\n在学习CNN的时候看网上的博文说一般的channel = 32 o r64\n我这就很不理解我们所接触的不就是灰度图像和彩色图像吗？不就是channel要么等于1要么等于3吗？\n随后我就在网上查阅了很多资料看了很多文章，终于理解了为什么他们说channel一般等于32 or 64\n**或许说的不对，也当做一个学习记录，后续发现错了我会修改**\n我们在对灰度图像处理时，**卷积核数量**默认为1。此时图像size为（6 ，6， 1）,卷积核为（3， 3， 1）,进行卷积后得到的图像size（4, 4, 1）channel = 1与卷积核的channel一致\n在处理彩色图像时，卷积核数量由我们自行设置，假设我们设置为1（ps:卷积核数量为1）\n此时图像size(6, 6, 3),卷积核size（3, 3 ，3），进行卷积后得到的图像size（4, 4, 1）channel = 1与 卷积核的channel不一致！\n假设我们把卷积核数量设为3\n此时图像size(6, 6, 3),卷积核size（3, 3 ，3），进行卷积后得到的图像size（4, 4, 3）channel = 3与 卷积核的channel一致！\n***这就说明了卷积运算后图像的channel就是进行卷积核数量。***\n如果我们把卷积核数量弄为64，那么卷积后图像的channel不就等于64了吗。\n所以我感觉CNN的channel并不是我最开始理解的channel，我觉得把它理解为对应卷积运算核个数更合适。\n在CV里有很多东西不是它原本的意义，就像卷积不是真正的卷积（没有物理意义），只是表示卷积这一运算方式而已。\n\n那么问题来了，对卷积后的图像在卷积此时卷积核的channel应该等于多少？\n假设对卷积得到的图像为size（4, 4, 2）再进行卷积这个时候卷积核的channel不就得等于2就是卷积核size（3， 3，2）\n\n这里是一些我学习的链接：\n[学习参考1](https://blog.csdn.net/Xiao_Bai_Ke/article/details/98998767?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2-98998767-blog-106979250.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2-98998767-blog-106979250.nonecase&utm_relevant_index=3)\n[学习参考2](https://www.zhihu.com/question/47158818)\n[学习参考3](https://www.zhihu.com/zvideo/1294313119628353536)\n[学习参考4](https://morvanzhou.github.io/tutorials/machine-learning/torch/4-01-CNN/)\n","slug":"CNN/channel的理","published":1,"date":"2022-06-06T10:15:13.598Z","updated":"2022-06-07T05:41:04.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceens000168urevnvf7zr","content":"<h1 id=\"Channel\"><a href=\"#Channel\" class=\"headerlink\" title=\"Channel\"></a>Channel</h1><p>channel 翻译 通道<br>最开始我的理解是图像的通道数，例如彩色图像的channel=3，灰度图像channel=1<br>在学习CNN的时候看网上的博文说一般的channel = 32 o r64<br>我这就很不理解我们所接触的不就是灰度图像和彩色图像吗？不就是channel要么等于1要么等于3吗？<br>随后我就在网上查阅了很多资料看了很多文章，终于理解了为什么他们说channel一般等于32 or 64<br><strong>或许说的不对，也当做一个学习记录，后续发现错了我会修改</strong><br>我们在对灰度图像处理时，<strong>卷积核数量</strong>默认为1。此时图像size为（6 ，6， 1）,卷积核为（3， 3， 1）,进行卷积后得到的图像size（4, 4, 1）channel = 1与卷积核的channel一致<br>在处理彩色图像时，卷积核数量由我们自行设置，假设我们设置为1（ps:卷积核数量为1）<br>此时图像size(6, 6, 3),卷积核size（3, 3 ，3），进行卷积后得到的图像size（4, 4, 1）channel = 1与 卷积核的channel不一致！<br>假设我们把卷积核数量设为3<br>此时图像size(6, 6, 3),卷积核size（3, 3 ，3），进行卷积后得到的图像size（4, 4, 3）channel = 3与 卷积核的channel一致！<br><em><strong>这就说明了卷积运算后图像的channel就是进行卷积核数量。</strong></em><br>如果我们把卷积核数量弄为64，那么卷积后图像的channel不就等于64了吗。<br>所以我感觉CNN的channel并不是我最开始理解的channel，我觉得把它理解为对应卷积运算核个数更合适。<br>在CV里有很多东西不是它原本的意义，就像卷积不是真正的卷积（没有物理意义），只是表示卷积这一运算方式而已。</p>\n<p>那么问题来了，对卷积后的图像在卷积此时卷积核的channel应该等于多少？<br>假设对卷积得到的图像为size（4, 4, 2）再进行卷积这个时候卷积核的channel不就得等于2就是卷积核size（3， 3，2）</p>\n<p>这里是一些我学习的链接：<br><a href=\"https://blog.csdn.net/Xiao_Bai_Ke/article/details/98998767?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-98998767-blog-106979250.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-98998767-blog-106979250.nonecase&utm_relevant_index=3\">学习参考1</a><br><a href=\"https://www.zhihu.com/question/47158818\">学习参考2</a><br><a href=\"https://www.zhihu.com/zvideo/1294313119628353536\">学习参考3</a><br><a href=\"https://morvanzhou.github.io/tutorials/machine-learning/torch/4-01-CNN/\">学习参考4</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Channel\"><a href=\"#Channel\" class=\"headerlink\" title=\"Channel\"></a>Channel</h1><p>channel 翻译 通道<br>最开始我的理解是图像的通道数，例如彩色图像的channel=3，灰度图像channel=1<br>在学习CNN的时候看网上的博文说一般的channel = 32 o r64<br>我这就很不理解我们所接触的不就是灰度图像和彩色图像吗？不就是channel要么等于1要么等于3吗？<br>随后我就在网上查阅了很多资料看了很多文章，终于理解了为什么他们说channel一般等于32 or 64<br><strong>或许说的不对，也当做一个学习记录，后续发现错了我会修改</strong><br>我们在对灰度图像处理时，<strong>卷积核数量</strong>默认为1。此时图像size为（6 ，6， 1）,卷积核为（3， 3， 1）,进行卷积后得到的图像size（4, 4, 1）channel = 1与卷积核的channel一致<br>在处理彩色图像时，卷积核数量由我们自行设置，假设我们设置为1（ps:卷积核数量为1）<br>此时图像size(6, 6, 3),卷积核size（3, 3 ，3），进行卷积后得到的图像size（4, 4, 1）channel = 1与 卷积核的channel不一致！<br>假设我们把卷积核数量设为3<br>此时图像size(6, 6, 3),卷积核size（3, 3 ，3），进行卷积后得到的图像size（4, 4, 3）channel = 3与 卷积核的channel一致！<br><em><strong>这就说明了卷积运算后图像的channel就是进行卷积核数量。</strong></em><br>如果我们把卷积核数量弄为64，那么卷积后图像的channel不就等于64了吗。<br>所以我感觉CNN的channel并不是我最开始理解的channel，我觉得把它理解为对应卷积运算核个数更合适。<br>在CV里有很多东西不是它原本的意义，就像卷积不是真正的卷积（没有物理意义），只是表示卷积这一运算方式而已。</p>\n<p>那么问题来了，对卷积后的图像在卷积此时卷积核的channel应该等于多少？<br>假设对卷积得到的图像为size（4, 4, 2）再进行卷积这个时候卷积核的channel不就得等于2就是卷积核size（3， 3，2）</p>\n<p>这里是一些我学习的链接：<br><a href=\"https://blog.csdn.net/Xiao_Bai_Ke/article/details/98998767?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-98998767-blog-106979250.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-98998767-blog-106979250.nonecase&utm_relevant_index=3\">学习参考1</a><br><a href=\"https://www.zhihu.com/question/47158818\">学习参考2</a><br><a href=\"https://www.zhihu.com/zvideo/1294313119628353536\">学习参考3</a><br><a href=\"https://morvanzhou.github.io/tutorials/machine-learning/torch/4-01-CNN/\">学习参考4</a></p>\n"},{"title":"OpenCV读取ESP32CAM的视频流","_content":"# 直接看代码\n这是博主的[博文](https://blog.csdn.net/ShemuelHe/article/details/121365730)建议直接去看\n<!--more-->\n```\n#include <esp32cam.h>\n#include <WebServer.h>\n#include <WiFi.h>\n\nconst char* WIFI_SSID = \"HONOR V20\";  // 改成自己的wifi名称\nconst char* WIFI_PASS = \"yubaolin\";  // 改成自己的wifi密码\n\nWebServer server(80);\n\nstatic auto loRes = esp32cam::Resolution::find(320, 240);\nstatic auto hiRes = esp32cam::Resolution::find(800, 600);\n\nvoid handleBmp()\n{\n  if (!esp32cam::Camera.changeResolution(loRes)) {\n    Serial.println(\"SET-LO-RES FAIL\");\n  }\n\n  auto frame = esp32cam::capture();\n  if (frame == nullptr) {\n    Serial.println(\"CAPTURE FAIL\");\n    server.send(503, \"\", \"\");\n    return;\n  }\n  Serial.printf(\"CAPTURE OK %dx%d %db\\n\", frame->getWidth(), frame->getHeight(),\n                static_cast<int>(frame->size()));\n\n  if (!frame->toBmp()) {\n    Serial.println(\"CONVERT FAIL\");\n    server.send(503, \"\", \"\");\n    return;\n  }\n  Serial.printf(\"CONVERT OK %dx%d %db\\n\", frame->getWidth(), frame->getHeight(),\n                static_cast<int>(frame->size()));\n\n  server.setContentLength(frame->size());\n  server.send(200, \"image/bmp\");\n  WiFiClient client = server.client();\n  frame->writeTo(client);\n}\n\nvoid serveJpg()\n{\n  auto frame = esp32cam::capture();\n  if (frame == nullptr) {\n    Serial.println(\"CAPTURE FAIL\");\n    server.send(503, \"\", \"\");\n    return;\n  }\n  Serial.printf(\"CAPTURE OK %dx%d %db\\n\", frame->getWidth(), frame->getHeight(),\n                static_cast<int>(frame->size()));\n\n  server.setContentLength(frame->size());\n  server.send(200, \"image/jpeg\");\n  WiFiClient client = server.client();\n  frame->writeTo(client);\n}\n\nvoid handleJpgLo()\n{\n  if (!esp32cam::Camera.changeResolution(loRes)) {\n    Serial.println(\"SET-LO-RES FAIL\");\n  }\n  serveJpg();\n}\n\nvoid handleJpgHi()\n{\n  if (!esp32cam::Camera.changeResolution(hiRes)) {\n    Serial.println(\"SET-HI-RES FAIL\");\n  }\n  serveJpg();\n}\n\nvoid handleJpg()\n{\n  server.sendHeader(\"Location\", \"/cam-hi.jpg\");\n  server.send(302, \"\", \"\");\n}\n\nvoid handleMjpeg()\n{\n  if (!esp32cam::Camera.changeResolution(hiRes)) {\n    Serial.println(\"SET-HI-RES FAIL\");\n  }\n\n  Serial.println(\"STREAM BEGIN\");\n  WiFiClient client = server.client();\n  auto startTime = millis();\n  int res = esp32cam::Camera.streamMjpeg(client);\n  if (res <= 0) {\n    Serial.printf(\"STREAM ERROR %d\\n\", res);\n    return;\n  }\n  auto duration = millis() - startTime;\n  Serial.printf(\"STREAM END %dfrm %0.2ffps\\n\", res, 1000.0 * res / duration);\n}\n\nvoid setup()\n{\n  Serial.begin(115200);\n  Serial.println();\n\n  {\n    using namespace esp32cam;\n    Config cfg;\n    cfg.setPins(pins::AiThinker);\n    cfg.setResolution(hiRes);\n    cfg.setBufferCount(2);\n    cfg.setJpeg(80);\n\n    bool ok = Camera.begin(cfg);\n    Serial.println(ok ? \"CAMERA OK\" : \"CAMERA FAIL\");\n  }\n\n  WiFi.persistent(false);\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(WIFI_SSID, WIFI_PASS);\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n  }\n\n  Serial.print(\"http://\");\n  Serial.println(WiFi.localIP());\n  Serial.println(\"  /cam.bmp\");\n  Serial.println(\"  /cam-lo.jpg\");\n  Serial.println(\"  /cam-hi.jpg\");\n  Serial.println(\"  /cam.mjpeg\");\n\n  server.on(\"/cam.bmp\", handleBmp);\n  server.on(\"/cam-lo.jpg\", handleJpgLo);\n  server.on(\"/cam-hi.jpg\", handleJpgHi);\n  server.on(\"/cam.jpg\", handleJpg);\n  server.on(\"/cam.mjpeg\", handleMjpeg);\n\n  server.begin();\n}\n\nvoid loop()\n{\n  server.handleClient();\n}\n```\n# 结果\n**还是卡的一比，和rstp流解析的一模一样，我都服了，这回真的没办法了只能想办法弄台配置高的电脑**\n","source":"_posts/ESP32CAM/OpenCV读取ESP32CAM的视频流.md","raw":"---\ntitle: OpenCV读取ESP32CAM的视频流\n---\n# 直接看代码\n这是博主的[博文](https://blog.csdn.net/ShemuelHe/article/details/121365730)建议直接去看\n<!--more-->\n```\n#include <esp32cam.h>\n#include <WebServer.h>\n#include <WiFi.h>\n\nconst char* WIFI_SSID = \"HONOR V20\";  // 改成自己的wifi名称\nconst char* WIFI_PASS = \"yubaolin\";  // 改成自己的wifi密码\n\nWebServer server(80);\n\nstatic auto loRes = esp32cam::Resolution::find(320, 240);\nstatic auto hiRes = esp32cam::Resolution::find(800, 600);\n\nvoid handleBmp()\n{\n  if (!esp32cam::Camera.changeResolution(loRes)) {\n    Serial.println(\"SET-LO-RES FAIL\");\n  }\n\n  auto frame = esp32cam::capture();\n  if (frame == nullptr) {\n    Serial.println(\"CAPTURE FAIL\");\n    server.send(503, \"\", \"\");\n    return;\n  }\n  Serial.printf(\"CAPTURE OK %dx%d %db\\n\", frame->getWidth(), frame->getHeight(),\n                static_cast<int>(frame->size()));\n\n  if (!frame->toBmp()) {\n    Serial.println(\"CONVERT FAIL\");\n    server.send(503, \"\", \"\");\n    return;\n  }\n  Serial.printf(\"CONVERT OK %dx%d %db\\n\", frame->getWidth(), frame->getHeight(),\n                static_cast<int>(frame->size()));\n\n  server.setContentLength(frame->size());\n  server.send(200, \"image/bmp\");\n  WiFiClient client = server.client();\n  frame->writeTo(client);\n}\n\nvoid serveJpg()\n{\n  auto frame = esp32cam::capture();\n  if (frame == nullptr) {\n    Serial.println(\"CAPTURE FAIL\");\n    server.send(503, \"\", \"\");\n    return;\n  }\n  Serial.printf(\"CAPTURE OK %dx%d %db\\n\", frame->getWidth(), frame->getHeight(),\n                static_cast<int>(frame->size()));\n\n  server.setContentLength(frame->size());\n  server.send(200, \"image/jpeg\");\n  WiFiClient client = server.client();\n  frame->writeTo(client);\n}\n\nvoid handleJpgLo()\n{\n  if (!esp32cam::Camera.changeResolution(loRes)) {\n    Serial.println(\"SET-LO-RES FAIL\");\n  }\n  serveJpg();\n}\n\nvoid handleJpgHi()\n{\n  if (!esp32cam::Camera.changeResolution(hiRes)) {\n    Serial.println(\"SET-HI-RES FAIL\");\n  }\n  serveJpg();\n}\n\nvoid handleJpg()\n{\n  server.sendHeader(\"Location\", \"/cam-hi.jpg\");\n  server.send(302, \"\", \"\");\n}\n\nvoid handleMjpeg()\n{\n  if (!esp32cam::Camera.changeResolution(hiRes)) {\n    Serial.println(\"SET-HI-RES FAIL\");\n  }\n\n  Serial.println(\"STREAM BEGIN\");\n  WiFiClient client = server.client();\n  auto startTime = millis();\n  int res = esp32cam::Camera.streamMjpeg(client);\n  if (res <= 0) {\n    Serial.printf(\"STREAM ERROR %d\\n\", res);\n    return;\n  }\n  auto duration = millis() - startTime;\n  Serial.printf(\"STREAM END %dfrm %0.2ffps\\n\", res, 1000.0 * res / duration);\n}\n\nvoid setup()\n{\n  Serial.begin(115200);\n  Serial.println();\n\n  {\n    using namespace esp32cam;\n    Config cfg;\n    cfg.setPins(pins::AiThinker);\n    cfg.setResolution(hiRes);\n    cfg.setBufferCount(2);\n    cfg.setJpeg(80);\n\n    bool ok = Camera.begin(cfg);\n    Serial.println(ok ? \"CAMERA OK\" : \"CAMERA FAIL\");\n  }\n\n  WiFi.persistent(false);\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(WIFI_SSID, WIFI_PASS);\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n  }\n\n  Serial.print(\"http://\");\n  Serial.println(WiFi.localIP());\n  Serial.println(\"  /cam.bmp\");\n  Serial.println(\"  /cam-lo.jpg\");\n  Serial.println(\"  /cam-hi.jpg\");\n  Serial.println(\"  /cam.mjpeg\");\n\n  server.on(\"/cam.bmp\", handleBmp);\n  server.on(\"/cam-lo.jpg\", handleJpgLo);\n  server.on(\"/cam-hi.jpg\", handleJpgHi);\n  server.on(\"/cam.jpg\", handleJpg);\n  server.on(\"/cam.mjpeg\", handleMjpeg);\n\n  server.begin();\n}\n\nvoid loop()\n{\n  server.handleClient();\n}\n```\n# 结果\n**还是卡的一比，和rstp流解析的一模一样，我都服了，这回真的没办法了只能想办法弄台配置高的电脑**\n","slug":"ESP32CAM/OpenCV读取ESP32CAM的视频流","published":1,"date":"2022-06-27T10:12:17.424Z","updated":"2022-06-27T10:16:47.895Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceenx000268ur98k02wwn","content":"<h1 id=\"直接看代码\"><a href=\"#直接看代码\" class=\"headerlink\" title=\"直接看代码\"></a>直接看代码</h1><p>这是博主的<a href=\"https://blog.csdn.net/ShemuelHe/article/details/121365730\">博文</a>建议直接去看</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;esp32cam.h&gt;</span><br><span class=\"line\">#include &lt;WebServer.h&gt;</span><br><span class=\"line\">#include &lt;WiFi.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">const char* WIFI_SSID = &quot;HONOR V20&quot;;  // 改成自己的wifi名称</span><br><span class=\"line\">const char* WIFI_PASS = &quot;yubaolin&quot;;  // 改成自己的wifi密码</span><br><span class=\"line\"></span><br><span class=\"line\">WebServer server(80);</span><br><span class=\"line\"></span><br><span class=\"line\">static auto loRes = esp32cam::Resolution::find(320, 240);</span><br><span class=\"line\">static auto hiRes = esp32cam::Resolution::find(800, 600);</span><br><span class=\"line\"></span><br><span class=\"line\">void handleBmp()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!esp32cam::Camera.changeResolution(loRes)) &#123;</span><br><span class=\"line\">    Serial.println(&quot;SET-LO-RES FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  auto frame = esp32cam::capture();</span><br><span class=\"line\">  if (frame == nullptr) &#123;</span><br><span class=\"line\">    Serial.println(&quot;CAPTURE FAIL&quot;);</span><br><span class=\"line\">    server.send(503, &quot;&quot;, &quot;&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.printf(&quot;CAPTURE OK %dx%d %db\\n&quot;, frame-&gt;getWidth(), frame-&gt;getHeight(),</span><br><span class=\"line\">                static_cast&lt;int&gt;(frame-&gt;size()));</span><br><span class=\"line\"></span><br><span class=\"line\">  if (!frame-&gt;toBmp()) &#123;</span><br><span class=\"line\">    Serial.println(&quot;CONVERT FAIL&quot;);</span><br><span class=\"line\">    server.send(503, &quot;&quot;, &quot;&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.printf(&quot;CONVERT OK %dx%d %db\\n&quot;, frame-&gt;getWidth(), frame-&gt;getHeight(),</span><br><span class=\"line\">                static_cast&lt;int&gt;(frame-&gt;size()));</span><br><span class=\"line\"></span><br><span class=\"line\">  server.setContentLength(frame-&gt;size());</span><br><span class=\"line\">  server.send(200, &quot;image/bmp&quot;);</span><br><span class=\"line\">  WiFiClient client = server.client();</span><br><span class=\"line\">  frame-&gt;writeTo(client);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void serveJpg()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  auto frame = esp32cam::capture();</span><br><span class=\"line\">  if (frame == nullptr) &#123;</span><br><span class=\"line\">    Serial.println(&quot;CAPTURE FAIL&quot;);</span><br><span class=\"line\">    server.send(503, &quot;&quot;, &quot;&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.printf(&quot;CAPTURE OK %dx%d %db\\n&quot;, frame-&gt;getWidth(), frame-&gt;getHeight(),</span><br><span class=\"line\">                static_cast&lt;int&gt;(frame-&gt;size()));</span><br><span class=\"line\"></span><br><span class=\"line\">  server.setContentLength(frame-&gt;size());</span><br><span class=\"line\">  server.send(200, &quot;image/jpeg&quot;);</span><br><span class=\"line\">  WiFiClient client = server.client();</span><br><span class=\"line\">  frame-&gt;writeTo(client);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void handleJpgLo()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!esp32cam::Camera.changeResolution(loRes)) &#123;</span><br><span class=\"line\">    Serial.println(&quot;SET-LO-RES FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  serveJpg();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void handleJpgHi()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!esp32cam::Camera.changeResolution(hiRes)) &#123;</span><br><span class=\"line\">    Serial.println(&quot;SET-HI-RES FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  serveJpg();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void handleJpg()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  server.sendHeader(&quot;Location&quot;, &quot;/cam-hi.jpg&quot;);</span><br><span class=\"line\">  server.send(302, &quot;&quot;, &quot;&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void handleMjpeg()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!esp32cam::Camera.changeResolution(hiRes)) &#123;</span><br><span class=\"line\">    Serial.println(&quot;SET-HI-RES FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Serial.println(&quot;STREAM BEGIN&quot;);</span><br><span class=\"line\">  WiFiClient client = server.client();</span><br><span class=\"line\">  auto startTime = millis();</span><br><span class=\"line\">  int res = esp32cam::Camera.streamMjpeg(client);</span><br><span class=\"line\">  if (res &lt;= 0) &#123;</span><br><span class=\"line\">    Serial.printf(&quot;STREAM ERROR %d\\n&quot;, res);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  auto duration = millis() - startTime;</span><br><span class=\"line\">  Serial.printf(&quot;STREAM END %dfrm %0.2ffps\\n&quot;, res, 1000.0 * res / duration);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  Serial.println();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    using namespace esp32cam;</span><br><span class=\"line\">    Config cfg;</span><br><span class=\"line\">    cfg.setPins(pins::AiThinker);</span><br><span class=\"line\">    cfg.setResolution(hiRes);</span><br><span class=\"line\">    cfg.setBufferCount(2);</span><br><span class=\"line\">    cfg.setJpeg(80);</span><br><span class=\"line\"></span><br><span class=\"line\">    bool ok = Camera.begin(cfg);</span><br><span class=\"line\">    Serial.println(ok ? &quot;CAMERA OK&quot; : &quot;CAMERA FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  WiFi.persistent(false);</span><br><span class=\"line\">  WiFi.mode(WIFI_STA);</span><br><span class=\"line\">  WiFi.begin(WIFI_SSID, WIFI_PASS);</span><br><span class=\"line\">  while (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class=\"line\">    delay(500);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Serial.print(&quot;http://&quot;);</span><br><span class=\"line\">  Serial.println(WiFi.localIP());</span><br><span class=\"line\">  Serial.println(&quot;  /cam.bmp&quot;);</span><br><span class=\"line\">  Serial.println(&quot;  /cam-lo.jpg&quot;);</span><br><span class=\"line\">  Serial.println(&quot;  /cam-hi.jpg&quot;);</span><br><span class=\"line\">  Serial.println(&quot;  /cam.mjpeg&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  server.on(&quot;/cam.bmp&quot;, handleBmp);</span><br><span class=\"line\">  server.on(&quot;/cam-lo.jpg&quot;, handleJpgLo);</span><br><span class=\"line\">  server.on(&quot;/cam-hi.jpg&quot;, handleJpgHi);</span><br><span class=\"line\">  server.on(&quot;/cam.jpg&quot;, handleJpg);</span><br><span class=\"line\">  server.on(&quot;/cam.mjpeg&quot;, handleMjpeg);</span><br><span class=\"line\"></span><br><span class=\"line\">  server.begin();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  server.handleClient();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p><strong>还是卡的一比，和rstp流解析的一模一样，我都服了，这回真的没办法了只能想办法弄台配置高的电脑</strong></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"直接看代码\"><a href=\"#直接看代码\" class=\"headerlink\" title=\"直接看代码\"></a>直接看代码</h1><p>这是博主的<a href=\"https://blog.csdn.net/ShemuelHe/article/details/121365730\">博文</a>建议直接去看</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;esp32cam.h&gt;</span><br><span class=\"line\">#include &lt;WebServer.h&gt;</span><br><span class=\"line\">#include &lt;WiFi.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">const char* WIFI_SSID = &quot;HONOR V20&quot;;  // 改成自己的wifi名称</span><br><span class=\"line\">const char* WIFI_PASS = &quot;yubaolin&quot;;  // 改成自己的wifi密码</span><br><span class=\"line\"></span><br><span class=\"line\">WebServer server(80);</span><br><span class=\"line\"></span><br><span class=\"line\">static auto loRes = esp32cam::Resolution::find(320, 240);</span><br><span class=\"line\">static auto hiRes = esp32cam::Resolution::find(800, 600);</span><br><span class=\"line\"></span><br><span class=\"line\">void handleBmp()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!esp32cam::Camera.changeResolution(loRes)) &#123;</span><br><span class=\"line\">    Serial.println(&quot;SET-LO-RES FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  auto frame = esp32cam::capture();</span><br><span class=\"line\">  if (frame == nullptr) &#123;</span><br><span class=\"line\">    Serial.println(&quot;CAPTURE FAIL&quot;);</span><br><span class=\"line\">    server.send(503, &quot;&quot;, &quot;&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.printf(&quot;CAPTURE OK %dx%d %db\\n&quot;, frame-&gt;getWidth(), frame-&gt;getHeight(),</span><br><span class=\"line\">                static_cast&lt;int&gt;(frame-&gt;size()));</span><br><span class=\"line\"></span><br><span class=\"line\">  if (!frame-&gt;toBmp()) &#123;</span><br><span class=\"line\">    Serial.println(&quot;CONVERT FAIL&quot;);</span><br><span class=\"line\">    server.send(503, &quot;&quot;, &quot;&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.printf(&quot;CONVERT OK %dx%d %db\\n&quot;, frame-&gt;getWidth(), frame-&gt;getHeight(),</span><br><span class=\"line\">                static_cast&lt;int&gt;(frame-&gt;size()));</span><br><span class=\"line\"></span><br><span class=\"line\">  server.setContentLength(frame-&gt;size());</span><br><span class=\"line\">  server.send(200, &quot;image/bmp&quot;);</span><br><span class=\"line\">  WiFiClient client = server.client();</span><br><span class=\"line\">  frame-&gt;writeTo(client);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void serveJpg()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  auto frame = esp32cam::capture();</span><br><span class=\"line\">  if (frame == nullptr) &#123;</span><br><span class=\"line\">    Serial.println(&quot;CAPTURE FAIL&quot;);</span><br><span class=\"line\">    server.send(503, &quot;&quot;, &quot;&quot;);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.printf(&quot;CAPTURE OK %dx%d %db\\n&quot;, frame-&gt;getWidth(), frame-&gt;getHeight(),</span><br><span class=\"line\">                static_cast&lt;int&gt;(frame-&gt;size()));</span><br><span class=\"line\"></span><br><span class=\"line\">  server.setContentLength(frame-&gt;size());</span><br><span class=\"line\">  server.send(200, &quot;image/jpeg&quot;);</span><br><span class=\"line\">  WiFiClient client = server.client();</span><br><span class=\"line\">  frame-&gt;writeTo(client);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void handleJpgLo()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!esp32cam::Camera.changeResolution(loRes)) &#123;</span><br><span class=\"line\">    Serial.println(&quot;SET-LO-RES FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  serveJpg();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void handleJpgHi()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!esp32cam::Camera.changeResolution(hiRes)) &#123;</span><br><span class=\"line\">    Serial.println(&quot;SET-HI-RES FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  serveJpg();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void handleJpg()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  server.sendHeader(&quot;Location&quot;, &quot;/cam-hi.jpg&quot;);</span><br><span class=\"line\">  server.send(302, &quot;&quot;, &quot;&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void handleMjpeg()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  if (!esp32cam::Camera.changeResolution(hiRes)) &#123;</span><br><span class=\"line\">    Serial.println(&quot;SET-HI-RES FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Serial.println(&quot;STREAM BEGIN&quot;);</span><br><span class=\"line\">  WiFiClient client = server.client();</span><br><span class=\"line\">  auto startTime = millis();</span><br><span class=\"line\">  int res = esp32cam::Camera.streamMjpeg(client);</span><br><span class=\"line\">  if (res &lt;= 0) &#123;</span><br><span class=\"line\">    Serial.printf(&quot;STREAM ERROR %d\\n&quot;, res);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  auto duration = millis() - startTime;</span><br><span class=\"line\">  Serial.printf(&quot;STREAM END %dfrm %0.2ffps\\n&quot;, res, 1000.0 * res / duration);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  Serial.println();</span><br><span class=\"line\"></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    using namespace esp32cam;</span><br><span class=\"line\">    Config cfg;</span><br><span class=\"line\">    cfg.setPins(pins::AiThinker);</span><br><span class=\"line\">    cfg.setResolution(hiRes);</span><br><span class=\"line\">    cfg.setBufferCount(2);</span><br><span class=\"line\">    cfg.setJpeg(80);</span><br><span class=\"line\"></span><br><span class=\"line\">    bool ok = Camera.begin(cfg);</span><br><span class=\"line\">    Serial.println(ok ? &quot;CAMERA OK&quot; : &quot;CAMERA FAIL&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  WiFi.persistent(false);</span><br><span class=\"line\">  WiFi.mode(WIFI_STA);</span><br><span class=\"line\">  WiFi.begin(WIFI_SSID, WIFI_PASS);</span><br><span class=\"line\">  while (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class=\"line\">    delay(500);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  Serial.print(&quot;http://&quot;);</span><br><span class=\"line\">  Serial.println(WiFi.localIP());</span><br><span class=\"line\">  Serial.println(&quot;  /cam.bmp&quot;);</span><br><span class=\"line\">  Serial.println(&quot;  /cam-lo.jpg&quot;);</span><br><span class=\"line\">  Serial.println(&quot;  /cam-hi.jpg&quot;);</span><br><span class=\"line\">  Serial.println(&quot;  /cam.mjpeg&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  server.on(&quot;/cam.bmp&quot;, handleBmp);</span><br><span class=\"line\">  server.on(&quot;/cam-lo.jpg&quot;, handleJpgLo);</span><br><span class=\"line\">  server.on(&quot;/cam-hi.jpg&quot;, handleJpgHi);</span><br><span class=\"line\">  server.on(&quot;/cam.jpg&quot;, handleJpg);</span><br><span class=\"line\">  server.on(&quot;/cam.mjpeg&quot;, handleMjpeg);</span><br><span class=\"line\"></span><br><span class=\"line\">  server.begin();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  server.handleClient();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p><strong>还是卡的一比，和rstp流解析的一模一样，我都服了，这回真的没办法了只能想办法弄台配置高的电脑</strong></p>"},{"title":"ESP32CAM读取视频","_content":"# 硬件准备\n<!--more-->\n1. esp32cam(我是淘宝买的，买的套装带烧录底板和一个OV2640的摄像头,价格33)\n2. 数据线\n# 软件准备\n1. Arduion配置ESP32开发板\n不懂怎么配置的[点这里](https://blog.csdn.net/finedayforu/article/details/108464784)和[这里](https://www.arduino.cn/thread-81194-1-1.html)\n2. vscode + platformIO\n上述两个平台根据自己习惯来，新手推荐使用Arduion\n我这里使用的是vscode + platformIO\n\n# 代码实现环境\n1. 在platformIO中下载esp32-cam这个库\n2. 打开Arduion中esp32中CAM的例子所在的文件夹然后复制所有文件到你platformIO的src文件夹下\n大致是这样：\n![](https://i.niupic.com/images/2022/06/27/a0Im.jpg)\n# 代码\n```\n#include \"esp_camera.h\"\n#include <WiFi.h>\n\n//\n// WARNING!!! PSRAM IC required for UXGA resolution and high JPEG quality\n//            Ensure ESP32 Wrover Module or other board with PSRAM is selected\n//            Partial images will be transmitted if image exceeds buffer size\n//\n//            You must select partition scheme from the board menu that has at least 3MB APP space.\n//            Face Recognition is DISABLED for ESP32 and ESP32-S2, because it takes up from 15 \n//            seconds to process single frame. Face Detection is ENABLED if PSRAM is enabled as well\n\n// ===================\n// Select camera model\n// ===================\n//#define CAMERA_MODEL_WROVER_KIT // Has PSRAM\n//#define CAMERA_MODEL_ESP_EYE // Has PSRAM\n//#define CAMERA_MODEL_ESP32S3_EYE // Has PSRAM\n//#define CAMERA_MODEL_M5STACK_PSRAM // Has PSRAM\n//#define CAMERA_MODEL_M5STACK_V2_PSRAM // M5Camera version B Has PSRAM\n//#define CAMERA_MODEL_M5STACK_WIDE // Has PSRAM\n//#define CAMERA_MODEL_M5STACK_ESP32CAM // No PSRAM\n//#define CAMERA_MODEL_M5STACK_UNITCAM // No PSRAM\n#define CAMERA_MODEL_AI_THINKER // Has PSRAM\n//#define CAMERA_MODEL_TTGO_T_JOURNAL // No PSRAM\n// ** Espressif Internal Boards **\n//#define CAMERA_MODEL_ESP32_CAM_BOARD\n//#define CAMERA_MODEL_ESP32S2_CAM_BOARD\n//#define CAMERA_MODEL_ESP32S3_CAM_LCD\n\n#include \"camera_pins.h\"\n\n// ===========================\n// Enter your WiFi credentials\n// ===========================\nconst char* ssid = \"HONOR V20\";\nconst char* password = \"yubaolin\";\n\nvoid startCameraServer();\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.setDebugOutput(true); \n  Serial.println();\n\n  camera_config_t config;\n  config.ledc_channel = LEDC_CHANNEL_0;\n  config.ledc_timer = LEDC_TIMER_0;\n  config.pin_d0 = Y2_GPIO_NUM;\n  config.pin_d1 = Y3_GPIO_NUM;\n  config.pin_d2 = Y4_GPIO_NUM;\n  config.pin_d3 = Y5_GPIO_NUM;\n  config.pin_d4 = Y6_GPIO_NUM;\n  config.pin_d5 = Y7_GPIO_NUM;\n  config.pin_d6 = Y8_GPIO_NUM;\n  config.pin_d7 = Y9_GPIO_NUM;\n  config.pin_xclk = XCLK_GPIO_NUM;\n  config.pin_pclk = PCLK_GPIO_NUM;\n  config.pin_vsync = VSYNC_GPIO_NUM;\n  config.pin_href = HREF_GPIO_NUM;\n  config.pin_sscb_sda = SIOD_GPIO_NUM;\n  config.pin_sscb_scl = SIOC_GPIO_NUM;\n  config.pin_pwdn = PWDN_GPIO_NUM;\n  config.pin_reset = RESET_GPIO_NUM;\n  config.xclk_freq_hz = 20000000;\n  config.frame_size = FRAMESIZE_UXGA;\n  config.pixel_format = PIXFORMAT_JPEG; // for streaming\n  //config.pixel_format = PIXFORMAT_RGB565; // for face detection/recognition\n  config.grab_mode = CAMERA_GRAB_WHEN_EMPTY;\n  config.fb_location = CAMERA_FB_IN_PSRAM;\n  config.jpeg_quality = 12;\n  config.fb_count = 1;\n  \n  // if PSRAM IC present, init with UXGA resolution and higher JPEG quality\n  //                      for larger pre-allocated frame buffer.\n  if(config.pixel_format == PIXFORMAT_JPEG){\n    if(psramFound()){\n      config.jpeg_quality = 10;\n      config.fb_count = 2;\n      config.grab_mode = CAMERA_GRAB_LATEST;\n    } else {\n      // Limit the frame size when PSRAM is not available\n      config.frame_size = FRAMESIZE_SVGA;\n      config.fb_location = CAMERA_FB_IN_DRAM;\n    }\n  } else {\n    // Best option for face detection/recognition\n    config.frame_size = FRAMESIZE_240X240;\n#if CONFIG_IDF_TARGET_ESP32S3\n    config.fb_count = 2;\n#endif\n  }\n\n#if defined(CAMERA_MODEL_ESP_EYE)\n  pinMode(13, INPUT_PULLUP);\n  pinMode(14, INPUT_PULLUP);\n#endif\n\n  // camera init\n  esp_err_t err = esp_camera_init(&config);\n  if (err != ESP_OK) {\n    Serial.printf(\"Camera init failed with error 0x%x\", err);\n    return;\n  }\n\n  sensor_t * s = esp_camera_sensor_get();\n  // initial sensors are flipped vertically and colors are a bit saturated\n  if (s->id.PID == OV3660_PID) {\n    s->set_vflip(s, 1); // flip it back\n    s->set_brightness(s, 1); // up the brightness just a bit\n    s->set_saturation(s, -2); // lower the saturation\n  }\n  // drop down frame size for higher initial frame rate\n  if(config.pixel_format == PIXFORMAT_JPEG){\n    s->set_framesize(s, FRAMESIZE_QVGA);\n  }\n\n#if defined(CAMERA_MODEL_M5STACK_WIDE) || defined(CAMERA_MODEL_M5STACK_ESP32CAM)\n  s->set_vflip(s, 1);\n  s->set_hmirror(s, 1);\n#endif\n\n#if defined(CAMERA_MODEL_ESP32S3_EYE)\n  s->set_vflip(s, 1);\n#endif\n\n  WiFi.begin(ssid, password);\n  WiFi.setSleep(false);\n\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n    Serial.print(\".\");\n  }\n  Serial.println(\"\");\n  Serial.println(\"WiFi connected\");\n\n  startCameraServer();\n\n  Serial.print(\"Camera Ready! Use 'http://\");\n  Serial.print(WiFi.localIP());\n  Serial.println(\"' to connect\");\n}\n\nvoid loop() {\n  // Do nothing. Everything is done in another task by the web server\n  delay(10000);\n}\n\n```\n# 结果\n![](https://i.niupic.com/images/2022/06/27/a0In.jpg)","source":"_posts/ESP32CAM/使用ESP32CAM读取视频流.md","raw":"---\ntitle: ESP32CAM读取视频\n---\n# 硬件准备\n<!--more-->\n1. esp32cam(我是淘宝买的，买的套装带烧录底板和一个OV2640的摄像头,价格33)\n2. 数据线\n# 软件准备\n1. Arduion配置ESP32开发板\n不懂怎么配置的[点这里](https://blog.csdn.net/finedayforu/article/details/108464784)和[这里](https://www.arduino.cn/thread-81194-1-1.html)\n2. vscode + platformIO\n上述两个平台根据自己习惯来，新手推荐使用Arduion\n我这里使用的是vscode + platformIO\n\n# 代码实现环境\n1. 在platformIO中下载esp32-cam这个库\n2. 打开Arduion中esp32中CAM的例子所在的文件夹然后复制所有文件到你platformIO的src文件夹下\n大致是这样：\n![](https://i.niupic.com/images/2022/06/27/a0Im.jpg)\n# 代码\n```\n#include \"esp_camera.h\"\n#include <WiFi.h>\n\n//\n// WARNING!!! PSRAM IC required for UXGA resolution and high JPEG quality\n//            Ensure ESP32 Wrover Module or other board with PSRAM is selected\n//            Partial images will be transmitted if image exceeds buffer size\n//\n//            You must select partition scheme from the board menu that has at least 3MB APP space.\n//            Face Recognition is DISABLED for ESP32 and ESP32-S2, because it takes up from 15 \n//            seconds to process single frame. Face Detection is ENABLED if PSRAM is enabled as well\n\n// ===================\n// Select camera model\n// ===================\n//#define CAMERA_MODEL_WROVER_KIT // Has PSRAM\n//#define CAMERA_MODEL_ESP_EYE // Has PSRAM\n//#define CAMERA_MODEL_ESP32S3_EYE // Has PSRAM\n//#define CAMERA_MODEL_M5STACK_PSRAM // Has PSRAM\n//#define CAMERA_MODEL_M5STACK_V2_PSRAM // M5Camera version B Has PSRAM\n//#define CAMERA_MODEL_M5STACK_WIDE // Has PSRAM\n//#define CAMERA_MODEL_M5STACK_ESP32CAM // No PSRAM\n//#define CAMERA_MODEL_M5STACK_UNITCAM // No PSRAM\n#define CAMERA_MODEL_AI_THINKER // Has PSRAM\n//#define CAMERA_MODEL_TTGO_T_JOURNAL // No PSRAM\n// ** Espressif Internal Boards **\n//#define CAMERA_MODEL_ESP32_CAM_BOARD\n//#define CAMERA_MODEL_ESP32S2_CAM_BOARD\n//#define CAMERA_MODEL_ESP32S3_CAM_LCD\n\n#include \"camera_pins.h\"\n\n// ===========================\n// Enter your WiFi credentials\n// ===========================\nconst char* ssid = \"HONOR V20\";\nconst char* password = \"yubaolin\";\n\nvoid startCameraServer();\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.setDebugOutput(true); \n  Serial.println();\n\n  camera_config_t config;\n  config.ledc_channel = LEDC_CHANNEL_0;\n  config.ledc_timer = LEDC_TIMER_0;\n  config.pin_d0 = Y2_GPIO_NUM;\n  config.pin_d1 = Y3_GPIO_NUM;\n  config.pin_d2 = Y4_GPIO_NUM;\n  config.pin_d3 = Y5_GPIO_NUM;\n  config.pin_d4 = Y6_GPIO_NUM;\n  config.pin_d5 = Y7_GPIO_NUM;\n  config.pin_d6 = Y8_GPIO_NUM;\n  config.pin_d7 = Y9_GPIO_NUM;\n  config.pin_xclk = XCLK_GPIO_NUM;\n  config.pin_pclk = PCLK_GPIO_NUM;\n  config.pin_vsync = VSYNC_GPIO_NUM;\n  config.pin_href = HREF_GPIO_NUM;\n  config.pin_sscb_sda = SIOD_GPIO_NUM;\n  config.pin_sscb_scl = SIOC_GPIO_NUM;\n  config.pin_pwdn = PWDN_GPIO_NUM;\n  config.pin_reset = RESET_GPIO_NUM;\n  config.xclk_freq_hz = 20000000;\n  config.frame_size = FRAMESIZE_UXGA;\n  config.pixel_format = PIXFORMAT_JPEG; // for streaming\n  //config.pixel_format = PIXFORMAT_RGB565; // for face detection/recognition\n  config.grab_mode = CAMERA_GRAB_WHEN_EMPTY;\n  config.fb_location = CAMERA_FB_IN_PSRAM;\n  config.jpeg_quality = 12;\n  config.fb_count = 1;\n  \n  // if PSRAM IC present, init with UXGA resolution and higher JPEG quality\n  //                      for larger pre-allocated frame buffer.\n  if(config.pixel_format == PIXFORMAT_JPEG){\n    if(psramFound()){\n      config.jpeg_quality = 10;\n      config.fb_count = 2;\n      config.grab_mode = CAMERA_GRAB_LATEST;\n    } else {\n      // Limit the frame size when PSRAM is not available\n      config.frame_size = FRAMESIZE_SVGA;\n      config.fb_location = CAMERA_FB_IN_DRAM;\n    }\n  } else {\n    // Best option for face detection/recognition\n    config.frame_size = FRAMESIZE_240X240;\n#if CONFIG_IDF_TARGET_ESP32S3\n    config.fb_count = 2;\n#endif\n  }\n\n#if defined(CAMERA_MODEL_ESP_EYE)\n  pinMode(13, INPUT_PULLUP);\n  pinMode(14, INPUT_PULLUP);\n#endif\n\n  // camera init\n  esp_err_t err = esp_camera_init(&config);\n  if (err != ESP_OK) {\n    Serial.printf(\"Camera init failed with error 0x%x\", err);\n    return;\n  }\n\n  sensor_t * s = esp_camera_sensor_get();\n  // initial sensors are flipped vertically and colors are a bit saturated\n  if (s->id.PID == OV3660_PID) {\n    s->set_vflip(s, 1); // flip it back\n    s->set_brightness(s, 1); // up the brightness just a bit\n    s->set_saturation(s, -2); // lower the saturation\n  }\n  // drop down frame size for higher initial frame rate\n  if(config.pixel_format == PIXFORMAT_JPEG){\n    s->set_framesize(s, FRAMESIZE_QVGA);\n  }\n\n#if defined(CAMERA_MODEL_M5STACK_WIDE) || defined(CAMERA_MODEL_M5STACK_ESP32CAM)\n  s->set_vflip(s, 1);\n  s->set_hmirror(s, 1);\n#endif\n\n#if defined(CAMERA_MODEL_ESP32S3_EYE)\n  s->set_vflip(s, 1);\n#endif\n\n  WiFi.begin(ssid, password);\n  WiFi.setSleep(false);\n\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n    Serial.print(\".\");\n  }\n  Serial.println(\"\");\n  Serial.println(\"WiFi connected\");\n\n  startCameraServer();\n\n  Serial.print(\"Camera Ready! Use 'http://\");\n  Serial.print(WiFi.localIP());\n  Serial.println(\"' to connect\");\n}\n\nvoid loop() {\n  // Do nothing. Everything is done in another task by the web server\n  delay(10000);\n}\n\n```\n# 结果\n![](https://i.niupic.com/images/2022/06/27/a0In.jpg)","slug":"ESP32CAM/使用ESP32CAM读取视频流","published":1,"date":"2022-06-27T09:23:59.134Z","updated":"2022-06-27T09:47:43.754Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceenz000368urbbp2enjn","content":"<h1 id=\"硬件准备\"><a href=\"#硬件准备\" class=\"headerlink\" title=\"硬件准备\"></a>硬件准备</h1><span id=\"more\"></span>\n<ol>\n<li>esp32cam(我是淘宝买的，买的套装带烧录底板和一个OV2640的摄像头,价格33)</li>\n<li>数据线<h1 id=\"软件准备\"><a href=\"#软件准备\" class=\"headerlink\" title=\"软件准备\"></a>软件准备</h1></li>\n<li>Arduion配置ESP32开发板<br>不懂怎么配置的<a href=\"https://blog.csdn.net/finedayforu/article/details/108464784\">点这里</a>和<a href=\"https://www.arduino.cn/thread-81194-1-1.html\">这里</a></li>\n<li>vscode + platformIO<br>上述两个平台根据自己习惯来，新手推荐使用Arduion<br>我这里使用的是vscode + platformIO</li>\n</ol>\n<h1 id=\"代码实现环境\"><a href=\"#代码实现环境\" class=\"headerlink\" title=\"代码实现环境\"></a>代码实现环境</h1><ol>\n<li>在platformIO中下载esp32-cam这个库</li>\n<li>打开Arduion中esp32中CAM的例子所在的文件夹然后复制所有文件到你platformIO的src文件夹下<br>大致是这样：<br><img src=\"https://i.niupic.com/images/2022/06/27/a0Im.jpg\"><h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &quot;esp_camera.h&quot;</span><br><span class=\"line\">#include &lt;WiFi.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\">// WARNING!!! PSRAM IC required for UXGA resolution and high JPEG quality</span><br><span class=\"line\">//            Ensure ESP32 Wrover Module or other board with PSRAM is selected</span><br><span class=\"line\">//            Partial images will be transmitted if image exceeds buffer size</span><br><span class=\"line\">//</span><br><span class=\"line\">//            You must select partition scheme from the board menu that has at least 3MB APP space.</span><br><span class=\"line\">//            Face Recognition is DISABLED for ESP32 and ESP32-S2, because it takes up from 15 </span><br><span class=\"line\">//            seconds to process single frame. Face Detection is ENABLED if PSRAM is enabled as well</span><br><span class=\"line\"></span><br><span class=\"line\">// ===================</span><br><span class=\"line\">// Select camera model</span><br><span class=\"line\">// ===================</span><br><span class=\"line\">//#define CAMERA_MODEL_WROVER_KIT // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP_EYE // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP32S3_EYE // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_PSRAM // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_V2_PSRAM // M5Camera version B Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_WIDE // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_ESP32CAM // No PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_UNITCAM // No PSRAM</span><br><span class=\"line\">#define CAMERA_MODEL_AI_THINKER // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_TTGO_T_JOURNAL // No PSRAM</span><br><span class=\"line\">// ** Espressif Internal Boards **</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP32_CAM_BOARD</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP32S2_CAM_BOARD</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP32S3_CAM_LCD</span><br><span class=\"line\"></span><br><span class=\"line\">#include &quot;camera_pins.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">// ===========================</span><br><span class=\"line\">// Enter your WiFi credentials</span><br><span class=\"line\">// ===========================</span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;;</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">void startCameraServer();</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  Serial.setDebugOutput(true); </span><br><span class=\"line\">  Serial.println();</span><br><span class=\"line\"></span><br><span class=\"line\">  camera_config_t config;</span><br><span class=\"line\">  config.ledc_channel = LEDC_CHANNEL_0;</span><br><span class=\"line\">  config.ledc_timer = LEDC_TIMER_0;</span><br><span class=\"line\">  config.pin_d0 = Y2_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d1 = Y3_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d2 = Y4_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d3 = Y5_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d4 = Y6_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d5 = Y7_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d6 = Y8_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d7 = Y9_GPIO_NUM;</span><br><span class=\"line\">  config.pin_xclk = XCLK_GPIO_NUM;</span><br><span class=\"line\">  config.pin_pclk = PCLK_GPIO_NUM;</span><br><span class=\"line\">  config.pin_vsync = VSYNC_GPIO_NUM;</span><br><span class=\"line\">  config.pin_href = HREF_GPIO_NUM;</span><br><span class=\"line\">  config.pin_sscb_sda = SIOD_GPIO_NUM;</span><br><span class=\"line\">  config.pin_sscb_scl = SIOC_GPIO_NUM;</span><br><span class=\"line\">  config.pin_pwdn = PWDN_GPIO_NUM;</span><br><span class=\"line\">  config.pin_reset = RESET_GPIO_NUM;</span><br><span class=\"line\">  config.xclk_freq_hz = 20000000;</span><br><span class=\"line\">  config.frame_size = FRAMESIZE_UXGA;</span><br><span class=\"line\">  config.pixel_format = PIXFORMAT_JPEG; // for streaming</span><br><span class=\"line\">  //config.pixel_format = PIXFORMAT_RGB565; // for face detection/recognition</span><br><span class=\"line\">  config.grab_mode = CAMERA_GRAB_WHEN_EMPTY;</span><br><span class=\"line\">  config.fb_location = CAMERA_FB_IN_PSRAM;</span><br><span class=\"line\">  config.jpeg_quality = 12;</span><br><span class=\"line\">  config.fb_count = 1;</span><br><span class=\"line\">  </span><br><span class=\"line\">  // if PSRAM IC present, init with UXGA resolution and higher JPEG quality</span><br><span class=\"line\">  //                      for larger pre-allocated frame buffer.</span><br><span class=\"line\">  if(config.pixel_format == PIXFORMAT_JPEG)&#123;</span><br><span class=\"line\">    if(psramFound())&#123;</span><br><span class=\"line\">      config.jpeg_quality = 10;</span><br><span class=\"line\">      config.fb_count = 2;</span><br><span class=\"line\">      config.grab_mode = CAMERA_GRAB_LATEST;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      // Limit the frame size when PSRAM is not available</span><br><span class=\"line\">      config.frame_size = FRAMESIZE_SVGA;</span><br><span class=\"line\">      config.fb_location = CAMERA_FB_IN_DRAM;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    // Best option for face detection/recognition</span><br><span class=\"line\">    config.frame_size = FRAMESIZE_240X240;</span><br><span class=\"line\">#if CONFIG_IDF_TARGET_ESP32S3</span><br><span class=\"line\">    config.fb_count = 2;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if defined(CAMERA_MODEL_ESP_EYE)</span><br><span class=\"line\">  pinMode(13, INPUT_PULLUP);</span><br><span class=\"line\">  pinMode(14, INPUT_PULLUP);</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">  // camera init</span><br><span class=\"line\">  esp_err_t err = esp_camera_init(&amp;config);</span><br><span class=\"line\">  if (err != ESP_OK) &#123;</span><br><span class=\"line\">    Serial.printf(&quot;Camera init failed with error 0x%x&quot;, err);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  sensor_t * s = esp_camera_sensor_get();</span><br><span class=\"line\">  // initial sensors are flipped vertically and colors are a bit saturated</span><br><span class=\"line\">  if (s-&gt;id.PID == OV3660_PID) &#123;</span><br><span class=\"line\">    s-&gt;set_vflip(s, 1); // flip it back</span><br><span class=\"line\">    s-&gt;set_brightness(s, 1); // up the brightness just a bit</span><br><span class=\"line\">    s-&gt;set_saturation(s, -2); // lower the saturation</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // drop down frame size for higher initial frame rate</span><br><span class=\"line\">  if(config.pixel_format == PIXFORMAT_JPEG)&#123;</span><br><span class=\"line\">    s-&gt;set_framesize(s, FRAMESIZE_QVGA);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if defined(CAMERA_MODEL_M5STACK_WIDE) || defined(CAMERA_MODEL_M5STACK_ESP32CAM)</span><br><span class=\"line\">  s-&gt;set_vflip(s, 1);</span><br><span class=\"line\">  s-&gt;set_hmirror(s, 1);</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">#if defined(CAMERA_MODEL_ESP32S3_EYE)</span><br><span class=\"line\">  s-&gt;set_vflip(s, 1);</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">  WiFi.begin(ssid, password);</span><br><span class=\"line\">  WiFi.setSleep(false);</span><br><span class=\"line\"></span><br><span class=\"line\">  while (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class=\"line\">    delay(500);</span><br><span class=\"line\">    Serial.print(&quot;.&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.println(&quot;&quot;);</span><br><span class=\"line\">  Serial.println(&quot;WiFi connected&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  startCameraServer();</span><br><span class=\"line\"></span><br><span class=\"line\">  Serial.print(&quot;Camera Ready! Use &#x27;http://&quot;);</span><br><span class=\"line\">  Serial.print(WiFi.localIP());</span><br><span class=\"line\">  Serial.println(&quot;&#x27; to connect&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // Do nothing. Everything is done in another task by the web server</span><br><span class=\"line\">  delay(10000);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><img src=\"https://i.niupic.com/images/2022/06/27/a0In.jpg\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"硬件准备\"><a href=\"#硬件准备\" class=\"headerlink\" title=\"硬件准备\"></a>硬件准备</h1>","more":"<ol>\n<li>esp32cam(我是淘宝买的，买的套装带烧录底板和一个OV2640的摄像头,价格33)</li>\n<li>数据线<h1 id=\"软件准备\"><a href=\"#软件准备\" class=\"headerlink\" title=\"软件准备\"></a>软件准备</h1></li>\n<li>Arduion配置ESP32开发板<br>不懂怎么配置的<a href=\"https://blog.csdn.net/finedayforu/article/details/108464784\">点这里</a>和<a href=\"https://www.arduino.cn/thread-81194-1-1.html\">这里</a></li>\n<li>vscode + platformIO<br>上述两个平台根据自己习惯来，新手推荐使用Arduion<br>我这里使用的是vscode + platformIO</li>\n</ol>\n<h1 id=\"代码实现环境\"><a href=\"#代码实现环境\" class=\"headerlink\" title=\"代码实现环境\"></a>代码实现环境</h1><ol>\n<li>在platformIO中下载esp32-cam这个库</li>\n<li>打开Arduion中esp32中CAM的例子所在的文件夹然后复制所有文件到你platformIO的src文件夹下<br>大致是这样：<br><img src=\"https://i.niupic.com/images/2022/06/27/a0Im.jpg\"><h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &quot;esp_camera.h&quot;</span><br><span class=\"line\">#include &lt;WiFi.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">//</span><br><span class=\"line\">// WARNING!!! PSRAM IC required for UXGA resolution and high JPEG quality</span><br><span class=\"line\">//            Ensure ESP32 Wrover Module or other board with PSRAM is selected</span><br><span class=\"line\">//            Partial images will be transmitted if image exceeds buffer size</span><br><span class=\"line\">//</span><br><span class=\"line\">//            You must select partition scheme from the board menu that has at least 3MB APP space.</span><br><span class=\"line\">//            Face Recognition is DISABLED for ESP32 and ESP32-S2, because it takes up from 15 </span><br><span class=\"line\">//            seconds to process single frame. Face Detection is ENABLED if PSRAM is enabled as well</span><br><span class=\"line\"></span><br><span class=\"line\">// ===================</span><br><span class=\"line\">// Select camera model</span><br><span class=\"line\">// ===================</span><br><span class=\"line\">//#define CAMERA_MODEL_WROVER_KIT // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP_EYE // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP32S3_EYE // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_PSRAM // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_V2_PSRAM // M5Camera version B Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_WIDE // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_ESP32CAM // No PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_M5STACK_UNITCAM // No PSRAM</span><br><span class=\"line\">#define CAMERA_MODEL_AI_THINKER // Has PSRAM</span><br><span class=\"line\">//#define CAMERA_MODEL_TTGO_T_JOURNAL // No PSRAM</span><br><span class=\"line\">// ** Espressif Internal Boards **</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP32_CAM_BOARD</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP32S2_CAM_BOARD</span><br><span class=\"line\">//#define CAMERA_MODEL_ESP32S3_CAM_LCD</span><br><span class=\"line\"></span><br><span class=\"line\">#include &quot;camera_pins.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">// ===========================</span><br><span class=\"line\">// Enter your WiFi credentials</span><br><span class=\"line\">// ===========================</span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;;</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">void startCameraServer();</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  Serial.setDebugOutput(true); </span><br><span class=\"line\">  Serial.println();</span><br><span class=\"line\"></span><br><span class=\"line\">  camera_config_t config;</span><br><span class=\"line\">  config.ledc_channel = LEDC_CHANNEL_0;</span><br><span class=\"line\">  config.ledc_timer = LEDC_TIMER_0;</span><br><span class=\"line\">  config.pin_d0 = Y2_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d1 = Y3_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d2 = Y4_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d3 = Y5_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d4 = Y6_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d5 = Y7_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d6 = Y8_GPIO_NUM;</span><br><span class=\"line\">  config.pin_d7 = Y9_GPIO_NUM;</span><br><span class=\"line\">  config.pin_xclk = XCLK_GPIO_NUM;</span><br><span class=\"line\">  config.pin_pclk = PCLK_GPIO_NUM;</span><br><span class=\"line\">  config.pin_vsync = VSYNC_GPIO_NUM;</span><br><span class=\"line\">  config.pin_href = HREF_GPIO_NUM;</span><br><span class=\"line\">  config.pin_sscb_sda = SIOD_GPIO_NUM;</span><br><span class=\"line\">  config.pin_sscb_scl = SIOC_GPIO_NUM;</span><br><span class=\"line\">  config.pin_pwdn = PWDN_GPIO_NUM;</span><br><span class=\"line\">  config.pin_reset = RESET_GPIO_NUM;</span><br><span class=\"line\">  config.xclk_freq_hz = 20000000;</span><br><span class=\"line\">  config.frame_size = FRAMESIZE_UXGA;</span><br><span class=\"line\">  config.pixel_format = PIXFORMAT_JPEG; // for streaming</span><br><span class=\"line\">  //config.pixel_format = PIXFORMAT_RGB565; // for face detection/recognition</span><br><span class=\"line\">  config.grab_mode = CAMERA_GRAB_WHEN_EMPTY;</span><br><span class=\"line\">  config.fb_location = CAMERA_FB_IN_PSRAM;</span><br><span class=\"line\">  config.jpeg_quality = 12;</span><br><span class=\"line\">  config.fb_count = 1;</span><br><span class=\"line\">  </span><br><span class=\"line\">  // if PSRAM IC present, init with UXGA resolution and higher JPEG quality</span><br><span class=\"line\">  //                      for larger pre-allocated frame buffer.</span><br><span class=\"line\">  if(config.pixel_format == PIXFORMAT_JPEG)&#123;</span><br><span class=\"line\">    if(psramFound())&#123;</span><br><span class=\"line\">      config.jpeg_quality = 10;</span><br><span class=\"line\">      config.fb_count = 2;</span><br><span class=\"line\">      config.grab_mode = CAMERA_GRAB_LATEST;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      // Limit the frame size when PSRAM is not available</span><br><span class=\"line\">      config.frame_size = FRAMESIZE_SVGA;</span><br><span class=\"line\">      config.fb_location = CAMERA_FB_IN_DRAM;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    // Best option for face detection/recognition</span><br><span class=\"line\">    config.frame_size = FRAMESIZE_240X240;</span><br><span class=\"line\">#if CONFIG_IDF_TARGET_ESP32S3</span><br><span class=\"line\">    config.fb_count = 2;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if defined(CAMERA_MODEL_ESP_EYE)</span><br><span class=\"line\">  pinMode(13, INPUT_PULLUP);</span><br><span class=\"line\">  pinMode(14, INPUT_PULLUP);</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">  // camera init</span><br><span class=\"line\">  esp_err_t err = esp_camera_init(&amp;config);</span><br><span class=\"line\">  if (err != ESP_OK) &#123;</span><br><span class=\"line\">    Serial.printf(&quot;Camera init failed with error 0x%x&quot;, err);</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  sensor_t * s = esp_camera_sensor_get();</span><br><span class=\"line\">  // initial sensors are flipped vertically and colors are a bit saturated</span><br><span class=\"line\">  if (s-&gt;id.PID == OV3660_PID) &#123;</span><br><span class=\"line\">    s-&gt;set_vflip(s, 1); // flip it back</span><br><span class=\"line\">    s-&gt;set_brightness(s, 1); // up the brightness just a bit</span><br><span class=\"line\">    s-&gt;set_saturation(s, -2); // lower the saturation</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // drop down frame size for higher initial frame rate</span><br><span class=\"line\">  if(config.pixel_format == PIXFORMAT_JPEG)&#123;</span><br><span class=\"line\">    s-&gt;set_framesize(s, FRAMESIZE_QVGA);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#if defined(CAMERA_MODEL_M5STACK_WIDE) || defined(CAMERA_MODEL_M5STACK_ESP32CAM)</span><br><span class=\"line\">  s-&gt;set_vflip(s, 1);</span><br><span class=\"line\">  s-&gt;set_hmirror(s, 1);</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">#if defined(CAMERA_MODEL_ESP32S3_EYE)</span><br><span class=\"line\">  s-&gt;set_vflip(s, 1);</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">  WiFi.begin(ssid, password);</span><br><span class=\"line\">  WiFi.setSleep(false);</span><br><span class=\"line\"></span><br><span class=\"line\">  while (WiFi.status() != WL_CONNECTED) &#123;</span><br><span class=\"line\">    delay(500);</span><br><span class=\"line\">    Serial.print(&quot;.&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.println(&quot;&quot;);</span><br><span class=\"line\">  Serial.println(&quot;WiFi connected&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  startCameraServer();</span><br><span class=\"line\"></span><br><span class=\"line\">  Serial.print(&quot;Camera Ready! Use &#x27;http://&quot;);</span><br><span class=\"line\">  Serial.print(WiFi.localIP());</span><br><span class=\"line\">  Serial.println(&quot;&#x27; to connect&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // Do nothing. Everything is done in another task by the web server</span><br><span class=\"line\">  delay(10000);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><img src=\"https://i.niupic.com/images/2022/06/27/a0In.jpg\"></li>\n</ol>"},{"title":"IP摄像头实现远程目标检测","_content":"# 硬件准备\n<!--more-->\n不用的手机，或者esp32_CAM、电脑\n实现思路：\n摄像头负责采集图像传送到云端\n电脑获取云端视频流，在PC端对视频进行图像处理。\n然后将处理结果反馈给摄像头终端（未实现）\n# 软件准备\nPython 3.9、Pycharm、OpenCV、pytorch、手机安装IP摄像头软件\n# 代码实现\n以下只是使用手机IP摄像头的代码\n```\nimport time\nimport torch\nimport cv2 as cv\n\n\nclass MultipleTarget:\n\n    def __init__(self, url):\n        \"\"\"\n        初始化\n        \"\"\"\n        # 加载训练模型\n        self.model = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n        # 设置阈值\n        self.model.conf = 0.52  # confidence threshold (0-1)\n        self.model.iou = 0.45  # NMS IoU threshold (0-1)\n        # 加载摄像头\n        self.url = url\n        self.cap = cv.VideoCapture(self.url)\n        if not self.cap.isOpened():\n            print(\"Cannot open camera\")\n            exit()\n\n    def draw(self, list_temp, image_temp):\n        for temp in list_temp:\n            name = temp[6]  # 取出标签名\n            temp = temp[:4].astype('int')  # 转成int加快计算\n            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体\n            cv.putText(image_temp, name, (int(temp[0] - 10), int(temp[1] - 10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n    def detect(self):\n        \"\"\"\n        目标检测\n        \"\"\"\n        while True:\n            ret, frame = self.cap.read()\n            # 如果正确读取帧，ret为True\n            if not ret:\n                print(\"Can't receive frame (stream end?). Exiting ...\")\n                break\n            frame = cv.flip(frame, 1)\n\n            # FPS计算time.start\n            start_time = time.time()\n\n            # Inference\n            results = self.model(frame)\n            pd = results.pandas().xyxy[0]  # tensor-->pandas的DataFrame\n            # 取出对应标签的list\n            person_list = pd[pd['name'] == 'person'].to_numpy()\n            bus_list = pd[pd['name'] == 'bus'].to_numpy()\n            # 框出物体\n            self.draw(person_list, frame)\n            self.draw(bus_list, frame)\n            # end_time\n            end_time = time.time()\n            fps = 1 / (end_time - start_time)\n\n            # 控制台显示\n            # results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n            # print(results.xyxy[0])  # img1 predictions (tensor)\n            # print('----------------')\n            # print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n\n            # FPS显示\n            cv.putText(frame, 'FPS:' + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n            cv.imshow('results', frame)\n            cv.waitKey(10)\n            if cv.waitKey(10) & 0xFF == ord('q'):\n                break\n\n        self.cap.release()\n        cv.destroyAllWindows()\n\n\nurl = 'rtsp://admin:admin@192.168.43.229:8554/live'\ntest = MultipleTarget(url)\ntest.detect()\n\n```\n# 结果\n![](https://i.niupic.com/images/2022/06/20/a0B1.jpg)\n![](https://i.niupic.com/images/2022/06/20/a0B2.jpg)","source":"_posts/IP摄像头rstp流/IP摄像头实现远程目标检测.md","raw":"---\ntitle: IP摄像头实现远程目标检测\n---\n# 硬件准备\n<!--more-->\n不用的手机，或者esp32_CAM、电脑\n实现思路：\n摄像头负责采集图像传送到云端\n电脑获取云端视频流，在PC端对视频进行图像处理。\n然后将处理结果反馈给摄像头终端（未实现）\n# 软件准备\nPython 3.9、Pycharm、OpenCV、pytorch、手机安装IP摄像头软件\n# 代码实现\n以下只是使用手机IP摄像头的代码\n```\nimport time\nimport torch\nimport cv2 as cv\n\n\nclass MultipleTarget:\n\n    def __init__(self, url):\n        \"\"\"\n        初始化\n        \"\"\"\n        # 加载训练模型\n        self.model = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n        # 设置阈值\n        self.model.conf = 0.52  # confidence threshold (0-1)\n        self.model.iou = 0.45  # NMS IoU threshold (0-1)\n        # 加载摄像头\n        self.url = url\n        self.cap = cv.VideoCapture(self.url)\n        if not self.cap.isOpened():\n            print(\"Cannot open camera\")\n            exit()\n\n    def draw(self, list_temp, image_temp):\n        for temp in list_temp:\n            name = temp[6]  # 取出标签名\n            temp = temp[:4].astype('int')  # 转成int加快计算\n            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体\n            cv.putText(image_temp, name, (int(temp[0] - 10), int(temp[1] - 10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n    def detect(self):\n        \"\"\"\n        目标检测\n        \"\"\"\n        while True:\n            ret, frame = self.cap.read()\n            # 如果正确读取帧，ret为True\n            if not ret:\n                print(\"Can't receive frame (stream end?). Exiting ...\")\n                break\n            frame = cv.flip(frame, 1)\n\n            # FPS计算time.start\n            start_time = time.time()\n\n            # Inference\n            results = self.model(frame)\n            pd = results.pandas().xyxy[0]  # tensor-->pandas的DataFrame\n            # 取出对应标签的list\n            person_list = pd[pd['name'] == 'person'].to_numpy()\n            bus_list = pd[pd['name'] == 'bus'].to_numpy()\n            # 框出物体\n            self.draw(person_list, frame)\n            self.draw(bus_list, frame)\n            # end_time\n            end_time = time.time()\n            fps = 1 / (end_time - start_time)\n\n            # 控制台显示\n            # results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n            # print(results.xyxy[0])  # img1 predictions (tensor)\n            # print('----------------')\n            # print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n\n            # FPS显示\n            cv.putText(frame, 'FPS:' + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n            cv.imshow('results', frame)\n            cv.waitKey(10)\n            if cv.waitKey(10) & 0xFF == ord('q'):\n                break\n\n        self.cap.release()\n        cv.destroyAllWindows()\n\n\nurl = 'rtsp://admin:admin@192.168.43.229:8554/live'\ntest = MultipleTarget(url)\ntest.detect()\n\n```\n# 结果\n![](https://i.niupic.com/images/2022/06/20/a0B1.jpg)\n![](https://i.niupic.com/images/2022/06/20/a0B2.jpg)","slug":"IP摄像头rstp流/IP摄像头实现远程目标检测","published":1,"date":"2022-06-20T09:33:16.962Z","updated":"2022-06-20T09:43:07.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeo1000468urbp8n529p","content":"<h1 id=\"硬件准备\"><a href=\"#硬件准备\" class=\"headerlink\" title=\"硬件准备\"></a>硬件准备</h1><span id=\"more\"></span>\n<p>不用的手机，或者esp32_CAM、电脑<br>实现思路：<br>摄像头负责采集图像传送到云端<br>电脑获取云端视频流，在PC端对视频进行图像处理。<br>然后将处理结果反馈给摄像头终端（未实现）</p>\n<h1 id=\"软件准备\"><a href=\"#软件准备\" class=\"headerlink\" title=\"软件准备\"></a>软件准备</h1><p>Python 3.9、Pycharm、OpenCV、pytorch、手机安装IP摄像头软件</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>以下只是使用手机IP摄像头的代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MultipleTarget:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, url):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        初始化</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 加载训练模型</span><br><span class=\"line\">        self.model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\">        # 设置阈值</span><br><span class=\"line\">        self.model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">        self.model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\">        # 加载摄像头</span><br><span class=\"line\">        self.url = url</span><br><span class=\"line\">        self.cap = cv.VideoCapture(self.url)</span><br><span class=\"line\">        if not self.cap.isOpened():</span><br><span class=\"line\">            print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    def draw(self, list_temp, image_temp):</span><br><span class=\"line\">        for temp in list_temp:</span><br><span class=\"line\">            name = temp[6]  # 取出标签名</span><br><span class=\"line\">            temp = temp[:4].astype(&#x27;int&#x27;)  # 转成int加快计算</span><br><span class=\"line\">            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.putText(image_temp, name, (int(temp[0] - 10), int(temp[1] - 10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    def detect(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        目标检测</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            ret, frame = self.cap.read()</span><br><span class=\"line\">            # 如果正确读取帧，ret为True</span><br><span class=\"line\">            if not ret:</span><br><span class=\"line\">                print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">            frame = cv.flip(frame, 1)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS计算time.start</span><br><span class=\"line\">            start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">            # Inference</span><br><span class=\"line\">            results = self.model(frame)</span><br><span class=\"line\">            pd = results.pandas().xyxy[0]  # tensor--&gt;pandas的DataFrame</span><br><span class=\"line\">            # 取出对应标签的list</span><br><span class=\"line\">            person_list = pd[pd[&#x27;name&#x27;] == &#x27;person&#x27;].to_numpy()</span><br><span class=\"line\">            bus_list = pd[pd[&#x27;name&#x27;] == &#x27;bus&#x27;].to_numpy()</span><br><span class=\"line\">            # 框出物体</span><br><span class=\"line\">            self.draw(person_list, frame)</span><br><span class=\"line\">            self.draw(bus_list, frame)</span><br><span class=\"line\">            # end_time</span><br><span class=\"line\">            end_time = time.time()</span><br><span class=\"line\">            fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">            # 控制台显示</span><br><span class=\"line\">            # results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">            # print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">            # print(&#x27;----------------&#x27;)</span><br><span class=\"line\">            # print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS显示</span><br><span class=\"line\">            cv.putText(frame, &#x27;FPS:&#x27; + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">            cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\">            cv.waitKey(10)</span><br><span class=\"line\">            if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">        self.cap.release()</span><br><span class=\"line\">        cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &#x27;rtsp://admin:admin@192.168.43.229:8554/live&#x27;</span><br><span class=\"line\">test = MultipleTarget(url)</span><br><span class=\"line\">test.detect()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p><img src=\"https://i.niupic.com/images/2022/06/20/a0B1.jpg\"><br><img src=\"https://i.niupic.com/images/2022/06/20/a0B2.jpg\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"硬件准备\"><a href=\"#硬件准备\" class=\"headerlink\" title=\"硬件准备\"></a>硬件准备</h1>","more":"<p>不用的手机，或者esp32_CAM、电脑<br>实现思路：<br>摄像头负责采集图像传送到云端<br>电脑获取云端视频流，在PC端对视频进行图像处理。<br>然后将处理结果反馈给摄像头终端（未实现）</p>\n<h1 id=\"软件准备\"><a href=\"#软件准备\" class=\"headerlink\" title=\"软件准备\"></a>软件准备</h1><p>Python 3.9、Pycharm、OpenCV、pytorch、手机安装IP摄像头软件</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>以下只是使用手机IP摄像头的代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MultipleTarget:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, url):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        初始化</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 加载训练模型</span><br><span class=\"line\">        self.model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\">        # 设置阈值</span><br><span class=\"line\">        self.model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">        self.model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\">        # 加载摄像头</span><br><span class=\"line\">        self.url = url</span><br><span class=\"line\">        self.cap = cv.VideoCapture(self.url)</span><br><span class=\"line\">        if not self.cap.isOpened():</span><br><span class=\"line\">            print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    def draw(self, list_temp, image_temp):</span><br><span class=\"line\">        for temp in list_temp:</span><br><span class=\"line\">            name = temp[6]  # 取出标签名</span><br><span class=\"line\">            temp = temp[:4].astype(&#x27;int&#x27;)  # 转成int加快计算</span><br><span class=\"line\">            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.putText(image_temp, name, (int(temp[0] - 10), int(temp[1] - 10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    def detect(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        目标检测</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            ret, frame = self.cap.read()</span><br><span class=\"line\">            # 如果正确读取帧，ret为True</span><br><span class=\"line\">            if not ret:</span><br><span class=\"line\">                print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">            frame = cv.flip(frame, 1)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS计算time.start</span><br><span class=\"line\">            start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">            # Inference</span><br><span class=\"line\">            results = self.model(frame)</span><br><span class=\"line\">            pd = results.pandas().xyxy[0]  # tensor--&gt;pandas的DataFrame</span><br><span class=\"line\">            # 取出对应标签的list</span><br><span class=\"line\">            person_list = pd[pd[&#x27;name&#x27;] == &#x27;person&#x27;].to_numpy()</span><br><span class=\"line\">            bus_list = pd[pd[&#x27;name&#x27;] == &#x27;bus&#x27;].to_numpy()</span><br><span class=\"line\">            # 框出物体</span><br><span class=\"line\">            self.draw(person_list, frame)</span><br><span class=\"line\">            self.draw(bus_list, frame)</span><br><span class=\"line\">            # end_time</span><br><span class=\"line\">            end_time = time.time()</span><br><span class=\"line\">            fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">            # 控制台显示</span><br><span class=\"line\">            # results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">            # print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">            # print(&#x27;----------------&#x27;)</span><br><span class=\"line\">            # print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS显示</span><br><span class=\"line\">            cv.putText(frame, &#x27;FPS:&#x27; + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">            cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\">            cv.waitKey(10)</span><br><span class=\"line\">            if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">        self.cap.release()</span><br><span class=\"line\">        cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &#x27;rtsp://admin:admin@192.168.43.229:8554/live&#x27;</span><br><span class=\"line\">test = MultipleTarget(url)</span><br><span class=\"line\">test.detect()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p><img src=\"https://i.niupic.com/images/2022/06/20/a0B1.jpg\"><br><img src=\"https://i.niupic.com/images/2022/06/20/a0B2.jpg\"></p>"},{"title":"OpenCV+YOLO+IP摄像头实现目标检测","_content":"# 前言\n<!--more-->\n学习OpenCV、YOLO到现在我实现了调用本地摄像头使用自己训练的模型进行目标识别，然后想着能不能远程获取视频数据，然后再PC端处理，最后将结果返回给视频流端。然后发现旧手机下载IP摄像头之后可以当做一个远程摄像头使用，并且它还支持rstp网络视频流协议（海康、大华的摄像头也是用这个协议，还可以兼容未来硬件的升级）\n\n# 代码\n```\nimport time\nimport torch\nimport cv2 as cv\n\n\nclass MultipleTarget:\n\n    def __init__(self, url):\n        \"\"\"\n        初始化\n        \"\"\"\n        # 加载训练模型\n        self.model = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n        # 设置阈值\n        self.model.conf = 0.52  # confidence threshold (0-1)\n        self.model.iou = 0.45  # NMS IoU threshold (0-1)\n        # 加载摄像头\n        self.url = url\n        self.cap = cv.VideoCapture(self.url)\n        self.cap.set(cv.CAP_PROP_FOURCC, cv.VideoWriter_fourcc('M', 'J', 'P', 'G'))\n        if not self.cap.isOpened():\n            print(\"Cannot open camera\")\n            exit()\n\n    def draw(self, list_temp, image_temp):\n        for temp in list_temp:\n            name = temp[6]  # 取出标签名\n            temp = temp[:4].astype('int')  # 转成int加快计算\n            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体\n            cv.putText(image_temp, name, (int(temp[0] - 10), int(temp[1] - 10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n    def detect(self):\n        \"\"\"\n        目标检测\n        \"\"\"\n        while True:\n            ret, frame = self.cap.read()\n            # 如果正确读取帧，ret为True\n            if not ret:\n                print(\"Can't receive frame (stream end?). Exiting ...\")\n                break\n            # frame = cv.flip(frame, 1)\n\n            # FPS计算time.start\n            start_time = time.time()\n\n            # Inference\n            results = self.model(frame)\n            pd = results.pandas().xyxy[0]  # tensor-->pandas的DataFrame\n            # 取出对应标签的list\n            person_list = pd[pd['name'] == 'person'].to_numpy()\n            bus_list = pd[pd['name'] == 'bus'].to_numpy()\n            # 框出物体\n            self.draw(person_list, frame)\n            self.draw(bus_list, frame)\n            # end_time\n            end_time = time.time()\n            fps = 1 / (end_time - start_time)\n\n            # 控制台显示\n            # results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n            # print(results.xyxy[0])  # img1 predictions (tensor)\n            # print('----------------')\n            # print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n\n            # FPS显示\n            cv.putText(frame, 'FPS:' + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n            cv.imshow('results', frame)\n            cv.waitKey(10)\n            if cv.waitKey(10) & 0xFF == ord('q'):\n                break\n\n        self.cap.release()\n        cv.destroyAllWindows()\n\n\nurl = 'rtsp://admin:admin@192.168.43.229:8554/live'\ntest = MultipleTarget(url)\ntest.detect()\n\n```\n# 存在问题\n在不进行目标检测的时候，读到的视频流很流畅，进行目标检测后就非常卡几乎不能用。\n经过几天的学习和查找，感觉这个问题出在这里：\n***CPU和内存在读视频流和处理视频的时候爆了***\n我在运行程序的时候看了任务管理器果然如此\n然后我就根据[网上的说法](https://blog.csdn.net/qq_44717317/article/details/116052377)使用多进程来解决这个问题，**但是结果还是一个样**\n我现在在怀疑是不是我的电脑配置不够（ps：我的电脑配置确实垃圾）\n\n**************************\n**有搞了几天没有丝毫进展！！！！！！！！！**\n躺了，试了很多方法还是卡的一批，延迟还贼高，无奈\n![](https://img0.baidu.com/it/u=197787017,108575186&fm=253&app=120&size=w931&n=0&f=JPEG&fmt=auto?sec=1656435600&t=bbf109097a3d9bb5c2853fb92e98db43)","source":"_posts/IP摄像头rstp流/OpenCV+YOLO+IP摄像头实现目标检测.md","raw":"---\ntitle: OpenCV+YOLO+IP摄像头实现目标检测\n---\n# 前言\n<!--more-->\n学习OpenCV、YOLO到现在我实现了调用本地摄像头使用自己训练的模型进行目标识别，然后想着能不能远程获取视频数据，然后再PC端处理，最后将结果返回给视频流端。然后发现旧手机下载IP摄像头之后可以当做一个远程摄像头使用，并且它还支持rstp网络视频流协议（海康、大华的摄像头也是用这个协议，还可以兼容未来硬件的升级）\n\n# 代码\n```\nimport time\nimport torch\nimport cv2 as cv\n\n\nclass MultipleTarget:\n\n    def __init__(self, url):\n        \"\"\"\n        初始化\n        \"\"\"\n        # 加载训练模型\n        self.model = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n        # 设置阈值\n        self.model.conf = 0.52  # confidence threshold (0-1)\n        self.model.iou = 0.45  # NMS IoU threshold (0-1)\n        # 加载摄像头\n        self.url = url\n        self.cap = cv.VideoCapture(self.url)\n        self.cap.set(cv.CAP_PROP_FOURCC, cv.VideoWriter_fourcc('M', 'J', 'P', 'G'))\n        if not self.cap.isOpened():\n            print(\"Cannot open camera\")\n            exit()\n\n    def draw(self, list_temp, image_temp):\n        for temp in list_temp:\n            name = temp[6]  # 取出标签名\n            temp = temp[:4].astype('int')  # 转成int加快计算\n            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体\n            cv.putText(image_temp, name, (int(temp[0] - 10), int(temp[1] - 10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n    def detect(self):\n        \"\"\"\n        目标检测\n        \"\"\"\n        while True:\n            ret, frame = self.cap.read()\n            # 如果正确读取帧，ret为True\n            if not ret:\n                print(\"Can't receive frame (stream end?). Exiting ...\")\n                break\n            # frame = cv.flip(frame, 1)\n\n            # FPS计算time.start\n            start_time = time.time()\n\n            # Inference\n            results = self.model(frame)\n            pd = results.pandas().xyxy[0]  # tensor-->pandas的DataFrame\n            # 取出对应标签的list\n            person_list = pd[pd['name'] == 'person'].to_numpy()\n            bus_list = pd[pd['name'] == 'bus'].to_numpy()\n            # 框出物体\n            self.draw(person_list, frame)\n            self.draw(bus_list, frame)\n            # end_time\n            end_time = time.time()\n            fps = 1 / (end_time - start_time)\n\n            # 控制台显示\n            # results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n            # print(results.xyxy[0])  # img1 predictions (tensor)\n            # print('----------------')\n            # print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n\n            # FPS显示\n            cv.putText(frame, 'FPS:' + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n            cv.imshow('results', frame)\n            cv.waitKey(10)\n            if cv.waitKey(10) & 0xFF == ord('q'):\n                break\n\n        self.cap.release()\n        cv.destroyAllWindows()\n\n\nurl = 'rtsp://admin:admin@192.168.43.229:8554/live'\ntest = MultipleTarget(url)\ntest.detect()\n\n```\n# 存在问题\n在不进行目标检测的时候，读到的视频流很流畅，进行目标检测后就非常卡几乎不能用。\n经过几天的学习和查找，感觉这个问题出在这里：\n***CPU和内存在读视频流和处理视频的时候爆了***\n我在运行程序的时候看了任务管理器果然如此\n然后我就根据[网上的说法](https://blog.csdn.net/qq_44717317/article/details/116052377)使用多进程来解决这个问题，**但是结果还是一个样**\n我现在在怀疑是不是我的电脑配置不够（ps：我的电脑配置确实垃圾）\n\n**************************\n**有搞了几天没有丝毫进展！！！！！！！！！**\n躺了，试了很多方法还是卡的一批，延迟还贼高，无奈\n![](https://img0.baidu.com/it/u=197787017,108575186&fm=253&app=120&size=w931&n=0&f=JPEG&fmt=auto?sec=1656435600&t=bbf109097a3d9bb5c2853fb92e98db43)","slug":"IP摄像头rstp流/OpenCV+YOLO+IP摄像头实现目标检测","published":1,"date":"2022-06-27T09:49:58.485Z","updated":"2022-06-27T10:16:53.422Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeo4000568ur8zmv0od4","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><span id=\"more\"></span>\n<p>学习OpenCV、YOLO到现在我实现了调用本地摄像头使用自己训练的模型进行目标识别，然后想着能不能远程获取视频数据，然后再PC端处理，最后将结果返回给视频流端。然后发现旧手机下载IP摄像头之后可以当做一个远程摄像头使用，并且它还支持rstp网络视频流协议（海康、大华的摄像头也是用这个协议，还可以兼容未来硬件的升级）</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MultipleTarget:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, url):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        初始化</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 加载训练模型</span><br><span class=\"line\">        self.model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\">        # 设置阈值</span><br><span class=\"line\">        self.model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">        self.model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\">        # 加载摄像头</span><br><span class=\"line\">        self.url = url</span><br><span class=\"line\">        self.cap = cv.VideoCapture(self.url)</span><br><span class=\"line\">        self.cap.set(cv.CAP_PROP_FOURCC, cv.VideoWriter_fourcc(&#x27;M&#x27;, &#x27;J&#x27;, &#x27;P&#x27;, &#x27;G&#x27;))</span><br><span class=\"line\">        if not self.cap.isOpened():</span><br><span class=\"line\">            print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    def draw(self, list_temp, image_temp):</span><br><span class=\"line\">        for temp in list_temp:</span><br><span class=\"line\">            name = temp[6]  # 取出标签名</span><br><span class=\"line\">            temp = temp[:4].astype(&#x27;int&#x27;)  # 转成int加快计算</span><br><span class=\"line\">            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.putText(image_temp, name, (int(temp[0] - 10), int(temp[1] - 10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    def detect(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        目标检测</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            ret, frame = self.cap.read()</span><br><span class=\"line\">            # 如果正确读取帧，ret为True</span><br><span class=\"line\">            if not ret:</span><br><span class=\"line\">                print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">            # frame = cv.flip(frame, 1)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS计算time.start</span><br><span class=\"line\">            start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">            # Inference</span><br><span class=\"line\">            results = self.model(frame)</span><br><span class=\"line\">            pd = results.pandas().xyxy[0]  # tensor--&gt;pandas的DataFrame</span><br><span class=\"line\">            # 取出对应标签的list</span><br><span class=\"line\">            person_list = pd[pd[&#x27;name&#x27;] == &#x27;person&#x27;].to_numpy()</span><br><span class=\"line\">            bus_list = pd[pd[&#x27;name&#x27;] == &#x27;bus&#x27;].to_numpy()</span><br><span class=\"line\">            # 框出物体</span><br><span class=\"line\">            self.draw(person_list, frame)</span><br><span class=\"line\">            self.draw(bus_list, frame)</span><br><span class=\"line\">            # end_time</span><br><span class=\"line\">            end_time = time.time()</span><br><span class=\"line\">            fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">            # 控制台显示</span><br><span class=\"line\">            # results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">            # print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">            # print(&#x27;----------------&#x27;)</span><br><span class=\"line\">            # print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS显示</span><br><span class=\"line\">            cv.putText(frame, &#x27;FPS:&#x27; + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">            cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\">            cv.waitKey(10)</span><br><span class=\"line\">            if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">        self.cap.release()</span><br><span class=\"line\">        cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &#x27;rtsp://admin:admin@192.168.43.229:8554/live&#x27;</span><br><span class=\"line\">test = MultipleTarget(url)</span><br><span class=\"line\">test.detect()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h1><p>在不进行目标检测的时候，读到的视频流很流畅，进行目标检测后就非常卡几乎不能用。<br>经过几天的学习和查找，感觉这个问题出在这里：<br><em><strong>CPU和内存在读视频流和处理视频的时候爆了</strong></em><br>我在运行程序的时候看了任务管理器果然如此<br>然后我就根据<a href=\"https://blog.csdn.net/qq_44717317/article/details/116052377\">网上的说法</a>使用多进程来解决这个问题，<strong>但是结果还是一个样</strong><br>我现在在怀疑是不是我的电脑配置不够（ps：我的电脑配置确实垃圾）</p>\n<hr>\n<p><strong>有搞了几天没有丝毫进展！！！！！！！！！</strong><br>躺了，试了很多方法还是卡的一批，延迟还贼高，无奈<br><img src=\"https://img0.baidu.com/it/u=197787017,108575186&fm=253&app=120&size=w931&n=0&f=JPEG&fmt=auto?sec=1656435600&t=bbf109097a3d9bb5c2853fb92e98db43\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1>","more":"<p>学习OpenCV、YOLO到现在我实现了调用本地摄像头使用自己训练的模型进行目标识别，然后想着能不能远程获取视频数据，然后再PC端处理，最后将结果返回给视频流端。然后发现旧手机下载IP摄像头之后可以当做一个远程摄像头使用，并且它还支持rstp网络视频流协议（海康、大华的摄像头也是用这个协议，还可以兼容未来硬件的升级）</p>\n<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MultipleTarget:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self, url):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        初始化</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 加载训练模型</span><br><span class=\"line\">        self.model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\">        # 设置阈值</span><br><span class=\"line\">        self.model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">        self.model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\">        # 加载摄像头</span><br><span class=\"line\">        self.url = url</span><br><span class=\"line\">        self.cap = cv.VideoCapture(self.url)</span><br><span class=\"line\">        self.cap.set(cv.CAP_PROP_FOURCC, cv.VideoWriter_fourcc(&#x27;M&#x27;, &#x27;J&#x27;, &#x27;P&#x27;, &#x27;G&#x27;))</span><br><span class=\"line\">        if not self.cap.isOpened():</span><br><span class=\"line\">            print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    def draw(self, list_temp, image_temp):</span><br><span class=\"line\">        for temp in list_temp:</span><br><span class=\"line\">            name = temp[6]  # 取出标签名</span><br><span class=\"line\">            temp = temp[:4].astype(&#x27;int&#x27;)  # 转成int加快计算</span><br><span class=\"line\">            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.putText(image_temp, name, (int(temp[0] - 10), int(temp[1] - 10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    def detect(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        目标检测</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            ret, frame = self.cap.read()</span><br><span class=\"line\">            # 如果正确读取帧，ret为True</span><br><span class=\"line\">            if not ret:</span><br><span class=\"line\">                print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">            # frame = cv.flip(frame, 1)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS计算time.start</span><br><span class=\"line\">            start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">            # Inference</span><br><span class=\"line\">            results = self.model(frame)</span><br><span class=\"line\">            pd = results.pandas().xyxy[0]  # tensor--&gt;pandas的DataFrame</span><br><span class=\"line\">            # 取出对应标签的list</span><br><span class=\"line\">            person_list = pd[pd[&#x27;name&#x27;] == &#x27;person&#x27;].to_numpy()</span><br><span class=\"line\">            bus_list = pd[pd[&#x27;name&#x27;] == &#x27;bus&#x27;].to_numpy()</span><br><span class=\"line\">            # 框出物体</span><br><span class=\"line\">            self.draw(person_list, frame)</span><br><span class=\"line\">            self.draw(bus_list, frame)</span><br><span class=\"line\">            # end_time</span><br><span class=\"line\">            end_time = time.time()</span><br><span class=\"line\">            fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">            # 控制台显示</span><br><span class=\"line\">            # results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">            # print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">            # print(&#x27;----------------&#x27;)</span><br><span class=\"line\">            # print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS显示</span><br><span class=\"line\">            cv.putText(frame, &#x27;FPS:&#x27; + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">            cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\">            cv.waitKey(10)</span><br><span class=\"line\">            if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">        self.cap.release()</span><br><span class=\"line\">        cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = &#x27;rtsp://admin:admin@192.168.43.229:8554/live&#x27;</span><br><span class=\"line\">test = MultipleTarget(url)</span><br><span class=\"line\">test.detect()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h1><p>在不进行目标检测的时候，读到的视频流很流畅，进行目标检测后就非常卡几乎不能用。<br>经过几天的学习和查找，感觉这个问题出在这里：<br><em><strong>CPU和内存在读视频流和处理视频的时候爆了</strong></em><br>我在运行程序的时候看了任务管理器果然如此<br>然后我就根据<a href=\"https://blog.csdn.net/qq_44717317/article/details/116052377\">网上的说法</a>使用多进程来解决这个问题，<strong>但是结果还是一个样</strong><br>我现在在怀疑是不是我的电脑配置不够（ps：我的电脑配置确实垃圾）</p>\n<hr>\n<p><strong>有搞了几天没有丝毫进展！！！！！！！！！</strong><br>躺了，试了很多方法还是卡的一批，延迟还贼高，无奈<br><img src=\"https://img0.baidu.com/it/u=197787017,108575186&fm=253&app=120&size=w931&n=0&f=JPEG&fmt=auto?sec=1656435600&t=bbf109097a3d9bb5c2853fb92e98db43\"></p>"},{"title":"基于MQTT实现ESP32远程控制","_content":"# 前言\n<!--more-->\n最近在解决ESP32CAM推流后用YOLO处理视频后，视频特别卡的问题。我尝试使用IP摄像头获取现实场景使用rstp协议进行视频推流，但是还是很卡。网上说在YOLO处理的时候使用多进程，我也尝试了还是很卡。于是我在想是不是服务器的原因，我现在推流的服务器都是在本地，经过网上查询资料最终使用MQTT作为服务器。随后对之前做的ESP32桌面天气项目进行了一个改写，使用MQTT来进行天气显示的控制。\n大致的通讯如下：\n![ESP32+MQTT通讯示意图](https://assets.emqx.com/images/d6265585d6257fc02c722fe45888bdac.png?imageMogr2/thumbnail/1520x)\n# 相关环境\n## 硬件\nEPS32、面包板、I2C协议的0.96寸屏幕、若干杜邦线\n接线看[这篇博客](https://yu-728.github.io/2022/05/25/esp32-weather/esp32_weather/#more)\n## 软件\nVSCODE、PlatformIO、EMQX、MQTTX、串口助手\nLib: 使用PlatformIO中下载\nEMQX和MQTTX怎么下载和使用看[官方教程](https://www.emqx.com/zh/blog/esp32-connects-to-the-free-public-mqtt-broker)\n## main代码实现：\n```\n#include <Arduino.h>\n#include \"WiFi.h\"\n#include \"ArduinoJson.h\"\n#include \"HTTPClient.h\"\n#include <U8g2lib.h>\n#include \"weatherpicture.h\"\n#include <PubSubClient.h>\n#ifdef U8X8_HAVE_HW_SPI\n#include <SPI.h>\n#endif\n#ifdef U8X8_HAVE_HW_I2C\n\n#include <Wire.h>\n#endif\n\n//标志位\nint Flag = 0;\n\n//OLED硬件初始化\nU8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display\n\n// ------------------------WIFI连接信息---------------------------------//\nconst char* ssid = \"HONOR V20\"; //wifi nane\nconst char* password = \"yubaolin\"; // wifi password\n\n//-------------------------MQTT Broker----------------------------------//\nconst char *mqtt_broker = \"broker.emqx.io\";\nconst char *topic = \"esp32/test\";\nconst char *mqtt_username = \"emqx\";\nconst char *mqtt_password = \"public\";\nconst int mqtt_port = 1883;\n\n//-------------------------网络时间获取----------------------------------//\nconst char *ntpServer = \"pool.ntp.org\"; //网络时间服务器\nconst long gmtOffset_sec = 8 * 3600; //时区设置函数，东八区（UTC/GMT+8:00）写成8*3600   \nconst int daylightOffset_sec = 0;   //夏令时填写3600，否则填0\n\n//==========================变量声明====================================//\nextern int Flag;\n\n//==========================函数声明====================================//\nvoid WiFi_Connect();\nvoid ParserJson();\nvoid OLEDDisplay(String cityName, String weather, String temperature, int code_int);\nvoid printLocalTime();\nvoid ConnectMQTT();\nvoid PublishAndSubscribe();\nvoid callback(char *topic, byte *payload, unsigned int length);\n\n//=============================MQTT====================================//\nWiFiClient espClient;\nPubSubClient client(espClient);\n\n\n//WiFi connect function\nvoid WiFi_Connect(){\n\n    WiFi.begin(ssid, password);\n                    //Connection state judgment\n    while(WiFi.status() != WL_CONNECTED){  \n        delay(1000);\n        Serial.println(\"Connecting to WiFi...\");\n\n        /**********屏幕显示wifi连接状态*************/\n        u8g2.clearBuffer();\n        u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n        u8g2.setCursor(0,16);\n        u8g2.print(\"wifi连接中\");\n        u8g2.sendBuffer();\n    }\n\n    Serial.println(\"Connected to the WiFi network\");\n    u8g2.clearBuffer();\n    u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n    u8g2.setCursor(0,16);\n    u8g2.print(\"wifi成功\");\n    u8g2.sendBuffer();\n}\n\n// PubSubClient 连接到公共 MQTT Broker\nvoid ConnectMQTT(){\n\n  client.setServer(mqtt_broker, mqtt_port);\n  client.setCallback(callback);\n  while (!client.connected()) {\n      String client_id = \"esp32-client-\";\n      client_id += String(WiFi.macAddress());\n      Serial.printf(\"The client %s connects to the public mqtt broker\\n\", client_id.c_str());\n      if (client.connect(client_id.c_str(), mqtt_username, mqtt_password)) {\n          Serial.println(\"Public emqx mqtt broker connected\");\n      } else {\n          Serial.print(\"failed with state \");\n          Serial.print(client.state());\n          delay(2000);\n      }\n  }\n\n  PublishAndSubscribe();\n\n}\n\n// publish and subscribe\nvoid PublishAndSubscribe(){\n  client.publish(topic, \"Hi EMQX I'm ESP32 ^^\");\n  client.subscribe(topic);\n\n}\n\n//callback\nvoid callback(char *topic, byte *payload, unsigned int length) {\n    Serial.print(\"Message arrived in topic: \");\n    Serial.println(topic);\n    Serial.print(\"Message:\");\n    String message;\n    for (int i = 0; i < length; i++) {\n        message = message + (char) payload[i];  // convert *byte to string\n    }\n    Serial.print(message);\n    if (message == \"on\") {\n      Flag = 1;\n    }\n    if (message == \"off\") {\n      Flag = 0;\n    }\n    Serial.println();\n    Serial.println(\"-----------------------\");\n}\n\n//获取Json报文并解析\nvoid ParserJson(){\n\n  HTTPClient http;\n  //                                                            你的私钥                      查询地址       语言   温度单位\n  http.begin(\"https://api.seniverse.com/v3/weather/now.json?key=SvbJTBaB9LvBrsItI&location=liuzhou&language=zh-Hans&unit=c\");//Specify the URL\n  int httpCode = http.GET();            // Make the request\n  if (httpCode > 0) { // Check for the returning code\n\n    String payload = http.getString();\n    Serial.println(httpCode);\n    Serial.println(payload);\n\n    StaticJsonDocument<1024> doc; \n\n    DeserializationError error = deserializeJson(doc, payload);\n\n    if (error) {\n      Serial.println(\"JSON parsing failed!\");\n    } else {\n\n      JsonObject obj1 = doc[\"results\"][0];  //new 一个对象存储访问result信息\n      String cityName = obj1[\"location\"][\"name\"].as<String>();\n      String weather = obj1[\"now\"][\"text\"].as<String>();\n      String code = obj1[\"now\"][\"code\"].as<String>();\n      String temperature = obj1[\"now\"][\"temperature\"].as<String>();\n      int code_int = obj1[\"now\"][\"code\"].as<int>();\n      OLEDDisplay(cityName, weather, temperature, code_int);  //屏幕显示报文信息\n      //int code_int = obj1[\"now\"][\"code\"].as<int>();\n      Serial.println(cityName);\n      Serial.println(code);\n      //Serial.println(weather);\n      Serial.println(temperature);\n\n    }\n  }else {\n    Serial.println(\"Error on HTTP request\");\n  }\n  http.end(); //Free the resources\n}\n\n//屏幕绘制信息\nvoid OLEDDisplay(String cityName, String weather, String temperature, int code_int){\n\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n  u8g2.setFontDirection(0);\n  u8g2.clearBuffer();\n  //u8g2.drawXBMP(3, 3, 35, 32, cloudy); u8g2.setCursor(43 , 16 ); u8g2.println(\"多\"); u8g2.setCursor(43 , 30 ); u8g2.println(\"云\");\n  u8g2.setCursor(65, 10);\n  u8g2.print(\"城市: \");\n  u8g2.print(cityName);\n  u8g2.setCursor(65, 25);\n  u8g2.print(\"天气: \");\n  u8g2.print(weather);\n  u8g2.setCursor(65, 40);\n  u8g2.print(\"温度: \");\n  u8g2.print(temperature);\n  u8g2.print(\"℃\");\n\n  //==========================天气图标显示=========================//\n  \n  //u8g2.drawXBMP(10, 3, sunny_x, sunny_y, sunny);\n  switch (code_int){\n    case 0:\n      u8g2.drawXBMP(3, 3, sunny_x, sunny_y, sunny);\n      break;\n    case 1:\n      u8g2.drawXBMP(3, 3, clear_x, clear_y, clear);\n      break;\n    case 2:\n      //\n      break;\n    case 3:\n      //\n      break;\n    case 4:\n      u8g2.drawXBMP(3, 3, cloudy_x, cloudy_y, cloudy);\n      break;\n    case 5:\n      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);\n      break;\n    case 6:\n      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);\n      break;\n    case 7:\n      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);\n      break;\n    case 8:\n      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);\n      break;\n    case 9:\n      u8g2.drawXBMP(3, 3, Overcast_x, Overcast_y, Overcast);\n      break;\n    case 10:\n      u8g2.drawXBMP(3, 3, Shower_x, Shower_y, Shower);\n      break;\n    case 11:\n      u8g2.drawXBMP(3, 3, Thundershower_x, Thundershower_y, Thundershower);\n      break;\n    case 12:\n      u8g2.drawXBMP(3, 3, ThundershowerWithHail_x, ThundershowerWithHail_y, ThundershowerWithHail);\n      break;\n    case 13:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 14:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 15:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 16:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 17:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 18:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 19:\n      u8g2.drawXBMP(3, 3, IceRain_x, IceRain_y, IceRain);\n      break;\n    case 20:\n      u8g2.drawXBMP(3, 3, Sleet_x, Sleet_y, Sleet);\n      break;\n    case 21:\n      u8g2.drawXBMP(3, 3, SnowFlurry_x, SnowFlurry_y, SnowFlurry);\n      break;\n    case 22:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 23:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 24:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 25:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 26:\n      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);\n      break;\n    case 27:\n      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);\n      break;\n    case 28:\n      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);\n      break;\n    case 29:\n      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);\n      break;\n    case 30:\n      u8g2.drawXBMP(3, 3, Foggy_x, Foggy_y, Foggy);\n      break;\n    case 31:\n      u8g2.drawXBMP(3, 3, Haze_x, Haze_y, Haze);\n      break;\n    case 32:\n      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);\n      break;\n    case 33:\n      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);\n      break;\n    case 34:\n      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);\n      break;\n    case 35:\n      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);\n      break;\n    case 36:\n      u8g2.drawXBMP(3, 3, Tornado_x, Tornado_y, Tornado);\n      break;\n    case 37:\n      u8g2.drawXBMP(3, 3, Cold_x, Cold_y, Cold);\n      break;\n    case 38:\n      u8g2.drawXBMP(3, 3, Hot_x, Hot_y, Hot);\n      break;\n    case 99:\n      u8g2.drawXBMP(3, 3, Unknown_x, Unknown_y, Unknown);\n      break;\n  \n  break;\n  }\n\n  //--------------------------时间显示--------------------------//\n  printLocalTime();\n\n  u8g2.sendBuffer();\n  //delay(1000);\n}\n\n//时间获取\nvoid printLocalTime(){\n\n  //delay(500);\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo))\n  {\n      Serial.println(\"Failed to obtain time\");\n      u8g2.setCursor(0,60);\n      u8g2.print(\"未获取到时间请重置\");\n      return;\n  }\n  Serial.println(&timeinfo, \"%F %T %A\"); // 格式化输出,串口显示\n  //屏幕显示时间\n  //u8g2.clearBuffer();\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n  u8g2.setCursor(30, 64);\n  u8g2.print(&timeinfo, \"%F\");  //日期\n  u8g2.setCursor(65, 52);\n  u8g2.print(&timeinfo, \"%A\");  //星期\n  u8g2.setCursor(95, 64); \n  u8g2.print(&timeinfo, \"%R\"); //小时-分钟\n  // u8g2.setCursor(80, 64); \n  // u8g2.print(&timeinfo, \"%T\"); //小时-分钟-秒 \n\n}\n\n//初始化\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n  delay(1000);\n  u8g2.begin();\n  // 画笔\n  u8g2.enableUTF8Print();\n  // wifi\n  WiFi_Connect();\n  //从网络时间服务器上获取并设置时间\n  // 获取成功后芯片会使用RTC时钟保持时间的更新\n  //            时区           时令             网络服务器\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  // MQTT\n  ConnectMQTT();\n  \n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  client.loop();\n  if(Flag == 1){\n    ParserJson();\n    delay(3000);\n  }\n  if(Flag == 0){\n    u8g2.clearBuffer();\n    u8g2.sendBuffer();\n  }\n}\n\n\n\n```\n\n## 头文件\n```\n/**\n * 说明：这个头文件存放天气图标的字模\n * \n */ \n\n#ifndef weatherpicture_H\n#define weatherpicture_H\n\n#endif\n\n#define sunny_x 51\n#define sunny_y 51\n// 晴 0\nstatic const unsigned char sunny[] = {\n0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,\n0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xFC,0xFF,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\0@1x.bmp\",0\n(51 X 51 )*/\n};\n\n#define clear_x 51 \n#define clear_y 52\n// 夜晚 1\nstatic const unsigned char clear[]{\n0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0xFE,0x0F,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x80,0xFF,0x0F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x07,0x00,0x00,0x00,0x00,0xE0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,\n0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,\n0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,\n0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,\n0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xFF,0xFF,0xFF,\n0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0x07,0xFF,0xFF,0xFF,0xFF,0x03,0xF0,0x07,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\1@1x.bmp\",0\n (51 X 52 )*/\n};\n\n#define cloudy_x 60\n#define cloudy_y 47\n// 多云 4\nstatic const unsigned char cloudy[] = {\n0x00,0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x7F,0x00,0x00,\n0x00,0x00,0xF8,0xF8,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x03,0x00,\n0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,\n0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFC,0x1F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFC,0x3F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,\n0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0x01,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0x00,0xFE,0x3F,0x00,0xF8,0xFF,0xFF,0x7F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\4@1x.bmp\",0\n(60 X 47 )*/\n};\n\n#define PartlyCloudy_x 60\n#define PartlyCloudy_y 44\n// 晴间多云 5、7\nstatic const unsigned char PartlyCloudy[] = {\n0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,\n0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xE0,0xCF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\5@1x.bmp\",0\n (60 X 44 )*/\n};\n\n#define MostlyCloudy_x 60\n#define MostlyCloudy_y 51\n// 阴间多云 6、8\nstatic const unsigned char MostlyCloudy[] = {\n0x00,0x00,0x00,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,\n0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x03,0x00,0x00,\n0x00,0x00,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0x00,0x0E,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xE7,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\6@1x.bmp\",0\n(60 X 51 )*/\n};\n\n#define Overcast_x 60\n#define Overcast_y 40\n//  阴 9\nstatic const unsigned char Overcast[] = {\n0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x7F,0x00,0x00,\n0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x80,0x3F,0xFE,0xFF,0xFF,0x01,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\9@1x.bmp\",0\n(60 X 40 )*/\n};\n\n#define Shower_x 60\n#define Shower_y 59\n// 阵雨 10\nstatic const unsigned char Shower[] = {\n0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,\n0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x03,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0x8F,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x3C,0x00,0x1E,0x00,0x00,0x00,0x78,0x00,0x3E,0x00,0x1F,0x00,0x00,\n0x00,0x7C,0x00,0x3E,0x00,0x1F,0x00,0x00,0x00,0x7C,0x00,0x3E,0x80,0x1F,0x00,0x00,0x00,0x7E,0x00,0x1F,0x80,0x0F,0x00,0x00,0x00,0x3E,0x00,0x1F,0x80,0x0F,0x00,0x00,\n0x00,0x3F,0x80,0x1F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xE0,0x07,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,\n0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x01,0x00,0x00,0x80,0x07,0xC0,0x03,0xE0,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\10@1x.bmp\",0\n(60 X 59 )*/\n};\n\n#define Thundershower_x 56\n#define Thundershower_y 56\n// 雷阵雨 11\nstatic const unsigned char Thundershower[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x08,0xC0,0xFF,0x00,0x18,0x00,0x00,0x3C,0xC0,0x7F,0x00,0x3C,0x00,0x00,\n0x3E,0xE0,0x7F,0x00,0x3C,0x00,0x00,0x3E,0xE0,0x3F,0x00,0x3E,0x00,0x00,0x1F,0xE0,0xFF,0x01,0x3E,0x00,0x00,0x1F,0xF0,0xFF,0x00,0x1F,0x00,0x00,0x1F,0xF0,0x7F,0x00,\n0x1F,0x00,0x80,0x0F,0xF8,0x3F,0x00,0x1F,0x00,0x80,0x0F,0x80,0x1F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x0F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x07,0xC0,0x07,0x00,0xC0,0x07,\n0xC0,0x03,0xC0,0x07,0x00,0xC0,0x03,0xE0,0x01,0x80,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,\n0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\11@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define ThundershowerWithHail_x 56\n#define ThundershowerWithHail_y 56\n// 雷阵雨伴有冰雹 12\nstatic const unsigned char ThundershowerWithHail[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x80,\n0x03,0xE0,0x7F,0x00,0x0E,0x00,0xE0,0x07,0xE0,0x3F,0x00,0x3F,0x00,0xE0,0x0F,0xE0,0xFF,0x81,0x3F,0x00,0xF0,0x0F,0xF0,0xFF,0x80,0x7F,0x00,0xF0,0x0F,0xF0,0x7F,0x80,\n0x7F,0x00,0xF0,0x0F,0xF8,0x3F,0x80,0x3F,0x00,0xE0,0x07,0x80,0x1F,0x00,0x3F,0x00,0xC0,0x03,0xC0,0x0F,0x00,0x1E,0x00,0x00,0x00,0xC0,0x07,0x00,0x00,0x00,0x00,0x00,\n0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,\n0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\12@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Rain_x 56\n#define Rain_y 54\n// 小雨、中雨、大于、暴雨、大暴雨、特大暴雨 13、14、15、16、17、18\nstatic const unsigned char Rain[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x18,0x00,0x06,0x00,0x03,0x00,0x00,0x1C,0x00,0x0E,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x80,0x0F,0xC0,\n0x03,0x00,0x00,0x0F,0x80,0x07,0xC0,0x03,0x00,0x00,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x80,0x0F,0xC0,0x03,0xE0,0x01,0x00,0x80,0x07,0xC0,0x03,0xF0,0x01,0x00,0xC0,0x07,\n0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0x70,0x00,0x00,0xC0,0x01,0xE0,0x00,0x70,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\13@1x.bmp\",0\n(56 X 54 )*/\n};\n\n#define IceRain_x 56\n#define IceRain_y 57\n// 冻雨 19\nstatic const unsigned char IceRain[] = {\n0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x18,0x00,0x04,0x00,0x00,\n0x70,0x00,0x3C,0x00,0x0E,0x00,0x00,0xF8,0x00,0x7E,0x00,0x1F,0x00,0x00,0xFC,0x01,0xFF,0x80,0x3F,0x00,0x00,0xFE,0x03,0xFF,0xC0,0x7F,0x00,0x00,0xFC,0x01,0x7E,0x80,\n0x3F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x1F,0x00,0x00,0x70,0x00,0x1C,0x00,0x0E,0x00,0x00,0x20,0x10,0x08,0x00,0x04,0x00,0x00,0x00,0x38,0x00,0x18,0x00,0x00,0x00,0x00,\n0x7C,0x00,0x3C,0x00,0x00,0x00,0x00,0xFE,0x00,0x7E,0x00,0x00,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFE,0x00,0xFF,0x00,0x00,0x00,0x00,0x7C,0x00,0x7E,0x00,\n0x00,0x00,0x00,0x38,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\19@1x.bmp\",0\n(56 X 57 )*/\n};\n\n#define Sleet_x 56\n#define Sleet_y 55\n// 雨夹雪 20\nstatic const unsigned char Sleet[] = {\n0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3B,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3F,0x00,0x00,0xF8,0x00,0x3E,0x80,\n0x3F,0x00,0x00,0x78,0x00,0x1E,0xC0,0x7F,0x00,0x00,0x7C,0x00,0x1F,0xE0,0xFF,0x00,0x00,0x3C,0x00,0x0F,0xF0,0xFF,0x01,0x00,0x3C,0x00,0x0F,0xE0,0xFF,0x00,0x00,0x3E,\n0x80,0x0F,0x80,0x3F,0x00,0x00,0x1E,0x80,0x07,0x80,0x3F,0x00,0x00,0x1F,0xC0,0x07,0x80,0x3B,0x00,0x00,0x0F,0xC0,0x03,0x80,0x33,0x00,0x00,0x06,0x80,0x01,0x00,0x00,\n0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\20@1x.bmp\",0\n(56 X 55 )*/\n};\n\n#define SnowFlurry_x 56\n#define SnowFlurry_y 56\n// 阵雪 21\nstatic const unsigned char SnowFlurry[] = {\n0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,\n0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x7F,0x00,\n0xC0,0xE0,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x3D,0xC0,0x3B,\n0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xE0,0x7F,0xE0,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,\n0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,\n0x00,0x00,0x80,0x19,0x80,0x19,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\21@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Snow_x 56\n#define Snow_y 53\n// 小雪、中雪、大雪、暴雪 22、23、24、25\nstatic const unsigned char Snow[] = {\n0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x80,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0x00,0xC6,0x00,0x00,0x00,0x00,0xFF,0x00,0xEE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,\n0x00,0x00,0x00,0x80,0xFF,0x83,0xFF,0x03,0x00,0x00,0xC0,0xFF,0xC3,0xFF,0x07,0x00,0x00,0xC0,0xFF,0x83,0xFF,0x03,0x00,0x00,0x80,0xFF,0x01,0xFF,0x01,0x00,0x00,0x00,\n0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xEE,0x00,0xEE,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\22@1x.bmp\",0\n(56 X 53 )*/\n};\n\n#define Dust_x 53\n#define Dust_y 45\n// 浮尘、扬沙 26、27\nstatic const unsigned char Dust[] = {\n0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0x7C,0xC0,0x07,\n0x7C,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFF,0xE1,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xC0,0x07,0x7C,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xE0,0x0F,0xFC,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,\n0xFF,0xF1,0x1F,0x00,0x7E,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0xFF,0xE0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xE1,0x1F,0x00,0xFE,0xE0,0x0F,\n0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE0,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xF1,0x1F,0x00,0xFE,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\26@1x.bmp\",0\n(53 X 45 )*/\n};\n\n#define Duststorm_x 58\n#define Duststorm_y 34\n// 沙尘暴、强沙尘暴 28、29\nstatic const unsigned char Duststorm[] = {\n0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x38,0x1C,0x0E,0x87,0xFF,0x03,0x00,0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x07,0x00,0x00,0x7C,0x3E,0x9F,0x8F,0xFF,0x07,0x00,\n0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x0F,0x00,0x00,0x38,0x1C,0x0E,0x87,0x87,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,\n0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x0F,0x00,0x8F,0x87,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x8F,0xC7,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x06,0x83,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x78,0x3C,0xFE,0xFF,0xFF,0x3F,0x00,\n0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x00,0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x01,0xF8,0x78,0x3C,0xFE,0xFF,0xFF,0xFF,0x03,0x60,0x30,0x18,0xFC,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x03,\n0x00,0x1C,0x0E,0x87,0xC7,0xE3,0xF3,0x03,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x03,0x00,0x3E,0x9F,0xCF,0xC7,0xE7,0xFF,0x01,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x01,\n0x00,0x1C,0x0E,0x87,0x83,0xC1,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\28@1x.bmp\",0\n(58 X 34 )*/\n};\n\n#define Foggy_x 54\n#define Foggy_y 50\n// 雾 30\nstatic const unsigned char Foggy[] = {\n0x00,0xE0,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFE,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,\n0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,\n0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\30@1x.bmp\",0\n(54 X 50 )*/\n};\n\n#define Haze_x 56\n#define Haze_y 50\n// 霾 31\nstatic const unsigned char Haze[] = {\n0x7C,0x00,0x00,0x3E,0x00,0x00,0x78,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,\n0x00,0x00,0x7C,0x10,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0xC0,0x7F,0x00,0xC0,0xFF,0x0F,0x00,0xF0,\n0xFF,0x01,0xF0,0xFF,0x3F,0x00,0xFC,0xFF,0x07,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xFC,0xFF,0xFF,0x80,0xFF,0xFF,0x1F,0xFC,0x87,0xFF,0x81,0xFF,0xF1,0x3F,0xFE,0x01,\n0xFC,0xC3,0x3F,0x80,0x3F,0x7E,0x00,0xF8,0xE7,0x0F,0x00,0x7F,0x3F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x3F,0x00,0xE0,0xFF,0x03,0x00,0xFE,0x3F,0x00,0xC0,0xFF,0x03,0x00,\n0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x00,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,\n0xFF,0x01,0x00,0xFC,0x3F,0x00,0xC0,0xFF,0x03,0x00,0xFC,0x3F,0x00,0xE0,0xFF,0x07,0x00,0xFE,0x7F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x7E,0x00,0xF8,0xE3,0x1F,0x00,0x7F,\n0xFE,0x01,0xFC,0xC3,0x3F,0xC0,0x3F,0xFC,0x8F,0xFF,0x81,0xFF,0xFB,0x3F,0xF8,0xFF,0xFF,0x00,0xFF,0xFF,0x1F,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xE0,0xFF,0x3F,0x00,\n0xFC,0xFF,0x07,0xC0,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFE,0x01,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3C,0x00,0x00,0x78,0x7C,0x00,0x00,0x3E,0x00,\n0x00,0x7C,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0x7C,0x38,0x00,0x00,0x1C,0x00,0x00,0x38,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\31@1x.bmp\",0\n(56 X 50 )*/\n};\n\n#define Windy_x 56\n#define Windy_y 44\n// 风、大风 32、33\nstatic const unsigned char Windy[] = {\n0x00,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFD,0x01,0x00,0x00,0x00,0x00,0x7C,0xF0,\n0x01,0xFC,0x03,0x00,0x00,0x3C,0xE0,0x03,0xFF,0x0F,0x00,0x00,0x3C,0xC0,0x83,0xFF,0x1F,0x00,0x00,0x00,0xC0,0xC3,0x9F,0x3F,0x00,0x00,0x00,0xC0,0xE3,0x07,0x7E,0x00,\n0x00,0x00,0xE0,0xE3,0x03,0x7C,0x00,0x00,0x00,0xF0,0xF1,0x01,0xF8,0x00,0x00,0x00,0xF8,0xF1,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0xF0,\n0x00,0xF0,0xFF,0xFF,0xFF,0x3F,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0x03,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,\n0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,\n0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,\n0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x07,0x3E,0x00,0x00,0x00,0x00,0x80,0x0F,0x1F,0x00,0x00,0x00,0x00,0x80,0xFF,0x1F,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\32@1x.bmp\",0\n(56 X 44 )*/\n};\n\n#define Hurricane_x 56\n#define Hurricane_y 56\n// 飓风、热带风暴 34、35\nstatic const unsigned char Hurricane[] = {\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,\n0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,\n0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,\n0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,\n0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\34@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Tornado_x 56\n#define Tornado_y 55\n// 龙卷风 36\nstatic const unsigned char Tornado[] = {\n0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0x03,0x00,\n0xC0,0xFF,0x07,0xF8,0x3F,0x00,0x00,0x00,0xFC,0x0F,0xFC,0x07,0x00,0x00,0x00,0xE0,0x1F,0xFE,0x00,0x80,0xFF,0x01,0x80,0x3F,0x7F,0x00,0xFE,0xFF,0x7F,0x00,0x7E,0x1F,\n0xC0,0xFF,0xFF,0xFF,0x03,0x7C,0x0F,0xF0,0xFF,0xFF,0xFF,0x0F,0xF8,0x0F,0xFC,0x3F,0x00,0xFC,0x1F,0xF0,0x0F,0xFE,0x01,0x00,0x80,0x3F,0xF8,0x1F,0x3E,0x00,0x00,0x00,\n0x7E,0x78,0x7F,0x1E,0x00,0x00,0x00,0x78,0x7E,0xFE,0x1F,0x00,0x00,0x00,0xF8,0x3F,0xFC,0x3F,0x00,0x00,0x00,0xFE,0x1F,0xF8,0xFF,0x01,0x00,0xC0,0xFF,0x0F,0xE0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0x20,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0x00,0xFE,0xFF,0x3F,0x00,\n0x07,0xF0,0x03,0x00,0x00,0x00,0xC0,0x0F,0xF0,0x0F,0x00,0x00,0x00,0xF0,0x0F,0xE0,0x7F,0x00,0x00,0x00,0xFE,0x07,0x80,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x80,0x07,0x00,0x00,0xF0,0x07,0x00,0xF0,0x07,0x00,0x00,0xE0,0xFF,0x81,0xFF,0x07,0x00,0x00,0xC0,0xFF,0xFF,\n0xFF,0x03,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFF,0x1F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xC0,0xC7,0x07,\n0x00,0x00,0x00,0x00,0xC0,0xE7,0x07,0x00,0x00,0x00,0x00,0x80,0xEF,0x03,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,\n0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,\n0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\36@1x.bmp\",0\n(56 X 55 )*/\n};\n\n#define Cold_x 51\n#define Cold_y 58\n// 冷 37\nstatic const unsigned char Cold[] = {\n0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,\n0x00,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x8F,0xC7,0x07,0x00,0x00,0x00,0x04,0x9F,0xE7,0x07,0x01,0x00,0x00,\n0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x1E,0xF0,0x3F,0xC0,0x01,0x00,0x03,0x1E,0xE0,0x1F,0xE0,\n0x01,0x03,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x3F,0x1C,0x80,0x07,0xE0,0xF1,0x07,0xFF,0x3C,0x80,0x07,0xE0,0xF8,0x03,0xFC,0x3D,0x80,0x07,0xF0,0xFE,0x01,0xF8,0x3F,\n0x80,0x07,0xF0,0x7F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0x80,0x7F,0x80,0x07,0xF0,0x07,0x00,0x00,0xFF,0x80,0x07,0xFC,0x03,0x00,0xE0,0xFF,0x83,0x07,0xFF,0x3F,\n0x00,0xFC,0xFF,0x8F,0x87,0xFF,0xFF,0x01,0xFF,0xC7,0x9F,0xE7,0x9F,0xFF,0x03,0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,0x00,0x00,0xF8,\n0x7F,0x00,0x00,0x00,0x00,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,\n0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0xFF,0xE7,0x9F,0xE7,0x9F,0xFF,0x03,0xFC,0xFF,0x87,0x87,0xFF,0xFF,0x01,0xE0,0xFF,0x83,0x07,0xFE,0x3F,0x00,0x00,0xFF,0x80,0x07,\n0xFC,0x03,0x00,0x80,0x7F,0x80,0x07,0xF0,0x0F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0xF8,0x3F,0x80,0x07,0xF0,0x7F,0x00,0xFE,0x3D,0x80,0x07,0xF0,0xFE,0x01,0x7F,\n0x3C,0x80,0x07,0xE0,0xF8,0x03,0x3F,0x1C,0x80,0x07,0xE0,0xE1,0x07,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x02,0x1E,0xE0,0x1F,0xE0,0x01,0x03,0x00,0x1E,0xF0,0x3F,0xC0,\n0x01,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x04,0x9F,0xE7,0x87,0x01,0x00,0x00,0x80,\n0x8F,0xC7,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,\n0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\37@1x.bmp\",0\n(51 X 58 )*/\n};\n\n#define Hot_x 51\n#define Hot_y 51\n// 热 38\nstatic const unsigned char Hot[] = {\n0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,\n0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xFC,0xFF,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\38@1x.bmp\",0\n(51 X 51 )*/\n};\n\n#define Unknown_x 53\n#define Unknown_y 23\n// 未知 99\nstatic const unsigned char Unknown[] = {\n0x07,0x80,0x03,0xE0,0x00,0x0E,0x00,0x0F,0x80,0x03,0xE0,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x3F,0x80,0x03,0x78,\n0x80,0x3F,0x00,0x7F,0x80,0x03,0x38,0x80,0x3B,0x00,0x77,0x80,0x03,0x38,0xC0,0x7B,0x00,0xF7,0x80,0x03,0x1C,0xC0,0x71,0x00,0xE7,0x81,0x03,0x1C,0xE0,0x71,0x00,0xC7,\n0x81,0x03,0x1E,0xE0,0xF0,0x00,0xC7,0x83,0x03,0x0E,0xE0,0xE0,0x00,0x87,0x87,0x03,0x0E,0xF0,0xE0,0x01,0x07,0x87,0x03,0x07,0x70,0xC0,0x01,0x07,0x8F,0x03,0x07,0x78,\n0xC0,0x03,0x07,0x9E,0x83,0x03,0xF8,0xFF,0x03,0x07,0xBC,0x83,0x03,0xFC,0xFF,0x03,0x07,0xBC,0xC3,0x03,0xFC,0xFF,0x07,0x07,0xF8,0xC3,0x01,0x1C,0x00,0x07,0x07,0xF0,\n0xC3,0x01,0x1E,0x00,0x0F,0x07,0xF0,0xE3,0x00,0x0E,0x00,0x0E,0x07,0xE0,0xE3,0x00,0x0F,0x00,0x1E,0x07,0xC0,0xF3,0x00,0x07,0x00,0x1E,0x07,0xC0,0x73,0x00,0x07,0x00,\n0x1C,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\99@1x.bmp\",0\n(53 X 23 )*/\n};\n\n```\n\n# 结果\n![1](https://i.niupic.com/images/2022/06/29/a0JC.jpg)\n![2](https://i.niupic.com/images/2022/06/29/a0JE.jpg)\n![3](https://i.niupic.com/images/2022/06/29/a0JD.jpg)\n\n\n**接下来就是将ESP32视频用MQTT进行推流，希望能解决YOLO处理后视频卡顿的问题,真的没钱换电脑**\n![](https://img0.baidu.com/it/u=194229253,3926891282&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto?sec=1656608400&t=c8620de10f8bacb3ad1b1c7950d098f8)\n","source":"_posts/MQTT/基于MQTT实现esp32远程控制.md","raw":"---\ntitle: 基于MQTT实现ESP32远程控制\n---\n# 前言\n<!--more-->\n最近在解决ESP32CAM推流后用YOLO处理视频后，视频特别卡的问题。我尝试使用IP摄像头获取现实场景使用rstp协议进行视频推流，但是还是很卡。网上说在YOLO处理的时候使用多进程，我也尝试了还是很卡。于是我在想是不是服务器的原因，我现在推流的服务器都是在本地，经过网上查询资料最终使用MQTT作为服务器。随后对之前做的ESP32桌面天气项目进行了一个改写，使用MQTT来进行天气显示的控制。\n大致的通讯如下：\n![ESP32+MQTT通讯示意图](https://assets.emqx.com/images/d6265585d6257fc02c722fe45888bdac.png?imageMogr2/thumbnail/1520x)\n# 相关环境\n## 硬件\nEPS32、面包板、I2C协议的0.96寸屏幕、若干杜邦线\n接线看[这篇博客](https://yu-728.github.io/2022/05/25/esp32-weather/esp32_weather/#more)\n## 软件\nVSCODE、PlatformIO、EMQX、MQTTX、串口助手\nLib: 使用PlatformIO中下载\nEMQX和MQTTX怎么下载和使用看[官方教程](https://www.emqx.com/zh/blog/esp32-connects-to-the-free-public-mqtt-broker)\n## main代码实现：\n```\n#include <Arduino.h>\n#include \"WiFi.h\"\n#include \"ArduinoJson.h\"\n#include \"HTTPClient.h\"\n#include <U8g2lib.h>\n#include \"weatherpicture.h\"\n#include <PubSubClient.h>\n#ifdef U8X8_HAVE_HW_SPI\n#include <SPI.h>\n#endif\n#ifdef U8X8_HAVE_HW_I2C\n\n#include <Wire.h>\n#endif\n\n//标志位\nint Flag = 0;\n\n//OLED硬件初始化\nU8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display\n\n// ------------------------WIFI连接信息---------------------------------//\nconst char* ssid = \"HONOR V20\"; //wifi nane\nconst char* password = \"yubaolin\"; // wifi password\n\n//-------------------------MQTT Broker----------------------------------//\nconst char *mqtt_broker = \"broker.emqx.io\";\nconst char *topic = \"esp32/test\";\nconst char *mqtt_username = \"emqx\";\nconst char *mqtt_password = \"public\";\nconst int mqtt_port = 1883;\n\n//-------------------------网络时间获取----------------------------------//\nconst char *ntpServer = \"pool.ntp.org\"; //网络时间服务器\nconst long gmtOffset_sec = 8 * 3600; //时区设置函数，东八区（UTC/GMT+8:00）写成8*3600   \nconst int daylightOffset_sec = 0;   //夏令时填写3600，否则填0\n\n//==========================变量声明====================================//\nextern int Flag;\n\n//==========================函数声明====================================//\nvoid WiFi_Connect();\nvoid ParserJson();\nvoid OLEDDisplay(String cityName, String weather, String temperature, int code_int);\nvoid printLocalTime();\nvoid ConnectMQTT();\nvoid PublishAndSubscribe();\nvoid callback(char *topic, byte *payload, unsigned int length);\n\n//=============================MQTT====================================//\nWiFiClient espClient;\nPubSubClient client(espClient);\n\n\n//WiFi connect function\nvoid WiFi_Connect(){\n\n    WiFi.begin(ssid, password);\n                    //Connection state judgment\n    while(WiFi.status() != WL_CONNECTED){  \n        delay(1000);\n        Serial.println(\"Connecting to WiFi...\");\n\n        /**********屏幕显示wifi连接状态*************/\n        u8g2.clearBuffer();\n        u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n        u8g2.setCursor(0,16);\n        u8g2.print(\"wifi连接中\");\n        u8g2.sendBuffer();\n    }\n\n    Serial.println(\"Connected to the WiFi network\");\n    u8g2.clearBuffer();\n    u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n    u8g2.setCursor(0,16);\n    u8g2.print(\"wifi成功\");\n    u8g2.sendBuffer();\n}\n\n// PubSubClient 连接到公共 MQTT Broker\nvoid ConnectMQTT(){\n\n  client.setServer(mqtt_broker, mqtt_port);\n  client.setCallback(callback);\n  while (!client.connected()) {\n      String client_id = \"esp32-client-\";\n      client_id += String(WiFi.macAddress());\n      Serial.printf(\"The client %s connects to the public mqtt broker\\n\", client_id.c_str());\n      if (client.connect(client_id.c_str(), mqtt_username, mqtt_password)) {\n          Serial.println(\"Public emqx mqtt broker connected\");\n      } else {\n          Serial.print(\"failed with state \");\n          Serial.print(client.state());\n          delay(2000);\n      }\n  }\n\n  PublishAndSubscribe();\n\n}\n\n// publish and subscribe\nvoid PublishAndSubscribe(){\n  client.publish(topic, \"Hi EMQX I'm ESP32 ^^\");\n  client.subscribe(topic);\n\n}\n\n//callback\nvoid callback(char *topic, byte *payload, unsigned int length) {\n    Serial.print(\"Message arrived in topic: \");\n    Serial.println(topic);\n    Serial.print(\"Message:\");\n    String message;\n    for (int i = 0; i < length; i++) {\n        message = message + (char) payload[i];  // convert *byte to string\n    }\n    Serial.print(message);\n    if (message == \"on\") {\n      Flag = 1;\n    }\n    if (message == \"off\") {\n      Flag = 0;\n    }\n    Serial.println();\n    Serial.println(\"-----------------------\");\n}\n\n//获取Json报文并解析\nvoid ParserJson(){\n\n  HTTPClient http;\n  //                                                            你的私钥                      查询地址       语言   温度单位\n  http.begin(\"https://api.seniverse.com/v3/weather/now.json?key=SvbJTBaB9LvBrsItI&location=liuzhou&language=zh-Hans&unit=c\");//Specify the URL\n  int httpCode = http.GET();            // Make the request\n  if (httpCode > 0) { // Check for the returning code\n\n    String payload = http.getString();\n    Serial.println(httpCode);\n    Serial.println(payload);\n\n    StaticJsonDocument<1024> doc; \n\n    DeserializationError error = deserializeJson(doc, payload);\n\n    if (error) {\n      Serial.println(\"JSON parsing failed!\");\n    } else {\n\n      JsonObject obj1 = doc[\"results\"][0];  //new 一个对象存储访问result信息\n      String cityName = obj1[\"location\"][\"name\"].as<String>();\n      String weather = obj1[\"now\"][\"text\"].as<String>();\n      String code = obj1[\"now\"][\"code\"].as<String>();\n      String temperature = obj1[\"now\"][\"temperature\"].as<String>();\n      int code_int = obj1[\"now\"][\"code\"].as<int>();\n      OLEDDisplay(cityName, weather, temperature, code_int);  //屏幕显示报文信息\n      //int code_int = obj1[\"now\"][\"code\"].as<int>();\n      Serial.println(cityName);\n      Serial.println(code);\n      //Serial.println(weather);\n      Serial.println(temperature);\n\n    }\n  }else {\n    Serial.println(\"Error on HTTP request\");\n  }\n  http.end(); //Free the resources\n}\n\n//屏幕绘制信息\nvoid OLEDDisplay(String cityName, String weather, String temperature, int code_int){\n\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n  u8g2.setFontDirection(0);\n  u8g2.clearBuffer();\n  //u8g2.drawXBMP(3, 3, 35, 32, cloudy); u8g2.setCursor(43 , 16 ); u8g2.println(\"多\"); u8g2.setCursor(43 , 30 ); u8g2.println(\"云\");\n  u8g2.setCursor(65, 10);\n  u8g2.print(\"城市: \");\n  u8g2.print(cityName);\n  u8g2.setCursor(65, 25);\n  u8g2.print(\"天气: \");\n  u8g2.print(weather);\n  u8g2.setCursor(65, 40);\n  u8g2.print(\"温度: \");\n  u8g2.print(temperature);\n  u8g2.print(\"℃\");\n\n  //==========================天气图标显示=========================//\n  \n  //u8g2.drawXBMP(10, 3, sunny_x, sunny_y, sunny);\n  switch (code_int){\n    case 0:\n      u8g2.drawXBMP(3, 3, sunny_x, sunny_y, sunny);\n      break;\n    case 1:\n      u8g2.drawXBMP(3, 3, clear_x, clear_y, clear);\n      break;\n    case 2:\n      //\n      break;\n    case 3:\n      //\n      break;\n    case 4:\n      u8g2.drawXBMP(3, 3, cloudy_x, cloudy_y, cloudy);\n      break;\n    case 5:\n      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);\n      break;\n    case 6:\n      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);\n      break;\n    case 7:\n      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);\n      break;\n    case 8:\n      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);\n      break;\n    case 9:\n      u8g2.drawXBMP(3, 3, Overcast_x, Overcast_y, Overcast);\n      break;\n    case 10:\n      u8g2.drawXBMP(3, 3, Shower_x, Shower_y, Shower);\n      break;\n    case 11:\n      u8g2.drawXBMP(3, 3, Thundershower_x, Thundershower_y, Thundershower);\n      break;\n    case 12:\n      u8g2.drawXBMP(3, 3, ThundershowerWithHail_x, ThundershowerWithHail_y, ThundershowerWithHail);\n      break;\n    case 13:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 14:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 15:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 16:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 17:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 18:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 19:\n      u8g2.drawXBMP(3, 3, IceRain_x, IceRain_y, IceRain);\n      break;\n    case 20:\n      u8g2.drawXBMP(3, 3, Sleet_x, Sleet_y, Sleet);\n      break;\n    case 21:\n      u8g2.drawXBMP(3, 3, SnowFlurry_x, SnowFlurry_y, SnowFlurry);\n      break;\n    case 22:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 23:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 24:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 25:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 26:\n      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);\n      break;\n    case 27:\n      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);\n      break;\n    case 28:\n      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);\n      break;\n    case 29:\n      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);\n      break;\n    case 30:\n      u8g2.drawXBMP(3, 3, Foggy_x, Foggy_y, Foggy);\n      break;\n    case 31:\n      u8g2.drawXBMP(3, 3, Haze_x, Haze_y, Haze);\n      break;\n    case 32:\n      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);\n      break;\n    case 33:\n      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);\n      break;\n    case 34:\n      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);\n      break;\n    case 35:\n      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);\n      break;\n    case 36:\n      u8g2.drawXBMP(3, 3, Tornado_x, Tornado_y, Tornado);\n      break;\n    case 37:\n      u8g2.drawXBMP(3, 3, Cold_x, Cold_y, Cold);\n      break;\n    case 38:\n      u8g2.drawXBMP(3, 3, Hot_x, Hot_y, Hot);\n      break;\n    case 99:\n      u8g2.drawXBMP(3, 3, Unknown_x, Unknown_y, Unknown);\n      break;\n  \n  break;\n  }\n\n  //--------------------------时间显示--------------------------//\n  printLocalTime();\n\n  u8g2.sendBuffer();\n  //delay(1000);\n}\n\n//时间获取\nvoid printLocalTime(){\n\n  //delay(500);\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo))\n  {\n      Serial.println(\"Failed to obtain time\");\n      u8g2.setCursor(0,60);\n      u8g2.print(\"未获取到时间请重置\");\n      return;\n  }\n  Serial.println(&timeinfo, \"%F %T %A\"); // 格式化输出,串口显示\n  //屏幕显示时间\n  //u8g2.clearBuffer();\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n  u8g2.setCursor(30, 64);\n  u8g2.print(&timeinfo, \"%F\");  //日期\n  u8g2.setCursor(65, 52);\n  u8g2.print(&timeinfo, \"%A\");  //星期\n  u8g2.setCursor(95, 64); \n  u8g2.print(&timeinfo, \"%R\"); //小时-分钟\n  // u8g2.setCursor(80, 64); \n  // u8g2.print(&timeinfo, \"%T\"); //小时-分钟-秒 \n\n}\n\n//初始化\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n  delay(1000);\n  u8g2.begin();\n  // 画笔\n  u8g2.enableUTF8Print();\n  // wifi\n  WiFi_Connect();\n  //从网络时间服务器上获取并设置时间\n  // 获取成功后芯片会使用RTC时钟保持时间的更新\n  //            时区           时令             网络服务器\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n  // MQTT\n  ConnectMQTT();\n  \n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  client.loop();\n  if(Flag == 1){\n    ParserJson();\n    delay(3000);\n  }\n  if(Flag == 0){\n    u8g2.clearBuffer();\n    u8g2.sendBuffer();\n  }\n}\n\n\n\n```\n\n## 头文件\n```\n/**\n * 说明：这个头文件存放天气图标的字模\n * \n */ \n\n#ifndef weatherpicture_H\n#define weatherpicture_H\n\n#endif\n\n#define sunny_x 51\n#define sunny_y 51\n// 晴 0\nstatic const unsigned char sunny[] = {\n0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,\n0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xFC,0xFF,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\0@1x.bmp\",0\n(51 X 51 )*/\n};\n\n#define clear_x 51 \n#define clear_y 52\n// 夜晚 1\nstatic const unsigned char clear[]{\n0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0xFE,0x0F,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x80,0xFF,0x0F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x07,0x00,0x00,0x00,0x00,0xE0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,\n0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,\n0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,\n0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,\n0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xFF,0xFF,0xFF,\n0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0x07,0xFF,0xFF,0xFF,0xFF,0x03,0xF0,0x07,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\1@1x.bmp\",0\n (51 X 52 )*/\n};\n\n#define cloudy_x 60\n#define cloudy_y 47\n// 多云 4\nstatic const unsigned char cloudy[] = {\n0x00,0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x7F,0x00,0x00,\n0x00,0x00,0xF8,0xF8,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x03,0x00,\n0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,\n0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFC,0x1F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFC,0x3F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,\n0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0x01,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0x00,0xFE,0x3F,0x00,0xF8,0xFF,0xFF,0x7F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\4@1x.bmp\",0\n(60 X 47 )*/\n};\n\n#define PartlyCloudy_x 60\n#define PartlyCloudy_y 44\n// 晴间多云 5、7\nstatic const unsigned char PartlyCloudy[] = {\n0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,\n0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xE0,0xCF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\5@1x.bmp\",0\n (60 X 44 )*/\n};\n\n#define MostlyCloudy_x 60\n#define MostlyCloudy_y 51\n// 阴间多云 6、8\nstatic const unsigned char MostlyCloudy[] = {\n0x00,0x00,0x00,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,\n0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x03,0x00,0x00,\n0x00,0x00,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0x00,0x0E,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xE7,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\6@1x.bmp\",0\n(60 X 51 )*/\n};\n\n#define Overcast_x 60\n#define Overcast_y 40\n//  阴 9\nstatic const unsigned char Overcast[] = {\n0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x7F,0x00,0x00,\n0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x80,0x3F,0xFE,0xFF,0xFF,0x01,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\9@1x.bmp\",0\n(60 X 40 )*/\n};\n\n#define Shower_x 60\n#define Shower_y 59\n// 阵雨 10\nstatic const unsigned char Shower[] = {\n0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,\n0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x03,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0x8F,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x3C,0x00,0x1E,0x00,0x00,0x00,0x78,0x00,0x3E,0x00,0x1F,0x00,0x00,\n0x00,0x7C,0x00,0x3E,0x00,0x1F,0x00,0x00,0x00,0x7C,0x00,0x3E,0x80,0x1F,0x00,0x00,0x00,0x7E,0x00,0x1F,0x80,0x0F,0x00,0x00,0x00,0x3E,0x00,0x1F,0x80,0x0F,0x00,0x00,\n0x00,0x3F,0x80,0x1F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xE0,0x07,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,\n0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x01,0x00,0x00,0x80,0x07,0xC0,0x03,0xE0,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\10@1x.bmp\",0\n(60 X 59 )*/\n};\n\n#define Thundershower_x 56\n#define Thundershower_y 56\n// 雷阵雨 11\nstatic const unsigned char Thundershower[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x08,0xC0,0xFF,0x00,0x18,0x00,0x00,0x3C,0xC0,0x7F,0x00,0x3C,0x00,0x00,\n0x3E,0xE0,0x7F,0x00,0x3C,0x00,0x00,0x3E,0xE0,0x3F,0x00,0x3E,0x00,0x00,0x1F,0xE0,0xFF,0x01,0x3E,0x00,0x00,0x1F,0xF0,0xFF,0x00,0x1F,0x00,0x00,0x1F,0xF0,0x7F,0x00,\n0x1F,0x00,0x80,0x0F,0xF8,0x3F,0x00,0x1F,0x00,0x80,0x0F,0x80,0x1F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x0F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x07,0xC0,0x07,0x00,0xC0,0x07,\n0xC0,0x03,0xC0,0x07,0x00,0xC0,0x03,0xE0,0x01,0x80,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,\n0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\11@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define ThundershowerWithHail_x 56\n#define ThundershowerWithHail_y 56\n// 雷阵雨伴有冰雹 12\nstatic const unsigned char ThundershowerWithHail[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x80,\n0x03,0xE0,0x7F,0x00,0x0E,0x00,0xE0,0x07,0xE0,0x3F,0x00,0x3F,0x00,0xE0,0x0F,0xE0,0xFF,0x81,0x3F,0x00,0xF0,0x0F,0xF0,0xFF,0x80,0x7F,0x00,0xF0,0x0F,0xF0,0x7F,0x80,\n0x7F,0x00,0xF0,0x0F,0xF8,0x3F,0x80,0x3F,0x00,0xE0,0x07,0x80,0x1F,0x00,0x3F,0x00,0xC0,0x03,0xC0,0x0F,0x00,0x1E,0x00,0x00,0x00,0xC0,0x07,0x00,0x00,0x00,0x00,0x00,\n0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,\n0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\12@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Rain_x 56\n#define Rain_y 54\n// 小雨、中雨、大于、暴雨、大暴雨、特大暴雨 13、14、15、16、17、18\nstatic const unsigned char Rain[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x18,0x00,0x06,0x00,0x03,0x00,0x00,0x1C,0x00,0x0E,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x80,0x0F,0xC0,\n0x03,0x00,0x00,0x0F,0x80,0x07,0xC0,0x03,0x00,0x00,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x80,0x0F,0xC0,0x03,0xE0,0x01,0x00,0x80,0x07,0xC0,0x03,0xF0,0x01,0x00,0xC0,0x07,\n0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0x70,0x00,0x00,0xC0,0x01,0xE0,0x00,0x70,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\13@1x.bmp\",0\n(56 X 54 )*/\n};\n\n#define IceRain_x 56\n#define IceRain_y 57\n// 冻雨 19\nstatic const unsigned char IceRain[] = {\n0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x18,0x00,0x04,0x00,0x00,\n0x70,0x00,0x3C,0x00,0x0E,0x00,0x00,0xF8,0x00,0x7E,0x00,0x1F,0x00,0x00,0xFC,0x01,0xFF,0x80,0x3F,0x00,0x00,0xFE,0x03,0xFF,0xC0,0x7F,0x00,0x00,0xFC,0x01,0x7E,0x80,\n0x3F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x1F,0x00,0x00,0x70,0x00,0x1C,0x00,0x0E,0x00,0x00,0x20,0x10,0x08,0x00,0x04,0x00,0x00,0x00,0x38,0x00,0x18,0x00,0x00,0x00,0x00,\n0x7C,0x00,0x3C,0x00,0x00,0x00,0x00,0xFE,0x00,0x7E,0x00,0x00,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFE,0x00,0xFF,0x00,0x00,0x00,0x00,0x7C,0x00,0x7E,0x00,\n0x00,0x00,0x00,0x38,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\19@1x.bmp\",0\n(56 X 57 )*/\n};\n\n#define Sleet_x 56\n#define Sleet_y 55\n// 雨夹雪 20\nstatic const unsigned char Sleet[] = {\n0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3B,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3F,0x00,0x00,0xF8,0x00,0x3E,0x80,\n0x3F,0x00,0x00,0x78,0x00,0x1E,0xC0,0x7F,0x00,0x00,0x7C,0x00,0x1F,0xE0,0xFF,0x00,0x00,0x3C,0x00,0x0F,0xF0,0xFF,0x01,0x00,0x3C,0x00,0x0F,0xE0,0xFF,0x00,0x00,0x3E,\n0x80,0x0F,0x80,0x3F,0x00,0x00,0x1E,0x80,0x07,0x80,0x3F,0x00,0x00,0x1F,0xC0,0x07,0x80,0x3B,0x00,0x00,0x0F,0xC0,0x03,0x80,0x33,0x00,0x00,0x06,0x80,0x01,0x00,0x00,\n0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\20@1x.bmp\",0\n(56 X 55 )*/\n};\n\n#define SnowFlurry_x 56\n#define SnowFlurry_y 56\n// 阵雪 21\nstatic const unsigned char SnowFlurry[] = {\n0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,\n0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x7F,0x00,\n0xC0,0xE0,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x3D,0xC0,0x3B,\n0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xE0,0x7F,0xE0,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,\n0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,\n0x00,0x00,0x80,0x19,0x80,0x19,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\21@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Snow_x 56\n#define Snow_y 53\n// 小雪、中雪、大雪、暴雪 22、23、24、25\nstatic const unsigned char Snow[] = {\n0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x80,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0x00,0xC6,0x00,0x00,0x00,0x00,0xFF,0x00,0xEE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,\n0x00,0x00,0x00,0x80,0xFF,0x83,0xFF,0x03,0x00,0x00,0xC0,0xFF,0xC3,0xFF,0x07,0x00,0x00,0xC0,0xFF,0x83,0xFF,0x03,0x00,0x00,0x80,0xFF,0x01,0xFF,0x01,0x00,0x00,0x00,\n0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xEE,0x00,0xEE,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\22@1x.bmp\",0\n(56 X 53 )*/\n};\n\n#define Dust_x 53\n#define Dust_y 45\n// 浮尘、扬沙 26、27\nstatic const unsigned char Dust[] = {\n0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0x7C,0xC0,0x07,\n0x7C,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFF,0xE1,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xC0,0x07,0x7C,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xE0,0x0F,0xFC,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,\n0xFF,0xF1,0x1F,0x00,0x7E,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0xFF,0xE0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xE1,0x1F,0x00,0xFE,0xE0,0x0F,\n0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE0,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xF1,0x1F,0x00,0xFE,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\26@1x.bmp\",0\n(53 X 45 )*/\n};\n\n#define Duststorm_x 58\n#define Duststorm_y 34\n// 沙尘暴、强沙尘暴 28、29\nstatic const unsigned char Duststorm[] = {\n0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x38,0x1C,0x0E,0x87,0xFF,0x03,0x00,0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x07,0x00,0x00,0x7C,0x3E,0x9F,0x8F,0xFF,0x07,0x00,\n0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x0F,0x00,0x00,0x38,0x1C,0x0E,0x87,0x87,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,\n0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x0F,0x00,0x8F,0x87,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x8F,0xC7,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x06,0x83,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x78,0x3C,0xFE,0xFF,0xFF,0x3F,0x00,\n0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x00,0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x01,0xF8,0x78,0x3C,0xFE,0xFF,0xFF,0xFF,0x03,0x60,0x30,0x18,0xFC,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x03,\n0x00,0x1C,0x0E,0x87,0xC7,0xE3,0xF3,0x03,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x03,0x00,0x3E,0x9F,0xCF,0xC7,0xE7,0xFF,0x01,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x01,\n0x00,0x1C,0x0E,0x87,0x83,0xC1,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\28@1x.bmp\",0\n(58 X 34 )*/\n};\n\n#define Foggy_x 54\n#define Foggy_y 50\n// 雾 30\nstatic const unsigned char Foggy[] = {\n0x00,0xE0,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFE,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,\n0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,\n0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\30@1x.bmp\",0\n(54 X 50 )*/\n};\n\n#define Haze_x 56\n#define Haze_y 50\n// 霾 31\nstatic const unsigned char Haze[] = {\n0x7C,0x00,0x00,0x3E,0x00,0x00,0x78,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,\n0x00,0x00,0x7C,0x10,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0xC0,0x7F,0x00,0xC0,0xFF,0x0F,0x00,0xF0,\n0xFF,0x01,0xF0,0xFF,0x3F,0x00,0xFC,0xFF,0x07,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xFC,0xFF,0xFF,0x80,0xFF,0xFF,0x1F,0xFC,0x87,0xFF,0x81,0xFF,0xF1,0x3F,0xFE,0x01,\n0xFC,0xC3,0x3F,0x80,0x3F,0x7E,0x00,0xF8,0xE7,0x0F,0x00,0x7F,0x3F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x3F,0x00,0xE0,0xFF,0x03,0x00,0xFE,0x3F,0x00,0xC0,0xFF,0x03,0x00,\n0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x00,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,\n0xFF,0x01,0x00,0xFC,0x3F,0x00,0xC0,0xFF,0x03,0x00,0xFC,0x3F,0x00,0xE0,0xFF,0x07,0x00,0xFE,0x7F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x7E,0x00,0xF8,0xE3,0x1F,0x00,0x7F,\n0xFE,0x01,0xFC,0xC3,0x3F,0xC0,0x3F,0xFC,0x8F,0xFF,0x81,0xFF,0xFB,0x3F,0xF8,0xFF,0xFF,0x00,0xFF,0xFF,0x1F,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xE0,0xFF,0x3F,0x00,\n0xFC,0xFF,0x07,0xC0,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFE,0x01,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3C,0x00,0x00,0x78,0x7C,0x00,0x00,0x3E,0x00,\n0x00,0x7C,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0x7C,0x38,0x00,0x00,0x1C,0x00,0x00,0x38,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\31@1x.bmp\",0\n(56 X 50 )*/\n};\n\n#define Windy_x 56\n#define Windy_y 44\n// 风、大风 32、33\nstatic const unsigned char Windy[] = {\n0x00,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFD,0x01,0x00,0x00,0x00,0x00,0x7C,0xF0,\n0x01,0xFC,0x03,0x00,0x00,0x3C,0xE0,0x03,0xFF,0x0F,0x00,0x00,0x3C,0xC0,0x83,0xFF,0x1F,0x00,0x00,0x00,0xC0,0xC3,0x9F,0x3F,0x00,0x00,0x00,0xC0,0xE3,0x07,0x7E,0x00,\n0x00,0x00,0xE0,0xE3,0x03,0x7C,0x00,0x00,0x00,0xF0,0xF1,0x01,0xF8,0x00,0x00,0x00,0xF8,0xF1,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0xF0,\n0x00,0xF0,0xFF,0xFF,0xFF,0x3F,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0x03,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,\n0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,\n0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,\n0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x07,0x3E,0x00,0x00,0x00,0x00,0x80,0x0F,0x1F,0x00,0x00,0x00,0x00,0x80,0xFF,0x1F,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\32@1x.bmp\",0\n(56 X 44 )*/\n};\n\n#define Hurricane_x 56\n#define Hurricane_y 56\n// 飓风、热带风暴 34、35\nstatic const unsigned char Hurricane[] = {\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,\n0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,\n0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,\n0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,\n0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\34@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Tornado_x 56\n#define Tornado_y 55\n// 龙卷风 36\nstatic const unsigned char Tornado[] = {\n0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0x03,0x00,\n0xC0,0xFF,0x07,0xF8,0x3F,0x00,0x00,0x00,0xFC,0x0F,0xFC,0x07,0x00,0x00,0x00,0xE0,0x1F,0xFE,0x00,0x80,0xFF,0x01,0x80,0x3F,0x7F,0x00,0xFE,0xFF,0x7F,0x00,0x7E,0x1F,\n0xC0,0xFF,0xFF,0xFF,0x03,0x7C,0x0F,0xF0,0xFF,0xFF,0xFF,0x0F,0xF8,0x0F,0xFC,0x3F,0x00,0xFC,0x1F,0xF0,0x0F,0xFE,0x01,0x00,0x80,0x3F,0xF8,0x1F,0x3E,0x00,0x00,0x00,\n0x7E,0x78,0x7F,0x1E,0x00,0x00,0x00,0x78,0x7E,0xFE,0x1F,0x00,0x00,0x00,0xF8,0x3F,0xFC,0x3F,0x00,0x00,0x00,0xFE,0x1F,0xF8,0xFF,0x01,0x00,0xC0,0xFF,0x0F,0xE0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0x20,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0x00,0xFE,0xFF,0x3F,0x00,\n0x07,0xF0,0x03,0x00,0x00,0x00,0xC0,0x0F,0xF0,0x0F,0x00,0x00,0x00,0xF0,0x0F,0xE0,0x7F,0x00,0x00,0x00,0xFE,0x07,0x80,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x80,0x07,0x00,0x00,0xF0,0x07,0x00,0xF0,0x07,0x00,0x00,0xE0,0xFF,0x81,0xFF,0x07,0x00,0x00,0xC0,0xFF,0xFF,\n0xFF,0x03,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFF,0x1F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xC0,0xC7,0x07,\n0x00,0x00,0x00,0x00,0xC0,0xE7,0x07,0x00,0x00,0x00,0x00,0x80,0xEF,0x03,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,\n0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,\n0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\36@1x.bmp\",0\n(56 X 55 )*/\n};\n\n#define Cold_x 51\n#define Cold_y 58\n// 冷 37\nstatic const unsigned char Cold[] = {\n0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,\n0x00,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x8F,0xC7,0x07,0x00,0x00,0x00,0x04,0x9F,0xE7,0x07,0x01,0x00,0x00,\n0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x1E,0xF0,0x3F,0xC0,0x01,0x00,0x03,0x1E,0xE0,0x1F,0xE0,\n0x01,0x03,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x3F,0x1C,0x80,0x07,0xE0,0xF1,0x07,0xFF,0x3C,0x80,0x07,0xE0,0xF8,0x03,0xFC,0x3D,0x80,0x07,0xF0,0xFE,0x01,0xF8,0x3F,\n0x80,0x07,0xF0,0x7F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0x80,0x7F,0x80,0x07,0xF0,0x07,0x00,0x00,0xFF,0x80,0x07,0xFC,0x03,0x00,0xE0,0xFF,0x83,0x07,0xFF,0x3F,\n0x00,0xFC,0xFF,0x8F,0x87,0xFF,0xFF,0x01,0xFF,0xC7,0x9F,0xE7,0x9F,0xFF,0x03,0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,0x00,0x00,0xF8,\n0x7F,0x00,0x00,0x00,0x00,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,\n0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0xFF,0xE7,0x9F,0xE7,0x9F,0xFF,0x03,0xFC,0xFF,0x87,0x87,0xFF,0xFF,0x01,0xE0,0xFF,0x83,0x07,0xFE,0x3F,0x00,0x00,0xFF,0x80,0x07,\n0xFC,0x03,0x00,0x80,0x7F,0x80,0x07,0xF0,0x0F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0xF8,0x3F,0x80,0x07,0xF0,0x7F,0x00,0xFE,0x3D,0x80,0x07,0xF0,0xFE,0x01,0x7F,\n0x3C,0x80,0x07,0xE0,0xF8,0x03,0x3F,0x1C,0x80,0x07,0xE0,0xE1,0x07,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x02,0x1E,0xE0,0x1F,0xE0,0x01,0x03,0x00,0x1E,0xF0,0x3F,0xC0,\n0x01,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x04,0x9F,0xE7,0x87,0x01,0x00,0x00,0x80,\n0x8F,0xC7,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,\n0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\37@1x.bmp\",0\n(51 X 58 )*/\n};\n\n#define Hot_x 51\n#define Hot_y 51\n// 热 38\nstatic const unsigned char Hot[] = {\n0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,\n0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xFC,0xFF,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\38@1x.bmp\",0\n(51 X 51 )*/\n};\n\n#define Unknown_x 53\n#define Unknown_y 23\n// 未知 99\nstatic const unsigned char Unknown[] = {\n0x07,0x80,0x03,0xE0,0x00,0x0E,0x00,0x0F,0x80,0x03,0xE0,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x3F,0x80,0x03,0x78,\n0x80,0x3F,0x00,0x7F,0x80,0x03,0x38,0x80,0x3B,0x00,0x77,0x80,0x03,0x38,0xC0,0x7B,0x00,0xF7,0x80,0x03,0x1C,0xC0,0x71,0x00,0xE7,0x81,0x03,0x1C,0xE0,0x71,0x00,0xC7,\n0x81,0x03,0x1E,0xE0,0xF0,0x00,0xC7,0x83,0x03,0x0E,0xE0,0xE0,0x00,0x87,0x87,0x03,0x0E,0xF0,0xE0,0x01,0x07,0x87,0x03,0x07,0x70,0xC0,0x01,0x07,0x8F,0x03,0x07,0x78,\n0xC0,0x03,0x07,0x9E,0x83,0x03,0xF8,0xFF,0x03,0x07,0xBC,0x83,0x03,0xFC,0xFF,0x03,0x07,0xBC,0xC3,0x03,0xFC,0xFF,0x07,0x07,0xF8,0xC3,0x01,0x1C,0x00,0x07,0x07,0xF0,\n0xC3,0x01,0x1E,0x00,0x0F,0x07,0xF0,0xE3,0x00,0x0E,0x00,0x0E,0x07,0xE0,0xE3,0x00,0x0F,0x00,0x1E,0x07,0xC0,0xF3,0x00,0x07,0x00,0x1E,0x07,0xC0,0x73,0x00,0x07,0x00,\n0x1C,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\99@1x.bmp\",0\n(53 X 23 )*/\n};\n\n```\n\n# 结果\n![1](https://i.niupic.com/images/2022/06/29/a0JC.jpg)\n![2](https://i.niupic.com/images/2022/06/29/a0JE.jpg)\n![3](https://i.niupic.com/images/2022/06/29/a0JD.jpg)\n\n\n**接下来就是将ESP32视频用MQTT进行推流，希望能解决YOLO处理后视频卡顿的问题,真的没钱换电脑**\n![](https://img0.baidu.com/it/u=194229253,3926891282&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto?sec=1656608400&t=c8620de10f8bacb3ad1b1c7950d098f8)\n","slug":"MQTT/基于MQTT实现esp32远程控制","published":1,"date":"2022-06-29T08:06:17.951Z","updated":"2022-06-29T08:33:15.006Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeo5000668urb06m0i6x","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><span id=\"more\"></span>\n<p>最近在解决ESP32CAM推流后用YOLO处理视频后，视频特别卡的问题。我尝试使用IP摄像头获取现实场景使用rstp协议进行视频推流，但是还是很卡。网上说在YOLO处理的时候使用多进程，我也尝试了还是很卡。于是我在想是不是服务器的原因，我现在推流的服务器都是在本地，经过网上查询资料最终使用MQTT作为服务器。随后对之前做的ESP32桌面天气项目进行了一个改写，使用MQTT来进行天气显示的控制。<br>大致的通讯如下：<br><img src=\"https://assets.emqx.com/images/d6265585d6257fc02c722fe45888bdac.png?imageMogr2/thumbnail/1520x\" alt=\"ESP32+MQTT通讯示意图\"></p>\n<h1 id=\"相关环境\"><a href=\"#相关环境\" class=\"headerlink\" title=\"相关环境\"></a>相关环境</h1><h2 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h2><p>EPS32、面包板、I2C协议的0.96寸屏幕、若干杜邦线<br>接线看<a href=\"https://yu-728.github.io/2022/05/25/esp32-weather/esp32_weather/#more\">这篇博客</a></p>\n<h2 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h2><p>VSCODE、PlatformIO、EMQX、MQTTX、串口助手<br>Lib: 使用PlatformIO中下载<br>EMQX和MQTTX怎么下载和使用看<a href=\"https://www.emqx.com/zh/blog/esp32-connects-to-the-free-public-mqtt-broker\">官方教程</a></p>\n<h2 id=\"main代码实现：\"><a href=\"#main代码实现：\" class=\"headerlink\" title=\"main代码实现：\"></a>main代码实现：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\">#include &quot;WiFi.h&quot;</span><br><span class=\"line\">#include &quot;ArduinoJson.h&quot;</span><br><span class=\"line\">#include &quot;HTTPClient.h&quot;</span><br><span class=\"line\">#include &lt;U8g2lib.h&gt;</span><br><span class=\"line\">#include &quot;weatherpicture.h&quot;</span><br><span class=\"line\">#include &lt;PubSubClient.h&gt;</span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_SPI</span><br><span class=\"line\">#include &lt;SPI.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_I2C</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;Wire.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">//标志位</span><br><span class=\"line\">int Flag = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">//OLED硬件初始化</span><br><span class=\"line\">U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display</span><br><span class=\"line\"></span><br><span class=\"line\">// ------------------------WIFI连接信息---------------------------------//</span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">//-------------------------MQTT Broker----------------------------------//</span><br><span class=\"line\">const char *mqtt_broker = &quot;broker.emqx.io&quot;;</span><br><span class=\"line\">const char *topic = &quot;esp32/test&quot;;</span><br><span class=\"line\">const char *mqtt_username = &quot;emqx&quot;;</span><br><span class=\"line\">const char *mqtt_password = &quot;public&quot;;</span><br><span class=\"line\">const int mqtt_port = 1883;</span><br><span class=\"line\"></span><br><span class=\"line\">//-------------------------网络时间获取----------------------------------//</span><br><span class=\"line\">const char *ntpServer = &quot;pool.ntp.org&quot;; //网络时间服务器</span><br><span class=\"line\">const long gmtOffset_sec = 8 * 3600; //时区设置函数，东八区（UTC/GMT+8:00）写成8*3600   </span><br><span class=\"line\">const int daylightOffset_sec = 0;   //夏令时填写3600，否则填0</span><br><span class=\"line\"></span><br><span class=\"line\">//==========================变量声明====================================//</span><br><span class=\"line\">extern int Flag;</span><br><span class=\"line\"></span><br><span class=\"line\">//==========================函数声明====================================//</span><br><span class=\"line\">void WiFi_Connect();</span><br><span class=\"line\">void ParserJson();</span><br><span class=\"line\">void OLEDDisplay(String cityName, String weather, String temperature, int code_int);</span><br><span class=\"line\">void printLocalTime();</span><br><span class=\"line\">void ConnectMQTT();</span><br><span class=\"line\">void PublishAndSubscribe();</span><br><span class=\"line\">void callback(char *topic, byte *payload, unsigned int length);</span><br><span class=\"line\"></span><br><span class=\"line\">//=============================MQTT====================================//</span><br><span class=\"line\">WiFiClient espClient;</span><br><span class=\"line\">PubSubClient client(espClient);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//WiFi connect function</span><br><span class=\"line\">void WiFi_Connect()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">                    //Connection state judgment</span><br><span class=\"line\">    while(WiFi.status() != WL_CONNECTED)&#123;  </span><br><span class=\"line\">        delay(1000);</span><br><span class=\"line\">        Serial.println(&quot;Connecting to WiFi...&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        /**********屏幕显示wifi连接状态*************/</span><br><span class=\"line\">        u8g2.clearBuffer();</span><br><span class=\"line\">        u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">        u8g2.setCursor(0,16);</span><br><span class=\"line\">        u8g2.print(&quot;wifi连接中&quot;);</span><br><span class=\"line\">        u8g2.sendBuffer();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Serial.println(&quot;Connected to the WiFi network&quot;);</span><br><span class=\"line\">    u8g2.clearBuffer();</span><br><span class=\"line\">    u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">    u8g2.setCursor(0,16);</span><br><span class=\"line\">    u8g2.print(&quot;wifi成功&quot;);</span><br><span class=\"line\">    u8g2.sendBuffer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// PubSubClient 连接到公共 MQTT Broker</span><br><span class=\"line\">void ConnectMQTT()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  client.setServer(mqtt_broker, mqtt_port);</span><br><span class=\"line\">  client.setCallback(callback);</span><br><span class=\"line\">  while (!client.connected()) &#123;</span><br><span class=\"line\">      String client_id = &quot;esp32-client-&quot;;</span><br><span class=\"line\">      client_id += String(WiFi.macAddress());</span><br><span class=\"line\">      Serial.printf(&quot;The client %s connects to the public mqtt broker\\n&quot;, client_id.c_str());</span><br><span class=\"line\">      if (client.connect(client_id.c_str(), mqtt_username, mqtt_password)) &#123;</span><br><span class=\"line\">          Serial.println(&quot;Public emqx mqtt broker connected&quot;);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">          Serial.print(&quot;failed with state &quot;);</span><br><span class=\"line\">          Serial.print(client.state());</span><br><span class=\"line\">          delay(2000);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  PublishAndSubscribe();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// publish and subscribe</span><br><span class=\"line\">void PublishAndSubscribe()&#123;</span><br><span class=\"line\">  client.publish(topic, &quot;Hi EMQX I&#x27;m ESP32 ^^&quot;);</span><br><span class=\"line\">  client.subscribe(topic);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//callback</span><br><span class=\"line\">void callback(char *topic, byte *payload, unsigned int length) &#123;</span><br><span class=\"line\">    Serial.print(&quot;Message arrived in topic: &quot;);</span><br><span class=\"line\">    Serial.println(topic);</span><br><span class=\"line\">    Serial.print(&quot;Message:&quot;);</span><br><span class=\"line\">    String message;</span><br><span class=\"line\">    for (int i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">        message = message + (char) payload[i];  // convert *byte to string</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.print(message);</span><br><span class=\"line\">    if (message == &quot;on&quot;) &#123;</span><br><span class=\"line\">      Flag = 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (message == &quot;off&quot;) &#123;</span><br><span class=\"line\">      Flag = 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.println();</span><br><span class=\"line\">    Serial.println(&quot;-----------------------&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//获取Json报文并解析</span><br><span class=\"line\">void ParserJson()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  HTTPClient http;</span><br><span class=\"line\">  //                                                            你的私钥                      查询地址       语言   温度单位</span><br><span class=\"line\">  http.begin(&quot;https://api.seniverse.com/v3/weather/now.json?key=SvbJTBaB9LvBrsItI&amp;location=liuzhou&amp;language=zh-Hans&amp;unit=c&quot;);//Specify the URL</span><br><span class=\"line\">  int httpCode = http.GET();            // Make the request</span><br><span class=\"line\">  if (httpCode &gt; 0) &#123; // Check for the returning code</span><br><span class=\"line\"></span><br><span class=\"line\">    String payload = http.getString();</span><br><span class=\"line\">    Serial.println(httpCode);</span><br><span class=\"line\">    Serial.println(payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    StaticJsonDocument&lt;1024&gt; doc; </span><br><span class=\"line\"></span><br><span class=\"line\">    DeserializationError error = deserializeJson(doc, payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    if (error) &#123;</span><br><span class=\"line\">      Serial.println(&quot;JSON parsing failed!&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      JsonObject obj1 = doc[&quot;results&quot;][0];  //new 一个对象存储访问result信息</span><br><span class=\"line\">      String cityName = obj1[&quot;location&quot;][&quot;name&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String weather = obj1[&quot;now&quot;][&quot;text&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String code = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String temperature = obj1[&quot;now&quot;][&quot;temperature&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      int code_int = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;int&gt;();</span><br><span class=\"line\">      OLEDDisplay(cityName, weather, temperature, code_int);  //屏幕显示报文信息</span><br><span class=\"line\">      //int code_int = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;int&gt;();</span><br><span class=\"line\">      Serial.println(cityName);</span><br><span class=\"line\">      Serial.println(code);</span><br><span class=\"line\">      //Serial.println(weather);</span><br><span class=\"line\">      Serial.println(temperature);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;else &#123;</span><br><span class=\"line\">    Serial.println(&quot;Error on HTTP request&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  http.end(); //Free the resources</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//屏幕绘制信息</span><br><span class=\"line\">void OLEDDisplay(String cityName, String weather, String temperature, int code_int)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">  u8g2.setFontDirection(0);</span><br><span class=\"line\">  u8g2.clearBuffer();</span><br><span class=\"line\">  //u8g2.drawXBMP(3, 3, 35, 32, cloudy); u8g2.setCursor(43 , 16 ); u8g2.println(&quot;多&quot;); u8g2.setCursor(43 , 30 ); u8g2.println(&quot;云&quot;);</span><br><span class=\"line\">  u8g2.setCursor(65, 10);</span><br><span class=\"line\">  u8g2.print(&quot;城市: &quot;);</span><br><span class=\"line\">  u8g2.print(cityName);</span><br><span class=\"line\">  u8g2.setCursor(65, 25);</span><br><span class=\"line\">  u8g2.print(&quot;天气: &quot;);</span><br><span class=\"line\">  u8g2.print(weather);</span><br><span class=\"line\">  u8g2.setCursor(65, 40);</span><br><span class=\"line\">  u8g2.print(&quot;温度: &quot;);</span><br><span class=\"line\">  u8g2.print(temperature);</span><br><span class=\"line\">  u8g2.print(&quot;℃&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  //==========================天气图标显示=========================//</span><br><span class=\"line\">  </span><br><span class=\"line\">  //u8g2.drawXBMP(10, 3, sunny_x, sunny_y, sunny);</span><br><span class=\"line\">  switch (code_int)&#123;</span><br><span class=\"line\">    case 0:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, sunny_x, sunny_y, sunny);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 1:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, clear_x, clear_y, clear);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 2:</span><br><span class=\"line\">      //</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 3:</span><br><span class=\"line\">      //</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 4:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, cloudy_x, cloudy_y, cloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 5:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 6:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 7:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 8:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 9:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Overcast_x, Overcast_y, Overcast);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 10:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Shower_x, Shower_y, Shower);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 11:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Thundershower_x, Thundershower_y, Thundershower);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 12:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, ThundershowerWithHail_x, ThundershowerWithHail_y, ThundershowerWithHail);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 13:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 14:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 15:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 16:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 17:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 18:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 19:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, IceRain_x, IceRain_y, IceRain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 20:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Sleet_x, Sleet_y, Sleet);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 21:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, SnowFlurry_x, SnowFlurry_y, SnowFlurry);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 22:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 23:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 24:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 25:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 26:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 27:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 28:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 29:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 30:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Foggy_x, Foggy_y, Foggy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 31:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Haze_x, Haze_y, Haze);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 32:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 33:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 34:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 35:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 36:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Tornado_x, Tornado_y, Tornado);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 37:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Cold_x, Cold_y, Cold);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 38:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hot_x, Hot_y, Hot);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 99:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Unknown_x, Unknown_y, Unknown);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">  </span><br><span class=\"line\">  break;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //--------------------------时间显示--------------------------//</span><br><span class=\"line\">  printLocalTime();</span><br><span class=\"line\"></span><br><span class=\"line\">  u8g2.sendBuffer();</span><br><span class=\"line\">  //delay(1000);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//时间获取</span><br><span class=\"line\">void printLocalTime()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  //delay(500);</span><br><span class=\"line\">  struct tm timeinfo;</span><br><span class=\"line\">  if (!getLocalTime(&amp;timeinfo))</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      Serial.println(&quot;Failed to obtain time&quot;);</span><br><span class=\"line\">      u8g2.setCursor(0,60);</span><br><span class=\"line\">      u8g2.print(&quot;未获取到时间请重置&quot;);</span><br><span class=\"line\">      return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.println(&amp;timeinfo, &quot;%F %T %A&quot;); // 格式化输出,串口显示</span><br><span class=\"line\">  //屏幕显示时间</span><br><span class=\"line\">  //u8g2.clearBuffer();</span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">  u8g2.setCursor(30, 64);</span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%F&quot;);  //日期</span><br><span class=\"line\">  u8g2.setCursor(65, 52);</span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%A&quot;);  //星期</span><br><span class=\"line\">  u8g2.setCursor(95, 64); </span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%R&quot;); //小时-分钟</span><br><span class=\"line\">  // u8g2.setCursor(80, 64); </span><br><span class=\"line\">  // u8g2.print(&amp;timeinfo, &quot;%T&quot;); //小时-分钟-秒 </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//初始化</span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  // put your setup code here, to run once:</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  u8g2.begin();</span><br><span class=\"line\">  // 画笔</span><br><span class=\"line\">  u8g2.enableUTF8Print();</span><br><span class=\"line\">  // wifi</span><br><span class=\"line\">  WiFi_Connect();</span><br><span class=\"line\">  //从网络时间服务器上获取并设置时间</span><br><span class=\"line\">  // 获取成功后芯片会使用RTC时钟保持时间的更新</span><br><span class=\"line\">  //            时区           时令             网络服务器</span><br><span class=\"line\">  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);</span><br><span class=\"line\">  // MQTT</span><br><span class=\"line\">  ConnectMQTT();</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // put your main code here, to run repeatedly:</span><br><span class=\"line\">  client.loop();</span><br><span class=\"line\">  if(Flag == 1)&#123;</span><br><span class=\"line\">    ParserJson();</span><br><span class=\"line\">    delay(3000);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  if(Flag == 0)&#123;</span><br><span class=\"line\">    u8g2.clearBuffer();</span><br><span class=\"line\">    u8g2.sendBuffer();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"头文件\"><a href=\"#头文件\" class=\"headerlink\" title=\"头文件\"></a>头文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 说明：这个头文件存放天气图标的字模</span><br><span class=\"line\"> * </span><br><span class=\"line\"> */ </span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef weatherpicture_H</span><br><span class=\"line\">#define weatherpicture_H</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">#define sunny_x 51</span><br><span class=\"line\">#define sunny_y 51</span><br><span class=\"line\">// 晴 0</span><br><span class=\"line\">static const unsigned char sunny[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\0@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define clear_x 51 </span><br><span class=\"line\">#define clear_y 52</span><br><span class=\"line\">// 夜晚 1</span><br><span class=\"line\">static const unsigned char clear[]&#123;</span><br><span class=\"line\">0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0xFE,0x0F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x80,0xFF,0x0F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x07,0x00,0x00,0x00,0x00,0xE0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,</span><br><span class=\"line\">0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,</span><br><span class=\"line\">0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0x07,0xFF,0xFF,0xFF,0xFF,0x03,0xF0,0x07,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\1@1x.bmp&quot;,0</span><br><span class=\"line\"> (51 X 52 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define cloudy_x 60</span><br><span class=\"line\">#define cloudy_y 47</span><br><span class=\"line\">// 多云 4</span><br><span class=\"line\">static const unsigned char cloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xF8,0xF8,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x03,0x00,</span><br><span class=\"line\">0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,</span><br><span class=\"line\">0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFC,0x1F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFC,0x3F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0x01,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0x00,0xFE,0x3F,0x00,0xF8,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\4@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 47 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define PartlyCloudy_x 60</span><br><span class=\"line\">#define PartlyCloudy_y 44</span><br><span class=\"line\">// 晴间多云 5、7</span><br><span class=\"line\">static const unsigned char PartlyCloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xE0,0xCF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\5@1x.bmp&quot;,0</span><br><span class=\"line\"> (60 X 44 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define MostlyCloudy_x 60</span><br><span class=\"line\">#define MostlyCloudy_y 51</span><br><span class=\"line\">// 阴间多云 6、8</span><br><span class=\"line\">static const unsigned char MostlyCloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x03,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0x00,0x0E,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xE7,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\6@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Overcast_x 60</span><br><span class=\"line\">#define Overcast_y 40</span><br><span class=\"line\">//  阴 9</span><br><span class=\"line\">static const unsigned char Overcast[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x80,0x3F,0xFE,0xFF,0xFF,0x01,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\9@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 40 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Shower_x 60</span><br><span class=\"line\">#define Shower_y 59</span><br><span class=\"line\">// 阵雨 10</span><br><span class=\"line\">static const unsigned char Shower[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x03,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0x8F,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x3C,0x00,0x1E,0x00,0x00,0x00,0x78,0x00,0x3E,0x00,0x1F,0x00,0x00,</span><br><span class=\"line\">0x00,0x7C,0x00,0x3E,0x00,0x1F,0x00,0x00,0x00,0x7C,0x00,0x3E,0x80,0x1F,0x00,0x00,0x00,0x7E,0x00,0x1F,0x80,0x0F,0x00,0x00,0x00,0x3E,0x00,0x1F,0x80,0x0F,0x00,0x00,</span><br><span class=\"line\">0x00,0x3F,0x80,0x1F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xE0,0x07,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,</span><br><span class=\"line\">0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x01,0x00,0x00,0x80,0x07,0xC0,0x03,0xE0,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\10@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 59 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Thundershower_x 56</span><br><span class=\"line\">#define Thundershower_y 56</span><br><span class=\"line\">// 雷阵雨 11</span><br><span class=\"line\">static const unsigned char Thundershower[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x08,0xC0,0xFF,0x00,0x18,0x00,0x00,0x3C,0xC0,0x7F,0x00,0x3C,0x00,0x00,</span><br><span class=\"line\">0x3E,0xE0,0x7F,0x00,0x3C,0x00,0x00,0x3E,0xE0,0x3F,0x00,0x3E,0x00,0x00,0x1F,0xE0,0xFF,0x01,0x3E,0x00,0x00,0x1F,0xF0,0xFF,0x00,0x1F,0x00,0x00,0x1F,0xF0,0x7F,0x00,</span><br><span class=\"line\">0x1F,0x00,0x80,0x0F,0xF8,0x3F,0x00,0x1F,0x00,0x80,0x0F,0x80,0x1F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x0F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x07,0xC0,0x07,0x00,0xC0,0x07,</span><br><span class=\"line\">0xC0,0x03,0xC0,0x07,0x00,0xC0,0x03,0xE0,0x01,0x80,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\11@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define ThundershowerWithHail_x 56</span><br><span class=\"line\">#define ThundershowerWithHail_y 56</span><br><span class=\"line\">// 雷阵雨伴有冰雹 12</span><br><span class=\"line\">static const unsigned char ThundershowerWithHail[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x80,</span><br><span class=\"line\">0x03,0xE0,0x7F,0x00,0x0E,0x00,0xE0,0x07,0xE0,0x3F,0x00,0x3F,0x00,0xE0,0x0F,0xE0,0xFF,0x81,0x3F,0x00,0xF0,0x0F,0xF0,0xFF,0x80,0x7F,0x00,0xF0,0x0F,0xF0,0x7F,0x80,</span><br><span class=\"line\">0x7F,0x00,0xF0,0x0F,0xF8,0x3F,0x80,0x3F,0x00,0xE0,0x07,0x80,0x1F,0x00,0x3F,0x00,0xC0,0x03,0xC0,0x0F,0x00,0x1E,0x00,0x00,0x00,0xC0,0x07,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\12@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Rain_x 56</span><br><span class=\"line\">#define Rain_y 54</span><br><span class=\"line\">// 小雨、中雨、大于、暴雨、大暴雨、特大暴雨 13、14、15、16、17、18</span><br><span class=\"line\">static const unsigned char Rain[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x18,0x00,0x06,0x00,0x03,0x00,0x00,0x1C,0x00,0x0E,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x80,0x0F,0xC0,</span><br><span class=\"line\">0x03,0x00,0x00,0x0F,0x80,0x07,0xC0,0x03,0x00,0x00,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x80,0x0F,0xC0,0x03,0xE0,0x01,0x00,0x80,0x07,0xC0,0x03,0xF0,0x01,0x00,0xC0,0x07,</span><br><span class=\"line\">0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0x70,0x00,0x00,0xC0,0x01,0xE0,0x00,0x70,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\13@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 54 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define IceRain_x 56</span><br><span class=\"line\">#define IceRain_y 57</span><br><span class=\"line\">// 冻雨 19</span><br><span class=\"line\">static const unsigned char IceRain[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x18,0x00,0x04,0x00,0x00,</span><br><span class=\"line\">0x70,0x00,0x3C,0x00,0x0E,0x00,0x00,0xF8,0x00,0x7E,0x00,0x1F,0x00,0x00,0xFC,0x01,0xFF,0x80,0x3F,0x00,0x00,0xFE,0x03,0xFF,0xC0,0x7F,0x00,0x00,0xFC,0x01,0x7E,0x80,</span><br><span class=\"line\">0x3F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x1F,0x00,0x00,0x70,0x00,0x1C,0x00,0x0E,0x00,0x00,0x20,0x10,0x08,0x00,0x04,0x00,0x00,0x00,0x38,0x00,0x18,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x7C,0x00,0x3C,0x00,0x00,0x00,0x00,0xFE,0x00,0x7E,0x00,0x00,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFE,0x00,0xFF,0x00,0x00,0x00,0x00,0x7C,0x00,0x7E,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x38,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\19@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 57 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Sleet_x 56</span><br><span class=\"line\">#define Sleet_y 55</span><br><span class=\"line\">// 雨夹雪 20</span><br><span class=\"line\">static const unsigned char Sleet[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3B,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3F,0x00,0x00,0xF8,0x00,0x3E,0x80,</span><br><span class=\"line\">0x3F,0x00,0x00,0x78,0x00,0x1E,0xC0,0x7F,0x00,0x00,0x7C,0x00,0x1F,0xE0,0xFF,0x00,0x00,0x3C,0x00,0x0F,0xF0,0xFF,0x01,0x00,0x3C,0x00,0x0F,0xE0,0xFF,0x00,0x00,0x3E,</span><br><span class=\"line\">0x80,0x0F,0x80,0x3F,0x00,0x00,0x1E,0x80,0x07,0x80,0x3F,0x00,0x00,0x1F,0xC0,0x07,0x80,0x3B,0x00,0x00,0x0F,0xC0,0x03,0x80,0x33,0x00,0x00,0x06,0x80,0x01,0x00,0x00,</span><br><span class=\"line\">0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\20@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 55 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define SnowFlurry_x 56</span><br><span class=\"line\">#define SnowFlurry_y 56</span><br><span class=\"line\">// 阵雪 21</span><br><span class=\"line\">static const unsigned char SnowFlurry[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,</span><br><span class=\"line\">0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xC0,0xE0,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x3D,0xC0,0x3B,</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xE0,0x7F,0xE0,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,</span><br><span class=\"line\">0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,</span><br><span class=\"line\">0x00,0x00,0x80,0x19,0x80,0x19,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\21@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Snow_x 56</span><br><span class=\"line\">#define Snow_y 53</span><br><span class=\"line\">// 小雪、中雪、大雪、暴雪 22、23、24、25</span><br><span class=\"line\">static const unsigned char Snow[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x80,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0x00,0xC6,0x00,0x00,0x00,0x00,0xFF,0x00,0xEE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0xFF,0x83,0xFF,0x03,0x00,0x00,0xC0,0xFF,0xC3,0xFF,0x07,0x00,0x00,0xC0,0xFF,0x83,0xFF,0x03,0x00,0x00,0x80,0xFF,0x01,0xFF,0x01,0x00,0x00,0x00,</span><br><span class=\"line\">0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xEE,0x00,0xEE,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\22@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 53 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Dust_x 53</span><br><span class=\"line\">#define Dust_y 45</span><br><span class=\"line\">// 浮尘、扬沙 26、27</span><br><span class=\"line\">static const unsigned char Dust[] = &#123;</span><br><span class=\"line\">0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0x7C,0xC0,0x07,</span><br><span class=\"line\">0x7C,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFF,0xE1,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xC0,0x07,0x7C,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xE0,0x0F,0xFC,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,</span><br><span class=\"line\">0xFF,0xF1,0x1F,0x00,0x7E,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFF,0xE0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xE1,0x1F,0x00,0xFE,0xE0,0x0F,</span><br><span class=\"line\">0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE0,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xF1,0x1F,0x00,0xFE,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\26@1x.bmp&quot;,0</span><br><span class=\"line\">(53 X 45 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Duststorm_x 58</span><br><span class=\"line\">#define Duststorm_y 34</span><br><span class=\"line\">// 沙尘暴、强沙尘暴 28、29</span><br><span class=\"line\">static const unsigned char Duststorm[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x38,0x1C,0x0E,0x87,0xFF,0x03,0x00,0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x07,0x00,0x00,0x7C,0x3E,0x9F,0x8F,0xFF,0x07,0x00,</span><br><span class=\"line\">0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x0F,0x00,0x00,0x38,0x1C,0x0E,0x87,0x87,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x0F,0x00,0x8F,0x87,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x8F,0xC7,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x06,0x83,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x78,0x3C,0xFE,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x00,0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x01,0xF8,0x78,0x3C,0xFE,0xFF,0xFF,0xFF,0x03,0x60,0x30,0x18,0xFC,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x03,</span><br><span class=\"line\">0x00,0x1C,0x0E,0x87,0xC7,0xE3,0xF3,0x03,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x03,0x00,0x3E,0x9F,0xCF,0xC7,0xE7,0xFF,0x01,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x01,</span><br><span class=\"line\">0x00,0x1C,0x0E,0x87,0x83,0xC1,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\28@1x.bmp&quot;,0</span><br><span class=\"line\">(58 X 34 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Foggy_x 54</span><br><span class=\"line\">#define Foggy_y 50</span><br><span class=\"line\">// 雾 30</span><br><span class=\"line\">static const unsigned char Foggy[] = &#123;</span><br><span class=\"line\">0x00,0xE0,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFE,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\30@1x.bmp&quot;,0</span><br><span class=\"line\">(54 X 50 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Haze_x 56</span><br><span class=\"line\">#define Haze_y 50</span><br><span class=\"line\">// 霾 31</span><br><span class=\"line\">static const unsigned char Haze[] = &#123;</span><br><span class=\"line\">0x7C,0x00,0x00,0x3E,0x00,0x00,0x78,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,</span><br><span class=\"line\">0x00,0x00,0x7C,0x10,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0xC0,0x7F,0x00,0xC0,0xFF,0x0F,0x00,0xF0,</span><br><span class=\"line\">0xFF,0x01,0xF0,0xFF,0x3F,0x00,0xFC,0xFF,0x07,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xFC,0xFF,0xFF,0x80,0xFF,0xFF,0x1F,0xFC,0x87,0xFF,0x81,0xFF,0xF1,0x3F,0xFE,0x01,</span><br><span class=\"line\">0xFC,0xC3,0x3F,0x80,0x3F,0x7E,0x00,0xF8,0xE7,0x0F,0x00,0x7F,0x3F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x3F,0x00,0xE0,0xFF,0x03,0x00,0xFE,0x3F,0x00,0xC0,0xFF,0x03,0x00,</span><br><span class=\"line\">0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x00,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,</span><br><span class=\"line\">0xFF,0x01,0x00,0xFC,0x3F,0x00,0xC0,0xFF,0x03,0x00,0xFC,0x3F,0x00,0xE0,0xFF,0x07,0x00,0xFE,0x7F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x7E,0x00,0xF8,0xE3,0x1F,0x00,0x7F,</span><br><span class=\"line\">0xFE,0x01,0xFC,0xC3,0x3F,0xC0,0x3F,0xFC,0x8F,0xFF,0x81,0xFF,0xFB,0x3F,0xF8,0xFF,0xFF,0x00,0xFF,0xFF,0x1F,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xE0,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x07,0xC0,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFE,0x01,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3C,0x00,0x00,0x78,0x7C,0x00,0x00,0x3E,0x00,</span><br><span class=\"line\">0x00,0x7C,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0x7C,0x38,0x00,0x00,0x1C,0x00,0x00,0x38,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\31@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 50 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Windy_x 56</span><br><span class=\"line\">#define Windy_y 44</span><br><span class=\"line\">// 风、大风 32、33</span><br><span class=\"line\">static const unsigned char Windy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFD,0x01,0x00,0x00,0x00,0x00,0x7C,0xF0,</span><br><span class=\"line\">0x01,0xFC,0x03,0x00,0x00,0x3C,0xE0,0x03,0xFF,0x0F,0x00,0x00,0x3C,0xC0,0x83,0xFF,0x1F,0x00,0x00,0x00,0xC0,0xC3,0x9F,0x3F,0x00,0x00,0x00,0xC0,0xE3,0x07,0x7E,0x00,</span><br><span class=\"line\">0x00,0x00,0xE0,0xE3,0x03,0x7C,0x00,0x00,0x00,0xF0,0xF1,0x01,0xF8,0x00,0x00,0x00,0xF8,0xF1,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0xF0,</span><br><span class=\"line\">0x00,0xF0,0xFF,0xFF,0xFF,0x3F,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0x03,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x07,0x3E,0x00,0x00,0x00,0x00,0x80,0x0F,0x1F,0x00,0x00,0x00,0x00,0x80,0xFF,0x1F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\32@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 44 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Hurricane_x 56</span><br><span class=\"line\">#define Hurricane_y 56</span><br><span class=\"line\">// 飓风、热带风暴 34、35</span><br><span class=\"line\">static const unsigned char Hurricane[] = &#123;</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\34@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Tornado_x 56</span><br><span class=\"line\">#define Tornado_y 55</span><br><span class=\"line\">// 龙卷风 36</span><br><span class=\"line\">static const unsigned char Tornado[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0x03,0x00,</span><br><span class=\"line\">0xC0,0xFF,0x07,0xF8,0x3F,0x00,0x00,0x00,0xFC,0x0F,0xFC,0x07,0x00,0x00,0x00,0xE0,0x1F,0xFE,0x00,0x80,0xFF,0x01,0x80,0x3F,0x7F,0x00,0xFE,0xFF,0x7F,0x00,0x7E,0x1F,</span><br><span class=\"line\">0xC0,0xFF,0xFF,0xFF,0x03,0x7C,0x0F,0xF0,0xFF,0xFF,0xFF,0x0F,0xF8,0x0F,0xFC,0x3F,0x00,0xFC,0x1F,0xF0,0x0F,0xFE,0x01,0x00,0x80,0x3F,0xF8,0x1F,0x3E,0x00,0x00,0x00,</span><br><span class=\"line\">0x7E,0x78,0x7F,0x1E,0x00,0x00,0x00,0x78,0x7E,0xFE,0x1F,0x00,0x00,0x00,0xF8,0x3F,0xFC,0x3F,0x00,0x00,0x00,0xFE,0x1F,0xF8,0xFF,0x01,0x00,0xC0,0xFF,0x0F,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0x20,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0x00,0xFE,0xFF,0x3F,0x00,</span><br><span class=\"line\">0x07,0xF0,0x03,0x00,0x00,0x00,0xC0,0x0F,0xF0,0x0F,0x00,0x00,0x00,0xF0,0x0F,0xE0,0x7F,0x00,0x00,0x00,0xFE,0x07,0x80,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x80,0x07,0x00,0x00,0xF0,0x07,0x00,0xF0,0x07,0x00,0x00,0xE0,0xFF,0x81,0xFF,0x07,0x00,0x00,0xC0,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x03,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFF,0x1F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xC0,0xC7,0x07,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xC0,0xE7,0x07,0x00,0x00,0x00,0x00,0x80,0xEF,0x03,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,</span><br><span class=\"line\">0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\36@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 55 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Cold_x 51</span><br><span class=\"line\">#define Cold_y 58</span><br><span class=\"line\">// 冷 37</span><br><span class=\"line\">static const unsigned char Cold[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x8F,0xC7,0x07,0x00,0x00,0x00,0x04,0x9F,0xE7,0x07,0x01,0x00,0x00,</span><br><span class=\"line\">0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x1E,0xF0,0x3F,0xC0,0x01,0x00,0x03,0x1E,0xE0,0x1F,0xE0,</span><br><span class=\"line\">0x01,0x03,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x3F,0x1C,0x80,0x07,0xE0,0xF1,0x07,0xFF,0x3C,0x80,0x07,0xE0,0xF8,0x03,0xFC,0x3D,0x80,0x07,0xF0,0xFE,0x01,0xF8,0x3F,</span><br><span class=\"line\">0x80,0x07,0xF0,0x7F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0x80,0x7F,0x80,0x07,0xF0,0x07,0x00,0x00,0xFF,0x80,0x07,0xFC,0x03,0x00,0xE0,0xFF,0x83,0x07,0xFF,0x3F,</span><br><span class=\"line\">0x00,0xFC,0xFF,0x8F,0x87,0xFF,0xFF,0x01,0xFF,0xC7,0x9F,0xE7,0x9F,0xFF,0x03,0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,0x00,0x00,0xF8,</span><br><span class=\"line\">0x7F,0x00,0x00,0x00,0x00,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,</span><br><span class=\"line\">0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0xFF,0xE7,0x9F,0xE7,0x9F,0xFF,0x03,0xFC,0xFF,0x87,0x87,0xFF,0xFF,0x01,0xE0,0xFF,0x83,0x07,0xFE,0x3F,0x00,0x00,0xFF,0x80,0x07,</span><br><span class=\"line\">0xFC,0x03,0x00,0x80,0x7F,0x80,0x07,0xF0,0x0F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0xF8,0x3F,0x80,0x07,0xF0,0x7F,0x00,0xFE,0x3D,0x80,0x07,0xF0,0xFE,0x01,0x7F,</span><br><span class=\"line\">0x3C,0x80,0x07,0xE0,0xF8,0x03,0x3F,0x1C,0x80,0x07,0xE0,0xE1,0x07,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x02,0x1E,0xE0,0x1F,0xE0,0x01,0x03,0x00,0x1E,0xF0,0x3F,0xC0,</span><br><span class=\"line\">0x01,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x04,0x9F,0xE7,0x87,0x01,0x00,0x00,0x80,</span><br><span class=\"line\">0x8F,0xC7,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\37@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 58 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Hot_x 51</span><br><span class=\"line\">#define Hot_y 51</span><br><span class=\"line\">// 热 38</span><br><span class=\"line\">static const unsigned char Hot[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\38@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Unknown_x 53</span><br><span class=\"line\">#define Unknown_y 23</span><br><span class=\"line\">// 未知 99</span><br><span class=\"line\">static const unsigned char Unknown[] = &#123;</span><br><span class=\"line\">0x07,0x80,0x03,0xE0,0x00,0x0E,0x00,0x0F,0x80,0x03,0xE0,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x3F,0x80,0x03,0x78,</span><br><span class=\"line\">0x80,0x3F,0x00,0x7F,0x80,0x03,0x38,0x80,0x3B,0x00,0x77,0x80,0x03,0x38,0xC0,0x7B,0x00,0xF7,0x80,0x03,0x1C,0xC0,0x71,0x00,0xE7,0x81,0x03,0x1C,0xE0,0x71,0x00,0xC7,</span><br><span class=\"line\">0x81,0x03,0x1E,0xE0,0xF0,0x00,0xC7,0x83,0x03,0x0E,0xE0,0xE0,0x00,0x87,0x87,0x03,0x0E,0xF0,0xE0,0x01,0x07,0x87,0x03,0x07,0x70,0xC0,0x01,0x07,0x8F,0x03,0x07,0x78,</span><br><span class=\"line\">0xC0,0x03,0x07,0x9E,0x83,0x03,0xF8,0xFF,0x03,0x07,0xBC,0x83,0x03,0xFC,0xFF,0x03,0x07,0xBC,0xC3,0x03,0xFC,0xFF,0x07,0x07,0xF8,0xC3,0x01,0x1C,0x00,0x07,0x07,0xF0,</span><br><span class=\"line\">0xC3,0x01,0x1E,0x00,0x0F,0x07,0xF0,0xE3,0x00,0x0E,0x00,0x0E,0x07,0xE0,0xE3,0x00,0x0F,0x00,0x1E,0x07,0xC0,0xF3,0x00,0x07,0x00,0x1E,0x07,0xC0,0x73,0x00,0x07,0x00,</span><br><span class=\"line\">0x1C,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\99@1x.bmp&quot;,0</span><br><span class=\"line\">(53 X 23 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p><img src=\"https://i.niupic.com/images/2022/06/29/a0JC.jpg\" alt=\"1\"><br><img src=\"https://i.niupic.com/images/2022/06/29/a0JE.jpg\" alt=\"2\"><br><img src=\"https://i.niupic.com/images/2022/06/29/a0JD.jpg\" alt=\"3\"></p>\n<p><strong>接下来就是将ESP32视频用MQTT进行推流，希望能解决YOLO处理后视频卡顿的问题,真的没钱换电脑</strong><br><img src=\"https://img0.baidu.com/it/u=194229253,3926891282&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto?sec=1656608400&t=c8620de10f8bacb3ad1b1c7950d098f8\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1>","more":"<p>最近在解决ESP32CAM推流后用YOLO处理视频后，视频特别卡的问题。我尝试使用IP摄像头获取现实场景使用rstp协议进行视频推流，但是还是很卡。网上说在YOLO处理的时候使用多进程，我也尝试了还是很卡。于是我在想是不是服务器的原因，我现在推流的服务器都是在本地，经过网上查询资料最终使用MQTT作为服务器。随后对之前做的ESP32桌面天气项目进行了一个改写，使用MQTT来进行天气显示的控制。<br>大致的通讯如下：<br><img src=\"https://assets.emqx.com/images/d6265585d6257fc02c722fe45888bdac.png?imageMogr2/thumbnail/1520x\" alt=\"ESP32+MQTT通讯示意图\"></p>\n<h1 id=\"相关环境\"><a href=\"#相关环境\" class=\"headerlink\" title=\"相关环境\"></a>相关环境</h1><h2 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h2><p>EPS32、面包板、I2C协议的0.96寸屏幕、若干杜邦线<br>接线看<a href=\"https://yu-728.github.io/2022/05/25/esp32-weather/esp32_weather/#more\">这篇博客</a></p>\n<h2 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h2><p>VSCODE、PlatformIO、EMQX、MQTTX、串口助手<br>Lib: 使用PlatformIO中下载<br>EMQX和MQTTX怎么下载和使用看<a href=\"https://www.emqx.com/zh/blog/esp32-connects-to-the-free-public-mqtt-broker\">官方教程</a></p>\n<h2 id=\"main代码实现：\"><a href=\"#main代码实现：\" class=\"headerlink\" title=\"main代码实现：\"></a>main代码实现：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\">#include &quot;WiFi.h&quot;</span><br><span class=\"line\">#include &quot;ArduinoJson.h&quot;</span><br><span class=\"line\">#include &quot;HTTPClient.h&quot;</span><br><span class=\"line\">#include &lt;U8g2lib.h&gt;</span><br><span class=\"line\">#include &quot;weatherpicture.h&quot;</span><br><span class=\"line\">#include &lt;PubSubClient.h&gt;</span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_SPI</span><br><span class=\"line\">#include &lt;SPI.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_I2C</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;Wire.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">//标志位</span><br><span class=\"line\">int Flag = 0;</span><br><span class=\"line\"></span><br><span class=\"line\">//OLED硬件初始化</span><br><span class=\"line\">U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display</span><br><span class=\"line\"></span><br><span class=\"line\">// ------------------------WIFI连接信息---------------------------------//</span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">//-------------------------MQTT Broker----------------------------------//</span><br><span class=\"line\">const char *mqtt_broker = &quot;broker.emqx.io&quot;;</span><br><span class=\"line\">const char *topic = &quot;esp32/test&quot;;</span><br><span class=\"line\">const char *mqtt_username = &quot;emqx&quot;;</span><br><span class=\"line\">const char *mqtt_password = &quot;public&quot;;</span><br><span class=\"line\">const int mqtt_port = 1883;</span><br><span class=\"line\"></span><br><span class=\"line\">//-------------------------网络时间获取----------------------------------//</span><br><span class=\"line\">const char *ntpServer = &quot;pool.ntp.org&quot;; //网络时间服务器</span><br><span class=\"line\">const long gmtOffset_sec = 8 * 3600; //时区设置函数，东八区（UTC/GMT+8:00）写成8*3600   </span><br><span class=\"line\">const int daylightOffset_sec = 0;   //夏令时填写3600，否则填0</span><br><span class=\"line\"></span><br><span class=\"line\">//==========================变量声明====================================//</span><br><span class=\"line\">extern int Flag;</span><br><span class=\"line\"></span><br><span class=\"line\">//==========================函数声明====================================//</span><br><span class=\"line\">void WiFi_Connect();</span><br><span class=\"line\">void ParserJson();</span><br><span class=\"line\">void OLEDDisplay(String cityName, String weather, String temperature, int code_int);</span><br><span class=\"line\">void printLocalTime();</span><br><span class=\"line\">void ConnectMQTT();</span><br><span class=\"line\">void PublishAndSubscribe();</span><br><span class=\"line\">void callback(char *topic, byte *payload, unsigned int length);</span><br><span class=\"line\"></span><br><span class=\"line\">//=============================MQTT====================================//</span><br><span class=\"line\">WiFiClient espClient;</span><br><span class=\"line\">PubSubClient client(espClient);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//WiFi connect function</span><br><span class=\"line\">void WiFi_Connect()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">                    //Connection state judgment</span><br><span class=\"line\">    while(WiFi.status() != WL_CONNECTED)&#123;  </span><br><span class=\"line\">        delay(1000);</span><br><span class=\"line\">        Serial.println(&quot;Connecting to WiFi...&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        /**********屏幕显示wifi连接状态*************/</span><br><span class=\"line\">        u8g2.clearBuffer();</span><br><span class=\"line\">        u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">        u8g2.setCursor(0,16);</span><br><span class=\"line\">        u8g2.print(&quot;wifi连接中&quot;);</span><br><span class=\"line\">        u8g2.sendBuffer();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Serial.println(&quot;Connected to the WiFi network&quot;);</span><br><span class=\"line\">    u8g2.clearBuffer();</span><br><span class=\"line\">    u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">    u8g2.setCursor(0,16);</span><br><span class=\"line\">    u8g2.print(&quot;wifi成功&quot;);</span><br><span class=\"line\">    u8g2.sendBuffer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// PubSubClient 连接到公共 MQTT Broker</span><br><span class=\"line\">void ConnectMQTT()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  client.setServer(mqtt_broker, mqtt_port);</span><br><span class=\"line\">  client.setCallback(callback);</span><br><span class=\"line\">  while (!client.connected()) &#123;</span><br><span class=\"line\">      String client_id = &quot;esp32-client-&quot;;</span><br><span class=\"line\">      client_id += String(WiFi.macAddress());</span><br><span class=\"line\">      Serial.printf(&quot;The client %s connects to the public mqtt broker\\n&quot;, client_id.c_str());</span><br><span class=\"line\">      if (client.connect(client_id.c_str(), mqtt_username, mqtt_password)) &#123;</span><br><span class=\"line\">          Serial.println(&quot;Public emqx mqtt broker connected&quot;);</span><br><span class=\"line\">      &#125; else &#123;</span><br><span class=\"line\">          Serial.print(&quot;failed with state &quot;);</span><br><span class=\"line\">          Serial.print(client.state());</span><br><span class=\"line\">          delay(2000);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  PublishAndSubscribe();</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// publish and subscribe</span><br><span class=\"line\">void PublishAndSubscribe()&#123;</span><br><span class=\"line\">  client.publish(topic, &quot;Hi EMQX I&#x27;m ESP32 ^^&quot;);</span><br><span class=\"line\">  client.subscribe(topic);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//callback</span><br><span class=\"line\">void callback(char *topic, byte *payload, unsigned int length) &#123;</span><br><span class=\"line\">    Serial.print(&quot;Message arrived in topic: &quot;);</span><br><span class=\"line\">    Serial.println(topic);</span><br><span class=\"line\">    Serial.print(&quot;Message:&quot;);</span><br><span class=\"line\">    String message;</span><br><span class=\"line\">    for (int i = 0; i &lt; length; i++) &#123;</span><br><span class=\"line\">        message = message + (char) payload[i];  // convert *byte to string</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.print(message);</span><br><span class=\"line\">    if (message == &quot;on&quot;) &#123;</span><br><span class=\"line\">      Flag = 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if (message == &quot;off&quot;) &#123;</span><br><span class=\"line\">      Flag = 0;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.println();</span><br><span class=\"line\">    Serial.println(&quot;-----------------------&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//获取Json报文并解析</span><br><span class=\"line\">void ParserJson()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  HTTPClient http;</span><br><span class=\"line\">  //                                                            你的私钥                      查询地址       语言   温度单位</span><br><span class=\"line\">  http.begin(&quot;https://api.seniverse.com/v3/weather/now.json?key=SvbJTBaB9LvBrsItI&amp;location=liuzhou&amp;language=zh-Hans&amp;unit=c&quot;);//Specify the URL</span><br><span class=\"line\">  int httpCode = http.GET();            // Make the request</span><br><span class=\"line\">  if (httpCode &gt; 0) &#123; // Check for the returning code</span><br><span class=\"line\"></span><br><span class=\"line\">    String payload = http.getString();</span><br><span class=\"line\">    Serial.println(httpCode);</span><br><span class=\"line\">    Serial.println(payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    StaticJsonDocument&lt;1024&gt; doc; </span><br><span class=\"line\"></span><br><span class=\"line\">    DeserializationError error = deserializeJson(doc, payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    if (error) &#123;</span><br><span class=\"line\">      Serial.println(&quot;JSON parsing failed!&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      JsonObject obj1 = doc[&quot;results&quot;][0];  //new 一个对象存储访问result信息</span><br><span class=\"line\">      String cityName = obj1[&quot;location&quot;][&quot;name&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String weather = obj1[&quot;now&quot;][&quot;text&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String code = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String temperature = obj1[&quot;now&quot;][&quot;temperature&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      int code_int = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;int&gt;();</span><br><span class=\"line\">      OLEDDisplay(cityName, weather, temperature, code_int);  //屏幕显示报文信息</span><br><span class=\"line\">      //int code_int = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;int&gt;();</span><br><span class=\"line\">      Serial.println(cityName);</span><br><span class=\"line\">      Serial.println(code);</span><br><span class=\"line\">      //Serial.println(weather);</span><br><span class=\"line\">      Serial.println(temperature);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;else &#123;</span><br><span class=\"line\">    Serial.println(&quot;Error on HTTP request&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  http.end(); //Free the resources</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//屏幕绘制信息</span><br><span class=\"line\">void OLEDDisplay(String cityName, String weather, String temperature, int code_int)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">  u8g2.setFontDirection(0);</span><br><span class=\"line\">  u8g2.clearBuffer();</span><br><span class=\"line\">  //u8g2.drawXBMP(3, 3, 35, 32, cloudy); u8g2.setCursor(43 , 16 ); u8g2.println(&quot;多&quot;); u8g2.setCursor(43 , 30 ); u8g2.println(&quot;云&quot;);</span><br><span class=\"line\">  u8g2.setCursor(65, 10);</span><br><span class=\"line\">  u8g2.print(&quot;城市: &quot;);</span><br><span class=\"line\">  u8g2.print(cityName);</span><br><span class=\"line\">  u8g2.setCursor(65, 25);</span><br><span class=\"line\">  u8g2.print(&quot;天气: &quot;);</span><br><span class=\"line\">  u8g2.print(weather);</span><br><span class=\"line\">  u8g2.setCursor(65, 40);</span><br><span class=\"line\">  u8g2.print(&quot;温度: &quot;);</span><br><span class=\"line\">  u8g2.print(temperature);</span><br><span class=\"line\">  u8g2.print(&quot;℃&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  //==========================天气图标显示=========================//</span><br><span class=\"line\">  </span><br><span class=\"line\">  //u8g2.drawXBMP(10, 3, sunny_x, sunny_y, sunny);</span><br><span class=\"line\">  switch (code_int)&#123;</span><br><span class=\"line\">    case 0:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, sunny_x, sunny_y, sunny);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 1:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, clear_x, clear_y, clear);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 2:</span><br><span class=\"line\">      //</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 3:</span><br><span class=\"line\">      //</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 4:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, cloudy_x, cloudy_y, cloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 5:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 6:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 7:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 8:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 9:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Overcast_x, Overcast_y, Overcast);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 10:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Shower_x, Shower_y, Shower);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 11:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Thundershower_x, Thundershower_y, Thundershower);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 12:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, ThundershowerWithHail_x, ThundershowerWithHail_y, ThundershowerWithHail);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 13:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 14:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 15:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 16:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 17:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 18:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 19:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, IceRain_x, IceRain_y, IceRain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 20:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Sleet_x, Sleet_y, Sleet);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 21:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, SnowFlurry_x, SnowFlurry_y, SnowFlurry);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 22:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 23:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 24:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 25:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 26:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 27:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 28:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 29:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 30:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Foggy_x, Foggy_y, Foggy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 31:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Haze_x, Haze_y, Haze);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 32:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 33:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 34:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 35:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 36:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Tornado_x, Tornado_y, Tornado);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 37:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Cold_x, Cold_y, Cold);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 38:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hot_x, Hot_y, Hot);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 99:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Unknown_x, Unknown_y, Unknown);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">  </span><br><span class=\"line\">  break;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //--------------------------时间显示--------------------------//</span><br><span class=\"line\">  printLocalTime();</span><br><span class=\"line\"></span><br><span class=\"line\">  u8g2.sendBuffer();</span><br><span class=\"line\">  //delay(1000);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//时间获取</span><br><span class=\"line\">void printLocalTime()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  //delay(500);</span><br><span class=\"line\">  struct tm timeinfo;</span><br><span class=\"line\">  if (!getLocalTime(&amp;timeinfo))</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      Serial.println(&quot;Failed to obtain time&quot;);</span><br><span class=\"line\">      u8g2.setCursor(0,60);</span><br><span class=\"line\">      u8g2.print(&quot;未获取到时间请重置&quot;);</span><br><span class=\"line\">      return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.println(&amp;timeinfo, &quot;%F %T %A&quot;); // 格式化输出,串口显示</span><br><span class=\"line\">  //屏幕显示时间</span><br><span class=\"line\">  //u8g2.clearBuffer();</span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">  u8g2.setCursor(30, 64);</span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%F&quot;);  //日期</span><br><span class=\"line\">  u8g2.setCursor(65, 52);</span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%A&quot;);  //星期</span><br><span class=\"line\">  u8g2.setCursor(95, 64); </span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%R&quot;); //小时-分钟</span><br><span class=\"line\">  // u8g2.setCursor(80, 64); </span><br><span class=\"line\">  // u8g2.print(&amp;timeinfo, &quot;%T&quot;); //小时-分钟-秒 </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//初始化</span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  // put your setup code here, to run once:</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  u8g2.begin();</span><br><span class=\"line\">  // 画笔</span><br><span class=\"line\">  u8g2.enableUTF8Print();</span><br><span class=\"line\">  // wifi</span><br><span class=\"line\">  WiFi_Connect();</span><br><span class=\"line\">  //从网络时间服务器上获取并设置时间</span><br><span class=\"line\">  // 获取成功后芯片会使用RTC时钟保持时间的更新</span><br><span class=\"line\">  //            时区           时令             网络服务器</span><br><span class=\"line\">  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);</span><br><span class=\"line\">  // MQTT</span><br><span class=\"line\">  ConnectMQTT();</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // put your main code here, to run repeatedly:</span><br><span class=\"line\">  client.loop();</span><br><span class=\"line\">  if(Flag == 1)&#123;</span><br><span class=\"line\">    ParserJson();</span><br><span class=\"line\">    delay(3000);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  if(Flag == 0)&#123;</span><br><span class=\"line\">    u8g2.clearBuffer();</span><br><span class=\"line\">    u8g2.sendBuffer();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"头文件\"><a href=\"#头文件\" class=\"headerlink\" title=\"头文件\"></a>头文件</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 说明：这个头文件存放天气图标的字模</span><br><span class=\"line\"> * </span><br><span class=\"line\"> */ </span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef weatherpicture_H</span><br><span class=\"line\">#define weatherpicture_H</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">#define sunny_x 51</span><br><span class=\"line\">#define sunny_y 51</span><br><span class=\"line\">// 晴 0</span><br><span class=\"line\">static const unsigned char sunny[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\0@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define clear_x 51 </span><br><span class=\"line\">#define clear_y 52</span><br><span class=\"line\">// 夜晚 1</span><br><span class=\"line\">static const unsigned char clear[]&#123;</span><br><span class=\"line\">0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0xFE,0x0F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x80,0xFF,0x0F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x07,0x00,0x00,0x00,0x00,0xE0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,</span><br><span class=\"line\">0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,</span><br><span class=\"line\">0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0x07,0xFF,0xFF,0xFF,0xFF,0x03,0xF0,0x07,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\1@1x.bmp&quot;,0</span><br><span class=\"line\"> (51 X 52 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define cloudy_x 60</span><br><span class=\"line\">#define cloudy_y 47</span><br><span class=\"line\">// 多云 4</span><br><span class=\"line\">static const unsigned char cloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xF8,0xF8,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x03,0x00,</span><br><span class=\"line\">0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,</span><br><span class=\"line\">0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFC,0x1F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFC,0x3F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0x01,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0x00,0xFE,0x3F,0x00,0xF8,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\4@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 47 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define PartlyCloudy_x 60</span><br><span class=\"line\">#define PartlyCloudy_y 44</span><br><span class=\"line\">// 晴间多云 5、7</span><br><span class=\"line\">static const unsigned char PartlyCloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xE0,0xCF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\5@1x.bmp&quot;,0</span><br><span class=\"line\"> (60 X 44 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define MostlyCloudy_x 60</span><br><span class=\"line\">#define MostlyCloudy_y 51</span><br><span class=\"line\">// 阴间多云 6、8</span><br><span class=\"line\">static const unsigned char MostlyCloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x03,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0x00,0x0E,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xE7,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\6@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Overcast_x 60</span><br><span class=\"line\">#define Overcast_y 40</span><br><span class=\"line\">//  阴 9</span><br><span class=\"line\">static const unsigned char Overcast[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x80,0x3F,0xFE,0xFF,0xFF,0x01,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\9@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 40 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Shower_x 60</span><br><span class=\"line\">#define Shower_y 59</span><br><span class=\"line\">// 阵雨 10</span><br><span class=\"line\">static const unsigned char Shower[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x03,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0x8F,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x3C,0x00,0x1E,0x00,0x00,0x00,0x78,0x00,0x3E,0x00,0x1F,0x00,0x00,</span><br><span class=\"line\">0x00,0x7C,0x00,0x3E,0x00,0x1F,0x00,0x00,0x00,0x7C,0x00,0x3E,0x80,0x1F,0x00,0x00,0x00,0x7E,0x00,0x1F,0x80,0x0F,0x00,0x00,0x00,0x3E,0x00,0x1F,0x80,0x0F,0x00,0x00,</span><br><span class=\"line\">0x00,0x3F,0x80,0x1F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xE0,0x07,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,</span><br><span class=\"line\">0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x01,0x00,0x00,0x80,0x07,0xC0,0x03,0xE0,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\10@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 59 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Thundershower_x 56</span><br><span class=\"line\">#define Thundershower_y 56</span><br><span class=\"line\">// 雷阵雨 11</span><br><span class=\"line\">static const unsigned char Thundershower[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x08,0xC0,0xFF,0x00,0x18,0x00,0x00,0x3C,0xC0,0x7F,0x00,0x3C,0x00,0x00,</span><br><span class=\"line\">0x3E,0xE0,0x7F,0x00,0x3C,0x00,0x00,0x3E,0xE0,0x3F,0x00,0x3E,0x00,0x00,0x1F,0xE0,0xFF,0x01,0x3E,0x00,0x00,0x1F,0xF0,0xFF,0x00,0x1F,0x00,0x00,0x1F,0xF0,0x7F,0x00,</span><br><span class=\"line\">0x1F,0x00,0x80,0x0F,0xF8,0x3F,0x00,0x1F,0x00,0x80,0x0F,0x80,0x1F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x0F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x07,0xC0,0x07,0x00,0xC0,0x07,</span><br><span class=\"line\">0xC0,0x03,0xC0,0x07,0x00,0xC0,0x03,0xE0,0x01,0x80,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\11@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define ThundershowerWithHail_x 56</span><br><span class=\"line\">#define ThundershowerWithHail_y 56</span><br><span class=\"line\">// 雷阵雨伴有冰雹 12</span><br><span class=\"line\">static const unsigned char ThundershowerWithHail[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x80,</span><br><span class=\"line\">0x03,0xE0,0x7F,0x00,0x0E,0x00,0xE0,0x07,0xE0,0x3F,0x00,0x3F,0x00,0xE0,0x0F,0xE0,0xFF,0x81,0x3F,0x00,0xF0,0x0F,0xF0,0xFF,0x80,0x7F,0x00,0xF0,0x0F,0xF0,0x7F,0x80,</span><br><span class=\"line\">0x7F,0x00,0xF0,0x0F,0xF8,0x3F,0x80,0x3F,0x00,0xE0,0x07,0x80,0x1F,0x00,0x3F,0x00,0xC0,0x03,0xC0,0x0F,0x00,0x1E,0x00,0x00,0x00,0xC0,0x07,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\12@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Rain_x 56</span><br><span class=\"line\">#define Rain_y 54</span><br><span class=\"line\">// 小雨、中雨、大于、暴雨、大暴雨、特大暴雨 13、14、15、16、17、18</span><br><span class=\"line\">static const unsigned char Rain[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x18,0x00,0x06,0x00,0x03,0x00,0x00,0x1C,0x00,0x0E,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x80,0x0F,0xC0,</span><br><span class=\"line\">0x03,0x00,0x00,0x0F,0x80,0x07,0xC0,0x03,0x00,0x00,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x80,0x0F,0xC0,0x03,0xE0,0x01,0x00,0x80,0x07,0xC0,0x03,0xF0,0x01,0x00,0xC0,0x07,</span><br><span class=\"line\">0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0x70,0x00,0x00,0xC0,0x01,0xE0,0x00,0x70,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\13@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 54 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define IceRain_x 56</span><br><span class=\"line\">#define IceRain_y 57</span><br><span class=\"line\">// 冻雨 19</span><br><span class=\"line\">static const unsigned char IceRain[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x18,0x00,0x04,0x00,0x00,</span><br><span class=\"line\">0x70,0x00,0x3C,0x00,0x0E,0x00,0x00,0xF8,0x00,0x7E,0x00,0x1F,0x00,0x00,0xFC,0x01,0xFF,0x80,0x3F,0x00,0x00,0xFE,0x03,0xFF,0xC0,0x7F,0x00,0x00,0xFC,0x01,0x7E,0x80,</span><br><span class=\"line\">0x3F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x1F,0x00,0x00,0x70,0x00,0x1C,0x00,0x0E,0x00,0x00,0x20,0x10,0x08,0x00,0x04,0x00,0x00,0x00,0x38,0x00,0x18,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x7C,0x00,0x3C,0x00,0x00,0x00,0x00,0xFE,0x00,0x7E,0x00,0x00,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFE,0x00,0xFF,0x00,0x00,0x00,0x00,0x7C,0x00,0x7E,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x38,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\19@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 57 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Sleet_x 56</span><br><span class=\"line\">#define Sleet_y 55</span><br><span class=\"line\">// 雨夹雪 20</span><br><span class=\"line\">static const unsigned char Sleet[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3B,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3F,0x00,0x00,0xF8,0x00,0x3E,0x80,</span><br><span class=\"line\">0x3F,0x00,0x00,0x78,0x00,0x1E,0xC0,0x7F,0x00,0x00,0x7C,0x00,0x1F,0xE0,0xFF,0x00,0x00,0x3C,0x00,0x0F,0xF0,0xFF,0x01,0x00,0x3C,0x00,0x0F,0xE0,0xFF,0x00,0x00,0x3E,</span><br><span class=\"line\">0x80,0x0F,0x80,0x3F,0x00,0x00,0x1E,0x80,0x07,0x80,0x3F,0x00,0x00,0x1F,0xC0,0x07,0x80,0x3B,0x00,0x00,0x0F,0xC0,0x03,0x80,0x33,0x00,0x00,0x06,0x80,0x01,0x00,0x00,</span><br><span class=\"line\">0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\20@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 55 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define SnowFlurry_x 56</span><br><span class=\"line\">#define SnowFlurry_y 56</span><br><span class=\"line\">// 阵雪 21</span><br><span class=\"line\">static const unsigned char SnowFlurry[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,</span><br><span class=\"line\">0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xC0,0xE0,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x3D,0xC0,0x3B,</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xE0,0x7F,0xE0,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,</span><br><span class=\"line\">0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,</span><br><span class=\"line\">0x00,0x00,0x80,0x19,0x80,0x19,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\21@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Snow_x 56</span><br><span class=\"line\">#define Snow_y 53</span><br><span class=\"line\">// 小雪、中雪、大雪、暴雪 22、23、24、25</span><br><span class=\"line\">static const unsigned char Snow[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x80,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0x00,0xC6,0x00,0x00,0x00,0x00,0xFF,0x00,0xEE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0xFF,0x83,0xFF,0x03,0x00,0x00,0xC0,0xFF,0xC3,0xFF,0x07,0x00,0x00,0xC0,0xFF,0x83,0xFF,0x03,0x00,0x00,0x80,0xFF,0x01,0xFF,0x01,0x00,0x00,0x00,</span><br><span class=\"line\">0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xEE,0x00,0xEE,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\22@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 53 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Dust_x 53</span><br><span class=\"line\">#define Dust_y 45</span><br><span class=\"line\">// 浮尘、扬沙 26、27</span><br><span class=\"line\">static const unsigned char Dust[] = &#123;</span><br><span class=\"line\">0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0x7C,0xC0,0x07,</span><br><span class=\"line\">0x7C,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFF,0xE1,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xC0,0x07,0x7C,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xE0,0x0F,0xFC,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,</span><br><span class=\"line\">0xFF,0xF1,0x1F,0x00,0x7E,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFF,0xE0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xE1,0x1F,0x00,0xFE,0xE0,0x0F,</span><br><span class=\"line\">0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE0,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xF1,0x1F,0x00,0xFE,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\26@1x.bmp&quot;,0</span><br><span class=\"line\">(53 X 45 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Duststorm_x 58</span><br><span class=\"line\">#define Duststorm_y 34</span><br><span class=\"line\">// 沙尘暴、强沙尘暴 28、29</span><br><span class=\"line\">static const unsigned char Duststorm[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x38,0x1C,0x0E,0x87,0xFF,0x03,0x00,0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x07,0x00,0x00,0x7C,0x3E,0x9F,0x8F,0xFF,0x07,0x00,</span><br><span class=\"line\">0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x0F,0x00,0x00,0x38,0x1C,0x0E,0x87,0x87,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x0F,0x00,0x8F,0x87,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x8F,0xC7,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x06,0x83,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x78,0x3C,0xFE,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x00,0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x01,0xF8,0x78,0x3C,0xFE,0xFF,0xFF,0xFF,0x03,0x60,0x30,0x18,0xFC,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x03,</span><br><span class=\"line\">0x00,0x1C,0x0E,0x87,0xC7,0xE3,0xF3,0x03,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x03,0x00,0x3E,0x9F,0xCF,0xC7,0xE7,0xFF,0x01,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x01,</span><br><span class=\"line\">0x00,0x1C,0x0E,0x87,0x83,0xC1,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\28@1x.bmp&quot;,0</span><br><span class=\"line\">(58 X 34 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Foggy_x 54</span><br><span class=\"line\">#define Foggy_y 50</span><br><span class=\"line\">// 雾 30</span><br><span class=\"line\">static const unsigned char Foggy[] = &#123;</span><br><span class=\"line\">0x00,0xE0,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFE,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\30@1x.bmp&quot;,0</span><br><span class=\"line\">(54 X 50 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Haze_x 56</span><br><span class=\"line\">#define Haze_y 50</span><br><span class=\"line\">// 霾 31</span><br><span class=\"line\">static const unsigned char Haze[] = &#123;</span><br><span class=\"line\">0x7C,0x00,0x00,0x3E,0x00,0x00,0x78,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,</span><br><span class=\"line\">0x00,0x00,0x7C,0x10,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0xC0,0x7F,0x00,0xC0,0xFF,0x0F,0x00,0xF0,</span><br><span class=\"line\">0xFF,0x01,0xF0,0xFF,0x3F,0x00,0xFC,0xFF,0x07,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xFC,0xFF,0xFF,0x80,0xFF,0xFF,0x1F,0xFC,0x87,0xFF,0x81,0xFF,0xF1,0x3F,0xFE,0x01,</span><br><span class=\"line\">0xFC,0xC3,0x3F,0x80,0x3F,0x7E,0x00,0xF8,0xE7,0x0F,0x00,0x7F,0x3F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x3F,0x00,0xE0,0xFF,0x03,0x00,0xFE,0x3F,0x00,0xC0,0xFF,0x03,0x00,</span><br><span class=\"line\">0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x00,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,</span><br><span class=\"line\">0xFF,0x01,0x00,0xFC,0x3F,0x00,0xC0,0xFF,0x03,0x00,0xFC,0x3F,0x00,0xE0,0xFF,0x07,0x00,0xFE,0x7F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x7E,0x00,0xF8,0xE3,0x1F,0x00,0x7F,</span><br><span class=\"line\">0xFE,0x01,0xFC,0xC3,0x3F,0xC0,0x3F,0xFC,0x8F,0xFF,0x81,0xFF,0xFB,0x3F,0xF8,0xFF,0xFF,0x00,0xFF,0xFF,0x1F,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xE0,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x07,0xC0,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFE,0x01,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3C,0x00,0x00,0x78,0x7C,0x00,0x00,0x3E,0x00,</span><br><span class=\"line\">0x00,0x7C,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0x7C,0x38,0x00,0x00,0x1C,0x00,0x00,0x38,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\31@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 50 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Windy_x 56</span><br><span class=\"line\">#define Windy_y 44</span><br><span class=\"line\">// 风、大风 32、33</span><br><span class=\"line\">static const unsigned char Windy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFD,0x01,0x00,0x00,0x00,0x00,0x7C,0xF0,</span><br><span class=\"line\">0x01,0xFC,0x03,0x00,0x00,0x3C,0xE0,0x03,0xFF,0x0F,0x00,0x00,0x3C,0xC0,0x83,0xFF,0x1F,0x00,0x00,0x00,0xC0,0xC3,0x9F,0x3F,0x00,0x00,0x00,0xC0,0xE3,0x07,0x7E,0x00,</span><br><span class=\"line\">0x00,0x00,0xE0,0xE3,0x03,0x7C,0x00,0x00,0x00,0xF0,0xF1,0x01,0xF8,0x00,0x00,0x00,0xF8,0xF1,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0xF0,</span><br><span class=\"line\">0x00,0xF0,0xFF,0xFF,0xFF,0x3F,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0x03,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x07,0x3E,0x00,0x00,0x00,0x00,0x80,0x0F,0x1F,0x00,0x00,0x00,0x00,0x80,0xFF,0x1F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\32@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 44 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Hurricane_x 56</span><br><span class=\"line\">#define Hurricane_y 56</span><br><span class=\"line\">// 飓风、热带风暴 34、35</span><br><span class=\"line\">static const unsigned char Hurricane[] = &#123;</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\34@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Tornado_x 56</span><br><span class=\"line\">#define Tornado_y 55</span><br><span class=\"line\">// 龙卷风 36</span><br><span class=\"line\">static const unsigned char Tornado[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0x03,0x00,</span><br><span class=\"line\">0xC0,0xFF,0x07,0xF8,0x3F,0x00,0x00,0x00,0xFC,0x0F,0xFC,0x07,0x00,0x00,0x00,0xE0,0x1F,0xFE,0x00,0x80,0xFF,0x01,0x80,0x3F,0x7F,0x00,0xFE,0xFF,0x7F,0x00,0x7E,0x1F,</span><br><span class=\"line\">0xC0,0xFF,0xFF,0xFF,0x03,0x7C,0x0F,0xF0,0xFF,0xFF,0xFF,0x0F,0xF8,0x0F,0xFC,0x3F,0x00,0xFC,0x1F,0xF0,0x0F,0xFE,0x01,0x00,0x80,0x3F,0xF8,0x1F,0x3E,0x00,0x00,0x00,</span><br><span class=\"line\">0x7E,0x78,0x7F,0x1E,0x00,0x00,0x00,0x78,0x7E,0xFE,0x1F,0x00,0x00,0x00,0xF8,0x3F,0xFC,0x3F,0x00,0x00,0x00,0xFE,0x1F,0xF8,0xFF,0x01,0x00,0xC0,0xFF,0x0F,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0x20,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0x00,0xFE,0xFF,0x3F,0x00,</span><br><span class=\"line\">0x07,0xF0,0x03,0x00,0x00,0x00,0xC0,0x0F,0xF0,0x0F,0x00,0x00,0x00,0xF0,0x0F,0xE0,0x7F,0x00,0x00,0x00,0xFE,0x07,0x80,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x80,0x07,0x00,0x00,0xF0,0x07,0x00,0xF0,0x07,0x00,0x00,0xE0,0xFF,0x81,0xFF,0x07,0x00,0x00,0xC0,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x03,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFF,0x1F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xC0,0xC7,0x07,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xC0,0xE7,0x07,0x00,0x00,0x00,0x00,0x80,0xEF,0x03,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,</span><br><span class=\"line\">0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\36@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 55 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Cold_x 51</span><br><span class=\"line\">#define Cold_y 58</span><br><span class=\"line\">// 冷 37</span><br><span class=\"line\">static const unsigned char Cold[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x8F,0xC7,0x07,0x00,0x00,0x00,0x04,0x9F,0xE7,0x07,0x01,0x00,0x00,</span><br><span class=\"line\">0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x1E,0xF0,0x3F,0xC0,0x01,0x00,0x03,0x1E,0xE0,0x1F,0xE0,</span><br><span class=\"line\">0x01,0x03,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x3F,0x1C,0x80,0x07,0xE0,0xF1,0x07,0xFF,0x3C,0x80,0x07,0xE0,0xF8,0x03,0xFC,0x3D,0x80,0x07,0xF0,0xFE,0x01,0xF8,0x3F,</span><br><span class=\"line\">0x80,0x07,0xF0,0x7F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0x80,0x7F,0x80,0x07,0xF0,0x07,0x00,0x00,0xFF,0x80,0x07,0xFC,0x03,0x00,0xE0,0xFF,0x83,0x07,0xFF,0x3F,</span><br><span class=\"line\">0x00,0xFC,0xFF,0x8F,0x87,0xFF,0xFF,0x01,0xFF,0xC7,0x9F,0xE7,0x9F,0xFF,0x03,0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,0x00,0x00,0xF8,</span><br><span class=\"line\">0x7F,0x00,0x00,0x00,0x00,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,</span><br><span class=\"line\">0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0xFF,0xE7,0x9F,0xE7,0x9F,0xFF,0x03,0xFC,0xFF,0x87,0x87,0xFF,0xFF,0x01,0xE0,0xFF,0x83,0x07,0xFE,0x3F,0x00,0x00,0xFF,0x80,0x07,</span><br><span class=\"line\">0xFC,0x03,0x00,0x80,0x7F,0x80,0x07,0xF0,0x0F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0xF8,0x3F,0x80,0x07,0xF0,0x7F,0x00,0xFE,0x3D,0x80,0x07,0xF0,0xFE,0x01,0x7F,</span><br><span class=\"line\">0x3C,0x80,0x07,0xE0,0xF8,0x03,0x3F,0x1C,0x80,0x07,0xE0,0xE1,0x07,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x02,0x1E,0xE0,0x1F,0xE0,0x01,0x03,0x00,0x1E,0xF0,0x3F,0xC0,</span><br><span class=\"line\">0x01,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x04,0x9F,0xE7,0x87,0x01,0x00,0x00,0x80,</span><br><span class=\"line\">0x8F,0xC7,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\37@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 58 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Hot_x 51</span><br><span class=\"line\">#define Hot_y 51</span><br><span class=\"line\">// 热 38</span><br><span class=\"line\">static const unsigned char Hot[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\38@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Unknown_x 53</span><br><span class=\"line\">#define Unknown_y 23</span><br><span class=\"line\">// 未知 99</span><br><span class=\"line\">static const unsigned char Unknown[] = &#123;</span><br><span class=\"line\">0x07,0x80,0x03,0xE0,0x00,0x0E,0x00,0x0F,0x80,0x03,0xE0,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x3F,0x80,0x03,0x78,</span><br><span class=\"line\">0x80,0x3F,0x00,0x7F,0x80,0x03,0x38,0x80,0x3B,0x00,0x77,0x80,0x03,0x38,0xC0,0x7B,0x00,0xF7,0x80,0x03,0x1C,0xC0,0x71,0x00,0xE7,0x81,0x03,0x1C,0xE0,0x71,0x00,0xC7,</span><br><span class=\"line\">0x81,0x03,0x1E,0xE0,0xF0,0x00,0xC7,0x83,0x03,0x0E,0xE0,0xE0,0x00,0x87,0x87,0x03,0x0E,0xF0,0xE0,0x01,0x07,0x87,0x03,0x07,0x70,0xC0,0x01,0x07,0x8F,0x03,0x07,0x78,</span><br><span class=\"line\">0xC0,0x03,0x07,0x9E,0x83,0x03,0xF8,0xFF,0x03,0x07,0xBC,0x83,0x03,0xFC,0xFF,0x03,0x07,0xBC,0xC3,0x03,0xFC,0xFF,0x07,0x07,0xF8,0xC3,0x01,0x1C,0x00,0x07,0x07,0xF0,</span><br><span class=\"line\">0xC3,0x01,0x1E,0x00,0x0F,0x07,0xF0,0xE3,0x00,0x0E,0x00,0x0E,0x07,0xE0,0xE3,0x00,0x0F,0x00,0x1E,0x07,0xC0,0xF3,0x00,0x07,0x00,0x1E,0x07,0xC0,0x73,0x00,0x07,0x00,</span><br><span class=\"line\">0x1C,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\99@1x.bmp&quot;,0</span><br><span class=\"line\">(53 X 23 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h1><p><img src=\"https://i.niupic.com/images/2022/06/29/a0JC.jpg\" alt=\"1\"><br><img src=\"https://i.niupic.com/images/2022/06/29/a0JE.jpg\" alt=\"2\"><br><img src=\"https://i.niupic.com/images/2022/06/29/a0JD.jpg\" alt=\"3\"></p>\n<p><strong>接下来就是将ESP32视频用MQTT进行推流，希望能解决YOLO处理后视频卡顿的问题,真的没钱换电脑</strong><br><img src=\"https://img0.baidu.com/it/u=194229253,3926891282&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto?sec=1656608400&t=c8620de10f8bacb3ad1b1c7950d098f8\"></p>"},{"title":"OpenCV踩坑记录","_content":"# 前言\n突然意识到自己遇到了很多坑，但是都忘记记录下来了。特此开一个踩坑记录把我遇到的坑记录下来\n<!--more-->\n## 踩坑记录\n1. 图片路径不能有中文\n```\n报错：OpenCV(4.5.5) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function ‘cv::cvtColor’\n\n因为路径中有中文！！！\n\n```","source":"_posts/OpenCV的坑/踩坑记录.md","raw":"---\ntitle: OpenCV踩坑记录\n---\n# 前言\n突然意识到自己遇到了很多坑，但是都忘记记录下来了。特此开一个踩坑记录把我遇到的坑记录下来\n<!--more-->\n## 踩坑记录\n1. 图片路径不能有中文\n```\n报错：OpenCV(4.5.5) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function ‘cv::cvtColor’\n\n因为路径中有中文！！！\n\n```","slug":"OpenCV的坑/踩坑记录","published":1,"date":"2022-05-25T10:06:34.841Z","updated":"2022-05-25T09:18:55.628Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeo7000768ur9rz61c81","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>突然意识到自己遇到了很多坑，但是都忘记记录下来了。特此开一个踩坑记录把我遇到的坑记录下来</p>\n<span id=\"more\"></span>\n<h2 id=\"踩坑记录\"><a href=\"#踩坑记录\" class=\"headerlink\" title=\"踩坑记录\"></a>踩坑记录</h2><ol>\n<li>图片路径不能有中文<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">报错：OpenCV(4.5.5) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function ‘cv::cvtColor’</span><br><span class=\"line\"></span><br><span class=\"line\">因为路径中有中文！！！</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>突然意识到自己遇到了很多坑，但是都忘记记录下来了。特此开一个踩坑记录把我遇到的坑记录下来</p>","more":"<h2 id=\"踩坑记录\"><a href=\"#踩坑记录\" class=\"headerlink\" title=\"踩坑记录\"></a>踩坑记录</h2><ol>\n<li>图片路径不能有中文<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">报错：OpenCV(4.5.5) D:\\a\\opencv-python\\opencv-python\\opencv\\modules\\imgproc\\src\\color.cpp:182: error: (-215:Assertion failed) !_src.empty() in function ‘cv::cvtColor’</span><br><span class=\"line\"></span><br><span class=\"line\">因为路径中有中文！！！</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"python-format","_content":"# format\n<!--more-->\n# 前言\n在学习KNN算法例子中有这一句：\n```\nprint(\"result:  {}\\n\".format(results))\nprint(\"neighbours:  {}\\n\".format(neighbours))\nprint(\"distance:  {}\\n\".format(dist))\n```\n有点看不懂就去百度看了语法，记录一下自己的学习。\n# format()\n*args和**kwargs是python中的可变参数;\n*args表示任何多个无名参数,是tuple类型;\n**表示关键字参数,是dict类型;\n同时使用*args和kwargs时,*args必须放在kwargs前面;\n例子：\n```\ndef foo(*args, **kwargs):\n\tprint(\"args={}\".format(args))\n\tprint(\"kwargs={}\".format(kwargs))\n\tfor i in range(10):\n\t\tprint(\"**\"*10,end='')\nif __name__ == \"__main__\":\n\t# tuple类型数据\n\tfoo(1, 2, 3, 4)\n\t# dict类型数据\n\tfoo(a=1, b=2, c=3)\n\t# tuple+dict类型数据\n\tfoo(1, 2, 3, 4, a=1, b=2, c=3)\n```\n结果：\n```\n# *args为tuple类型\n# **kwargs为dict类型\nargs=(1, 2, 3)\nkwargs={}\n********************\nargs=()\nkwargs={'a': 1, 'b': 2, 'c': 3}\n********************\nargs=(1, 2, 3)\nkwargs={'a': 1, 'b': 2, 'c': 3}\n********************\n```\n\n作用： 格式化字符串函数\nformat是Python2.6开始新增的格式化字符串函数,形式str.format();\n使用形式\"{}{}\".format(\"a\",\"b\");\n传统%引用变量输出,即print(\"%d\" %a);\nformat参数个数不受限制.\n\n例子：\n```\na = \"{} {}\".format(\"xin\", \"daqi\")\nb = \"{},{}\".format(\"OK\",\"See you later!\")\nprint(type(a))\nprint(a)\nprint(type(b))\nprint(b)\n\n```\n结果：\n```\n# format输出格式为字符串,默认按照参数先后位置输出\n<class 'str'>\nxin daqi\n<class 'str'>\nOK,See you later!\n```\n参考：\n[https://blog.csdn.net/Xin_101/article/details/83784322](https://blog.csdn.net/Xin_101/article/details/83784322)","source":"_posts/Python_language/format.md","raw":"---\ntitle: python-format\n---\n# format\n<!--more-->\n# 前言\n在学习KNN算法例子中有这一句：\n```\nprint(\"result:  {}\\n\".format(results))\nprint(\"neighbours:  {}\\n\".format(neighbours))\nprint(\"distance:  {}\\n\".format(dist))\n```\n有点看不懂就去百度看了语法，记录一下自己的学习。\n# format()\n*args和**kwargs是python中的可变参数;\n*args表示任何多个无名参数,是tuple类型;\n**表示关键字参数,是dict类型;\n同时使用*args和kwargs时,*args必须放在kwargs前面;\n例子：\n```\ndef foo(*args, **kwargs):\n\tprint(\"args={}\".format(args))\n\tprint(\"kwargs={}\".format(kwargs))\n\tfor i in range(10):\n\t\tprint(\"**\"*10,end='')\nif __name__ == \"__main__\":\n\t# tuple类型数据\n\tfoo(1, 2, 3, 4)\n\t# dict类型数据\n\tfoo(a=1, b=2, c=3)\n\t# tuple+dict类型数据\n\tfoo(1, 2, 3, 4, a=1, b=2, c=3)\n```\n结果：\n```\n# *args为tuple类型\n# **kwargs为dict类型\nargs=(1, 2, 3)\nkwargs={}\n********************\nargs=()\nkwargs={'a': 1, 'b': 2, 'c': 3}\n********************\nargs=(1, 2, 3)\nkwargs={'a': 1, 'b': 2, 'c': 3}\n********************\n```\n\n作用： 格式化字符串函数\nformat是Python2.6开始新增的格式化字符串函数,形式str.format();\n使用形式\"{}{}\".format(\"a\",\"b\");\n传统%引用变量输出,即print(\"%d\" %a);\nformat参数个数不受限制.\n\n例子：\n```\na = \"{} {}\".format(\"xin\", \"daqi\")\nb = \"{},{}\".format(\"OK\",\"See you later!\")\nprint(type(a))\nprint(a)\nprint(type(b))\nprint(b)\n\n```\n结果：\n```\n# format输出格式为字符串,默认按照参数先后位置输出\n<class 'str'>\nxin daqi\n<class 'str'>\nOK,See you later!\n```\n参考：\n[https://blog.csdn.net/Xin_101/article/details/83784322](https://blog.csdn.net/Xin_101/article/details/83784322)","slug":"Python_language/format","published":1,"date":"2022-05-25T10:06:34.849Z","updated":"2022-05-17T07:39:48.334Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeo8000868urc18j4fap","content":"<h1 id=\"format\"><a href=\"#format\" class=\"headerlink\" title=\"format\"></a>format</h1><span id=\"more\"></span>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在学习KNN算法例子中有这一句：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;result:  &#123;&#125;\\n&quot;.format(results))</span><br><span class=\"line\">print(&quot;neighbours:  &#123;&#125;\\n&quot;.format(neighbours))</span><br><span class=\"line\">print(&quot;distance:  &#123;&#125;\\n&quot;.format(dist))</span><br></pre></td></tr></table></figure>\n<p>有点看不懂就去百度看了语法，记录一下自己的学习。</p>\n<h1 id=\"format-1\"><a href=\"#format-1\" class=\"headerlink\" title=\"format()\"></a>format()</h1><p>*args和**kwargs是python中的可变参数;<br>*args表示任何多个无名参数,是tuple类型;<br>*<em>表示关键字参数,是dict类型;<br>同时使用</em>args和kwargs时,*args必须放在kwargs前面;<br>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def foo(*args, **kwargs):</span><br><span class=\"line\">\tprint(&quot;args=&#123;&#125;&quot;.format(args))</span><br><span class=\"line\">\tprint(&quot;kwargs=&#123;&#125;&quot;.format(kwargs))</span><br><span class=\"line\">\tfor i in range(10):</span><br><span class=\"line\">\t\tprint(&quot;**&quot;*10,end=&#x27;&#x27;)</span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">\t# tuple类型数据</span><br><span class=\"line\">\tfoo(1, 2, 3, 4)</span><br><span class=\"line\">\t# dict类型数据</span><br><span class=\"line\">\tfoo(a=1, b=2, c=3)</span><br><span class=\"line\">\t# tuple+dict类型数据</span><br><span class=\"line\">\tfoo(1, 2, 3, 4, a=1, b=2, c=3)</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># *args为tuple类型</span><br><span class=\"line\"># **kwargs为dict类型</span><br><span class=\"line\">args=(1, 2, 3)</span><br><span class=\"line\">kwargs=&#123;&#125;</span><br><span class=\"line\">********************</span><br><span class=\"line\">args=()</span><br><span class=\"line\">kwargs=&#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span><br><span class=\"line\">********************</span><br><span class=\"line\">args=(1, 2, 3)</span><br><span class=\"line\">kwargs=&#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span><br><span class=\"line\">********************</span><br></pre></td></tr></table></figure>\n\n<p>作用： 格式化字符串函数<br>format是Python2.6开始新增的格式化字符串函数,形式str.format();<br>使用形式”{}{}”.format(“a”,”b”);<br>传统%引用变量输出,即print(“%d” %a);<br>format参数个数不受限制.</p>\n<p>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = &quot;&#123;&#125; &#123;&#125;&quot;.format(&quot;xin&quot;, &quot;daqi&quot;)</span><br><span class=\"line\">b = &quot;&#123;&#125;,&#123;&#125;&quot;.format(&quot;OK&quot;,&quot;See you later!&quot;)</span><br><span class=\"line\">print(type(a))</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(type(b))</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># format输出格式为字符串,默认按照参数先后位置输出</span><br><span class=\"line\">&lt;class &#x27;str&#x27;&gt;</span><br><span class=\"line\">xin daqi</span><br><span class=\"line\">&lt;class &#x27;str&#x27;&gt;</span><br><span class=\"line\">OK,See you later!</span><br></pre></td></tr></table></figure>\n<p>参考：<br><a href=\"https://blog.csdn.net/Xin_101/article/details/83784322\">https://blog.csdn.net/Xin_101/article/details/83784322</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"format\"><a href=\"#format\" class=\"headerlink\" title=\"format\"></a>format</h1>","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在学习KNN算法例子中有这一句：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;result:  &#123;&#125;\\n&quot;.format(results))</span><br><span class=\"line\">print(&quot;neighbours:  &#123;&#125;\\n&quot;.format(neighbours))</span><br><span class=\"line\">print(&quot;distance:  &#123;&#125;\\n&quot;.format(dist))</span><br></pre></td></tr></table></figure>\n<p>有点看不懂就去百度看了语法，记录一下自己的学习。</p>\n<h1 id=\"format-1\"><a href=\"#format-1\" class=\"headerlink\" title=\"format()\"></a>format()</h1><p>*args和**kwargs是python中的可变参数;<br>*args表示任何多个无名参数,是tuple类型;<br>*<em>表示关键字参数,是dict类型;<br>同时使用</em>args和kwargs时,*args必须放在kwargs前面;<br>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def foo(*args, **kwargs):</span><br><span class=\"line\">\tprint(&quot;args=&#123;&#125;&quot;.format(args))</span><br><span class=\"line\">\tprint(&quot;kwargs=&#123;&#125;&quot;.format(kwargs))</span><br><span class=\"line\">\tfor i in range(10):</span><br><span class=\"line\">\t\tprint(&quot;**&quot;*10,end=&#x27;&#x27;)</span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">\t# tuple类型数据</span><br><span class=\"line\">\tfoo(1, 2, 3, 4)</span><br><span class=\"line\">\t# dict类型数据</span><br><span class=\"line\">\tfoo(a=1, b=2, c=3)</span><br><span class=\"line\">\t# tuple+dict类型数据</span><br><span class=\"line\">\tfoo(1, 2, 3, 4, a=1, b=2, c=3)</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># *args为tuple类型</span><br><span class=\"line\"># **kwargs为dict类型</span><br><span class=\"line\">args=(1, 2, 3)</span><br><span class=\"line\">kwargs=&#123;&#125;</span><br><span class=\"line\">********************</span><br><span class=\"line\">args=()</span><br><span class=\"line\">kwargs=&#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span><br><span class=\"line\">********************</span><br><span class=\"line\">args=(1, 2, 3)</span><br><span class=\"line\">kwargs=&#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 2, &#x27;c&#x27;: 3&#125;</span><br><span class=\"line\">********************</span><br></pre></td></tr></table></figure>\n\n<p>作用： 格式化字符串函数<br>format是Python2.6开始新增的格式化字符串函数,形式str.format();<br>使用形式”{}{}”.format(“a”,”b”);<br>传统%引用变量输出,即print(“%d” %a);<br>format参数个数不受限制.</p>\n<p>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = &quot;&#123;&#125; &#123;&#125;&quot;.format(&quot;xin&quot;, &quot;daqi&quot;)</span><br><span class=\"line\">b = &quot;&#123;&#125;,&#123;&#125;&quot;.format(&quot;OK&quot;,&quot;See you later!&quot;)</span><br><span class=\"line\">print(type(a))</span><br><span class=\"line\">print(a)</span><br><span class=\"line\">print(type(b))</span><br><span class=\"line\">print(b)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># format输出格式为字符串,默认按照参数先后位置输出</span><br><span class=\"line\">&lt;class &#x27;str&#x27;&gt;</span><br><span class=\"line\">xin daqi</span><br><span class=\"line\">&lt;class &#x27;str&#x27;&gt;</span><br><span class=\"line\">OK,See you later!</span><br></pre></td></tr></table></figure>\n<p>参考：<br><a href=\"https://blog.csdn.net/Xin_101/article/details/83784322\">https://blog.csdn.net/Xin_101/article/details/83784322</a></p>"},{"title":"with as 语法","_content":"# with as 语法\n<!--more-->\n执行循序\nwith 执行1 as 变量（执行3）：\n    执行2\n\n\n紧跟with后面的语句被求值后，返回对象的 _enter_() 方法被调用，这个方法的返回值将被赋值给as后面的变量。\n当with后面的代码块全部被执行完之后，将调用前面返回对象的 _exit_()方法。\n例子：\n```\n#!/usr/bin/env python\n# with_example01.py\nclass Sample:\n    def __enter__(self):\n        print \"In __enter__()\"\n        return \"Foo\"\n    def __exit__(self, type, value, trace):\n        print \"In __exit__()\"\ndef get_sample():\n    return Sample()\nwith get_sample() as sample:\n    print \"sample:\", sample\n```\n结果:\n```\nbash-3.2$ ./with_example01.py\nIn __enter__()\nsample: Foo\nIn __exit__()\n```\n\n详见大佬链接\n[https://blog.csdn.net/bitcarmanlee/article/details/52745676](https://blog.csdn.net/bitcarmanlee/article/details/52745676)\n","source":"_posts/Python_language/with_as.md","raw":"---\ntitle: with as 语法\n---\n# with as 语法\n<!--more-->\n执行循序\nwith 执行1 as 变量（执行3）：\n    执行2\n\n\n紧跟with后面的语句被求值后，返回对象的 _enter_() 方法被调用，这个方法的返回值将被赋值给as后面的变量。\n当with后面的代码块全部被执行完之后，将调用前面返回对象的 _exit_()方法。\n例子：\n```\n#!/usr/bin/env python\n# with_example01.py\nclass Sample:\n    def __enter__(self):\n        print \"In __enter__()\"\n        return \"Foo\"\n    def __exit__(self, type, value, trace):\n        print \"In __exit__()\"\ndef get_sample():\n    return Sample()\nwith get_sample() as sample:\n    print \"sample:\", sample\n```\n结果:\n```\nbash-3.2$ ./with_example01.py\nIn __enter__()\nsample: Foo\nIn __exit__()\n```\n\n详见大佬链接\n[https://blog.csdn.net/bitcarmanlee/article/details/52745676](https://blog.csdn.net/bitcarmanlee/article/details/52745676)\n","slug":"Python_language/with_as","published":1,"date":"2022-05-25T10:06:34.872Z","updated":"2022-05-17T07:34:24.798Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeoa000968ur45uualbz","content":"<h1 id=\"with-as-语法\"><a href=\"#with-as-语法\" class=\"headerlink\" title=\"with as 语法\"></a>with as 语法</h1><span id=\"more\"></span>\n<p>执行循序<br>with 执行1 as 变量（执行3）：<br>    执行2</p>\n<p>紧跟with后面的语句被求值后，返回对象的 <em>enter</em>() 方法被调用，这个方法的返回值将被赋值给as后面的变量。<br>当with后面的代码块全部被执行完之后，将调用前面返回对象的 <em>exit</em>()方法。<br>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># with_example01.py</span><br><span class=\"line\">class Sample:</span><br><span class=\"line\">    def __enter__(self):</span><br><span class=\"line\">        print &quot;In __enter__()&quot;</span><br><span class=\"line\">        return &quot;Foo&quot;</span><br><span class=\"line\">    def __exit__(self, type, value, trace):</span><br><span class=\"line\">        print &quot;In __exit__()&quot;</span><br><span class=\"line\">def get_sample():</span><br><span class=\"line\">    return Sample()</span><br><span class=\"line\">with get_sample() as sample:</span><br><span class=\"line\">    print &quot;sample:&quot;, sample</span><br></pre></td></tr></table></figure>\n<p>结果:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash-3.2$ ./with_example01.py</span><br><span class=\"line\">In __enter__()</span><br><span class=\"line\">sample: Foo</span><br><span class=\"line\">In __exit__()</span><br></pre></td></tr></table></figure>\n\n<p>详见大佬链接<br><a href=\"https://blog.csdn.net/bitcarmanlee/article/details/52745676\">https://blog.csdn.net/bitcarmanlee/article/details/52745676</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"with-as-语法\"><a href=\"#with-as-语法\" class=\"headerlink\" title=\"with as 语法\"></a>with as 语法</h1>","more":"<p>执行循序<br>with 执行1 as 变量（执行3）：<br>    执行2</p>\n<p>紧跟with后面的语句被求值后，返回对象的 <em>enter</em>() 方法被调用，这个方法的返回值将被赋值给as后面的变量。<br>当with后面的代码块全部被执行完之后，将调用前面返回对象的 <em>exit</em>()方法。<br>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env python</span><br><span class=\"line\"># with_example01.py</span><br><span class=\"line\">class Sample:</span><br><span class=\"line\">    def __enter__(self):</span><br><span class=\"line\">        print &quot;In __enter__()&quot;</span><br><span class=\"line\">        return &quot;Foo&quot;</span><br><span class=\"line\">    def __exit__(self, type, value, trace):</span><br><span class=\"line\">        print &quot;In __exit__()&quot;</span><br><span class=\"line\">def get_sample():</span><br><span class=\"line\">    return Sample()</span><br><span class=\"line\">with get_sample() as sample:</span><br><span class=\"line\">    print &quot;sample:&quot;, sample</span><br></pre></td></tr></table></figure>\n<p>结果:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash-3.2$ ./with_example01.py</span><br><span class=\"line\">In __enter__()</span><br><span class=\"line\">sample: Foo</span><br><span class=\"line\">In __exit__()</span><br></pre></td></tr></table></figure>\n\n<p>详见大佬链接<br><a href=\"https://blog.csdn.net/bitcarmanlee/article/details/52745676\">https://blog.csdn.net/bitcarmanlee/article/details/52745676</a></p>"},{"title":"YOLOv5实现训练训练集","_content":"# 环境配置\n<!--more-->\npycharm\nYOLOv5\npytorch\nlabelling\n\n# 收集样本，贴标签\n## 收集样本用爬虫收集，下面是我用的爬虫代码：\n爬取百度图库图片\n```\n# -*- coding:utf8 -*-\nimport requests\nimport json\nfrom urllib import parse\nimport os\nimport time\n\n\nclass BaiduImageSpider(object):\n    def __init__(self):\n        self.json_count = 0  # 请求到的json文件数量（一个json文件包含30个图像文件）\n        self.url = 'https://image.baidu.com/search/acjson?tn=resultjson_com&logid=5179920884740494226&ipn=rj&ct' \\\n                   '=201326592&is=&fp=result&queryWord={' \\\n                   '}&cl=2&lm=-1&ie=utf-8&oe=utf-8&adpicid=&st=-1&z=&ic=0&hd=&latest=&copyright=&word={' \\\n                   '}&s=&se=&tab=&width=&height=&face=0&istype=2&qc=&nc=1&fr=&expermode=&nojc=&pn={' \\\n                   '}&rn=30&gsm=1e&1635054081427= '\n        self.directory = r\"E:\\爬取百度图库相关图片\\searchName{}\"  # 存储目录  这里需要修改为自己希望保存的目录  {}不要丢\n\n        self.header = {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '\n                          'Chrome/95.0.4638.54 Safari/537.36 Edg/95.0.1020.30 '\n        }\n\n    # 创建存储文件夹\n    def create_directory(self, name):\n        self.directory = self.directory.format(name)\n        # 如果目录不存在则创建\n        if not os.path.exists(self.directory):\n            os.makedirs(self.directory)\n        self.directory += r'\\{}'\n\n    # 获取图像链接\n    def get_image_link(self, url):\n        list_image_link = []\n        strhtml = requests.get(url, headers=self.header)  # Get方式获取网页数据\n        jsonInfo = json.loads(strhtml.text)\n        for index in range(30):\n            list_image_link.append(jsonInfo['data'][index]['thumbURL'])\n        return list_image_link\n\n    # 下载图片\n    def save_image(self, img_link, filename):\n        res = requests.get(img_link, headers=self.header)\n        if res.status_code == 404:\n            print(f\"图片{img_link}下载出错------->\")\n        with open(filename, \"wb\") as f:\n            f.write(res.content)\n            print(\"存储路径：\" + filename)\n\n    # 入口函数\n    def run(self):\n        searchName = input(\"查询内容：\")\n        searchName_parse = parse.quote(searchName)  # 编码\n\n        self.create_directory(searchName)\n\n        pic_number = 0  # 图像数量\n        for index in range(self.json_count):\n            pn = (index+1)*30\n            request_url = self.url.format(searchName_parse, searchName_parse, str(pn))\n            list_image_link = self.get_image_link(request_url)\n            for link in list_image_link:\n                pic_number += 1\n                self.save_image(link, self.directory.format(str(pic_number)+'.jpg'))\n                time.sleep(0.2)  # 休眠0.2秒，防止封ip\n        print(searchName+\"----图像下载完成--------->\")\n\n\nif __name__ == '__main__':\n    spider = BaiduImageSpider()\n    spider.json_count = 10   # 定义下载10组图像，也就是三百张\n    spider.run()\n\n\n```\n## 贴标签\n网上有很多教程，这里放一个我用的\n[贴标签教程1](https://blog.csdn.net/GenuineMonster/article/details/118614657)\n[贴标签教程2](https://www.cnblogs.com/StarZhai/p/11926610.html)\n\n\n# 在Pycharm下训练\n![](https://i.niupic.com/images/2022/06/09/a0oD.jpg)\n相关目录形式如上图所示\n其中关于coco128文件夹以及在YOLO中需要修改.yaml文件根据这个[教程](https://blog.csdn.net/GenuineMonster/article/details/118614657)进行对应的设置\n\n在准备好coco128文件和对应的.yaml文件的设置后点开train.py文件找到下图所示代码：\n![](https://i.niupic.com/images/2022/06/09/a0oE.jpg)\n主要关注红圈或者红线的参数\n对应参数的解释大致如下：\n**Epoch**\n一个epoch , 表示： 所有的数据送入网络中， 完成了一次前向计算 + 反向传播的过程。\n由于一个epoch 常常太大， 分成 几个小的 baches .\n将所有数据迭代训练一次是不够的， 需要反复多次才能拟合、收敛。\n在实际训练时、 将所有数据分成多个batch ， 每次送入一部分数据。\n使用单个epoch 更新权重 不够。\n随着epoch 数量的增加， 权重更新迭代的次数增多， 曲线从最开始的不拟合状态， 进入优化拟合状态， 最终进入过拟合。\nepoch 如何设置： 大小与数据集的多样化程度有关， 多样化程度越强， epoch 越大。\n**batchsize**\n每个batch 中： 训练样本的数量。\nbatch size 大小的选择也很重要， 最优化网络模型的性能+速度。\n当数据量较小， 计算机可以承载只有1个batch 的训练方式时， 收敛效果会好。\nmini-batch : 将所有数据分为若干个batch , 每个batch 包含一部分训练样本。。\n**iterations**\n完成一次epoch 需要的batch 个数\nbatch numbers 就是 iterations .\n分为了多少个batch? : 数据总数/ batch_size\n[参数解释链接](https://blog.csdn.net/weixin_38754799/article/details/109831970?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-109831970-blog-107870356.pc_relevant_antiscanv3&spm=1001.2101.3001.4242.4&utm_relevant_index=7)\n以上这些参数根据自己需要修改\n***红下划线参数，workers，需要将default=0***\n这些设置完后就可以开始训练了，右键运行train.py文件，运行过程如下图：\n![](https://i.niupic.com/images/2022/06/09/a0oL.jpg)\n在训练完后你会在run文件夹中看到你本次训练的结果，如下图：\n![](https://i.niupic.com/images/2022/06/09/a0oF.jpg)\n\n","source":"_posts/YOLOv5/yolo训练自己的训练集.md","raw":"---\ntitle: YOLOv5实现训练训练集\n---\n# 环境配置\n<!--more-->\npycharm\nYOLOv5\npytorch\nlabelling\n\n# 收集样本，贴标签\n## 收集样本用爬虫收集，下面是我用的爬虫代码：\n爬取百度图库图片\n```\n# -*- coding:utf8 -*-\nimport requests\nimport json\nfrom urllib import parse\nimport os\nimport time\n\n\nclass BaiduImageSpider(object):\n    def __init__(self):\n        self.json_count = 0  # 请求到的json文件数量（一个json文件包含30个图像文件）\n        self.url = 'https://image.baidu.com/search/acjson?tn=resultjson_com&logid=5179920884740494226&ipn=rj&ct' \\\n                   '=201326592&is=&fp=result&queryWord={' \\\n                   '}&cl=2&lm=-1&ie=utf-8&oe=utf-8&adpicid=&st=-1&z=&ic=0&hd=&latest=&copyright=&word={' \\\n                   '}&s=&se=&tab=&width=&height=&face=0&istype=2&qc=&nc=1&fr=&expermode=&nojc=&pn={' \\\n                   '}&rn=30&gsm=1e&1635054081427= '\n        self.directory = r\"E:\\爬取百度图库相关图片\\searchName{}\"  # 存储目录  这里需要修改为自己希望保存的目录  {}不要丢\n\n        self.header = {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '\n                          'Chrome/95.0.4638.54 Safari/537.36 Edg/95.0.1020.30 '\n        }\n\n    # 创建存储文件夹\n    def create_directory(self, name):\n        self.directory = self.directory.format(name)\n        # 如果目录不存在则创建\n        if not os.path.exists(self.directory):\n            os.makedirs(self.directory)\n        self.directory += r'\\{}'\n\n    # 获取图像链接\n    def get_image_link(self, url):\n        list_image_link = []\n        strhtml = requests.get(url, headers=self.header)  # Get方式获取网页数据\n        jsonInfo = json.loads(strhtml.text)\n        for index in range(30):\n            list_image_link.append(jsonInfo['data'][index]['thumbURL'])\n        return list_image_link\n\n    # 下载图片\n    def save_image(self, img_link, filename):\n        res = requests.get(img_link, headers=self.header)\n        if res.status_code == 404:\n            print(f\"图片{img_link}下载出错------->\")\n        with open(filename, \"wb\") as f:\n            f.write(res.content)\n            print(\"存储路径：\" + filename)\n\n    # 入口函数\n    def run(self):\n        searchName = input(\"查询内容：\")\n        searchName_parse = parse.quote(searchName)  # 编码\n\n        self.create_directory(searchName)\n\n        pic_number = 0  # 图像数量\n        for index in range(self.json_count):\n            pn = (index+1)*30\n            request_url = self.url.format(searchName_parse, searchName_parse, str(pn))\n            list_image_link = self.get_image_link(request_url)\n            for link in list_image_link:\n                pic_number += 1\n                self.save_image(link, self.directory.format(str(pic_number)+'.jpg'))\n                time.sleep(0.2)  # 休眠0.2秒，防止封ip\n        print(searchName+\"----图像下载完成--------->\")\n\n\nif __name__ == '__main__':\n    spider = BaiduImageSpider()\n    spider.json_count = 10   # 定义下载10组图像，也就是三百张\n    spider.run()\n\n\n```\n## 贴标签\n网上有很多教程，这里放一个我用的\n[贴标签教程1](https://blog.csdn.net/GenuineMonster/article/details/118614657)\n[贴标签教程2](https://www.cnblogs.com/StarZhai/p/11926610.html)\n\n\n# 在Pycharm下训练\n![](https://i.niupic.com/images/2022/06/09/a0oD.jpg)\n相关目录形式如上图所示\n其中关于coco128文件夹以及在YOLO中需要修改.yaml文件根据这个[教程](https://blog.csdn.net/GenuineMonster/article/details/118614657)进行对应的设置\n\n在准备好coco128文件和对应的.yaml文件的设置后点开train.py文件找到下图所示代码：\n![](https://i.niupic.com/images/2022/06/09/a0oE.jpg)\n主要关注红圈或者红线的参数\n对应参数的解释大致如下：\n**Epoch**\n一个epoch , 表示： 所有的数据送入网络中， 完成了一次前向计算 + 反向传播的过程。\n由于一个epoch 常常太大， 分成 几个小的 baches .\n将所有数据迭代训练一次是不够的， 需要反复多次才能拟合、收敛。\n在实际训练时、 将所有数据分成多个batch ， 每次送入一部分数据。\n使用单个epoch 更新权重 不够。\n随着epoch 数量的增加， 权重更新迭代的次数增多， 曲线从最开始的不拟合状态， 进入优化拟合状态， 最终进入过拟合。\nepoch 如何设置： 大小与数据集的多样化程度有关， 多样化程度越强， epoch 越大。\n**batchsize**\n每个batch 中： 训练样本的数量。\nbatch size 大小的选择也很重要， 最优化网络模型的性能+速度。\n当数据量较小， 计算机可以承载只有1个batch 的训练方式时， 收敛效果会好。\nmini-batch : 将所有数据分为若干个batch , 每个batch 包含一部分训练样本。。\n**iterations**\n完成一次epoch 需要的batch 个数\nbatch numbers 就是 iterations .\n分为了多少个batch? : 数据总数/ batch_size\n[参数解释链接](https://blog.csdn.net/weixin_38754799/article/details/109831970?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-109831970-blog-107870356.pc_relevant_antiscanv3&spm=1001.2101.3001.4242.4&utm_relevant_index=7)\n以上这些参数根据自己需要修改\n***红下划线参数，workers，需要将default=0***\n这些设置完后就可以开始训练了，右键运行train.py文件，运行过程如下图：\n![](https://i.niupic.com/images/2022/06/09/a0oL.jpg)\n在训练完后你会在run文件夹中看到你本次训练的结果，如下图：\n![](https://i.niupic.com/images/2022/06/09/a0oF.jpg)\n\n","slug":"YOLOv5/yolo训练自己的训练集","published":1,"date":"2022-06-09T03:06:56.635Z","updated":"2022-06-09T09:43:29.646Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeoc000a68urc0892qvq","content":"<h1 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h1><span id=\"more\"></span>\n<p>pycharm<br>YOLOv5<br>pytorch<br>labelling</p>\n<h1 id=\"收集样本，贴标签\"><a href=\"#收集样本，贴标签\" class=\"headerlink\" title=\"收集样本，贴标签\"></a>收集样本，贴标签</h1><h2 id=\"收集样本用爬虫收集，下面是我用的爬虫代码：\"><a href=\"#收集样本用爬虫收集，下面是我用的爬虫代码：\" class=\"headerlink\" title=\"收集样本用爬虫收集，下面是我用的爬虫代码：\"></a>收集样本用爬虫收集，下面是我用的爬虫代码：</h2><p>爬取百度图库图片</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding:utf8 -*-</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import json</span><br><span class=\"line\">from urllib import parse</span><br><span class=\"line\">import os</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class BaiduImageSpider(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.json_count = 0  # 请求到的json文件数量（一个json文件包含30个图像文件）</span><br><span class=\"line\">        self.url = &#x27;https://image.baidu.com/search/acjson?tn=resultjson_com&amp;logid=5179920884740494226&amp;ipn=rj&amp;ct&#x27; \\</span><br><span class=\"line\">                   &#x27;=201326592&amp;is=&amp;fp=result&amp;queryWord=&#123;&#x27; \\</span><br><span class=\"line\">                   &#x27;&#125;&amp;cl=2&amp;lm=-1&amp;ie=utf-8&amp;oe=utf-8&amp;adpicid=&amp;st=-1&amp;z=&amp;ic=0&amp;hd=&amp;latest=&amp;copyright=&amp;word=&#123;&#x27; \\</span><br><span class=\"line\">                   &#x27;&#125;&amp;s=&amp;se=&amp;tab=&amp;width=&amp;height=&amp;face=0&amp;istype=2&amp;qc=&amp;nc=1&amp;fr=&amp;expermode=&amp;nojc=&amp;pn=&#123;&#x27; \\</span><br><span class=\"line\">                   &#x27;&#125;&amp;rn=30&amp;gsm=1e&amp;1635054081427= &#x27;</span><br><span class=\"line\">        self.directory = r&quot;E:\\爬取百度图库相关图片\\searchName&#123;&#125;&quot;  # 存储目录  这里需要修改为自己希望保存的目录  &#123;&#125;不要丢</span><br><span class=\"line\"></span><br><span class=\"line\">        self.header = &#123;</span><br><span class=\"line\">            &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span><br><span class=\"line\">                          &#x27;Chrome/95.0.4638.54 Safari/537.36 Edg/95.0.1020.30 &#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 创建存储文件夹</span><br><span class=\"line\">    def create_directory(self, name):</span><br><span class=\"line\">        self.directory = self.directory.format(name)</span><br><span class=\"line\">        # 如果目录不存在则创建</span><br><span class=\"line\">        if not os.path.exists(self.directory):</span><br><span class=\"line\">            os.makedirs(self.directory)</span><br><span class=\"line\">        self.directory += r&#x27;\\&#123;&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 获取图像链接</span><br><span class=\"line\">    def get_image_link(self, url):</span><br><span class=\"line\">        list_image_link = []</span><br><span class=\"line\">        strhtml = requests.get(url, headers=self.header)  # Get方式获取网页数据</span><br><span class=\"line\">        jsonInfo = json.loads(strhtml.text)</span><br><span class=\"line\">        for index in range(30):</span><br><span class=\"line\">            list_image_link.append(jsonInfo[&#x27;data&#x27;][index][&#x27;thumbURL&#x27;])</span><br><span class=\"line\">        return list_image_link</span><br><span class=\"line\"></span><br><span class=\"line\">    # 下载图片</span><br><span class=\"line\">    def save_image(self, img_link, filename):</span><br><span class=\"line\">        res = requests.get(img_link, headers=self.header)</span><br><span class=\"line\">        if res.status_code == 404:</span><br><span class=\"line\">            print(f&quot;图片&#123;img_link&#125;下载出错-------&gt;&quot;)</span><br><span class=\"line\">        with open(filename, &quot;wb&quot;) as f:</span><br><span class=\"line\">            f.write(res.content)</span><br><span class=\"line\">            print(&quot;存储路径：&quot; + filename)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 入口函数</span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        searchName = input(&quot;查询内容：&quot;)</span><br><span class=\"line\">        searchName_parse = parse.quote(searchName)  # 编码</span><br><span class=\"line\"></span><br><span class=\"line\">        self.create_directory(searchName)</span><br><span class=\"line\"></span><br><span class=\"line\">        pic_number = 0  # 图像数量</span><br><span class=\"line\">        for index in range(self.json_count):</span><br><span class=\"line\">            pn = (index+1)*30</span><br><span class=\"line\">            request_url = self.url.format(searchName_parse, searchName_parse, str(pn))</span><br><span class=\"line\">            list_image_link = self.get_image_link(request_url)</span><br><span class=\"line\">            for link in list_image_link:</span><br><span class=\"line\">                pic_number += 1</span><br><span class=\"line\">                self.save_image(link, self.directory.format(str(pic_number)+&#x27;.jpg&#x27;))</span><br><span class=\"line\">                time.sleep(0.2)  # 休眠0.2秒，防止封ip</span><br><span class=\"line\">        print(searchName+&quot;----图像下载完成---------&gt;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    spider = BaiduImageSpider()</span><br><span class=\"line\">    spider.json_count = 10   # 定义下载10组图像，也就是三百张</span><br><span class=\"line\">    spider.run()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"贴标签\"><a href=\"#贴标签\" class=\"headerlink\" title=\"贴标签\"></a>贴标签</h2><p>网上有很多教程，这里放一个我用的<br><a href=\"https://blog.csdn.net/GenuineMonster/article/details/118614657\">贴标签教程1</a><br><a href=\"https://www.cnblogs.com/StarZhai/p/11926610.html\">贴标签教程2</a></p>\n<h1 id=\"在Pycharm下训练\"><a href=\"#在Pycharm下训练\" class=\"headerlink\" title=\"在Pycharm下训练\"></a>在Pycharm下训练</h1><p><img src=\"https://i.niupic.com/images/2022/06/09/a0oD.jpg\"><br>相关目录形式如上图所示<br>其中关于coco128文件夹以及在YOLO中需要修改.yaml文件根据这个<a href=\"https://blog.csdn.net/GenuineMonster/article/details/118614657\">教程</a>进行对应的设置</p>\n<p>在准备好coco128文件和对应的.yaml文件的设置后点开train.py文件找到下图所示代码：<br><img src=\"https://i.niupic.com/images/2022/06/09/a0oE.jpg\"><br>主要关注红圈或者红线的参数<br>对应参数的解释大致如下：<br><strong>Epoch</strong><br>一个epoch , 表示： 所有的数据送入网络中， 完成了一次前向计算 + 反向传播的过程。<br>由于一个epoch 常常太大， 分成 几个小的 baches .<br>将所有数据迭代训练一次是不够的， 需要反复多次才能拟合、收敛。<br>在实际训练时、 将所有数据分成多个batch ， 每次送入一部分数据。<br>使用单个epoch 更新权重 不够。<br>随着epoch 数量的增加， 权重更新迭代的次数增多， 曲线从最开始的不拟合状态， 进入优化拟合状态， 最终进入过拟合。<br>epoch 如何设置： 大小与数据集的多样化程度有关， 多样化程度越强， epoch 越大。<br><strong>batchsize</strong><br>每个batch 中： 训练样本的数量。<br>batch size 大小的选择也很重要， 最优化网络模型的性能+速度。<br>当数据量较小， 计算机可以承载只有1个batch 的训练方式时， 收敛效果会好。<br>mini-batch : 将所有数据分为若干个batch , 每个batch 包含一部分训练样本。。<br><strong>iterations</strong><br>完成一次epoch 需要的batch 个数<br>batch numbers 就是 iterations .<br>分为了多少个batch? : 数据总数/ batch_size<br><a href=\"https://blog.csdn.net/weixin_38754799/article/details/109831970?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-109831970-blog-107870356.pc_relevant_antiscanv3&spm=1001.2101.3001.4242.4&utm_relevant_index=7\">参数解释链接</a><br>以上这些参数根据自己需要修改<br><em><strong>红下划线参数，workers，需要将default=0</strong></em><br>这些设置完后就可以开始训练了，右键运行train.py文件，运行过程如下图：<br><img src=\"https://i.niupic.com/images/2022/06/09/a0oL.jpg\"><br>在训练完后你会在run文件夹中看到你本次训练的结果，如下图：<br><img src=\"https://i.niupic.com/images/2022/06/09/a0oF.jpg\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h1>","more":"<p>pycharm<br>YOLOv5<br>pytorch<br>labelling</p>\n<h1 id=\"收集样本，贴标签\"><a href=\"#收集样本，贴标签\" class=\"headerlink\" title=\"收集样本，贴标签\"></a>收集样本，贴标签</h1><h2 id=\"收集样本用爬虫收集，下面是我用的爬虫代码：\"><a href=\"#收集样本用爬虫收集，下面是我用的爬虫代码：\" class=\"headerlink\" title=\"收集样本用爬虫收集，下面是我用的爬虫代码：\"></a>收集样本用爬虫收集，下面是我用的爬虫代码：</h2><p>爬取百度图库图片</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding:utf8 -*-</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import json</span><br><span class=\"line\">from urllib import parse</span><br><span class=\"line\">import os</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class BaiduImageSpider(object):</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        self.json_count = 0  # 请求到的json文件数量（一个json文件包含30个图像文件）</span><br><span class=\"line\">        self.url = &#x27;https://image.baidu.com/search/acjson?tn=resultjson_com&amp;logid=5179920884740494226&amp;ipn=rj&amp;ct&#x27; \\</span><br><span class=\"line\">                   &#x27;=201326592&amp;is=&amp;fp=result&amp;queryWord=&#123;&#x27; \\</span><br><span class=\"line\">                   &#x27;&#125;&amp;cl=2&amp;lm=-1&amp;ie=utf-8&amp;oe=utf-8&amp;adpicid=&amp;st=-1&amp;z=&amp;ic=0&amp;hd=&amp;latest=&amp;copyright=&amp;word=&#123;&#x27; \\</span><br><span class=\"line\">                   &#x27;&#125;&amp;s=&amp;se=&amp;tab=&amp;width=&amp;height=&amp;face=0&amp;istype=2&amp;qc=&amp;nc=1&amp;fr=&amp;expermode=&amp;nojc=&amp;pn=&#123;&#x27; \\</span><br><span class=\"line\">                   &#x27;&#125;&amp;rn=30&amp;gsm=1e&amp;1635054081427= &#x27;</span><br><span class=\"line\">        self.directory = r&quot;E:\\爬取百度图库相关图片\\searchName&#123;&#125;&quot;  # 存储目录  这里需要修改为自己希望保存的目录  &#123;&#125;不要丢</span><br><span class=\"line\"></span><br><span class=\"line\">        self.header = &#123;</span><br><span class=\"line\">            &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span><br><span class=\"line\">                          &#x27;Chrome/95.0.4638.54 Safari/537.36 Edg/95.0.1020.30 &#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 创建存储文件夹</span><br><span class=\"line\">    def create_directory(self, name):</span><br><span class=\"line\">        self.directory = self.directory.format(name)</span><br><span class=\"line\">        # 如果目录不存在则创建</span><br><span class=\"line\">        if not os.path.exists(self.directory):</span><br><span class=\"line\">            os.makedirs(self.directory)</span><br><span class=\"line\">        self.directory += r&#x27;\\&#123;&#125;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    # 获取图像链接</span><br><span class=\"line\">    def get_image_link(self, url):</span><br><span class=\"line\">        list_image_link = []</span><br><span class=\"line\">        strhtml = requests.get(url, headers=self.header)  # Get方式获取网页数据</span><br><span class=\"line\">        jsonInfo = json.loads(strhtml.text)</span><br><span class=\"line\">        for index in range(30):</span><br><span class=\"line\">            list_image_link.append(jsonInfo[&#x27;data&#x27;][index][&#x27;thumbURL&#x27;])</span><br><span class=\"line\">        return list_image_link</span><br><span class=\"line\"></span><br><span class=\"line\">    # 下载图片</span><br><span class=\"line\">    def save_image(self, img_link, filename):</span><br><span class=\"line\">        res = requests.get(img_link, headers=self.header)</span><br><span class=\"line\">        if res.status_code == 404:</span><br><span class=\"line\">            print(f&quot;图片&#123;img_link&#125;下载出错-------&gt;&quot;)</span><br><span class=\"line\">        with open(filename, &quot;wb&quot;) as f:</span><br><span class=\"line\">            f.write(res.content)</span><br><span class=\"line\">            print(&quot;存储路径：&quot; + filename)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 入口函数</span><br><span class=\"line\">    def run(self):</span><br><span class=\"line\">        searchName = input(&quot;查询内容：&quot;)</span><br><span class=\"line\">        searchName_parse = parse.quote(searchName)  # 编码</span><br><span class=\"line\"></span><br><span class=\"line\">        self.create_directory(searchName)</span><br><span class=\"line\"></span><br><span class=\"line\">        pic_number = 0  # 图像数量</span><br><span class=\"line\">        for index in range(self.json_count):</span><br><span class=\"line\">            pn = (index+1)*30</span><br><span class=\"line\">            request_url = self.url.format(searchName_parse, searchName_parse, str(pn))</span><br><span class=\"line\">            list_image_link = self.get_image_link(request_url)</span><br><span class=\"line\">            for link in list_image_link:</span><br><span class=\"line\">                pic_number += 1</span><br><span class=\"line\">                self.save_image(link, self.directory.format(str(pic_number)+&#x27;.jpg&#x27;))</span><br><span class=\"line\">                time.sleep(0.2)  # 休眠0.2秒，防止封ip</span><br><span class=\"line\">        print(searchName+&quot;----图像下载完成---------&gt;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    spider = BaiduImageSpider()</span><br><span class=\"line\">    spider.json_count = 10   # 定义下载10组图像，也就是三百张</span><br><span class=\"line\">    spider.run()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"贴标签\"><a href=\"#贴标签\" class=\"headerlink\" title=\"贴标签\"></a>贴标签</h2><p>网上有很多教程，这里放一个我用的<br><a href=\"https://blog.csdn.net/GenuineMonster/article/details/118614657\">贴标签教程1</a><br><a href=\"https://www.cnblogs.com/StarZhai/p/11926610.html\">贴标签教程2</a></p>\n<h1 id=\"在Pycharm下训练\"><a href=\"#在Pycharm下训练\" class=\"headerlink\" title=\"在Pycharm下训练\"></a>在Pycharm下训练</h1><p><img src=\"https://i.niupic.com/images/2022/06/09/a0oD.jpg\"><br>相关目录形式如上图所示<br>其中关于coco128文件夹以及在YOLO中需要修改.yaml文件根据这个<a href=\"https://blog.csdn.net/GenuineMonster/article/details/118614657\">教程</a>进行对应的设置</p>\n<p>在准备好coco128文件和对应的.yaml文件的设置后点开train.py文件找到下图所示代码：<br><img src=\"https://i.niupic.com/images/2022/06/09/a0oE.jpg\"><br>主要关注红圈或者红线的参数<br>对应参数的解释大致如下：<br><strong>Epoch</strong><br>一个epoch , 表示： 所有的数据送入网络中， 完成了一次前向计算 + 反向传播的过程。<br>由于一个epoch 常常太大， 分成 几个小的 baches .<br>将所有数据迭代训练一次是不够的， 需要反复多次才能拟合、收敛。<br>在实际训练时、 将所有数据分成多个batch ， 每次送入一部分数据。<br>使用单个epoch 更新权重 不够。<br>随着epoch 数量的增加， 权重更新迭代的次数增多， 曲线从最开始的不拟合状态， 进入优化拟合状态， 最终进入过拟合。<br>epoch 如何设置： 大小与数据集的多样化程度有关， 多样化程度越强， epoch 越大。<br><strong>batchsize</strong><br>每个batch 中： 训练样本的数量。<br>batch size 大小的选择也很重要， 最优化网络模型的性能+速度。<br>当数据量较小， 计算机可以承载只有1个batch 的训练方式时， 收敛效果会好。<br>mini-batch : 将所有数据分为若干个batch , 每个batch 包含一部分训练样本。。<br><strong>iterations</strong><br>完成一次epoch 需要的batch 个数<br>batch numbers 就是 iterations .<br>分为了多少个batch? : 数据总数/ batch_size<br><a href=\"https://blog.csdn.net/weixin_38754799/article/details/109831970?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-109831970-blog-107870356.pc_relevant_antiscanv3&spm=1001.2101.3001.4242.4&utm_relevant_index=7\">参数解释链接</a><br>以上这些参数根据自己需要修改<br><em><strong>红下划线参数，workers，需要将default=0</strong></em><br>这些设置完后就可以开始训练了，右键运行train.py文件，运行过程如下图：<br><img src=\"https://i.niupic.com/images/2022/06/09/a0oL.jpg\"><br>在训练完后你会在run文件夹中看到你本次训练的结果，如下图：<br><img src=\"https://i.niupic.com/images/2022/06/09/a0oF.jpg\"></p>"},{"title":"YOlO实现目标检测-单目标","_content":"# 前言\n<!--more-->\n在配置了YOLO和Pytorch后，利用yolo自带的yolov5s.pt轻量化模型实现目标检测\n# 代码实现\n图片实现，单目标：\n```\nimport time\nimport torch\nimport cv2 as cv\n\n# Model\n\"\"\"\ndef load(repo_or_dir, model, *args, source='github', force_reload=False, verbose=True, skip_validation=False,\n         **kwargs):\n从 github 存储库或本地目录加载模型。\n\n注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。\n\n如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。\n\n如果source是“local”，repo_or_dir则应为本地目录的路径。\n\n参数\n\nrepo_or_dir ( string ) – 如果source是 'github'，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 'pytorch/vision:0.10'。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。\n\nmodel ( string ) – 在 repo/dir's 中定义的可调用（入口点）的名称hubconf.py。\n\n*args（可选）– callable 的相应参数model。\n\nsource ( string , optional ) – 'github' 或 'local'。指定如何 repo_or_dir解释。默认为“github”。\n\nforce_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = 'local'。默认为False\n\nverbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = 'local'没有任何影响。默认为True。\n\nskip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。\n\n**kwargs (可选) – callable 的相应 kwargs model。\n\n返回\n\nmodel使用给定*args和调用时可调用 的输出**kwargs。\n\n\"\"\"\n# yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下\n# 网络模型从github上加载      yolov5路径  模型名\n# model = torch.hub.load('./yolov5', 'yolov5s')  # or yolov5m, yolov5l, yolov5x, custom-->表示使用自己的训练模型\n\n# 这里，换成自已的模型，调用best.pt\nmodel = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n\nmodel.conf = 0.52  # confidence threshold (0-1)\nmodel.iou = 0.45  # NMS IoU threshold (0-1)\n# 设置识别对象（classes文件的标签顺序）\n# (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs\n# model.classes = None\n# model.classes = [0, 15, 16, 17]  # 17表示是马，0是人\n\n# Images\n# img = 'https://ultralytics.com/images/zidane.jpg'  # or file, Path, PIL, OpenCV, numpy, list\n# img = 'img_t/bus.jpg'\n# opencv加载的图片是BGR的使用pytorch要使用RGB的\nimg = cv.imread(r'yolov5/data/images/bus.jpg')\n\n# Inference\nresults = model(img)\n\n# Results\n# 显示相关结果信息，如：图片信息、识别速度...\nresults.print()  # or .show(), .save(), .crop(), .pandas(), etc.\nperson = results.xyxy[0]    # 识别结果用tensor保存，包含标签、坐标范围、IOU\n# GPU 转 CPU\nperson = person.cpu()\n# tensor 转 array\nperson = person.numpy()    # tensor --> array格式\n# 控制台显示\nprint(person)\nprint(results.xyxy[0])  # img1 predictions (tensor)\nprint('----------------')\nprint(results.pandas().xyxy[0])  # img1 predictions (pandas)\n# for i in range(len(person)):\n#     print(person[i])\n# results.save()\n# results.crop() # 截取检测的像素后，生成单一图片\n# results.pandas()\n\n# 显示\n# 框出所识别的物体\ncv.rectangle(img, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),\n             (0, 0, 255), 3)  # 框出识别物体\ncv.imshow('results', img)\ncv.waitKey()\ncv.destroyAllWindows()\n\n```\n\n摄像头获取实现，显示单目标：\n```\nimport time\nimport torch\nimport cv2 as cv\n\n# Model\n\"\"\"\ndef load(repo_or_dir, model, *args, source='github', force_reload=False, verbose=True, skip_validation=False,\n         **kwargs):\n从 github 存储库或本地目录加载模型。\n\n注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。\n\n如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。\n\n如果source是“local”，repo_or_dir则应为本地目录的路径。\n\n参数\n\nrepo_or_dir ( string ) – 如果source是 'github'，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 'pytorch/vision:0.10'。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。\n\nmodel ( string ) – 在 repo/dir's 中定义的可调用（入口点）的名称hubconf.py。\n\n*args（可选）– callable 的相应参数model。\n\nsource ( string , optional ) – 'github' 或 'local'。指定如何 repo_or_dir解释。默认为“github”。\n\nforce_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = 'local'。默认为False\n\nverbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = 'local'没有任何影响。默认为True。\n\nskip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。\n\n**kwargs (可选) – callable 的相应 kwargs model。\n\n返回\n\nmodel使用给定*args和调用时可调用 的输出**kwargs。\n\n\"\"\"\n# yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下\n# 网络模型从github上加载      yolov5路径  模型名\n# model = torch.hub.load('./yolov5', 'yolov5s')  # or yolov5m, yolov5l, yolov5x, custom-->表示使用自己的训练模型\n\n# 这里，换成自已的模型\nmodel = torch.hub.load('./yolov5', 'custom', path='./weight/ppe_yolo_n.pt', source='local')\n\nmodel.conf = 0.52  # confidence threshold (0-1)\nmodel.iou = 0.48  # NMS IoU threshold (0-1)\n# 设置识别对象（classes文件的标签顺序）\n# (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs\n# model.classes = None\nlabel = ['person', 'vest', 'blue helmet', 'red helmet', 'white helmet', 'yellow helmet']\n\n# Images\n# 图片输入\n# img = 'https://ultralytics.com/images/zidane.jpg'  # or file, Path, PIL, OpenCV, numpy, list\n# img = 'img_t/bus.jpg'\n# opencv加载的图片是BGR的使用pytorch要使用RGB的\n# img = cv.imread(r'image/12.jpg')\n# img = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n\n# 从摄像头获取\ncap = cv.VideoCapture(0)\nif not cap.isOpened():\n    print(\"Cannot open camera\")\n    exit()\nwhile True:\n    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理\n    ret, frame = cap.read()\n    # 如果正确读取帧，ret为True\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    frame = cv.flip(frame, 1)   # frame为BGR\n    img = cv.cvtColor(frame, cv.COLOR_BGR2RGB)\n\n    # FPS计算time.start\n    start_time = time.time()\n\n    # Inference\n    results = model(img)\n    person = results.xyxy[0]  # xyxy[0]--> 0在classes是person标签,获取所有标签为0的数据\n    # GPU --> CPU\n    person = person.cpu()\n    # tensor --> array\n    person = person.numpy()\n\n    # end_time\n    end_time = time.time()\n    fps = 1 / (end_time - start_time)\n\n    # Results\n    results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n    print(results.xyxy[0])  # img1 predictions (tensor)\n    print('----------------')\n    print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n    # results.save()\n    # results.crop() # 截取检测的像素后，生成单一图片\n    # results.pandas()\n\n    # 显示\n    cv.putText(frame, 'FPS: ' + str(round(fps, 2)), (30, 50), cv.FONT_ITALIC, 1, (255, 255, 0), 2)\n    if len(person) > 0:\n        cv.putText(frame, 'Person: ' + str(int(person[0, 4] * 100)) + '%', (30, 100), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n        cv.rectangle(frame, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),\n                     (0, 0, 255), 3)  # 人框\n\n    cv.imshow('results', frame)\n    cv.waitKey(10)\n    if cv.waitKey(10) & 0xFF == ord('q'):\n        break\ncap.release()\ncv.destroyAllWindows()\n\n```","source":"_posts/YOLOv5/实现目标检测-单目标.md","raw":"---\ntitle: YOlO实现目标检测-单目标\n---\n# 前言\n<!--more-->\n在配置了YOLO和Pytorch后，利用yolo自带的yolov5s.pt轻量化模型实现目标检测\n# 代码实现\n图片实现，单目标：\n```\nimport time\nimport torch\nimport cv2 as cv\n\n# Model\n\"\"\"\ndef load(repo_or_dir, model, *args, source='github', force_reload=False, verbose=True, skip_validation=False,\n         **kwargs):\n从 github 存储库或本地目录加载模型。\n\n注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。\n\n如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。\n\n如果source是“local”，repo_or_dir则应为本地目录的路径。\n\n参数\n\nrepo_or_dir ( string ) – 如果source是 'github'，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 'pytorch/vision:0.10'。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。\n\nmodel ( string ) – 在 repo/dir's 中定义的可调用（入口点）的名称hubconf.py。\n\n*args（可选）– callable 的相应参数model。\n\nsource ( string , optional ) – 'github' 或 'local'。指定如何 repo_or_dir解释。默认为“github”。\n\nforce_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = 'local'。默认为False\n\nverbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = 'local'没有任何影响。默认为True。\n\nskip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。\n\n**kwargs (可选) – callable 的相应 kwargs model。\n\n返回\n\nmodel使用给定*args和调用时可调用 的输出**kwargs。\n\n\"\"\"\n# yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下\n# 网络模型从github上加载      yolov5路径  模型名\n# model = torch.hub.load('./yolov5', 'yolov5s')  # or yolov5m, yolov5l, yolov5x, custom-->表示使用自己的训练模型\n\n# 这里，换成自已的模型，调用best.pt\nmodel = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n\nmodel.conf = 0.52  # confidence threshold (0-1)\nmodel.iou = 0.45  # NMS IoU threshold (0-1)\n# 设置识别对象（classes文件的标签顺序）\n# (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs\n# model.classes = None\n# model.classes = [0, 15, 16, 17]  # 17表示是马，0是人\n\n# Images\n# img = 'https://ultralytics.com/images/zidane.jpg'  # or file, Path, PIL, OpenCV, numpy, list\n# img = 'img_t/bus.jpg'\n# opencv加载的图片是BGR的使用pytorch要使用RGB的\nimg = cv.imread(r'yolov5/data/images/bus.jpg')\n\n# Inference\nresults = model(img)\n\n# Results\n# 显示相关结果信息，如：图片信息、识别速度...\nresults.print()  # or .show(), .save(), .crop(), .pandas(), etc.\nperson = results.xyxy[0]    # 识别结果用tensor保存，包含标签、坐标范围、IOU\n# GPU 转 CPU\nperson = person.cpu()\n# tensor 转 array\nperson = person.numpy()    # tensor --> array格式\n# 控制台显示\nprint(person)\nprint(results.xyxy[0])  # img1 predictions (tensor)\nprint('----------------')\nprint(results.pandas().xyxy[0])  # img1 predictions (pandas)\n# for i in range(len(person)):\n#     print(person[i])\n# results.save()\n# results.crop() # 截取检测的像素后，生成单一图片\n# results.pandas()\n\n# 显示\n# 框出所识别的物体\ncv.rectangle(img, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),\n             (0, 0, 255), 3)  # 框出识别物体\ncv.imshow('results', img)\ncv.waitKey()\ncv.destroyAllWindows()\n\n```\n\n摄像头获取实现，显示单目标：\n```\nimport time\nimport torch\nimport cv2 as cv\n\n# Model\n\"\"\"\ndef load(repo_or_dir, model, *args, source='github', force_reload=False, verbose=True, skip_validation=False,\n         **kwargs):\n从 github 存储库或本地目录加载模型。\n\n注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。\n\n如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。\n\n如果source是“local”，repo_or_dir则应为本地目录的路径。\n\n参数\n\nrepo_or_dir ( string ) – 如果source是 'github'，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 'pytorch/vision:0.10'。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。\n\nmodel ( string ) – 在 repo/dir's 中定义的可调用（入口点）的名称hubconf.py。\n\n*args（可选）– callable 的相应参数model。\n\nsource ( string , optional ) – 'github' 或 'local'。指定如何 repo_or_dir解释。默认为“github”。\n\nforce_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = 'local'。默认为False\n\nverbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = 'local'没有任何影响。默认为True。\n\nskip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。\n\n**kwargs (可选) – callable 的相应 kwargs model。\n\n返回\n\nmodel使用给定*args和调用时可调用 的输出**kwargs。\n\n\"\"\"\n# yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下\n# 网络模型从github上加载      yolov5路径  模型名\n# model = torch.hub.load('./yolov5', 'yolov5s')  # or yolov5m, yolov5l, yolov5x, custom-->表示使用自己的训练模型\n\n# 这里，换成自已的模型\nmodel = torch.hub.load('./yolov5', 'custom', path='./weight/ppe_yolo_n.pt', source='local')\n\nmodel.conf = 0.52  # confidence threshold (0-1)\nmodel.iou = 0.48  # NMS IoU threshold (0-1)\n# 设置识别对象（classes文件的标签顺序）\n# (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs\n# model.classes = None\nlabel = ['person', 'vest', 'blue helmet', 'red helmet', 'white helmet', 'yellow helmet']\n\n# Images\n# 图片输入\n# img = 'https://ultralytics.com/images/zidane.jpg'  # or file, Path, PIL, OpenCV, numpy, list\n# img = 'img_t/bus.jpg'\n# opencv加载的图片是BGR的使用pytorch要使用RGB的\n# img = cv.imread(r'image/12.jpg')\n# img = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n\n# 从摄像头获取\ncap = cv.VideoCapture(0)\nif not cap.isOpened():\n    print(\"Cannot open camera\")\n    exit()\nwhile True:\n    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理\n    ret, frame = cap.read()\n    # 如果正确读取帧，ret为True\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    frame = cv.flip(frame, 1)   # frame为BGR\n    img = cv.cvtColor(frame, cv.COLOR_BGR2RGB)\n\n    # FPS计算time.start\n    start_time = time.time()\n\n    # Inference\n    results = model(img)\n    person = results.xyxy[0]  # xyxy[0]--> 0在classes是person标签,获取所有标签为0的数据\n    # GPU --> CPU\n    person = person.cpu()\n    # tensor --> array\n    person = person.numpy()\n\n    # end_time\n    end_time = time.time()\n    fps = 1 / (end_time - start_time)\n\n    # Results\n    results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n    print(results.xyxy[0])  # img1 predictions (tensor)\n    print('----------------')\n    print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n    # results.save()\n    # results.crop() # 截取检测的像素后，生成单一图片\n    # results.pandas()\n\n    # 显示\n    cv.putText(frame, 'FPS: ' + str(round(fps, 2)), (30, 50), cv.FONT_ITALIC, 1, (255, 255, 0), 2)\n    if len(person) > 0:\n        cv.putText(frame, 'Person: ' + str(int(person[0, 4] * 100)) + '%', (30, 100), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n        cv.rectangle(frame, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),\n                     (0, 0, 255), 3)  # 人框\n\n    cv.imshow('results', frame)\n    cv.waitKey(10)\n    if cv.waitKey(10) & 0xFF == ord('q'):\n        break\ncap.release()\ncv.destroyAllWindows()\n\n```","slug":"YOLOv5/实现目标检测-单目标","published":1,"date":"2022-06-09T02:57:19.286Z","updated":"2022-06-09T03:03:19.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeof000b68urgix2celq","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><span id=\"more\"></span>\n<p>在配置了YOLO和Pytorch后，利用yolo自带的yolov5s.pt轻量化模型实现目标检测</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>图片实现，单目标：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"># Model</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">def load(repo_or_dir, model, *args, source=&#x27;github&#x27;, force_reload=False, verbose=True, skip_validation=False,</span><br><span class=\"line\">         **kwargs):</span><br><span class=\"line\">从 github 存储库或本地目录加载模型。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“local”，repo_or_dir则应为本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">参数</span><br><span class=\"line\"></span><br><span class=\"line\">repo_or_dir ( string ) – 如果source是 &#x27;github&#x27;，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 &#x27;pytorch/vision:0.10&#x27;。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">model ( string ) – 在 repo/dir&#x27;s 中定义的可调用（入口点）的名称hubconf.py。</span><br><span class=\"line\"></span><br><span class=\"line\">*args（可选）– callable 的相应参数model。</span><br><span class=\"line\"></span><br><span class=\"line\">source ( string , optional ) – &#x27;github&#x27; 或 &#x27;local&#x27;。指定如何 repo_or_dir解释。默认为“github”。</span><br><span class=\"line\"></span><br><span class=\"line\">force_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = &#x27;local&#x27;。默认为False</span><br><span class=\"line\"></span><br><span class=\"line\">verbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = &#x27;local&#x27;没有任何影响。默认为True。</span><br><span class=\"line\"></span><br><span class=\"line\">skip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。</span><br><span class=\"line\"></span><br><span class=\"line\">**kwargs (可选) – callable 的相应 kwargs model。</span><br><span class=\"line\"></span><br><span class=\"line\">返回</span><br><span class=\"line\"></span><br><span class=\"line\">model使用给定*args和调用时可调用 的输出**kwargs。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下</span><br><span class=\"line\"># 网络模型从github上加载      yolov5路径  模型名</span><br><span class=\"line\"># model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;yolov5s&#x27;)  # or yolov5m, yolov5l, yolov5x, custom--&gt;表示使用自己的训练模型</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里，换成自已的模型，调用best.pt</span><br><span class=\"line\">model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\"># 设置识别对象（classes文件的标签顺序）</span><br><span class=\"line\"># (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs</span><br><span class=\"line\"># model.classes = None</span><br><span class=\"line\"># model.classes = [0, 15, 16, 17]  # 17表示是马，0是人</span><br><span class=\"line\"></span><br><span class=\"line\"># Images</span><br><span class=\"line\"># img = &#x27;https://ultralytics.com/images/zidane.jpg&#x27;  # or file, Path, PIL, OpenCV, numpy, list</span><br><span class=\"line\"># img = &#x27;img_t/bus.jpg&#x27;</span><br><span class=\"line\"># opencv加载的图片是BGR的使用pytorch要使用RGB的</span><br><span class=\"line\">img = cv.imread(r&#x27;yolov5/data/images/bus.jpg&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># Inference</span><br><span class=\"line\">results = model(img)</span><br><span class=\"line\"></span><br><span class=\"line\"># Results</span><br><span class=\"line\"># 显示相关结果信息，如：图片信息、识别速度...</span><br><span class=\"line\">results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">person = results.xyxy[0]    # 识别结果用tensor保存，包含标签、坐标范围、IOU</span><br><span class=\"line\"># GPU 转 CPU</span><br><span class=\"line\">person = person.cpu()</span><br><span class=\"line\"># tensor 转 array</span><br><span class=\"line\">person = person.numpy()    # tensor --&gt; array格式</span><br><span class=\"line\"># 控制台显示</span><br><span class=\"line\">print(person)</span><br><span class=\"line\">print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">print(&#x27;----------------&#x27;)</span><br><span class=\"line\">print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\"># for i in range(len(person)):</span><br><span class=\"line\">#     print(person[i])</span><br><span class=\"line\"># results.save()</span><br><span class=\"line\"># results.crop() # 截取检测的像素后，生成单一图片</span><br><span class=\"line\"># results.pandas()</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示</span><br><span class=\"line\"># 框出所识别的物体</span><br><span class=\"line\">cv.rectangle(img, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),</span><br><span class=\"line\">             (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">cv.imshow(&#x27;results&#x27;, img)</span><br><span class=\"line\">cv.waitKey()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>摄像头获取实现，显示单目标：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"># Model</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">def load(repo_or_dir, model, *args, source=&#x27;github&#x27;, force_reload=False, verbose=True, skip_validation=False,</span><br><span class=\"line\">         **kwargs):</span><br><span class=\"line\">从 github 存储库或本地目录加载模型。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“local”，repo_or_dir则应为本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">参数</span><br><span class=\"line\"></span><br><span class=\"line\">repo_or_dir ( string ) – 如果source是 &#x27;github&#x27;，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 &#x27;pytorch/vision:0.10&#x27;。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">model ( string ) – 在 repo/dir&#x27;s 中定义的可调用（入口点）的名称hubconf.py。</span><br><span class=\"line\"></span><br><span class=\"line\">*args（可选）– callable 的相应参数model。</span><br><span class=\"line\"></span><br><span class=\"line\">source ( string , optional ) – &#x27;github&#x27; 或 &#x27;local&#x27;。指定如何 repo_or_dir解释。默认为“github”。</span><br><span class=\"line\"></span><br><span class=\"line\">force_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = &#x27;local&#x27;。默认为False</span><br><span class=\"line\"></span><br><span class=\"line\">verbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = &#x27;local&#x27;没有任何影响。默认为True。</span><br><span class=\"line\"></span><br><span class=\"line\">skip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。</span><br><span class=\"line\"></span><br><span class=\"line\">**kwargs (可选) – callable 的相应 kwargs model。</span><br><span class=\"line\"></span><br><span class=\"line\">返回</span><br><span class=\"line\"></span><br><span class=\"line\">model使用给定*args和调用时可调用 的输出**kwargs。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下</span><br><span class=\"line\"># 网络模型从github上加载      yolov5路径  模型名</span><br><span class=\"line\"># model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;yolov5s&#x27;)  # or yolov5m, yolov5l, yolov5x, custom--&gt;表示使用自己的训练模型</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里，换成自已的模型</span><br><span class=\"line\">model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/ppe_yolo_n.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">model.iou = 0.48  # NMS IoU threshold (0-1)</span><br><span class=\"line\"># 设置识别对象（classes文件的标签顺序）</span><br><span class=\"line\"># (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs</span><br><span class=\"line\"># model.classes = None</span><br><span class=\"line\">label = [&#x27;person&#x27;, &#x27;vest&#x27;, &#x27;blue helmet&#x27;, &#x27;red helmet&#x27;, &#x27;white helmet&#x27;, &#x27;yellow helmet&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># Images</span><br><span class=\"line\"># 图片输入</span><br><span class=\"line\"># img = &#x27;https://ultralytics.com/images/zidane.jpg&#x27;  # or file, Path, PIL, OpenCV, numpy, list</span><br><span class=\"line\"># img = &#x27;img_t/bus.jpg&#x27;</span><br><span class=\"line\"># opencv加载的图片是BGR的使用pytorch要使用RGB的</span><br><span class=\"line\"># img = cv.imread(r&#x27;image/12.jpg&#x27;)</span><br><span class=\"line\"># img = cv.cvtColor(img, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"></span><br><span class=\"line\"># 从摄像头获取</span><br><span class=\"line\">cap = cv.VideoCapture(0)</span><br><span class=\"line\">if not cap.isOpened():</span><br><span class=\"line\">    print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">    exit()</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    # 如果正确读取帧，ret为True</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    frame = cv.flip(frame, 1)   # frame为BGR</span><br><span class=\"line\">    img = cv.cvtColor(frame, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"></span><br><span class=\"line\">    # FPS计算time.start</span><br><span class=\"line\">    start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">    # Inference</span><br><span class=\"line\">    results = model(img)</span><br><span class=\"line\">    person = results.xyxy[0]  # xyxy[0]--&gt; 0在classes是person标签,获取所有标签为0的数据</span><br><span class=\"line\">    # GPU --&gt; CPU</span><br><span class=\"line\">    person = person.cpu()</span><br><span class=\"line\">    # tensor --&gt; array</span><br><span class=\"line\">    person = person.numpy()</span><br><span class=\"line\"></span><br><span class=\"line\">    # end_time</span><br><span class=\"line\">    end_time = time.time()</span><br><span class=\"line\">    fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">    # Results</span><br><span class=\"line\">    results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">    print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">    print(&#x27;----------------&#x27;)</span><br><span class=\"line\">    print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\">    # results.save()</span><br><span class=\"line\">    # results.crop() # 截取检测的像素后，生成单一图片</span><br><span class=\"line\">    # results.pandas()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 显示</span><br><span class=\"line\">    cv.putText(frame, &#x27;FPS: &#x27; + str(round(fps, 2)), (30, 50), cv.FONT_ITALIC, 1, (255, 255, 0), 2)</span><br><span class=\"line\">    if len(person) &gt; 0:</span><br><span class=\"line\">        cv.putText(frame, &#x27;Person: &#x27; + str(int(person[0, 4] * 100)) + &#x27;%&#x27;, (30, 100), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\">        cv.rectangle(frame, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),</span><br><span class=\"line\">                     (0, 0, 255), 3)  # 人框</span><br><span class=\"line\"></span><br><span class=\"line\">    cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\">    cv.waitKey(10)</span><br><span class=\"line\">    if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">        break</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1>","more":"<p>在配置了YOLO和Pytorch后，利用yolo自带的yolov5s.pt轻量化模型实现目标检测</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>图片实现，单目标：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"># Model</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">def load(repo_or_dir, model, *args, source=&#x27;github&#x27;, force_reload=False, verbose=True, skip_validation=False,</span><br><span class=\"line\">         **kwargs):</span><br><span class=\"line\">从 github 存储库或本地目录加载模型。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“local”，repo_or_dir则应为本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">参数</span><br><span class=\"line\"></span><br><span class=\"line\">repo_or_dir ( string ) – 如果source是 &#x27;github&#x27;，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 &#x27;pytorch/vision:0.10&#x27;。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">model ( string ) – 在 repo/dir&#x27;s 中定义的可调用（入口点）的名称hubconf.py。</span><br><span class=\"line\"></span><br><span class=\"line\">*args（可选）– callable 的相应参数model。</span><br><span class=\"line\"></span><br><span class=\"line\">source ( string , optional ) – &#x27;github&#x27; 或 &#x27;local&#x27;。指定如何 repo_or_dir解释。默认为“github”。</span><br><span class=\"line\"></span><br><span class=\"line\">force_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = &#x27;local&#x27;。默认为False</span><br><span class=\"line\"></span><br><span class=\"line\">verbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = &#x27;local&#x27;没有任何影响。默认为True。</span><br><span class=\"line\"></span><br><span class=\"line\">skip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。</span><br><span class=\"line\"></span><br><span class=\"line\">**kwargs (可选) – callable 的相应 kwargs model。</span><br><span class=\"line\"></span><br><span class=\"line\">返回</span><br><span class=\"line\"></span><br><span class=\"line\">model使用给定*args和调用时可调用 的输出**kwargs。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下</span><br><span class=\"line\"># 网络模型从github上加载      yolov5路径  模型名</span><br><span class=\"line\"># model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;yolov5s&#x27;)  # or yolov5m, yolov5l, yolov5x, custom--&gt;表示使用自己的训练模型</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里，换成自已的模型，调用best.pt</span><br><span class=\"line\">model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\"># 设置识别对象（classes文件的标签顺序）</span><br><span class=\"line\"># (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs</span><br><span class=\"line\"># model.classes = None</span><br><span class=\"line\"># model.classes = [0, 15, 16, 17]  # 17表示是马，0是人</span><br><span class=\"line\"></span><br><span class=\"line\"># Images</span><br><span class=\"line\"># img = &#x27;https://ultralytics.com/images/zidane.jpg&#x27;  # or file, Path, PIL, OpenCV, numpy, list</span><br><span class=\"line\"># img = &#x27;img_t/bus.jpg&#x27;</span><br><span class=\"line\"># opencv加载的图片是BGR的使用pytorch要使用RGB的</span><br><span class=\"line\">img = cv.imread(r&#x27;yolov5/data/images/bus.jpg&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># Inference</span><br><span class=\"line\">results = model(img)</span><br><span class=\"line\"></span><br><span class=\"line\"># Results</span><br><span class=\"line\"># 显示相关结果信息，如：图片信息、识别速度...</span><br><span class=\"line\">results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">person = results.xyxy[0]    # 识别结果用tensor保存，包含标签、坐标范围、IOU</span><br><span class=\"line\"># GPU 转 CPU</span><br><span class=\"line\">person = person.cpu()</span><br><span class=\"line\"># tensor 转 array</span><br><span class=\"line\">person = person.numpy()    # tensor --&gt; array格式</span><br><span class=\"line\"># 控制台显示</span><br><span class=\"line\">print(person)</span><br><span class=\"line\">print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">print(&#x27;----------------&#x27;)</span><br><span class=\"line\">print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\"># for i in range(len(person)):</span><br><span class=\"line\">#     print(person[i])</span><br><span class=\"line\"># results.save()</span><br><span class=\"line\"># results.crop() # 截取检测的像素后，生成单一图片</span><br><span class=\"line\"># results.pandas()</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示</span><br><span class=\"line\"># 框出所识别的物体</span><br><span class=\"line\">cv.rectangle(img, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),</span><br><span class=\"line\">             (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">cv.imshow(&#x27;results&#x27;, img)</span><br><span class=\"line\">cv.waitKey()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>摄像头获取实现，显示单目标：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"># Model</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">def load(repo_or_dir, model, *args, source=&#x27;github&#x27;, force_reload=False, verbose=True, skip_validation=False,</span><br><span class=\"line\">         **kwargs):</span><br><span class=\"line\">从 github 存储库或本地目录加载模型。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“local”，repo_or_dir则应为本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">参数</span><br><span class=\"line\"></span><br><span class=\"line\">repo_or_dir ( string ) – 如果source是 &#x27;github&#x27;，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 &#x27;pytorch/vision:0.10&#x27;。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">model ( string ) – 在 repo/dir&#x27;s 中定义的可调用（入口点）的名称hubconf.py。</span><br><span class=\"line\"></span><br><span class=\"line\">*args（可选）– callable 的相应参数model。</span><br><span class=\"line\"></span><br><span class=\"line\">source ( string , optional ) – &#x27;github&#x27; 或 &#x27;local&#x27;。指定如何 repo_or_dir解释。默认为“github”。</span><br><span class=\"line\"></span><br><span class=\"line\">force_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = &#x27;local&#x27;。默认为False</span><br><span class=\"line\"></span><br><span class=\"line\">verbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = &#x27;local&#x27;没有任何影响。默认为True。</span><br><span class=\"line\"></span><br><span class=\"line\">skip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。</span><br><span class=\"line\"></span><br><span class=\"line\">**kwargs (可选) – callable 的相应 kwargs model。</span><br><span class=\"line\"></span><br><span class=\"line\">返回</span><br><span class=\"line\"></span><br><span class=\"line\">model使用给定*args和调用时可调用 的输出**kwargs。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下</span><br><span class=\"line\"># 网络模型从github上加载      yolov5路径  模型名</span><br><span class=\"line\"># model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;yolov5s&#x27;)  # or yolov5m, yolov5l, yolov5x, custom--&gt;表示使用自己的训练模型</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里，换成自已的模型</span><br><span class=\"line\">model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/ppe_yolo_n.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">model.iou = 0.48  # NMS IoU threshold (0-1)</span><br><span class=\"line\"># 设置识别对象（classes文件的标签顺序）</span><br><span class=\"line\"># (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs</span><br><span class=\"line\"># model.classes = None</span><br><span class=\"line\">label = [&#x27;person&#x27;, &#x27;vest&#x27;, &#x27;blue helmet&#x27;, &#x27;red helmet&#x27;, &#x27;white helmet&#x27;, &#x27;yellow helmet&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># Images</span><br><span class=\"line\"># 图片输入</span><br><span class=\"line\"># img = &#x27;https://ultralytics.com/images/zidane.jpg&#x27;  # or file, Path, PIL, OpenCV, numpy, list</span><br><span class=\"line\"># img = &#x27;img_t/bus.jpg&#x27;</span><br><span class=\"line\"># opencv加载的图片是BGR的使用pytorch要使用RGB的</span><br><span class=\"line\"># img = cv.imread(r&#x27;image/12.jpg&#x27;)</span><br><span class=\"line\"># img = cv.cvtColor(img, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"></span><br><span class=\"line\"># 从摄像头获取</span><br><span class=\"line\">cap = cv.VideoCapture(0)</span><br><span class=\"line\">if not cap.isOpened():</span><br><span class=\"line\">    print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">    exit()</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    # 如果正确读取帧，ret为True</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    frame = cv.flip(frame, 1)   # frame为BGR</span><br><span class=\"line\">    img = cv.cvtColor(frame, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"></span><br><span class=\"line\">    # FPS计算time.start</span><br><span class=\"line\">    start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">    # Inference</span><br><span class=\"line\">    results = model(img)</span><br><span class=\"line\">    person = results.xyxy[0]  # xyxy[0]--&gt; 0在classes是person标签,获取所有标签为0的数据</span><br><span class=\"line\">    # GPU --&gt; CPU</span><br><span class=\"line\">    person = person.cpu()</span><br><span class=\"line\">    # tensor --&gt; array</span><br><span class=\"line\">    person = person.numpy()</span><br><span class=\"line\"></span><br><span class=\"line\">    # end_time</span><br><span class=\"line\">    end_time = time.time()</span><br><span class=\"line\">    fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">    # Results</span><br><span class=\"line\">    results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">    print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">    print(&#x27;----------------&#x27;)</span><br><span class=\"line\">    print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\">    # results.save()</span><br><span class=\"line\">    # results.crop() # 截取检测的像素后，生成单一图片</span><br><span class=\"line\">    # results.pandas()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 显示</span><br><span class=\"line\">    cv.putText(frame, &#x27;FPS: &#x27; + str(round(fps, 2)), (30, 50), cv.FONT_ITALIC, 1, (255, 255, 0), 2)</span><br><span class=\"line\">    if len(person) &gt; 0:</span><br><span class=\"line\">        cv.putText(frame, &#x27;Person: &#x27; + str(int(person[0, 4] * 100)) + &#x27;%&#x27;, (30, 100), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\">        cv.rectangle(frame, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),</span><br><span class=\"line\">                     (0, 0, 255), 3)  # 人框</span><br><span class=\"line\"></span><br><span class=\"line\">    cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\">    cv.waitKey(10)</span><br><span class=\"line\">    if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">        break</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"YOlO实现目标检测-单目标","_content":"# 前言\n<!--more-->\n在配置了YOLO和Pytorch后，利用yolo自带的yolov5s.pt轻量化模型实现目标检测\n# 代码实现\n图片实现，多目标：\n```\nimport time\nimport torch\nimport cv2 as cv\n\n\nclass MultipleTarget:\n\n    def __init__(self):\n        \"\"\"\n        初始化\n        \"\"\"\n        # 加载训练模型\n        self.model = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n        # 设置阈值\n        self.model.conf = 0.52  # confidence threshold (0-1)\n        self.model.iou = 0.45  # NMS IoU threshold (0-1)\n        # # 加载摄像头\n        # self.cap = cv.VideoCapture(0)\n\n    def draw(self, list1, image_temp):\n\n        for temp in list1:\n            name = temp[6]      # 取出标签名\n            temp = temp[:4].astype('int')   # 转成int\n            # print(temp)\n            # print('***************')\n            # cv.rectangle(image_temp, (int(temp[0]), int(temp[1])), (int(temp[2]), int(temp[3])),\n            #              (0, 0, 255), 3)  # 框出识别物体\n            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体\n            cv.putText(image_temp, name, (int(temp[0]-10), int(temp[1]-10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n    def detect(self, image_temp):\n        \"\"\"\n        目标检测\n        \"\"\"\n        img = image_temp\n        # Inference\n        results = self.model(img)\n        # Results\n        # 显示相关结果信息，如：图片信息、识别速度...\n        results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n        pd1 = results.xyxy[0]  # 识别结果用tensor保存，包含标签、坐标范围、IOU\n        pd = results.pandas().xyxy[0]   # tensor 转为 DataFrame(Pandas中的数据类型)\n\n        person_list = pd[pd['name'] == 'person'].to_numpy()\n        bus_list = pd[pd['name'] == 'bus'].to_numpy()\n\n        self.draw(person_list, img)\n        self.draw(bus_list, img)\n\n        # 控制台显示\n        # print(pd1)\n        # print(pd)\n        print(person_list)\n        print(results.xyxy[0])\n        print('----------------------------------------------------------')\n        print(results.pandas().xyxy[0])\n        # 窗口显示s\n        cv.imshow('results', img)\n        cv.waitKey(0)\n        cv.destroyAllWindows()\n\n\nimage = cv.imread(r'yolov5/data/images/bus.jpg')\ntest = MultipleTarget()\ntest.detect(image)\n\n```\n\n摄像头获取，多目标：\n```\nimport time\nimport torch\nimport cv2 as cv\n\n\nclass MultipleTarget:\n\n    def __init__(self):\n        \"\"\"\n        初始化\n        \"\"\"\n        # 加载训练模型\n        self.model = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n        # 设置阈值\n        self.model.conf = 0.52  # confidence threshold (0-1)\n        self.model.iou = 0.45  # NMS IoU threshold (0-1)\n        # 加载摄像头\n        self.cap = cv.VideoCapture(0)\n        if not self.cap.isOpened():\n            print(\"Cannot open camera\")\n            exit()\n\n    def draw(self, list_temp, image_temp):\n        for temp in list_temp:\n            name = temp[6]      # 取出标签名\n            temp = temp[:4].astype('int')   # 转成int加快计算\n            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体\n            cv.putText(image_temp, name, (int(temp[0]-10), int(temp[1]-10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n    def detect(self):\n        \"\"\"\n        目标检测\n        \"\"\"\n        while True:\n            ret, frame = self.cap.read()\n            # 如果正确读取帧，ret为True\n            if not ret:\n                print(\"Can't receive frame (stream end?). Exiting ...\")\n                break\n            frame = cv.flip(frame, 1)\n\n            # FPS计算time.start\n            start_time = time.time()\n\n            # Inference\n            results = self.model(frame)\n            pd = results.pandas().xyxy[0]\n            # 取出对应标签的list\n            person_list = pd[pd['name'] == 'person'].to_numpy()\n            bus_list = pd[pd['name'] == 'bus'].to_numpy()\n            # 框出物体\n            self.draw(person_list, frame)\n            self.draw(bus_list, frame)\n            # end_time\n            end_time = time.time()\n            fps = 1 / (end_time - start_time)\n\n            # 控制台显示\n            results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n            print(results.xyxy[0])  # img1 predictions (tensor)\n            print('----------------')\n            print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n\n            # FPS显示\n            cv.putText(frame, 'FPS:' + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n            cv.imshow('results', frame)\n            cv.waitKey(10)\n            if cv.waitKey(10) & 0xFF == ord('q'):\n                break\n\n        self.cap.release()\n        cv.destroyAllWindows()\n\n\ntest = MultipleTarget()\ntest.detect()\n\n```","source":"_posts/YOLOv5/实现目标检测-多目标.md","raw":"---\ntitle: YOlO实现目标检测-单目标\n---\n# 前言\n<!--more-->\n在配置了YOLO和Pytorch后，利用yolo自带的yolov5s.pt轻量化模型实现目标检测\n# 代码实现\n图片实现，多目标：\n```\nimport time\nimport torch\nimport cv2 as cv\n\n\nclass MultipleTarget:\n\n    def __init__(self):\n        \"\"\"\n        初始化\n        \"\"\"\n        # 加载训练模型\n        self.model = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n        # 设置阈值\n        self.model.conf = 0.52  # confidence threshold (0-1)\n        self.model.iou = 0.45  # NMS IoU threshold (0-1)\n        # # 加载摄像头\n        # self.cap = cv.VideoCapture(0)\n\n    def draw(self, list1, image_temp):\n\n        for temp in list1:\n            name = temp[6]      # 取出标签名\n            temp = temp[:4].astype('int')   # 转成int\n            # print(temp)\n            # print('***************')\n            # cv.rectangle(image_temp, (int(temp[0]), int(temp[1])), (int(temp[2]), int(temp[3])),\n            #              (0, 0, 255), 3)  # 框出识别物体\n            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体\n            cv.putText(image_temp, name, (int(temp[0]-10), int(temp[1]-10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n    def detect(self, image_temp):\n        \"\"\"\n        目标检测\n        \"\"\"\n        img = image_temp\n        # Inference\n        results = self.model(img)\n        # Results\n        # 显示相关结果信息，如：图片信息、识别速度...\n        results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n        pd1 = results.xyxy[0]  # 识别结果用tensor保存，包含标签、坐标范围、IOU\n        pd = results.pandas().xyxy[0]   # tensor 转为 DataFrame(Pandas中的数据类型)\n\n        person_list = pd[pd['name'] == 'person'].to_numpy()\n        bus_list = pd[pd['name'] == 'bus'].to_numpy()\n\n        self.draw(person_list, img)\n        self.draw(bus_list, img)\n\n        # 控制台显示\n        # print(pd1)\n        # print(pd)\n        print(person_list)\n        print(results.xyxy[0])\n        print('----------------------------------------------------------')\n        print(results.pandas().xyxy[0])\n        # 窗口显示s\n        cv.imshow('results', img)\n        cv.waitKey(0)\n        cv.destroyAllWindows()\n\n\nimage = cv.imread(r'yolov5/data/images/bus.jpg')\ntest = MultipleTarget()\ntest.detect(image)\n\n```\n\n摄像头获取，多目标：\n```\nimport time\nimport torch\nimport cv2 as cv\n\n\nclass MultipleTarget:\n\n    def __init__(self):\n        \"\"\"\n        初始化\n        \"\"\"\n        # 加载训练模型\n        self.model = torch.hub.load('./yolov5', 'custom', path='./weight/yolov5s.pt', source='local')\n        # 设置阈值\n        self.model.conf = 0.52  # confidence threshold (0-1)\n        self.model.iou = 0.45  # NMS IoU threshold (0-1)\n        # 加载摄像头\n        self.cap = cv.VideoCapture(0)\n        if not self.cap.isOpened():\n            print(\"Cannot open camera\")\n            exit()\n\n    def draw(self, list_temp, image_temp):\n        for temp in list_temp:\n            name = temp[6]      # 取出标签名\n            temp = temp[:4].astype('int')   # 转成int加快计算\n            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体\n            cv.putText(image_temp, name, (int(temp[0]-10), int(temp[1]-10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n    def detect(self):\n        \"\"\"\n        目标检测\n        \"\"\"\n        while True:\n            ret, frame = self.cap.read()\n            # 如果正确读取帧，ret为True\n            if not ret:\n                print(\"Can't receive frame (stream end?). Exiting ...\")\n                break\n            frame = cv.flip(frame, 1)\n\n            # FPS计算time.start\n            start_time = time.time()\n\n            # Inference\n            results = self.model(frame)\n            pd = results.pandas().xyxy[0]\n            # 取出对应标签的list\n            person_list = pd[pd['name'] == 'person'].to_numpy()\n            bus_list = pd[pd['name'] == 'bus'].to_numpy()\n            # 框出物体\n            self.draw(person_list, frame)\n            self.draw(bus_list, frame)\n            # end_time\n            end_time = time.time()\n            fps = 1 / (end_time - start_time)\n\n            # 控制台显示\n            results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n            print(results.xyxy[0])  # img1 predictions (tensor)\n            print('----------------')\n            print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n\n            # FPS显示\n            cv.putText(frame, 'FPS:' + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n\n            cv.imshow('results', frame)\n            cv.waitKey(10)\n            if cv.waitKey(10) & 0xFF == ord('q'):\n                break\n\n        self.cap.release()\n        cv.destroyAllWindows()\n\n\ntest = MultipleTarget()\ntest.detect()\n\n```","slug":"YOLOv5/实现目标检测-多目标","published":1,"date":"2022-06-09T03:03:44.220Z","updated":"2022-06-09T03:06:36.485Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeoi000c68ur0iy62eup","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><span id=\"more\"></span>\n<p>在配置了YOLO和Pytorch后，利用yolo自带的yolov5s.pt轻量化模型实现目标检测</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>图片实现，多目标：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MultipleTarget:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        初始化</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 加载训练模型</span><br><span class=\"line\">        self.model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\">        # 设置阈值</span><br><span class=\"line\">        self.model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">        self.model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\">        # # 加载摄像头</span><br><span class=\"line\">        # self.cap = cv.VideoCapture(0)</span><br><span class=\"line\"></span><br><span class=\"line\">    def draw(self, list1, image_temp):</span><br><span class=\"line\"></span><br><span class=\"line\">        for temp in list1:</span><br><span class=\"line\">            name = temp[6]      # 取出标签名</span><br><span class=\"line\">            temp = temp[:4].astype(&#x27;int&#x27;)   # 转成int</span><br><span class=\"line\">            # print(temp)</span><br><span class=\"line\">            # print(&#x27;***************&#x27;)</span><br><span class=\"line\">            # cv.rectangle(image_temp, (int(temp[0]), int(temp[1])), (int(temp[2]), int(temp[3])),</span><br><span class=\"line\">            #              (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.putText(image_temp, name, (int(temp[0]-10), int(temp[1]-10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    def detect(self, image_temp):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        目标检测</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        img = image_temp</span><br><span class=\"line\">        # Inference</span><br><span class=\"line\">        results = self.model(img)</span><br><span class=\"line\">        # Results</span><br><span class=\"line\">        # 显示相关结果信息，如：图片信息、识别速度...</span><br><span class=\"line\">        results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">        pd1 = results.xyxy[0]  # 识别结果用tensor保存，包含标签、坐标范围、IOU</span><br><span class=\"line\">        pd = results.pandas().xyxy[0]   # tensor 转为 DataFrame(Pandas中的数据类型)</span><br><span class=\"line\"></span><br><span class=\"line\">        person_list = pd[pd[&#x27;name&#x27;] == &#x27;person&#x27;].to_numpy()</span><br><span class=\"line\">        bus_list = pd[pd[&#x27;name&#x27;] == &#x27;bus&#x27;].to_numpy()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.draw(person_list, img)</span><br><span class=\"line\">        self.draw(bus_list, img)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 控制台显示</span><br><span class=\"line\">        # print(pd1)</span><br><span class=\"line\">        # print(pd)</span><br><span class=\"line\">        print(person_list)</span><br><span class=\"line\">        print(results.xyxy[0])</span><br><span class=\"line\">        print(&#x27;----------------------------------------------------------&#x27;)</span><br><span class=\"line\">        print(results.pandas().xyxy[0])</span><br><span class=\"line\">        # 窗口显示s</span><br><span class=\"line\">        cv.imshow(&#x27;results&#x27;, img)</span><br><span class=\"line\">        cv.waitKey(0)</span><br><span class=\"line\">        cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">image = cv.imread(r&#x27;yolov5/data/images/bus.jpg&#x27;)</span><br><span class=\"line\">test = MultipleTarget()</span><br><span class=\"line\">test.detect(image)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>摄像头获取，多目标：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MultipleTarget:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        初始化</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 加载训练模型</span><br><span class=\"line\">        self.model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\">        # 设置阈值</span><br><span class=\"line\">        self.model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">        self.model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\">        # 加载摄像头</span><br><span class=\"line\">        self.cap = cv.VideoCapture(0)</span><br><span class=\"line\">        if not self.cap.isOpened():</span><br><span class=\"line\">            print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    def draw(self, list_temp, image_temp):</span><br><span class=\"line\">        for temp in list_temp:</span><br><span class=\"line\">            name = temp[6]      # 取出标签名</span><br><span class=\"line\">            temp = temp[:4].astype(&#x27;int&#x27;)   # 转成int加快计算</span><br><span class=\"line\">            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.putText(image_temp, name, (int(temp[0]-10), int(temp[1]-10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    def detect(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        目标检测</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            ret, frame = self.cap.read()</span><br><span class=\"line\">            # 如果正确读取帧，ret为True</span><br><span class=\"line\">            if not ret:</span><br><span class=\"line\">                print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">            frame = cv.flip(frame, 1)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS计算time.start</span><br><span class=\"line\">            start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">            # Inference</span><br><span class=\"line\">            results = self.model(frame)</span><br><span class=\"line\">            pd = results.pandas().xyxy[0]</span><br><span class=\"line\">            # 取出对应标签的list</span><br><span class=\"line\">            person_list = pd[pd[&#x27;name&#x27;] == &#x27;person&#x27;].to_numpy()</span><br><span class=\"line\">            bus_list = pd[pd[&#x27;name&#x27;] == &#x27;bus&#x27;].to_numpy()</span><br><span class=\"line\">            # 框出物体</span><br><span class=\"line\">            self.draw(person_list, frame)</span><br><span class=\"line\">            self.draw(bus_list, frame)</span><br><span class=\"line\">            # end_time</span><br><span class=\"line\">            end_time = time.time()</span><br><span class=\"line\">            fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">            # 控制台显示</span><br><span class=\"line\">            results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">            print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">            print(&#x27;----------------&#x27;)</span><br><span class=\"line\">            print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS显示</span><br><span class=\"line\">            cv.putText(frame, &#x27;FPS:&#x27; + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">            cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\">            cv.waitKey(10)</span><br><span class=\"line\">            if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">        self.cap.release()</span><br><span class=\"line\">        cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">test = MultipleTarget()</span><br><span class=\"line\">test.detect()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1>","more":"<p>在配置了YOLO和Pytorch后，利用yolo自带的yolov5s.pt轻量化模型实现目标检测</p>\n<h1 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h1><p>图片实现，多目标：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MultipleTarget:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        初始化</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 加载训练模型</span><br><span class=\"line\">        self.model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\">        # 设置阈值</span><br><span class=\"line\">        self.model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">        self.model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\">        # # 加载摄像头</span><br><span class=\"line\">        # self.cap = cv.VideoCapture(0)</span><br><span class=\"line\"></span><br><span class=\"line\">    def draw(self, list1, image_temp):</span><br><span class=\"line\"></span><br><span class=\"line\">        for temp in list1:</span><br><span class=\"line\">            name = temp[6]      # 取出标签名</span><br><span class=\"line\">            temp = temp[:4].astype(&#x27;int&#x27;)   # 转成int</span><br><span class=\"line\">            # print(temp)</span><br><span class=\"line\">            # print(&#x27;***************&#x27;)</span><br><span class=\"line\">            # cv.rectangle(image_temp, (int(temp[0]), int(temp[1])), (int(temp[2]), int(temp[3])),</span><br><span class=\"line\">            #              (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.putText(image_temp, name, (int(temp[0]-10), int(temp[1]-10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    def detect(self, image_temp):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        目标检测</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        img = image_temp</span><br><span class=\"line\">        # Inference</span><br><span class=\"line\">        results = self.model(img)</span><br><span class=\"line\">        # Results</span><br><span class=\"line\">        # 显示相关结果信息，如：图片信息、识别速度...</span><br><span class=\"line\">        results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">        pd1 = results.xyxy[0]  # 识别结果用tensor保存，包含标签、坐标范围、IOU</span><br><span class=\"line\">        pd = results.pandas().xyxy[0]   # tensor 转为 DataFrame(Pandas中的数据类型)</span><br><span class=\"line\"></span><br><span class=\"line\">        person_list = pd[pd[&#x27;name&#x27;] == &#x27;person&#x27;].to_numpy()</span><br><span class=\"line\">        bus_list = pd[pd[&#x27;name&#x27;] == &#x27;bus&#x27;].to_numpy()</span><br><span class=\"line\"></span><br><span class=\"line\">        self.draw(person_list, img)</span><br><span class=\"line\">        self.draw(bus_list, img)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 控制台显示</span><br><span class=\"line\">        # print(pd1)</span><br><span class=\"line\">        # print(pd)</span><br><span class=\"line\">        print(person_list)</span><br><span class=\"line\">        print(results.xyxy[0])</span><br><span class=\"line\">        print(&#x27;----------------------------------------------------------&#x27;)</span><br><span class=\"line\">        print(results.pandas().xyxy[0])</span><br><span class=\"line\">        # 窗口显示s</span><br><span class=\"line\">        cv.imshow(&#x27;results&#x27;, img)</span><br><span class=\"line\">        cv.waitKey(0)</span><br><span class=\"line\">        cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">image = cv.imread(r&#x27;yolov5/data/images/bus.jpg&#x27;)</span><br><span class=\"line\">test = MultipleTarget()</span><br><span class=\"line\">test.detect(image)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>摄像头获取，多目标：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class MultipleTarget:</span><br><span class=\"line\"></span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        初始化</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        # 加载训练模型</span><br><span class=\"line\">        self.model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/yolov5s.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\">        # 设置阈值</span><br><span class=\"line\">        self.model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">        self.model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\">        # 加载摄像头</span><br><span class=\"line\">        self.cap = cv.VideoCapture(0)</span><br><span class=\"line\">        if not self.cap.isOpened():</span><br><span class=\"line\">            print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    def draw(self, list_temp, image_temp):</span><br><span class=\"line\">        for temp in list_temp:</span><br><span class=\"line\">            name = temp[6]      # 取出标签名</span><br><span class=\"line\">            temp = temp[:4].astype(&#x27;int&#x27;)   # 转成int加快计算</span><br><span class=\"line\">            cv.rectangle(image_temp, (temp[0], temp[1]), (temp[2], temp[3]), (0, 0, 255), 3)  # 框出识别物体</span><br><span class=\"line\">            cv.putText(image_temp, name, (int(temp[0]-10), int(temp[1]-10)), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">    def detect(self):</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        目标检测</span><br><span class=\"line\">        &quot;&quot;&quot;</span><br><span class=\"line\">        while True:</span><br><span class=\"line\">            ret, frame = self.cap.read()</span><br><span class=\"line\">            # 如果正确读取帧，ret为True</span><br><span class=\"line\">            if not ret:</span><br><span class=\"line\">                print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">                break</span><br><span class=\"line\">            frame = cv.flip(frame, 1)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS计算time.start</span><br><span class=\"line\">            start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">            # Inference</span><br><span class=\"line\">            results = self.model(frame)</span><br><span class=\"line\">            pd = results.pandas().xyxy[0]</span><br><span class=\"line\">            # 取出对应标签的list</span><br><span class=\"line\">            person_list = pd[pd[&#x27;name&#x27;] == &#x27;person&#x27;].to_numpy()</span><br><span class=\"line\">            bus_list = pd[pd[&#x27;name&#x27;] == &#x27;bus&#x27;].to_numpy()</span><br><span class=\"line\">            # 框出物体</span><br><span class=\"line\">            self.draw(person_list, frame)</span><br><span class=\"line\">            self.draw(bus_list, frame)</span><br><span class=\"line\">            # end_time</span><br><span class=\"line\">            end_time = time.time()</span><br><span class=\"line\">            fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">            # 控制台显示</span><br><span class=\"line\">            results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">            print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">            print(&#x27;----------------&#x27;)</span><br><span class=\"line\">            print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\"></span><br><span class=\"line\">            # FPS显示</span><br><span class=\"line\">            cv.putText(frame, &#x27;FPS:&#x27; + str(int(fps)), (30, 50), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">            cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\">            cv.waitKey(10)</span><br><span class=\"line\">            if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">                break</span><br><span class=\"line\"></span><br><span class=\"line\">        self.cap.release()</span><br><span class=\"line\">        cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">test = MultipleTarget()</span><br><span class=\"line\">test.detect()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"YOLOv5配置环境","_content":"# YOLOv5配置环境\n<!--more-->\n# 前言\n在使用YOLOv5前我们首先要配置它的相关环境，网上有很多教程，这里我放一个我学的\n[教程链接](https://blog.csdn.net/GenuineMonster/article/details/116604556)\n\n# 一、下载相关IDE\n这里推荐大家下载Anaconda\n我自己使用的是pycharm，在使用YOLO的时候感觉比anaconda复杂了不少。\n虽然pycharm也有jupyter的插件，但是还是推荐大家安装Anaconda可以省去安装很多第三方库的步骤。\n非要和我一样头铁使用pychram也行就是麻烦了些，记得在pycharm中的库安装更改成镜像源就行。\n# 二、pytroch下载与安装\n首先取pytorch的[官网](https://pytorch.org/get-started/locally/)，官网会根据你的电脑推荐你下载对应的pytorch版本。\n最重要的是会告诉你应该安装什么版本的**CUDA**\n这里你别着急取下载，放着这个页面，先去下载CUDA和cudnn。\n![插图](https://s3.bmp.ovh/imgs/2022/05/31/776c95c991a39f3c.jpg)\n**PS：** 我这里使用的是**pip**安装，因为我是用的pycharm\n如果你用的是Anaconda这里选择**Conda**安装\n还有CUDA10.2 pytorch 已经不支持了，所以一般都是CUDA11.3，我们在下载的时候就选择CUDA11.3就好了\n# 三、CUDA和cudnn下载\n这里直接根据上边教程取下载就行，不赘述。\n# 后续\n根据推荐的教程进行。","source":"_posts/YOLOv5/配置环境.md","raw":"---\ntitle: YOLOv5配置环境\n---\n# YOLOv5配置环境\n<!--more-->\n# 前言\n在使用YOLOv5前我们首先要配置它的相关环境，网上有很多教程，这里我放一个我学的\n[教程链接](https://blog.csdn.net/GenuineMonster/article/details/116604556)\n\n# 一、下载相关IDE\n这里推荐大家下载Anaconda\n我自己使用的是pycharm，在使用YOLO的时候感觉比anaconda复杂了不少。\n虽然pycharm也有jupyter的插件，但是还是推荐大家安装Anaconda可以省去安装很多第三方库的步骤。\n非要和我一样头铁使用pychram也行就是麻烦了些，记得在pycharm中的库安装更改成镜像源就行。\n# 二、pytroch下载与安装\n首先取pytorch的[官网](https://pytorch.org/get-started/locally/)，官网会根据你的电脑推荐你下载对应的pytorch版本。\n最重要的是会告诉你应该安装什么版本的**CUDA**\n这里你别着急取下载，放着这个页面，先去下载CUDA和cudnn。\n![插图](https://s3.bmp.ovh/imgs/2022/05/31/776c95c991a39f3c.jpg)\n**PS：** 我这里使用的是**pip**安装，因为我是用的pycharm\n如果你用的是Anaconda这里选择**Conda**安装\n还有CUDA10.2 pytorch 已经不支持了，所以一般都是CUDA11.3，我们在下载的时候就选择CUDA11.3就好了\n# 三、CUDA和cudnn下载\n这里直接根据上边教程取下载就行，不赘述。\n# 后续\n根据推荐的教程进行。","slug":"YOLOv5/配置环境","published":1,"date":"2022-05-31T08:02:53.706Z","updated":"2022-06-01T08:41:39.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeoj000d68ur7kb747zf","content":"<h1 id=\"YOLOv5配置环境\"><a href=\"#YOLOv5配置环境\" class=\"headerlink\" title=\"YOLOv5配置环境\"></a>YOLOv5配置环境</h1><span id=\"more\"></span>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在使用YOLOv5前我们首先要配置它的相关环境，网上有很多教程，这里我放一个我学的<br><a href=\"https://blog.csdn.net/GenuineMonster/article/details/116604556\">教程链接</a></p>\n<h1 id=\"一、下载相关IDE\"><a href=\"#一、下载相关IDE\" class=\"headerlink\" title=\"一、下载相关IDE\"></a>一、下载相关IDE</h1><p>这里推荐大家下载Anaconda<br>我自己使用的是pycharm，在使用YOLO的时候感觉比anaconda复杂了不少。<br>虽然pycharm也有jupyter的插件，但是还是推荐大家安装Anaconda可以省去安装很多第三方库的步骤。<br>非要和我一样头铁使用pychram也行就是麻烦了些，记得在pycharm中的库安装更改成镜像源就行。</p>\n<h1 id=\"二、pytroch下载与安装\"><a href=\"#二、pytroch下载与安装\" class=\"headerlink\" title=\"二、pytroch下载与安装\"></a>二、pytroch下载与安装</h1><p>首先取pytorch的<a href=\"https://pytorch.org/get-started/locally/\">官网</a>，官网会根据你的电脑推荐你下载对应的pytorch版本。<br>最重要的是会告诉你应该安装什么版本的<strong>CUDA</strong><br>这里你别着急取下载，放着这个页面，先去下载CUDA和cudnn。<br><img src=\"https://s3.bmp.ovh/imgs/2022/05/31/776c95c991a39f3c.jpg\" alt=\"插图\"><br><strong>PS：</strong> 我这里使用的是<strong>pip</strong>安装，因为我是用的pycharm<br>如果你用的是Anaconda这里选择<strong>Conda</strong>安装<br>还有CUDA10.2 pytorch 已经不支持了，所以一般都是CUDA11.3，我们在下载的时候就选择CUDA11.3就好了</p>\n<h1 id=\"三、CUDA和cudnn下载\"><a href=\"#三、CUDA和cudnn下载\" class=\"headerlink\" title=\"三、CUDA和cudnn下载\"></a>三、CUDA和cudnn下载</h1><p>这里直接根据上边教程取下载就行，不赘述。</p>\n<h1 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h1><p>根据推荐的教程进行。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"YOLOv5配置环境\"><a href=\"#YOLOv5配置环境\" class=\"headerlink\" title=\"YOLOv5配置环境\"></a>YOLOv5配置环境</h1>","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在使用YOLOv5前我们首先要配置它的相关环境，网上有很多教程，这里我放一个我学的<br><a href=\"https://blog.csdn.net/GenuineMonster/article/details/116604556\">教程链接</a></p>\n<h1 id=\"一、下载相关IDE\"><a href=\"#一、下载相关IDE\" class=\"headerlink\" title=\"一、下载相关IDE\"></a>一、下载相关IDE</h1><p>这里推荐大家下载Anaconda<br>我自己使用的是pycharm，在使用YOLO的时候感觉比anaconda复杂了不少。<br>虽然pycharm也有jupyter的插件，但是还是推荐大家安装Anaconda可以省去安装很多第三方库的步骤。<br>非要和我一样头铁使用pychram也行就是麻烦了些，记得在pycharm中的库安装更改成镜像源就行。</p>\n<h1 id=\"二、pytroch下载与安装\"><a href=\"#二、pytroch下载与安装\" class=\"headerlink\" title=\"二、pytroch下载与安装\"></a>二、pytroch下载与安装</h1><p>首先取pytorch的<a href=\"https://pytorch.org/get-started/locally/\">官网</a>，官网会根据你的电脑推荐你下载对应的pytorch版本。<br>最重要的是会告诉你应该安装什么版本的<strong>CUDA</strong><br>这里你别着急取下载，放着这个页面，先去下载CUDA和cudnn。<br><img src=\"https://s3.bmp.ovh/imgs/2022/05/31/776c95c991a39f3c.jpg\" alt=\"插图\"><br><strong>PS：</strong> 我这里使用的是<strong>pip</strong>安装，因为我是用的pycharm<br>如果你用的是Anaconda这里选择<strong>Conda</strong>安装<br>还有CUDA10.2 pytorch 已经不支持了，所以一般都是CUDA11.3，我们在下载的时候就选择CUDA11.3就好了</p>\n<h1 id=\"三、CUDA和cudnn下载\"><a href=\"#三、CUDA和cudnn下载\" class=\"headerlink\" title=\"三、CUDA和cudnn下载\"></a>三、CUDA和cudnn下载</h1><p>这里直接根据上边教程取下载就行，不赘述。</p>\n<h1 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h1><p>根据推荐的教程进行。</p>"},{"title":"esp32 JSON解析和编码","_content":"\n### esp32 json信息解析\n<!-- more -->\n当我们访问网站API获取到得信息一般都为JSON格式，因此如何解析JSON格式信息将其转换成我们需要的信息成了一个问题。\n这个时候就体现了咱们Arduino平台的强大，我们有很多开源的库，ArduinoJson库就是一个开源的解析JSON格式信息的库。怎么在platform下载ArduinoJson不在赘述。\n#### 主要来看JSON格式信息解析的实现\n**直接贴代码**\n```\n/**\n * 解析Json字符串\n * @author 单片机菜鸟\n * @date 2019/06/02\n */\n#include <ArduinoJson.h>\n#include <Arduino.h>\n\nvoid setup() {\n  Serial.begin(115200);\n  while (!Serial) continue;\n  // Json对象对象树的内存工具 静态buffer \n  // 200 是大小 如果这个Json对象更加复杂，那么就需要根据需要去增加这个值.\n  // StaticJsonDocument 在栈区分配内存   它也可以被 StaticJsonDocument（内存在堆区分配） 代替\n  // DynamicJsonDocument  doc(200); 堆区分配内存\n  StaticJsonDocument<200> doc;\n  // Json格式写法，创建一个json消息\n  char json[] =\n      \"{\\\"sensor\\\":\\\"gps\\\",\\\"time\\\":1351824120,\\\"data\\\":[48.756080,2.302038]}\";\n\n  // Add an array.\n  //\n  // Deserialize the JSON document\n  DeserializationError error = deserializeJson(doc, json);\n\n  // Test if parsing succeeds.解析是否成功\n  if (error) {\n    Serial.print(F(\"deserializeJson() failed: \"));\n    Serial.println(error.c_str());\n    return;\n  }\n  // Fetch values.\n  //\n  // Most of the time, you can rely on the implicit casts.\n  // In other case, you can do doc[\"time\"].as<long>();\n  const char* sensor = doc[\"sensor\"];\n  long time = doc[\"time\"];\n  double latitude = doc[\"data\"][0];\n  double longitude = doc[\"data\"][1];\n\n  // Print values.\n  Serial.println(sensor);\n  Serial.println(time);\n  Serial.println(latitude, 6);\n  Serial.println(longitude, 6);\n}\n\nvoid loop() {\n  // not used in this example\n}\n\n```\n\n## 参考文档\n[https://blog.csdn.net/dpjcn1990/article/details/92831648](https://blog.csdn.net/dpjcn1990/article/details/92831648)\n","source":"_posts/esp32-weather/esp32_Json.md","raw":"---\ntitle: esp32 JSON解析和编码\n---\n\n### esp32 json信息解析\n<!-- more -->\n当我们访问网站API获取到得信息一般都为JSON格式，因此如何解析JSON格式信息将其转换成我们需要的信息成了一个问题。\n这个时候就体现了咱们Arduino平台的强大，我们有很多开源的库，ArduinoJson库就是一个开源的解析JSON格式信息的库。怎么在platform下载ArduinoJson不在赘述。\n#### 主要来看JSON格式信息解析的实现\n**直接贴代码**\n```\n/**\n * 解析Json字符串\n * @author 单片机菜鸟\n * @date 2019/06/02\n */\n#include <ArduinoJson.h>\n#include <Arduino.h>\n\nvoid setup() {\n  Serial.begin(115200);\n  while (!Serial) continue;\n  // Json对象对象树的内存工具 静态buffer \n  // 200 是大小 如果这个Json对象更加复杂，那么就需要根据需要去增加这个值.\n  // StaticJsonDocument 在栈区分配内存   它也可以被 StaticJsonDocument（内存在堆区分配） 代替\n  // DynamicJsonDocument  doc(200); 堆区分配内存\n  StaticJsonDocument<200> doc;\n  // Json格式写法，创建一个json消息\n  char json[] =\n      \"{\\\"sensor\\\":\\\"gps\\\",\\\"time\\\":1351824120,\\\"data\\\":[48.756080,2.302038]}\";\n\n  // Add an array.\n  //\n  // Deserialize the JSON document\n  DeserializationError error = deserializeJson(doc, json);\n\n  // Test if parsing succeeds.解析是否成功\n  if (error) {\n    Serial.print(F(\"deserializeJson() failed: \"));\n    Serial.println(error.c_str());\n    return;\n  }\n  // Fetch values.\n  //\n  // Most of the time, you can rely on the implicit casts.\n  // In other case, you can do doc[\"time\"].as<long>();\n  const char* sensor = doc[\"sensor\"];\n  long time = doc[\"time\"];\n  double latitude = doc[\"data\"][0];\n  double longitude = doc[\"data\"][1];\n\n  // Print values.\n  Serial.println(sensor);\n  Serial.println(time);\n  Serial.println(latitude, 6);\n  Serial.println(longitude, 6);\n}\n\nvoid loop() {\n  // not used in this example\n}\n\n```\n\n## 参考文档\n[https://blog.csdn.net/dpjcn1990/article/details/92831648](https://blog.csdn.net/dpjcn1990/article/details/92831648)\n","slug":"esp32-weather/esp32_Json","published":1,"date":"2022-05-25T10:06:34.311Z","updated":"2022-03-24T09:46:45.443Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeok000e68ur2zlo6tx3","content":"<h3 id=\"esp32-json信息解析\"><a href=\"#esp32-json信息解析\" class=\"headerlink\" title=\"esp32 json信息解析\"></a>esp32 json信息解析</h3><span id=\"more\"></span>\n<p>当我们访问网站API获取到得信息一般都为JSON格式，因此如何解析JSON格式信息将其转换成我们需要的信息成了一个问题。<br>这个时候就体现了咱们Arduino平台的强大，我们有很多开源的库，ArduinoJson库就是一个开源的解析JSON格式信息的库。怎么在platform下载ArduinoJson不在赘述。</p>\n<h4 id=\"主要来看JSON格式信息解析的实现\"><a href=\"#主要来看JSON格式信息解析的实现\" class=\"headerlink\" title=\"主要来看JSON格式信息解析的实现\"></a>主要来看JSON格式信息解析的实现</h4><p><strong>直接贴代码</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 解析Json字符串</span><br><span class=\"line\"> * @author 单片机菜鸟</span><br><span class=\"line\"> * @date 2019/06/02</span><br><span class=\"line\"> */</span><br><span class=\"line\">#include &lt;ArduinoJson.h&gt;</span><br><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  while (!Serial) continue;</span><br><span class=\"line\">  // Json对象对象树的内存工具 静态buffer </span><br><span class=\"line\">  // 200 是大小 如果这个Json对象更加复杂，那么就需要根据需要去增加这个值.</span><br><span class=\"line\">  // StaticJsonDocument 在栈区分配内存   它也可以被 StaticJsonDocument（内存在堆区分配） 代替</span><br><span class=\"line\">  // DynamicJsonDocument  doc(200); 堆区分配内存</span><br><span class=\"line\">  StaticJsonDocument&lt;200&gt; doc;</span><br><span class=\"line\">  // Json格式写法，创建一个json消息</span><br><span class=\"line\">  char json[] =</span><br><span class=\"line\">      &quot;&#123;\\&quot;sensor\\&quot;:\\&quot;gps\\&quot;,\\&quot;time\\&quot;:1351824120,\\&quot;data\\&quot;:[48.756080,2.302038]&#125;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">  // Add an array.</span><br><span class=\"line\">  //</span><br><span class=\"line\">  // Deserialize the JSON document</span><br><span class=\"line\">  DeserializationError error = deserializeJson(doc, json);</span><br><span class=\"line\"></span><br><span class=\"line\">  // Test if parsing succeeds.解析是否成功</span><br><span class=\"line\">  if (error) &#123;</span><br><span class=\"line\">    Serial.print(F(&quot;deserializeJson() failed: &quot;));</span><br><span class=\"line\">    Serial.println(error.c_str());</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // Fetch values.</span><br><span class=\"line\">  //</span><br><span class=\"line\">  // Most of the time, you can rely on the implicit casts.</span><br><span class=\"line\">  // In other case, you can do doc[&quot;time&quot;].as&lt;long&gt;();</span><br><span class=\"line\">  const char* sensor = doc[&quot;sensor&quot;];</span><br><span class=\"line\">  long time = doc[&quot;time&quot;];</span><br><span class=\"line\">  double latitude = doc[&quot;data&quot;][0];</span><br><span class=\"line\">  double longitude = doc[&quot;data&quot;][1];</span><br><span class=\"line\"></span><br><span class=\"line\">  // Print values.</span><br><span class=\"line\">  Serial.println(sensor);</span><br><span class=\"line\">  Serial.println(time);</span><br><span class=\"line\">  Serial.println(latitude, 6);</span><br><span class=\"line\">  Serial.println(longitude, 6);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // not used in this example</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://blog.csdn.net/dpjcn1990/article/details/92831648\">https://blog.csdn.net/dpjcn1990/article/details/92831648</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"esp32-json信息解析\"><a href=\"#esp32-json信息解析\" class=\"headerlink\" title=\"esp32 json信息解析\"></a>esp32 json信息解析</h3>","more":"<p>当我们访问网站API获取到得信息一般都为JSON格式，因此如何解析JSON格式信息将其转换成我们需要的信息成了一个问题。<br>这个时候就体现了咱们Arduino平台的强大，我们有很多开源的库，ArduinoJson库就是一个开源的解析JSON格式信息的库。怎么在platform下载ArduinoJson不在赘述。</p>\n<h4 id=\"主要来看JSON格式信息解析的实现\"><a href=\"#主要来看JSON格式信息解析的实现\" class=\"headerlink\" title=\"主要来看JSON格式信息解析的实现\"></a>主要来看JSON格式信息解析的实现</h4><p><strong>直接贴代码</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 解析Json字符串</span><br><span class=\"line\"> * @author 单片机菜鸟</span><br><span class=\"line\"> * @date 2019/06/02</span><br><span class=\"line\"> */</span><br><span class=\"line\">#include &lt;ArduinoJson.h&gt;</span><br><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  while (!Serial) continue;</span><br><span class=\"line\">  // Json对象对象树的内存工具 静态buffer </span><br><span class=\"line\">  // 200 是大小 如果这个Json对象更加复杂，那么就需要根据需要去增加这个值.</span><br><span class=\"line\">  // StaticJsonDocument 在栈区分配内存   它也可以被 StaticJsonDocument（内存在堆区分配） 代替</span><br><span class=\"line\">  // DynamicJsonDocument  doc(200); 堆区分配内存</span><br><span class=\"line\">  StaticJsonDocument&lt;200&gt; doc;</span><br><span class=\"line\">  // Json格式写法，创建一个json消息</span><br><span class=\"line\">  char json[] =</span><br><span class=\"line\">      &quot;&#123;\\&quot;sensor\\&quot;:\\&quot;gps\\&quot;,\\&quot;time\\&quot;:1351824120,\\&quot;data\\&quot;:[48.756080,2.302038]&#125;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">  // Add an array.</span><br><span class=\"line\">  //</span><br><span class=\"line\">  // Deserialize the JSON document</span><br><span class=\"line\">  DeserializationError error = deserializeJson(doc, json);</span><br><span class=\"line\"></span><br><span class=\"line\">  // Test if parsing succeeds.解析是否成功</span><br><span class=\"line\">  if (error) &#123;</span><br><span class=\"line\">    Serial.print(F(&quot;deserializeJson() failed: &quot;));</span><br><span class=\"line\">    Serial.println(error.c_str());</span><br><span class=\"line\">    return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // Fetch values.</span><br><span class=\"line\">  //</span><br><span class=\"line\">  // Most of the time, you can rely on the implicit casts.</span><br><span class=\"line\">  // In other case, you can do doc[&quot;time&quot;].as&lt;long&gt;();</span><br><span class=\"line\">  const char* sensor = doc[&quot;sensor&quot;];</span><br><span class=\"line\">  long time = doc[&quot;time&quot;];</span><br><span class=\"line\">  double latitude = doc[&quot;data&quot;][0];</span><br><span class=\"line\">  double longitude = doc[&quot;data&quot;][1];</span><br><span class=\"line\"></span><br><span class=\"line\">  // Print values.</span><br><span class=\"line\">  Serial.println(sensor);</span><br><span class=\"line\">  Serial.println(time);</span><br><span class=\"line\">  Serial.println(latitude, 6);</span><br><span class=\"line\">  Serial.println(longitude, 6);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // not used in this example</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://blog.csdn.net/dpjcn1990/article/details/92831648\">https://blog.csdn.net/dpjcn1990/article/details/92831648</a></p>"},{"title":"esp32连接API获取信息","_content":"## U8g2、ArduinoJson、WiFi、http的实现\n<!-- more -->\n#### 学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用\n\n这是一个不起眼的项目，我在学习的时候遇到的作者本人也是没事做着玩玩，然后就变成了我的学习项目了，我觉得我从中学到挺多的,U8g2库的使用我就是在这里面学到的，代码里对u8g2的注释较多，毕竟第一次学习\n\n废话不多说贴代码：\n```\n#include <Arduino.h>\n#include \"WiFi.h\"\n#include \"ArduinoJson.h\"\n#include \"HTTPClient.h\"\n#include <U8g2lib.h>\n\n#ifdef U8X8_HAVE_HW_SPI\n#include <SPI.h>\n#endif\n#ifdef U8X8_HAVE_HW_I2C\n#include <Wire.h>\n#endif\n\n//OLED硬件初始化\nU8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display\n\n// WIFI连接信息\nconst char* ssid = \"HONOR V20\"; //wifi nane\nconst char* password = \"yubaolin\"; // wifi password\n\nvoid WiFi_Connect();\nvoid get_Hitokoto();\nvoid OLEDDisplay();\n\n//一言\ntypedef struct {\n  char hitokoto[1024];//一言正文。编码方式 unicode。使用 utf-8。\n  char from[60];//一言的出处\n} HitokotoData_t;\nHitokotoData_t Hitokoto;\n\n//WiFi connect function\nvoid WiFi_Connect(){\n\n    WiFi.begin(ssid, password);\n    \n    while (WiFi.status() != WL_CONNECTED){  //Connection state judgment\n        delay(1000);\n        Serial.println(\"Connecting to WiFi...\");\n\n        \n        u8g2.clearBuffer();\n        u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n        u8g2.setCursor(0,16);\n        u8g2.print(\"wifi连接中\");\n        u8g2.sendBuffer();\n\n    }\n\n    Serial.println(\"Connected to the WiFi network\");\n\n    u8g2.clearBuffer();\n    u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n    u8g2.setCursor(0,16);\n    u8g2.print(\"wifi成功\");\n    u8g2.sendBuffer();\n}\n\nvoid get_Hitokoto(void)\n{\n  HTTPClient http;\n  http.begin(\"https://v1.hitokoto.cn/\");//Specify the URL\n  int httpCode = http.GET();            //Make the request\n  if (httpCode > 0) { //Check for the returning code\n\n    String payload = http.getString();\n    Serial.println(httpCode);\n    Serial.println(payload);\n\n    StaticJsonDocument<1024> doc;\n\n    DeserializationError error = deserializeJson(doc, payload);\n\n    if (error) {\n      Serial.println(\"JSON parsing failed!\");\n    } else {\n      if (strlen(doc[\"hitokoto\"]) > sizeof(Hitokoto.hitokoto)) {\n      \n        http.end();\n        return;\n      }\n      strcpy(Hitokoto.hitokoto, doc[\"hitokoto\"]);\n      strcpy(Hitokoto.from, doc[\"from\"]);\n    }\n  }\n  else {\n    Serial.println(\"Error on HTTP request\");\n  }\n  http.end(); //Free the resources\n  \n  //Serial.printf(sizeof(Hitokoto.hitokoto*sizeof(char)));\n  Serial.println(Hitokoto.hitokoto);\n  Serial.printf(\"出处：\");\n  Serial.println(Hitokoto.from);\n}\n\nvoid OLEDDisplay(){\n  /**\n  * 初始化U8g2库\n  * @Note 关联方法 initDisplay clearDisplay setPowerSave\n  */\n  //u8g2.begin();\n  /**\n  * 清除内存中数据缓冲区\n  */\n  u8g2.clearBuffer();\n  /**\n  * 开启Arduino平台下支持输出UTF8字符集\n  */ \n  //u8g2.enableUTF8Print(); \n  /**\n  * 设置字体集（字体集用于字符串绘制方法或者glyph绘制方法）\n  * @param font 具体的字体集\n  * @Note 关联方法  drawUTF8 drawStr drawGlyph print\n  */\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312); \n  /** \n   * 设置字符串绘制方向\n   * 0：左往右，旋转0度 1:上到下，旋转90度 2：右到左，旋转180度 3：下到上，旋转270度\n   */\n  u8g2.setFontDirection(0); \n  /**\n  * 设置绘制光标位置(x,y)\n  * x:为绘制横向起点，y；为纵向起点\n  * 绘制是从光标位置向左上角方向\n  * @Note 关联方法 print\n  */\n  u8g2.setCursor(0, 16);\n  //void DisplayInit();\n  /**\n  * 绘制内容\n  * @Note 关联方法  setFont setCursor enableUTF8Print\n  */\n  u8g2.println(Hitokoto.hitokoto);\n  u8g2.setCursor(0,32);\n  u8g2.println(\"出处：\");\n  u8g2.print(Hitokoto.from);\n  u8g2.sendBuffer();\n  delay(1000);\n\n}\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n  delay(3000);\n  u8g2.begin();\n  u8g2.enableUTF8Print();\n\n  WiFi_Connect();\n  //get_Hitokoto();\n  //OLEDDisplay();\n  \n}\n\n\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  get_Hitokoto();\n  OLEDDisplay();\n  delay(60000);\n}\n```\n### 最终呈现\n![一言实现](https://i.niupic.com/images/2022/03/18/9WHU.jpg)\n\n## 参考文档\n[https://blog.csdn.net/u014091490/article/details/104803307?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-104803307.pc_agg_new_rank&utm_term=esp32%E8%AF%BB%E5%8F%96json&spm=1000.2123.3001.4430](https://blog.csdn.net/u014091490/article/details/104803307?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-104803307.pc_agg_new_rank&utm_term=esp32%E8%AF%BB%E5%8F%96json&spm=1000.2123.3001.4430)","source":"_posts/esp32-weather/esp32_WiFi+Json+U8g2.md","raw":"---\ntitle: esp32连接API获取信息\n---\n## U8g2、ArduinoJson、WiFi、http的实现\n<!-- more -->\n#### 学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用\n\n这是一个不起眼的项目，我在学习的时候遇到的作者本人也是没事做着玩玩，然后就变成了我的学习项目了，我觉得我从中学到挺多的,U8g2库的使用我就是在这里面学到的，代码里对u8g2的注释较多，毕竟第一次学习\n\n废话不多说贴代码：\n```\n#include <Arduino.h>\n#include \"WiFi.h\"\n#include \"ArduinoJson.h\"\n#include \"HTTPClient.h\"\n#include <U8g2lib.h>\n\n#ifdef U8X8_HAVE_HW_SPI\n#include <SPI.h>\n#endif\n#ifdef U8X8_HAVE_HW_I2C\n#include <Wire.h>\n#endif\n\n//OLED硬件初始化\nU8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display\n\n// WIFI连接信息\nconst char* ssid = \"HONOR V20\"; //wifi nane\nconst char* password = \"yubaolin\"; // wifi password\n\nvoid WiFi_Connect();\nvoid get_Hitokoto();\nvoid OLEDDisplay();\n\n//一言\ntypedef struct {\n  char hitokoto[1024];//一言正文。编码方式 unicode。使用 utf-8。\n  char from[60];//一言的出处\n} HitokotoData_t;\nHitokotoData_t Hitokoto;\n\n//WiFi connect function\nvoid WiFi_Connect(){\n\n    WiFi.begin(ssid, password);\n    \n    while (WiFi.status() != WL_CONNECTED){  //Connection state judgment\n        delay(1000);\n        Serial.println(\"Connecting to WiFi...\");\n\n        \n        u8g2.clearBuffer();\n        u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n        u8g2.setCursor(0,16);\n        u8g2.print(\"wifi连接中\");\n        u8g2.sendBuffer();\n\n    }\n\n    Serial.println(\"Connected to the WiFi network\");\n\n    u8g2.clearBuffer();\n    u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n    u8g2.setCursor(0,16);\n    u8g2.print(\"wifi成功\");\n    u8g2.sendBuffer();\n}\n\nvoid get_Hitokoto(void)\n{\n  HTTPClient http;\n  http.begin(\"https://v1.hitokoto.cn/\");//Specify the URL\n  int httpCode = http.GET();            //Make the request\n  if (httpCode > 0) { //Check for the returning code\n\n    String payload = http.getString();\n    Serial.println(httpCode);\n    Serial.println(payload);\n\n    StaticJsonDocument<1024> doc;\n\n    DeserializationError error = deserializeJson(doc, payload);\n\n    if (error) {\n      Serial.println(\"JSON parsing failed!\");\n    } else {\n      if (strlen(doc[\"hitokoto\"]) > sizeof(Hitokoto.hitokoto)) {\n      \n        http.end();\n        return;\n      }\n      strcpy(Hitokoto.hitokoto, doc[\"hitokoto\"]);\n      strcpy(Hitokoto.from, doc[\"from\"]);\n    }\n  }\n  else {\n    Serial.println(\"Error on HTTP request\");\n  }\n  http.end(); //Free the resources\n  \n  //Serial.printf(sizeof(Hitokoto.hitokoto*sizeof(char)));\n  Serial.println(Hitokoto.hitokoto);\n  Serial.printf(\"出处：\");\n  Serial.println(Hitokoto.from);\n}\n\nvoid OLEDDisplay(){\n  /**\n  * 初始化U8g2库\n  * @Note 关联方法 initDisplay clearDisplay setPowerSave\n  */\n  //u8g2.begin();\n  /**\n  * 清除内存中数据缓冲区\n  */\n  u8g2.clearBuffer();\n  /**\n  * 开启Arduino平台下支持输出UTF8字符集\n  */ \n  //u8g2.enableUTF8Print(); \n  /**\n  * 设置字体集（字体集用于字符串绘制方法或者glyph绘制方法）\n  * @param font 具体的字体集\n  * @Note 关联方法  drawUTF8 drawStr drawGlyph print\n  */\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312); \n  /** \n   * 设置字符串绘制方向\n   * 0：左往右，旋转0度 1:上到下，旋转90度 2：右到左，旋转180度 3：下到上，旋转270度\n   */\n  u8g2.setFontDirection(0); \n  /**\n  * 设置绘制光标位置(x,y)\n  * x:为绘制横向起点，y；为纵向起点\n  * 绘制是从光标位置向左上角方向\n  * @Note 关联方法 print\n  */\n  u8g2.setCursor(0, 16);\n  //void DisplayInit();\n  /**\n  * 绘制内容\n  * @Note 关联方法  setFont setCursor enableUTF8Print\n  */\n  u8g2.println(Hitokoto.hitokoto);\n  u8g2.setCursor(0,32);\n  u8g2.println(\"出处：\");\n  u8g2.print(Hitokoto.from);\n  u8g2.sendBuffer();\n  delay(1000);\n\n}\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n  delay(3000);\n  u8g2.begin();\n  u8g2.enableUTF8Print();\n\n  WiFi_Connect();\n  //get_Hitokoto();\n  //OLEDDisplay();\n  \n}\n\n\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  get_Hitokoto();\n  OLEDDisplay();\n  delay(60000);\n}\n```\n### 最终呈现\n![一言实现](https://i.niupic.com/images/2022/03/18/9WHU.jpg)\n\n## 参考文档\n[https://blog.csdn.net/u014091490/article/details/104803307?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-104803307.pc_agg_new_rank&utm_term=esp32%E8%AF%BB%E5%8F%96json&spm=1000.2123.3001.4430](https://blog.csdn.net/u014091490/article/details/104803307?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-104803307.pc_agg_new_rank&utm_term=esp32%E8%AF%BB%E5%8F%96json&spm=1000.2123.3001.4430)","slug":"esp32-weather/esp32_WiFi+Json+U8g2","published":1,"date":"2022-05-25T10:06:34.367Z","updated":"2022-03-30T01:51:07.817Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeol000f68ur6htt7l0d","content":"<h2 id=\"U8g2、ArduinoJson、WiFi、http的实现\"><a href=\"#U8g2、ArduinoJson、WiFi、http的实现\" class=\"headerlink\" title=\"U8g2、ArduinoJson、WiFi、http的实现\"></a>U8g2、ArduinoJson、WiFi、http的实现</h2><span id=\"more\"></span>\n<h4 id=\"学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用\"><a href=\"#学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用\" class=\"headerlink\" title=\"学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用\"></a>学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用</h4><p>这是一个不起眼的项目，我在学习的时候遇到的作者本人也是没事做着玩玩，然后就变成了我的学习项目了，我觉得我从中学到挺多的,U8g2库的使用我就是在这里面学到的，代码里对u8g2的注释较多，毕竟第一次学习</p>\n<p>废话不多说贴代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\">#include &quot;WiFi.h&quot;</span><br><span class=\"line\">#include &quot;ArduinoJson.h&quot;</span><br><span class=\"line\">#include &quot;HTTPClient.h&quot;</span><br><span class=\"line\">#include &lt;U8g2lib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_SPI</span><br><span class=\"line\">#include &lt;SPI.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_I2C</span><br><span class=\"line\">#include &lt;Wire.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">//OLED硬件初始化</span><br><span class=\"line\">U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display</span><br><span class=\"line\"></span><br><span class=\"line\">// WIFI连接信息</span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">void WiFi_Connect();</span><br><span class=\"line\">void get_Hitokoto();</span><br><span class=\"line\">void OLEDDisplay();</span><br><span class=\"line\"></span><br><span class=\"line\">//一言</span><br><span class=\"line\">typedef struct &#123;</span><br><span class=\"line\">  char hitokoto[1024];//一言正文。编码方式 unicode。使用 utf-8。</span><br><span class=\"line\">  char from[60];//一言的出处</span><br><span class=\"line\">&#125; HitokotoData_t;</span><br><span class=\"line\">HitokotoData_t Hitokoto;</span><br><span class=\"line\"></span><br><span class=\"line\">//WiFi connect function</span><br><span class=\"line\">void WiFi_Connect()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">    </span><br><span class=\"line\">    while (WiFi.status() != WL_CONNECTED)&#123;  //Connection state judgment</span><br><span class=\"line\">        delay(1000);</span><br><span class=\"line\">        Serial.println(&quot;Connecting to WiFi...&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        u8g2.clearBuffer();</span><br><span class=\"line\">        u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">        u8g2.setCursor(0,16);</span><br><span class=\"line\">        u8g2.print(&quot;wifi连接中&quot;);</span><br><span class=\"line\">        u8g2.sendBuffer();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Serial.println(&quot;Connected to the WiFi network&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    u8g2.clearBuffer();</span><br><span class=\"line\">    u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">    u8g2.setCursor(0,16);</span><br><span class=\"line\">    u8g2.print(&quot;wifi成功&quot;);</span><br><span class=\"line\">    u8g2.sendBuffer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void get_Hitokoto(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  HTTPClient http;</span><br><span class=\"line\">  http.begin(&quot;https://v1.hitokoto.cn/&quot;);//Specify the URL</span><br><span class=\"line\">  int httpCode = http.GET();            //Make the request</span><br><span class=\"line\">  if (httpCode &gt; 0) &#123; //Check for the returning code</span><br><span class=\"line\"></span><br><span class=\"line\">    String payload = http.getString();</span><br><span class=\"line\">    Serial.println(httpCode);</span><br><span class=\"line\">    Serial.println(payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    StaticJsonDocument&lt;1024&gt; doc;</span><br><span class=\"line\"></span><br><span class=\"line\">    DeserializationError error = deserializeJson(doc, payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    if (error) &#123;</span><br><span class=\"line\">      Serial.println(&quot;JSON parsing failed!&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      if (strlen(doc[&quot;hitokoto&quot;]) &gt; sizeof(Hitokoto.hitokoto)) &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">        http.end();</span><br><span class=\"line\">        return;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      strcpy(Hitokoto.hitokoto, doc[&quot;hitokoto&quot;]);</span><br><span class=\"line\">      strcpy(Hitokoto.from, doc[&quot;from&quot;]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  else &#123;</span><br><span class=\"line\">    Serial.println(&quot;Error on HTTP request&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  http.end(); //Free the resources</span><br><span class=\"line\">  </span><br><span class=\"line\">  //Serial.printf(sizeof(Hitokoto.hitokoto*sizeof(char)));</span><br><span class=\"line\">  Serial.println(Hitokoto.hitokoto);</span><br><span class=\"line\">  Serial.printf(&quot;出处：&quot;);</span><br><span class=\"line\">  Serial.println(Hitokoto.from);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void OLEDDisplay()&#123;</span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 初始化U8g2库</span><br><span class=\"line\">  * @Note 关联方法 initDisplay clearDisplay setPowerSave</span><br><span class=\"line\">  */</span><br><span class=\"line\">  //u8g2.begin();</span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 清除内存中数据缓冲区</span><br><span class=\"line\">  */</span><br><span class=\"line\">  u8g2.clearBuffer();</span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 开启Arduino平台下支持输出UTF8字符集</span><br><span class=\"line\">  */ </span><br><span class=\"line\">  //u8g2.enableUTF8Print(); </span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 设置字体集（字体集用于字符串绘制方法或者glyph绘制方法）</span><br><span class=\"line\">  * @param font 具体的字体集</span><br><span class=\"line\">  * @Note 关联方法  drawUTF8 drawStr drawGlyph print</span><br><span class=\"line\">  */</span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312); </span><br><span class=\"line\">  /** </span><br><span class=\"line\">   * 设置字符串绘制方向</span><br><span class=\"line\">   * 0：左往右，旋转0度 1:上到下，旋转90度 2：右到左，旋转180度 3：下到上，旋转270度</span><br><span class=\"line\">   */</span><br><span class=\"line\">  u8g2.setFontDirection(0); </span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 设置绘制光标位置(x,y)</span><br><span class=\"line\">  * x:为绘制横向起点，y；为纵向起点</span><br><span class=\"line\">  * 绘制是从光标位置向左上角方向</span><br><span class=\"line\">  * @Note 关联方法 print</span><br><span class=\"line\">  */</span><br><span class=\"line\">  u8g2.setCursor(0, 16);</span><br><span class=\"line\">  //void DisplayInit();</span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 绘制内容</span><br><span class=\"line\">  * @Note 关联方法  setFont setCursor enableUTF8Print</span><br><span class=\"line\">  */</span><br><span class=\"line\">  u8g2.println(Hitokoto.hitokoto);</span><br><span class=\"line\">  u8g2.setCursor(0,32);</span><br><span class=\"line\">  u8g2.println(&quot;出处：&quot;);</span><br><span class=\"line\">  u8g2.print(Hitokoto.from);</span><br><span class=\"line\">  u8g2.sendBuffer();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  // put your setup code here, to run once:</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  delay(3000);</span><br><span class=\"line\">  u8g2.begin();</span><br><span class=\"line\">  u8g2.enableUTF8Print();</span><br><span class=\"line\"></span><br><span class=\"line\">  WiFi_Connect();</span><br><span class=\"line\">  //get_Hitokoto();</span><br><span class=\"line\">  //OLEDDisplay();</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // put your main code here, to run repeatedly:</span><br><span class=\"line\">  get_Hitokoto();</span><br><span class=\"line\">  OLEDDisplay();</span><br><span class=\"line\">  delay(60000);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最终呈现\"><a href=\"#最终呈现\" class=\"headerlink\" title=\"最终呈现\"></a>最终呈现</h3><p><img src=\"https://i.niupic.com/images/2022/03/18/9WHU.jpg\" alt=\"一言实现\"></p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://blog.csdn.net/u014091490/article/details/104803307?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-104803307.pc_agg_new_rank&utm_term=esp32%E8%AF%BB%E5%8F%96json&spm=1000.2123.3001.4430\">https://blog.csdn.net/u014091490/article/details/104803307?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2<del>aggregatepage</del>first_rank_ecpm_v1~rank_v31_ecpm-1-104803307.pc_agg_new_rank&amp;utm_term=esp32%E8%AF%BB%E5%8F%96json&amp;spm=1000.2123.3001.4430</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"U8g2、ArduinoJson、WiFi、http的实现\"><a href=\"#U8g2、ArduinoJson、WiFi、http的实现\" class=\"headerlink\" title=\"U8g2、ArduinoJson、WiFi、http的实现\"></a>U8g2、ArduinoJson、WiFi、http的实现</h2>","more":"<h4 id=\"学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用\"><a href=\"#学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用\" class=\"headerlink\" title=\"学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用\"></a>学习了U8g2、ArduinoJson、WiFi、http这些知识，接下来对其进行实际应用</h4><p>这是一个不起眼的项目，我在学习的时候遇到的作者本人也是没事做着玩玩，然后就变成了我的学习项目了，我觉得我从中学到挺多的,U8g2库的使用我就是在这里面学到的，代码里对u8g2的注释较多，毕竟第一次学习</p>\n<p>废话不多说贴代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\">#include &quot;WiFi.h&quot;</span><br><span class=\"line\">#include &quot;ArduinoJson.h&quot;</span><br><span class=\"line\">#include &quot;HTTPClient.h&quot;</span><br><span class=\"line\">#include &lt;U8g2lib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_SPI</span><br><span class=\"line\">#include &lt;SPI.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_I2C</span><br><span class=\"line\">#include &lt;Wire.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">//OLED硬件初始化</span><br><span class=\"line\">U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display</span><br><span class=\"line\"></span><br><span class=\"line\">// WIFI连接信息</span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">void WiFi_Connect();</span><br><span class=\"line\">void get_Hitokoto();</span><br><span class=\"line\">void OLEDDisplay();</span><br><span class=\"line\"></span><br><span class=\"line\">//一言</span><br><span class=\"line\">typedef struct &#123;</span><br><span class=\"line\">  char hitokoto[1024];//一言正文。编码方式 unicode。使用 utf-8。</span><br><span class=\"line\">  char from[60];//一言的出处</span><br><span class=\"line\">&#125; HitokotoData_t;</span><br><span class=\"line\">HitokotoData_t Hitokoto;</span><br><span class=\"line\"></span><br><span class=\"line\">//WiFi connect function</span><br><span class=\"line\">void WiFi_Connect()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">    </span><br><span class=\"line\">    while (WiFi.status() != WL_CONNECTED)&#123;  //Connection state judgment</span><br><span class=\"line\">        delay(1000);</span><br><span class=\"line\">        Serial.println(&quot;Connecting to WiFi...&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">        u8g2.clearBuffer();</span><br><span class=\"line\">        u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">        u8g2.setCursor(0,16);</span><br><span class=\"line\">        u8g2.print(&quot;wifi连接中&quot;);</span><br><span class=\"line\">        u8g2.sendBuffer();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Serial.println(&quot;Connected to the WiFi network&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    u8g2.clearBuffer();</span><br><span class=\"line\">    u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">    u8g2.setCursor(0,16);</span><br><span class=\"line\">    u8g2.print(&quot;wifi成功&quot;);</span><br><span class=\"line\">    u8g2.sendBuffer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void get_Hitokoto(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  HTTPClient http;</span><br><span class=\"line\">  http.begin(&quot;https://v1.hitokoto.cn/&quot;);//Specify the URL</span><br><span class=\"line\">  int httpCode = http.GET();            //Make the request</span><br><span class=\"line\">  if (httpCode &gt; 0) &#123; //Check for the returning code</span><br><span class=\"line\"></span><br><span class=\"line\">    String payload = http.getString();</span><br><span class=\"line\">    Serial.println(httpCode);</span><br><span class=\"line\">    Serial.println(payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    StaticJsonDocument&lt;1024&gt; doc;</span><br><span class=\"line\"></span><br><span class=\"line\">    DeserializationError error = deserializeJson(doc, payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    if (error) &#123;</span><br><span class=\"line\">      Serial.println(&quot;JSON parsing failed!&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      if (strlen(doc[&quot;hitokoto&quot;]) &gt; sizeof(Hitokoto.hitokoto)) &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">        http.end();</span><br><span class=\"line\">        return;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      strcpy(Hitokoto.hitokoto, doc[&quot;hitokoto&quot;]);</span><br><span class=\"line\">      strcpy(Hitokoto.from, doc[&quot;from&quot;]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  else &#123;</span><br><span class=\"line\">    Serial.println(&quot;Error on HTTP request&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  http.end(); //Free the resources</span><br><span class=\"line\">  </span><br><span class=\"line\">  //Serial.printf(sizeof(Hitokoto.hitokoto*sizeof(char)));</span><br><span class=\"line\">  Serial.println(Hitokoto.hitokoto);</span><br><span class=\"line\">  Serial.printf(&quot;出处：&quot;);</span><br><span class=\"line\">  Serial.println(Hitokoto.from);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void OLEDDisplay()&#123;</span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 初始化U8g2库</span><br><span class=\"line\">  * @Note 关联方法 initDisplay clearDisplay setPowerSave</span><br><span class=\"line\">  */</span><br><span class=\"line\">  //u8g2.begin();</span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 清除内存中数据缓冲区</span><br><span class=\"line\">  */</span><br><span class=\"line\">  u8g2.clearBuffer();</span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 开启Arduino平台下支持输出UTF8字符集</span><br><span class=\"line\">  */ </span><br><span class=\"line\">  //u8g2.enableUTF8Print(); </span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 设置字体集（字体集用于字符串绘制方法或者glyph绘制方法）</span><br><span class=\"line\">  * @param font 具体的字体集</span><br><span class=\"line\">  * @Note 关联方法  drawUTF8 drawStr drawGlyph print</span><br><span class=\"line\">  */</span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312); </span><br><span class=\"line\">  /** </span><br><span class=\"line\">   * 设置字符串绘制方向</span><br><span class=\"line\">   * 0：左往右，旋转0度 1:上到下，旋转90度 2：右到左，旋转180度 3：下到上，旋转270度</span><br><span class=\"line\">   */</span><br><span class=\"line\">  u8g2.setFontDirection(0); </span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 设置绘制光标位置(x,y)</span><br><span class=\"line\">  * x:为绘制横向起点，y；为纵向起点</span><br><span class=\"line\">  * 绘制是从光标位置向左上角方向</span><br><span class=\"line\">  * @Note 关联方法 print</span><br><span class=\"line\">  */</span><br><span class=\"line\">  u8g2.setCursor(0, 16);</span><br><span class=\"line\">  //void DisplayInit();</span><br><span class=\"line\">  /**</span><br><span class=\"line\">  * 绘制内容</span><br><span class=\"line\">  * @Note 关联方法  setFont setCursor enableUTF8Print</span><br><span class=\"line\">  */</span><br><span class=\"line\">  u8g2.println(Hitokoto.hitokoto);</span><br><span class=\"line\">  u8g2.setCursor(0,32);</span><br><span class=\"line\">  u8g2.println(&quot;出处：&quot;);</span><br><span class=\"line\">  u8g2.print(Hitokoto.from);</span><br><span class=\"line\">  u8g2.sendBuffer();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  // put your setup code here, to run once:</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  delay(3000);</span><br><span class=\"line\">  u8g2.begin();</span><br><span class=\"line\">  u8g2.enableUTF8Print();</span><br><span class=\"line\"></span><br><span class=\"line\">  WiFi_Connect();</span><br><span class=\"line\">  //get_Hitokoto();</span><br><span class=\"line\">  //OLEDDisplay();</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // put your main code here, to run repeatedly:</span><br><span class=\"line\">  get_Hitokoto();</span><br><span class=\"line\">  OLEDDisplay();</span><br><span class=\"line\">  delay(60000);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"最终呈现\"><a href=\"#最终呈现\" class=\"headerlink\" title=\"最终呈现\"></a>最终呈现</h3><p><img src=\"https://i.niupic.com/images/2022/03/18/9WHU.jpg\" alt=\"一言实现\"></p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://blog.csdn.net/u014091490/article/details/104803307?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-1-104803307.pc_agg_new_rank&utm_term=esp32%E8%AF%BB%E5%8F%96json&spm=1000.2123.3001.4430\">https://blog.csdn.net/u014091490/article/details/104803307?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2<del>aggregatepage</del>first_rank_ecpm_v1~rank_v31_ecpm-1-104803307.pc_agg_new_rank&amp;utm_term=esp32%E8%AF%BB%E5%8F%96json&amp;spm=1000.2123.3001.4430</a></p>"},{"title":"esp32WiFi功能实现","_content":"\n### WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单\n<!-- more -->\n```\n#include <Arduino.h>\n#include \"WiFi.h\n\n// ----WIFI连接信息-----//\nconst char* ssid = \"写你WIFI的名字\"; //wifi nane\nconst char* password = \"Wifi密码\"; // wifi password\n\n//这里我把WIFi这个功能封装成一个函数了\n//WiFi connect function\nvoid WiFi_Connect(){\n\n    WiFi.begin(ssid, password);\n    \n    while (WiFi.status() != WL_CONNECTED){  //Connection state judgment\n        delay(1000);\n        Serial.println(\"Connecting to WiFi...\");\n    }\n    Serial.println(\"Connected to the WiFi network\");\n}\n\nvoid setup(){\n    Serial.begin(115200); //设置波特率，在platformio.ini文件里加上 monitor_speed = 115200\n    WiFi_Connect();\n    delay(500);\n}\n\nvoid loop(){\n\n}\n\"\n```\n\n#### 然后我们就可以在手机看到板子了（我这里是手机开热点）\n![手机查看WIFI连接设备](https://i.niupic.com/images/2022/03/18/9WHT.jpg)","source":"_posts/esp32-weather/esp32_WiFi.md","raw":"---\ntitle: esp32WiFi功能实现\n---\n\n### WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单\n<!-- more -->\n```\n#include <Arduino.h>\n#include \"WiFi.h\n\n// ----WIFI连接信息-----//\nconst char* ssid = \"写你WIFI的名字\"; //wifi nane\nconst char* password = \"Wifi密码\"; // wifi password\n\n//这里我把WIFi这个功能封装成一个函数了\n//WiFi connect function\nvoid WiFi_Connect(){\n\n    WiFi.begin(ssid, password);\n    \n    while (WiFi.status() != WL_CONNECTED){  //Connection state judgment\n        delay(1000);\n        Serial.println(\"Connecting to WiFi...\");\n    }\n    Serial.println(\"Connected to the WiFi network\");\n}\n\nvoid setup(){\n    Serial.begin(115200); //设置波特率，在platformio.ini文件里加上 monitor_speed = 115200\n    WiFi_Connect();\n    delay(500);\n}\n\nvoid loop(){\n\n}\n\"\n```\n\n#### 然后我们就可以在手机看到板子了（我这里是手机开热点）\n![手机查看WIFI连接设备](https://i.niupic.com/images/2022/03/18/9WHT.jpg)","slug":"esp32-weather/esp32_WiFi","published":1,"date":"2022-05-25T10:06:34.382Z","updated":"2022-03-24T09:46:39.931Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeon000g68urctyog4rm","content":"<h3 id=\"WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单\"><a href=\"#WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单\" class=\"headerlink\" title=\"WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单\"></a>WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单</h3><span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\">#include &quot;WiFi.h</span><br><span class=\"line\"></span><br><span class=\"line\">// ----WIFI连接信息-----//</span><br><span class=\"line\">const char* ssid = &quot;写你WIFI的名字&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;Wifi密码&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">//这里我把WIFi这个功能封装成一个函数了</span><br><span class=\"line\">//WiFi connect function</span><br><span class=\"line\">void WiFi_Connect()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">    </span><br><span class=\"line\">    while (WiFi.status() != WL_CONNECTED)&#123;  //Connection state judgment</span><br><span class=\"line\">        delay(1000);</span><br><span class=\"line\">        Serial.println(&quot;Connecting to WiFi...&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.println(&quot;Connected to the WiFi network&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup()&#123;</span><br><span class=\"line\">    Serial.begin(115200); //设置波特率，在platformio.ini文件里加上 monitor_speed = 115200</span><br><span class=\"line\">    WiFi_Connect();</span><br><span class=\"line\">    delay(500);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&quot;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"然后我们就可以在手机看到板子了（我这里是手机开热点）\"><a href=\"#然后我们就可以在手机看到板子了（我这里是手机开热点）\" class=\"headerlink\" title=\"然后我们就可以在手机看到板子了（我这里是手机开热点）\"></a>然后我们就可以在手机看到板子了（我这里是手机开热点）</h4><p><img src=\"https://i.niupic.com/images/2022/03/18/9WHT.jpg\" alt=\"手机查看WIFI连接设备\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单\"><a href=\"#WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单\" class=\"headerlink\" title=\"WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单\"></a>WiFi功能没啥好说的直接贴代码，自己看看就懂了，很简单</h3>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\">#include &quot;WiFi.h</span><br><span class=\"line\"></span><br><span class=\"line\">// ----WIFI连接信息-----//</span><br><span class=\"line\">const char* ssid = &quot;写你WIFI的名字&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;Wifi密码&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">//这里我把WIFi这个功能封装成一个函数了</span><br><span class=\"line\">//WiFi connect function</span><br><span class=\"line\">void WiFi_Connect()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">    </span><br><span class=\"line\">    while (WiFi.status() != WL_CONNECTED)&#123;  //Connection state judgment</span><br><span class=\"line\">        delay(1000);</span><br><span class=\"line\">        Serial.println(&quot;Connecting to WiFi...&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.println(&quot;Connected to the WiFi network&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup()&#123;</span><br><span class=\"line\">    Serial.begin(115200); //设置波特率，在platformio.ini文件里加上 monitor_speed = 115200</span><br><span class=\"line\">    WiFi_Connect();</span><br><span class=\"line\">    delay(500);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&quot;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"然后我们就可以在手机看到板子了（我这里是手机开热点）\"><a href=\"#然后我们就可以在手机看到板子了（我这里是手机开热点）\" class=\"headerlink\" title=\"然后我们就可以在手机看到板子了（我这里是手机开热点）\"></a>然后我们就可以在手机看到板子了（我这里是手机开热点）</h4><p><img src=\"https://i.niupic.com/images/2022/03/18/9WHT.jpg\" alt=\"手机查看WIFI连接设备\"></p>"},{"title":"esp32显示图片","_content":"\n# esp32在OLED上显示图片\n<!-- more -->\n之前写的桌面天气代码，在屏幕显示上没有图片，感觉缺少了灵魂。写桌面天气的时候参考一位大佬的代码看见他写了关于图片这方面的代码，本着学习和补全项目的意愿，补写了这部分代码。\n这部分代码其实不难，主要难点还是在调试图片的显示位置和图片的取模，代码这方面感觉没任何难度。\n## 一、图片取模\n图片取模这里我用的PCtoLCD2002，这个软件使用也比较简单，就是资源比较难找，随便下载的又怕有病毒，这里放一个这个软件的百度云链接，需要的自取\n[PCtoLCD2002](https://pan.baidu.com/s/1hiaKpFbau73P4H7J1IuaqA)，提取码：92yn\n**如果链接失效可以发邮件给我或者私信，邮箱：ybl728@163.com**\n我这里把我取模的设置给大家看看\n![字模设置](https://i.niupic.com/images/2022/03/23/9X0W.png)\n***PS：图中的数据前缀是0x不是Ox,标点符号都是英文的*** 不要问我为什么知道，这是试出来的，我也是第一次用。毕竟复制字模数据进代码就报红一大片可太难受了。\n## 二、图片取模过程\n使用方法：这个方法我是跟这个大佬学的\n[大佬链接](https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430)\n跟着做就行没什么难点\n## 三、天气图标获取\n天气图标，知心天气有提供这里放链接，自提\n[知心天气天气图标](https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/yev2c3)\n这里还有API接口返回天气代码对应的天气状况，写代码的时候需要用到。\n## 天气图标显示代码\n这里代码有点多，主要是字模的数据太多了，代码我就不放这里放另一篇里。\n[天气图标字模头文件](https://yu-728.github.io/2022/03/23/esp32_weatherpicture_H/)\n[天气图标代码](https://yu-728.github.io/2022/03/21/esp32_weatherCode/)\n这里直接放实现效果：\n![图标显示](https://i.niupic.com/images/2022/03/23/9X14.jpg)","source":"_posts/esp32-weather/esp32_picture.md","raw":"---\ntitle: esp32显示图片\n---\n\n# esp32在OLED上显示图片\n<!-- more -->\n之前写的桌面天气代码，在屏幕显示上没有图片，感觉缺少了灵魂。写桌面天气的时候参考一位大佬的代码看见他写了关于图片这方面的代码，本着学习和补全项目的意愿，补写了这部分代码。\n这部分代码其实不难，主要难点还是在调试图片的显示位置和图片的取模，代码这方面感觉没任何难度。\n## 一、图片取模\n图片取模这里我用的PCtoLCD2002，这个软件使用也比较简单，就是资源比较难找，随便下载的又怕有病毒，这里放一个这个软件的百度云链接，需要的自取\n[PCtoLCD2002](https://pan.baidu.com/s/1hiaKpFbau73P4H7J1IuaqA)，提取码：92yn\n**如果链接失效可以发邮件给我或者私信，邮箱：ybl728@163.com**\n我这里把我取模的设置给大家看看\n![字模设置](https://i.niupic.com/images/2022/03/23/9X0W.png)\n***PS：图中的数据前缀是0x不是Ox,标点符号都是英文的*** 不要问我为什么知道，这是试出来的，我也是第一次用。毕竟复制字模数据进代码就报红一大片可太难受了。\n## 二、图片取模过程\n使用方法：这个方法我是跟这个大佬学的\n[大佬链接](https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430)\n跟着做就行没什么难点\n## 三、天气图标获取\n天气图标，知心天气有提供这里放链接，自提\n[知心天气天气图标](https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/yev2c3)\n这里还有API接口返回天气代码对应的天气状况，写代码的时候需要用到。\n## 天气图标显示代码\n这里代码有点多，主要是字模的数据太多了，代码我就不放这里放另一篇里。\n[天气图标字模头文件](https://yu-728.github.io/2022/03/23/esp32_weatherpicture_H/)\n[天气图标代码](https://yu-728.github.io/2022/03/21/esp32_weatherCode/)\n这里直接放实现效果：\n![图标显示](https://i.niupic.com/images/2022/03/23/9X14.jpg)","slug":"esp32-weather/esp32_picture","published":1,"date":"2022-05-25T10:06:34.311Z","updated":"2022-03-24T09:46:44.332Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeoo000h68ur4dgfbx2k","content":"<h1 id=\"esp32在OLED上显示图片\"><a href=\"#esp32在OLED上显示图片\" class=\"headerlink\" title=\"esp32在OLED上显示图片\"></a>esp32在OLED上显示图片</h1><span id=\"more\"></span>\n<p>之前写的桌面天气代码，在屏幕显示上没有图片，感觉缺少了灵魂。写桌面天气的时候参考一位大佬的代码看见他写了关于图片这方面的代码，本着学习和补全项目的意愿，补写了这部分代码。<br>这部分代码其实不难，主要难点还是在调试图片的显示位置和图片的取模，代码这方面感觉没任何难度。</p>\n<h2 id=\"一、图片取模\"><a href=\"#一、图片取模\" class=\"headerlink\" title=\"一、图片取模\"></a>一、图片取模</h2><p>图片取模这里我用的PCtoLCD2002，这个软件使用也比较简单，就是资源比较难找，随便下载的又怕有病毒，这里放一个这个软件的百度云链接，需要的自取<br><a href=\"https://pan.baidu.com/s/1hiaKpFbau73P4H7J1IuaqA\">PCtoLCD2002</a>，提取码：92yn<br><strong>如果链接失效可以发邮件给我或者私信，邮箱：<a href=\"mailto:&#x79;&#x62;&#108;&#55;&#50;&#56;&#64;&#x31;&#x36;&#x33;&#x2e;&#99;&#x6f;&#x6d;\">&#x79;&#x62;&#108;&#55;&#50;&#56;&#64;&#x31;&#x36;&#x33;&#x2e;&#99;&#x6f;&#x6d;</a></strong><br>我这里把我取模的设置给大家看看<br><img src=\"https://i.niupic.com/images/2022/03/23/9X0W.png\" alt=\"字模设置\"><br><em><strong>PS：图中的数据前缀是0x不是Ox,标点符号都是英文的</strong></em> 不要问我为什么知道，这是试出来的，我也是第一次用。毕竟复制字模数据进代码就报红一大片可太难受了。</p>\n<h2 id=\"二、图片取模过程\"><a href=\"#二、图片取模过程\" class=\"headerlink\" title=\"二、图片取模过程\"></a>二、图片取模过程</h2><p>使用方法：这个方法我是跟这个大佬学的<br><a href=\"https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430\">大佬链接</a><br>跟着做就行没什么难点</p>\n<h2 id=\"三、天气图标获取\"><a href=\"#三、天气图标获取\" class=\"headerlink\" title=\"三、天气图标获取\"></a>三、天气图标获取</h2><p>天气图标，知心天气有提供这里放链接，自提<br><a href=\"https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/yev2c3\">知心天气天气图标</a><br>这里还有API接口返回天气代码对应的天气状况，写代码的时候需要用到。</p>\n<h2 id=\"天气图标显示代码\"><a href=\"#天气图标显示代码\" class=\"headerlink\" title=\"天气图标显示代码\"></a>天气图标显示代码</h2><p>这里代码有点多，主要是字模的数据太多了，代码我就不放这里放另一篇里。<br><a href=\"https://yu-728.github.io/2022/03/23/esp32_weatherpicture_H/\">天气图标字模头文件</a><br><a href=\"https://yu-728.github.io/2022/03/21/esp32_weatherCode/\">天气图标代码</a><br>这里直接放实现效果：<br><img src=\"https://i.niupic.com/images/2022/03/23/9X14.jpg\" alt=\"图标显示\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"esp32在OLED上显示图片\"><a href=\"#esp32在OLED上显示图片\" class=\"headerlink\" title=\"esp32在OLED上显示图片\"></a>esp32在OLED上显示图片</h1>","more":"<p>之前写的桌面天气代码，在屏幕显示上没有图片，感觉缺少了灵魂。写桌面天气的时候参考一位大佬的代码看见他写了关于图片这方面的代码，本着学习和补全项目的意愿，补写了这部分代码。<br>这部分代码其实不难，主要难点还是在调试图片的显示位置和图片的取模，代码这方面感觉没任何难度。</p>\n<h2 id=\"一、图片取模\"><a href=\"#一、图片取模\" class=\"headerlink\" title=\"一、图片取模\"></a>一、图片取模</h2><p>图片取模这里我用的PCtoLCD2002，这个软件使用也比较简单，就是资源比较难找，随便下载的又怕有病毒，这里放一个这个软件的百度云链接，需要的自取<br><a href=\"https://pan.baidu.com/s/1hiaKpFbau73P4H7J1IuaqA\">PCtoLCD2002</a>，提取码：92yn<br><strong>如果链接失效可以发邮件给我或者私信，邮箱：<a href=\"mailto:&#x79;&#x62;&#108;&#55;&#50;&#56;&#64;&#x31;&#x36;&#x33;&#x2e;&#99;&#x6f;&#x6d;\">&#x79;&#x62;&#108;&#55;&#50;&#56;&#64;&#x31;&#x36;&#x33;&#x2e;&#99;&#x6f;&#x6d;</a></strong><br>我这里把我取模的设置给大家看看<br><img src=\"https://i.niupic.com/images/2022/03/23/9X0W.png\" alt=\"字模设置\"><br><em><strong>PS：图中的数据前缀是0x不是Ox,标点符号都是英文的</strong></em> 不要问我为什么知道，这是试出来的，我也是第一次用。毕竟复制字模数据进代码就报红一大片可太难受了。</p>\n<h2 id=\"二、图片取模过程\"><a href=\"#二、图片取模过程\" class=\"headerlink\" title=\"二、图片取模过程\"></a>二、图片取模过程</h2><p>使用方法：这个方法我是跟这个大佬学的<br><a href=\"https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430\">大佬链接</a><br>跟着做就行没什么难点</p>\n<h2 id=\"三、天气图标获取\"><a href=\"#三、天气图标获取\" class=\"headerlink\" title=\"三、天气图标获取\"></a>三、天气图标获取</h2><p>天气图标，知心天气有提供这里放链接，自提<br><a href=\"https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/yev2c3\">知心天气天气图标</a><br>这里还有API接口返回天气代码对应的天气状况，写代码的时候需要用到。</p>\n<h2 id=\"天气图标显示代码\"><a href=\"#天气图标显示代码\" class=\"headerlink\" title=\"天气图标显示代码\"></a>天气图标显示代码</h2><p>这里代码有点多，主要是字模的数据太多了，代码我就不放这里放另一篇里。<br><a href=\"https://yu-728.github.io/2022/03/23/esp32_weatherpicture_H/\">天气图标字模头文件</a><br><a href=\"https://yu-728.github.io/2022/03/21/esp32_weatherCode/\">天气图标代码</a><br>这里直接放实现效果：<br><img src=\"https://i.niupic.com/images/2022/03/23/9X14.jpg\" alt=\"图标显示\"></p>"},{"title":"esp32桌面天气","_content":"\n### 看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个\n<!-- more -->\n#### 硬件准备:\nesp32: 淘宝买的esp32 DEVKITV1,这个板子对我这个第一次接触eps32的人挺不友好的，推荐大家买安可信或者乐鑫原厂的网上资料比较多，大厂的板子质量和技术都有保障\n屏幕：0.96寸，IC2的小屏幕，这个怎么说接口少，就四个接口（GND、VDD、SCK、SDA）接线简单，对我这个新人很友好。\n数据线：绿联的12块1米的安卓口数据线。***注意：这是数据线，不是充电线！！！***\n#### 关于我在准备硬件遇到的坑：\n1. 买板子的时候贪便宜买了个资料巨难找的板子，而且卖家提供的资料也少的可怜，所以第一次使用esp32的朋友一定要买大厂的，贵几块钱但是在开发的时候能省下很多时间！\n2. 我板子到手的时候随便拿了几条数据线插上去都没有反应，电脑识别不到串口，结果后边才补买的数据线又是一笔开支。看了安可信板子的评论说有送数据线，这么一来我买的这个板子完全没有性价比\n![](http://p3.itc.cn/images01/20201223/6cd4f77ca689453d99fbec1135293b3c.png)\n\n#### 软件准备\n##### 一、esp32的IDE\n1. Arduino IDE：很多博主推荐使用Arduino IDE去下载esp32的库使用，这个网上教程很多，但是我觉得Arduino IDE 写代码真的一言难尽\n2. VS Code的platformIDE，我个人推荐使用这个，VS Code懂得都懂。\n\n以上IDE的具体安装教程百度能搜到一堆，后续有缘我也自己写一篇。\n##### 二、取模器\n PCtoLCD2002.exe\n 这玩意我还没用过，用了再补充...\n### 该准备的东西大概那么多，接下来是代码实现了\n测试屏幕代码： \n\n这个代码在platform导入的ESP8266 and ESP32 OLED driver for SSD1306 displays这里面有例子代码，下面的只是其中的一个。\n怎么用platform导库有空会补充一篇，先放个空链接\n[platform导库链接]()\n\n##### 原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接\n### 相关链接：\n1. [esp32与0.96寸屏幕传输信息](https://yu-728.github.io/2022/03/16/esp32and0.96LED_connect/)\n2. [esp32WiFi连接的实现](https://yu-728.github.io/2022/03/18/esp32_WiFi/)\n3. [esp32解析JSON格式](https://yu-728.github.io/2022/03/18/esp32_Json/)\n4. [esp32 WIFI+http+JSon获取网站信息](https://yu-728.github.io/2022/03/18/esp32_WiFi+Json+U8g2/)\n5. [esp32网络时间获取]()\n6. [esp32桌面天气代码]()\n\n##### 后续有缘更新...希望自己不是鸽王\n![](http://i-1.wzsky.net/2020/8/14/W3dtOnN5LnBuZyxyOjEzLGI6MTNd/7e7272d5-e155-423a-ab87-d363f4fa304e.jpg)\n\n\n### 做出来了，附图\n![成品图](https://i.niupic.com/images/2022/03/21/9WRs.jpg)\n\n没有图案不是很好看，后续会更进一步更新\n**更新出来了，直接上图**\n![最终](https://i.niupic.com/images/2022/03/23/9X14.jpg)","source":"_posts/esp32-weather/esp32_weather.md","raw":"---\ntitle: esp32桌面天气\n---\n\n### 看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个\n<!-- more -->\n#### 硬件准备:\nesp32: 淘宝买的esp32 DEVKITV1,这个板子对我这个第一次接触eps32的人挺不友好的，推荐大家买安可信或者乐鑫原厂的网上资料比较多，大厂的板子质量和技术都有保障\n屏幕：0.96寸，IC2的小屏幕，这个怎么说接口少，就四个接口（GND、VDD、SCK、SDA）接线简单，对我这个新人很友好。\n数据线：绿联的12块1米的安卓口数据线。***注意：这是数据线，不是充电线！！！***\n#### 关于我在准备硬件遇到的坑：\n1. 买板子的时候贪便宜买了个资料巨难找的板子，而且卖家提供的资料也少的可怜，所以第一次使用esp32的朋友一定要买大厂的，贵几块钱但是在开发的时候能省下很多时间！\n2. 我板子到手的时候随便拿了几条数据线插上去都没有反应，电脑识别不到串口，结果后边才补买的数据线又是一笔开支。看了安可信板子的评论说有送数据线，这么一来我买的这个板子完全没有性价比\n![](http://p3.itc.cn/images01/20201223/6cd4f77ca689453d99fbec1135293b3c.png)\n\n#### 软件准备\n##### 一、esp32的IDE\n1. Arduino IDE：很多博主推荐使用Arduino IDE去下载esp32的库使用，这个网上教程很多，但是我觉得Arduino IDE 写代码真的一言难尽\n2. VS Code的platformIDE，我个人推荐使用这个，VS Code懂得都懂。\n\n以上IDE的具体安装教程百度能搜到一堆，后续有缘我也自己写一篇。\n##### 二、取模器\n PCtoLCD2002.exe\n 这玩意我还没用过，用了再补充...\n### 该准备的东西大概那么多，接下来是代码实现了\n测试屏幕代码： \n\n这个代码在platform导入的ESP8266 and ESP32 OLED driver for SSD1306 displays这里面有例子代码，下面的只是其中的一个。\n怎么用platform导库有空会补充一篇，先放个空链接\n[platform导库链接]()\n\n##### 原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接\n### 相关链接：\n1. [esp32与0.96寸屏幕传输信息](https://yu-728.github.io/2022/03/16/esp32and0.96LED_connect/)\n2. [esp32WiFi连接的实现](https://yu-728.github.io/2022/03/18/esp32_WiFi/)\n3. [esp32解析JSON格式](https://yu-728.github.io/2022/03/18/esp32_Json/)\n4. [esp32 WIFI+http+JSon获取网站信息](https://yu-728.github.io/2022/03/18/esp32_WiFi+Json+U8g2/)\n5. [esp32网络时间获取]()\n6. [esp32桌面天气代码]()\n\n##### 后续有缘更新...希望自己不是鸽王\n![](http://i-1.wzsky.net/2020/8/14/W3dtOnN5LnBuZyxyOjEzLGI6MTNd/7e7272d5-e155-423a-ab87-d363f4fa304e.jpg)\n\n\n### 做出来了，附图\n![成品图](https://i.niupic.com/images/2022/03/21/9WRs.jpg)\n\n没有图案不是很好看，后续会更进一步更新\n**更新出来了，直接上图**\n![最终](https://i.niupic.com/images/2022/03/23/9X14.jpg)","slug":"esp32-weather/esp32_weather","published":1,"date":"2022-05-25T10:06:34.322Z","updated":"2022-03-24T09:46:43.288Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeoq000i68urg9p0cijn","content":"<h3 id=\"看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个\"><a href=\"#看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个\" class=\"headerlink\" title=\"看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个\"></a>看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个</h3><span id=\"more\"></span>\n<h4 id=\"硬件准备\"><a href=\"#硬件准备\" class=\"headerlink\" title=\"硬件准备:\"></a>硬件准备:</h4><p>esp32: 淘宝买的esp32 DEVKITV1,这个板子对我这个第一次接触eps32的人挺不友好的，推荐大家买安可信或者乐鑫原厂的网上资料比较多，大厂的板子质量和技术都有保障<br>屏幕：0.96寸，IC2的小屏幕，这个怎么说接口少，就四个接口（GND、VDD、SCK、SDA）接线简单，对我这个新人很友好。<br>数据线：绿联的12块1米的安卓口数据线。<em><strong>注意：这是数据线，不是充电线！！！</strong></em></p>\n<h4 id=\"关于我在准备硬件遇到的坑：\"><a href=\"#关于我在准备硬件遇到的坑：\" class=\"headerlink\" title=\"关于我在准备硬件遇到的坑：\"></a>关于我在准备硬件遇到的坑：</h4><ol>\n<li>买板子的时候贪便宜买了个资料巨难找的板子，而且卖家提供的资料也少的可怜，所以第一次使用esp32的朋友一定要买大厂的，贵几块钱但是在开发的时候能省下很多时间！</li>\n<li>我板子到手的时候随便拿了几条数据线插上去都没有反应，电脑识别不到串口，结果后边才补买的数据线又是一笔开支。看了安可信板子的评论说有送数据线，这么一来我买的这个板子完全没有性价比<br><img src=\"http://p3.itc.cn/images01/20201223/6cd4f77ca689453d99fbec1135293b3c.png\"></li>\n</ol>\n<h4 id=\"软件准备\"><a href=\"#软件准备\" class=\"headerlink\" title=\"软件准备\"></a>软件准备</h4><h5 id=\"一、esp32的IDE\"><a href=\"#一、esp32的IDE\" class=\"headerlink\" title=\"一、esp32的IDE\"></a>一、esp32的IDE</h5><ol>\n<li>Arduino IDE：很多博主推荐使用Arduino IDE去下载esp32的库使用，这个网上教程很多，但是我觉得Arduino IDE 写代码真的一言难尽</li>\n<li>VS Code的platformIDE，我个人推荐使用这个，VS Code懂得都懂。</li>\n</ol>\n<p>以上IDE的具体安装教程百度能搜到一堆，后续有缘我也自己写一篇。</p>\n<h5 id=\"二、取模器\"><a href=\"#二、取模器\" class=\"headerlink\" title=\"二、取模器\"></a>二、取模器</h5><p> PCtoLCD2002.exe<br> 这玩意我还没用过，用了再补充…</p>\n<h3 id=\"该准备的东西大概那么多，接下来是代码实现了\"><a href=\"#该准备的东西大概那么多，接下来是代码实现了\" class=\"headerlink\" title=\"该准备的东西大概那么多，接下来是代码实现了\"></a>该准备的东西大概那么多，接下来是代码实现了</h3><p>测试屏幕代码： </p>\n<p>这个代码在platform导入的ESP8266 and ESP32 OLED driver for SSD1306 displays这里面有例子代码，下面的只是其中的一个。<br>怎么用platform导库有空会补充一篇，先放个空链接<br><a href=\"\">platform导库链接</a></p>\n<h5 id=\"原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接\"><a href=\"#原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接\" class=\"headerlink\" title=\"原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接\"></a>原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接</h5><h3 id=\"相关链接：\"><a href=\"#相关链接：\" class=\"headerlink\" title=\"相关链接：\"></a>相关链接：</h3><ol>\n<li><a href=\"https://yu-728.github.io/2022/03/16/esp32and0.96LED_connect/\">esp32与0.96寸屏幕传输信息</a></li>\n<li><a href=\"https://yu-728.github.io/2022/03/18/esp32_WiFi/\">esp32WiFi连接的实现</a></li>\n<li><a href=\"https://yu-728.github.io/2022/03/18/esp32_Json/\">esp32解析JSON格式</a></li>\n<li><a href=\"https://yu-728.github.io/2022/03/18/esp32_WiFi+Json+U8g2/\">esp32 WIFI+http+JSon获取网站信息</a></li>\n<li><a href=\"\">esp32网络时间获取</a></li>\n<li><a href=\"\">esp32桌面天气代码</a></li>\n</ol>\n<h5 id=\"后续有缘更新…希望自己不是鸽王\"><a href=\"#后续有缘更新…希望自己不是鸽王\" class=\"headerlink\" title=\"后续有缘更新…希望自己不是鸽王\"></a>后续有缘更新…希望自己不是鸽王</h5><p><img src=\"http://i-1.wzsky.net/2020/8/14/W3dtOnN5LnBuZyxyOjEzLGI6MTNd/7e7272d5-e155-423a-ab87-d363f4fa304e.jpg\"></p>\n<h3 id=\"做出来了，附图\"><a href=\"#做出来了，附图\" class=\"headerlink\" title=\"做出来了，附图\"></a>做出来了，附图</h3><p><img src=\"https://i.niupic.com/images/2022/03/21/9WRs.jpg\" alt=\"成品图\"></p>\n<p>没有图案不是很好看，后续会更进一步更新<br><strong>更新出来了，直接上图</strong><br><img src=\"https://i.niupic.com/images/2022/03/23/9X14.jpg\" alt=\"最终\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个\"><a href=\"#看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个\" class=\"headerlink\" title=\"看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个\"></a>看了稚晖君大佬的小电视项目，很感兴趣自己。于是尝试跟着大佬复刻一个</h3>","more":"<h4 id=\"硬件准备\"><a href=\"#硬件准备\" class=\"headerlink\" title=\"硬件准备:\"></a>硬件准备:</h4><p>esp32: 淘宝买的esp32 DEVKITV1,这个板子对我这个第一次接触eps32的人挺不友好的，推荐大家买安可信或者乐鑫原厂的网上资料比较多，大厂的板子质量和技术都有保障<br>屏幕：0.96寸，IC2的小屏幕，这个怎么说接口少，就四个接口（GND、VDD、SCK、SDA）接线简单，对我这个新人很友好。<br>数据线：绿联的12块1米的安卓口数据线。<em><strong>注意：这是数据线，不是充电线！！！</strong></em></p>\n<h4 id=\"关于我在准备硬件遇到的坑：\"><a href=\"#关于我在准备硬件遇到的坑：\" class=\"headerlink\" title=\"关于我在准备硬件遇到的坑：\"></a>关于我在准备硬件遇到的坑：</h4><ol>\n<li>买板子的时候贪便宜买了个资料巨难找的板子，而且卖家提供的资料也少的可怜，所以第一次使用esp32的朋友一定要买大厂的，贵几块钱但是在开发的时候能省下很多时间！</li>\n<li>我板子到手的时候随便拿了几条数据线插上去都没有反应，电脑识别不到串口，结果后边才补买的数据线又是一笔开支。看了安可信板子的评论说有送数据线，这么一来我买的这个板子完全没有性价比<br><img src=\"http://p3.itc.cn/images01/20201223/6cd4f77ca689453d99fbec1135293b3c.png\"></li>\n</ol>\n<h4 id=\"软件准备\"><a href=\"#软件准备\" class=\"headerlink\" title=\"软件准备\"></a>软件准备</h4><h5 id=\"一、esp32的IDE\"><a href=\"#一、esp32的IDE\" class=\"headerlink\" title=\"一、esp32的IDE\"></a>一、esp32的IDE</h5><ol>\n<li>Arduino IDE：很多博主推荐使用Arduino IDE去下载esp32的库使用，这个网上教程很多，但是我觉得Arduino IDE 写代码真的一言难尽</li>\n<li>VS Code的platformIDE，我个人推荐使用这个，VS Code懂得都懂。</li>\n</ol>\n<p>以上IDE的具体安装教程百度能搜到一堆，后续有缘我也自己写一篇。</p>\n<h5 id=\"二、取模器\"><a href=\"#二、取模器\" class=\"headerlink\" title=\"二、取模器\"></a>二、取模器</h5><p> PCtoLCD2002.exe<br> 这玩意我还没用过，用了再补充…</p>\n<h3 id=\"该准备的东西大概那么多，接下来是代码实现了\"><a href=\"#该准备的东西大概那么多，接下来是代码实现了\" class=\"headerlink\" title=\"该准备的东西大概那么多，接下来是代码实现了\"></a>该准备的东西大概那么多，接下来是代码实现了</h3><p>测试屏幕代码： </p>\n<p>这个代码在platform导入的ESP8266 and ESP32 OLED driver for SSD1306 displays这里面有例子代码，下面的只是其中的一个。<br>怎么用platform导库有空会补充一篇，先放个空链接<br><a href=\"\">platform导库链接</a></p>\n<h5 id=\"原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接\"><a href=\"#原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接\" class=\"headerlink\" title=\"原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接\"></a>原本想一篇写完但是在实现的过程中发现这不现实，这里就当做实现过程目录，我会把每个模块代码实现及准备写出来。下边是链接</h5><h3 id=\"相关链接：\"><a href=\"#相关链接：\" class=\"headerlink\" title=\"相关链接：\"></a>相关链接：</h3><ol>\n<li><a href=\"https://yu-728.github.io/2022/03/16/esp32and0.96LED_connect/\">esp32与0.96寸屏幕传输信息</a></li>\n<li><a href=\"https://yu-728.github.io/2022/03/18/esp32_WiFi/\">esp32WiFi连接的实现</a></li>\n<li><a href=\"https://yu-728.github.io/2022/03/18/esp32_Json/\">esp32解析JSON格式</a></li>\n<li><a href=\"https://yu-728.github.io/2022/03/18/esp32_WiFi+Json+U8g2/\">esp32 WIFI+http+JSon获取网站信息</a></li>\n<li><a href=\"\">esp32网络时间获取</a></li>\n<li><a href=\"\">esp32桌面天气代码</a></li>\n</ol>\n<h5 id=\"后续有缘更新…希望自己不是鸽王\"><a href=\"#后续有缘更新…希望自己不是鸽王\" class=\"headerlink\" title=\"后续有缘更新…希望自己不是鸽王\"></a>后续有缘更新…希望自己不是鸽王</h5><p><img src=\"http://i-1.wzsky.net/2020/8/14/W3dtOnN5LnBuZyxyOjEzLGI6MTNd/7e7272d5-e155-423a-ab87-d363f4fa304e.jpg\"></p>\n<h3 id=\"做出来了，附图\"><a href=\"#做出来了，附图\" class=\"headerlink\" title=\"做出来了，附图\"></a>做出来了，附图</h3><p><img src=\"https://i.niupic.com/images/2022/03/21/9WRs.jpg\" alt=\"成品图\"></p>\n<p>没有图案不是很好看，后续会更进一步更新<br><strong>更新出来了，直接上图</strong><br><img src=\"https://i.niupic.com/images/2022/03/23/9X14.jpg\" alt=\"最终\"></p>"},{"title":"esp32桌面天气代码","_content":"# 获取天气API说明\n<!-- more -->\n***本次获取天气的API网站为知心天气***\n##### 一、注册知心天气\n在注册完成后可在控制台查看你的私钥如下：\n![知心天气私钥](https://i.niupic.com/images/2022/03/21/9WTg.png)\n##### 二、知心天气的API文档\n![知心天气API](https://i.niupic.com/images/2022/03/21/9WTk.png)\n红圈就是代码中的API链接，根据需求换成你自己想要的东西\nkey= 你知心天气的私钥\nlocation= 获取城市的拼音\nlanguage= 语言，默认是简体中文\nunit= 温度单位℃或者℉ \n\n# esp32桌面天气实现代码如下：\n\n```\n#include <Arduino.h>\n#include \"WiFi.h\"\n#include \"ArduinoJson.h\"\n#include \"HTTPClient.h\"\n#include \"weatherpicture.h\"\n#include <U8g2lib.h>\n\n#ifdef U8X8_HAVE_HW_SPI\n#include <SPI.h>\n#endif\n#ifdef U8X8_HAVE_HW_I2C\n\n#include <Wire.h>\n#endif\n\n//OLED硬件初始化\nU8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display\n\n// ------------------------WIFI连接信息---------------------------------//\nconst char* ssid = \"HONOR V20\"; //wifi nane\nconst char* password = \"yubaolin\"; // wifi password\n\n//-------------------------网络时间获取----------------------------------//\nconst char *ntpServer = \"pool.ntp.org\"; //网络时间服务器\nconst long gmtOffset_sec = 8 * 3600; //时区设置函数，东八区（UTC/GMT+8:00）写成8*3600   \nconst int daylightOffset_sec = 0;   //夏令时填写3600，否则填0\n\n//==========================函数声明====================================//\n\nvoid WiFi_Connect();\nvoid ParserJson();\nvoid OLEDDisplay(String cityName, String weather, String temperature, int code_int);\nvoid printLocalTime();\n\n\n//WiFi connect function\nvoid WiFi_Connect(){\n\n    WiFi.begin(ssid, password);\n                    //Connection state judgment\n    while(WiFi.status() != WL_CONNECTED){  \n        delay(1000);\n        Serial.println(\"Connecting to WiFi...\");\n\n        /**********屏幕显示wifi连接状态*************/\n        u8g2.clearBuffer();\n        u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n        u8g2.setCursor(0,16);\n        u8g2.print(\"wifi连接中\");\n        u8g2.sendBuffer();\n    }\n\n    Serial.println(\"Connected to the WiFi network\");\n    u8g2.clearBuffer();\n    u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n    u8g2.setCursor(0,16);\n    u8g2.print(\"wifi成功\");\n    u8g2.sendBuffer();\n}\n\n//获取Json报文并解析\nvoid ParserJson(){\n\n  HTTPClient http;\n  //                                                            你的私钥                      查询地址       语言   温度单位\n  http.begin(\"https://api.seniverse.com/v3/weather/now.json?key=SvbJTBaB9LvBrsItI&location=liuzhou&language=zh-Hans&unit=c\");//Specify the URL\n  int httpCode = http.GET();            // Make the request\n  if (httpCode > 0) { // Check for the returning code\n\n    String payload = http.getString();\n    Serial.println(httpCode);\n    Serial.println(payload);\n\n    StaticJsonDocument<1024> doc; \n\n    DeserializationError error = deserializeJson(doc, payload);\n\n    if (error) {\n      Serial.println(\"JSON parsing failed!\");\n    } else {\n\n      JsonObject obj1 = doc[\"results\"][0];  //new 一个对象存储访问result信息\n      String cityName = obj1[\"location\"][\"name\"].as<String>();\n      String weather = obj1[\"now\"][\"text\"].as<String>();\n      String code = obj1[\"now\"][\"code\"].as<String>();\n      String temperature = obj1[\"now\"][\"temperature\"].as<String>();\n      int code_int = obj1[\"now\"][\"code\"].as<int>();\n      OLEDDisplay(cityName, weather, temperature, code_int);  //屏幕显示报文信息\n      //int code_int = obj1[\"now\"][\"code\"].as<int>();\n      Serial.println(cityName);\n      Serial.println(code);\n      //Serial.println(weather);\n      Serial.println(temperature);\n\n    }\n  }else {\n    Serial.println(\"Error on HTTP request\");\n  }\n  http.end(); //Free the resources\n}\n\n//屏幕绘制信息\nvoid OLEDDisplay(String cityName, String weather, String temperature, int code_int){\n\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n  u8g2.setFontDirection(0);\n  u8g2.clearBuffer();\n  //u8g2.drawXBMP(3, 3, 35, 32, cloudy); u8g2.setCursor(43 , 16 ); u8g2.println(\"多\"); u8g2.setCursor(43 , 30 ); u8g2.println(\"云\");\n  u8g2.setCursor(65, 10);\n  u8g2.print(\"城市: \");\n  u8g2.print(cityName);\n  u8g2.setCursor(65, 25);\n  u8g2.print(\"天气: \");\n  u8g2.print(weather);\n  u8g2.setCursor(65, 40);\n  u8g2.print(\"温度: \");\n  u8g2.print(temperature);\n  u8g2.print(\"℃\");\n\n  //==========================天气图标显示=========================//\n  \n  //u8g2.drawXBMP(10, 3, sunny_x, sunny_y, sunny);\n  switch (code_int){\n    case 0:\n      u8g2.drawXBMP(3, 3, sunny_x, sunny_y, sunny);\n      break;\n    case 1:\n      u8g2.drawXBMP(3, 3, clear_x, clear_y, clear);\n      break;\n    case 2:\n      //\n      break;\n    case 3:\n      //\n      break;\n    case 4:\n      u8g2.drawXBMP(3, 3, cloudy_x, cloudy_y, cloudy);\n      break;\n    case 5:\n      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);\n      break;\n    case 6:\n      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);\n      break;\n    case 7:\n      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);\n      break;\n    case 8:\n      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);\n      break;\n    case 9:\n      u8g2.drawXBMP(3, 3, Overcast_x, Overcast_y, Overcast);\n      break;\n    case 10:\n      u8g2.drawXBMP(3, 3, Shower_x, Shower_y, Shower);\n      break;\n    case 11:\n      u8g2.drawXBMP(3, 3, Thundershower_x, Thundershower_y, Thundershower);\n      break;\n    case 12:\n      u8g2.drawXBMP(3, 3, ThundershowerWithHail_x, ThundershowerWithHail_y, ThundershowerWithHail);\n      break;\n    case 13:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 14:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 15:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 16:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 17:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 18:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 19:\n      u8g2.drawXBMP(3, 3, IceRain_x, IceRain_y, IceRain);\n      break;\n    case 20:\n      u8g2.drawXBMP(3, 3, Sleet_x, Sleet_y, Sleet);\n      break;\n    case 21:\n      u8g2.drawXBMP(3, 3, SnowFlurry_x, SnowFlurry_y, SnowFlurry);\n      break;\n    case 22:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 23:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 24:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 25:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 26:\n      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);\n      break;\n    case 27:\n      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);\n      break;\n    case 28:\n      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);\n      break;\n    case 29:\n      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);\n      break;\n    case 30:\n      u8g2.drawXBMP(3, 3, Foggy_x, Foggy_y, Foggy);\n      break;\n    case 31:\n      u8g2.drawXBMP(3, 3, Haze_x, Haze_y, Haze);\n      break;\n    case 32:\n      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);\n      break;\n    case 33:\n      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);\n      break;\n    case 34:\n      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);\n      break;\n    case 35:\n      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);\n      break;\n    case 36:\n      u8g2.drawXBMP(3, 3, Tornado_x, Tornado_y, Tornado);\n      break;\n    case 37:\n      u8g2.drawXBMP(3, 3, Cold_x, Cold_y, Cold);\n      break;\n    case 38:\n      u8g2.drawXBMP(3, 3, Hot_x, Hot_y, Hot);\n      break;\n    case 99:\n      u8g2.drawXBMP(3, 3, Unknown_x, Unknown_y, Unknown);\n      break;\n  \n  break;\n  }\n\n  //--------------------------时间显示--------------------------//\n  printLocalTime();\n\n  u8g2.sendBuffer();\n  //delay(1000);\n}\n\n//时间获取\n\nvoid printLocalTime(){\n\n  //delay(500);\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo))\n  {\n      Serial.println(\"Failed to obtain time\");\n      u8g2.setCursor(0,60);\n      u8g2.print(\"未获取到时间请重置\");\n      return;\n  }\n  Serial.println(&timeinfo, \"%F %T %A\"); // 格式化输出,串口显示\n  //屏幕显示时间\n  //u8g2.clearBuffer();\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n  u8g2.setCursor(30, 64);\n  u8g2.print(&timeinfo, \"%F\");  //日期\n  u8g2.setCursor(65, 52);\n  u8g2.print(&timeinfo, \"%A\");  //星期\n  u8g2.setCursor(95, 64); \n  u8g2.print(&timeinfo, \"%R\"); //小时-分钟\n  // u8g2.setCursor(80, 64); \n  // u8g2.print(&timeinfo, \"%T\"); //小时-分钟-秒 \n\n  //==========================底部标语==========================//\n  // u8g2.setCursor(0,63);\n  // u8g2.print(\"平安喜乐\");\n\n  //u8g2.sendBuffer();\n}\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n  delay(1000);\n  u8g2.begin();\n  u8g2.enableUTF8Print();\n\n  WiFi_Connect();\n\n  //从网络时间服务器上获取并设置时间\n  // 获取成功后芯片会使用RTC时钟保持时间的更新\n  //            时区           时令             网络服务器\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n\n  \n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  ParserJson();\n  delay(3000);  //知心天气API访问限制 20次/min\n}\n\n```\n\n# 参考文档\n[https://blog.csdn.net/liujialong11/article/details/120068060?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-120068060.pc_agg_new_rank&utm_term=esp32%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA&spm=1000.2123.3001.4430](https://blog.csdn.net/liujialong11/article/details/120068060?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-120068060.pc_agg_new_rank&utm_term=esp32%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA&spm=1000.2123.3001.4430)\n[https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/nyiu3t](https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/nyiu3t)\n[https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430](https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430)","source":"_posts/esp32-weather/esp32_weatherCode.md","raw":"---\ntitle: esp32桌面天气代码\n---\n# 获取天气API说明\n<!-- more -->\n***本次获取天气的API网站为知心天气***\n##### 一、注册知心天气\n在注册完成后可在控制台查看你的私钥如下：\n![知心天气私钥](https://i.niupic.com/images/2022/03/21/9WTg.png)\n##### 二、知心天气的API文档\n![知心天气API](https://i.niupic.com/images/2022/03/21/9WTk.png)\n红圈就是代码中的API链接，根据需求换成你自己想要的东西\nkey= 你知心天气的私钥\nlocation= 获取城市的拼音\nlanguage= 语言，默认是简体中文\nunit= 温度单位℃或者℉ \n\n# esp32桌面天气实现代码如下：\n\n```\n#include <Arduino.h>\n#include \"WiFi.h\"\n#include \"ArduinoJson.h\"\n#include \"HTTPClient.h\"\n#include \"weatherpicture.h\"\n#include <U8g2lib.h>\n\n#ifdef U8X8_HAVE_HW_SPI\n#include <SPI.h>\n#endif\n#ifdef U8X8_HAVE_HW_I2C\n\n#include <Wire.h>\n#endif\n\n//OLED硬件初始化\nU8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display\n\n// ------------------------WIFI连接信息---------------------------------//\nconst char* ssid = \"HONOR V20\"; //wifi nane\nconst char* password = \"yubaolin\"; // wifi password\n\n//-------------------------网络时间获取----------------------------------//\nconst char *ntpServer = \"pool.ntp.org\"; //网络时间服务器\nconst long gmtOffset_sec = 8 * 3600; //时区设置函数，东八区（UTC/GMT+8:00）写成8*3600   \nconst int daylightOffset_sec = 0;   //夏令时填写3600，否则填0\n\n//==========================函数声明====================================//\n\nvoid WiFi_Connect();\nvoid ParserJson();\nvoid OLEDDisplay(String cityName, String weather, String temperature, int code_int);\nvoid printLocalTime();\n\n\n//WiFi connect function\nvoid WiFi_Connect(){\n\n    WiFi.begin(ssid, password);\n                    //Connection state judgment\n    while(WiFi.status() != WL_CONNECTED){  \n        delay(1000);\n        Serial.println(\"Connecting to WiFi...\");\n\n        /**********屏幕显示wifi连接状态*************/\n        u8g2.clearBuffer();\n        u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n        u8g2.setCursor(0,16);\n        u8g2.print(\"wifi连接中\");\n        u8g2.sendBuffer();\n    }\n\n    Serial.println(\"Connected to the WiFi network\");\n    u8g2.clearBuffer();\n    u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n    u8g2.setCursor(0,16);\n    u8g2.print(\"wifi成功\");\n    u8g2.sendBuffer();\n}\n\n//获取Json报文并解析\nvoid ParserJson(){\n\n  HTTPClient http;\n  //                                                            你的私钥                      查询地址       语言   温度单位\n  http.begin(\"https://api.seniverse.com/v3/weather/now.json?key=SvbJTBaB9LvBrsItI&location=liuzhou&language=zh-Hans&unit=c\");//Specify the URL\n  int httpCode = http.GET();            // Make the request\n  if (httpCode > 0) { // Check for the returning code\n\n    String payload = http.getString();\n    Serial.println(httpCode);\n    Serial.println(payload);\n\n    StaticJsonDocument<1024> doc; \n\n    DeserializationError error = deserializeJson(doc, payload);\n\n    if (error) {\n      Serial.println(\"JSON parsing failed!\");\n    } else {\n\n      JsonObject obj1 = doc[\"results\"][0];  //new 一个对象存储访问result信息\n      String cityName = obj1[\"location\"][\"name\"].as<String>();\n      String weather = obj1[\"now\"][\"text\"].as<String>();\n      String code = obj1[\"now\"][\"code\"].as<String>();\n      String temperature = obj1[\"now\"][\"temperature\"].as<String>();\n      int code_int = obj1[\"now\"][\"code\"].as<int>();\n      OLEDDisplay(cityName, weather, temperature, code_int);  //屏幕显示报文信息\n      //int code_int = obj1[\"now\"][\"code\"].as<int>();\n      Serial.println(cityName);\n      Serial.println(code);\n      //Serial.println(weather);\n      Serial.println(temperature);\n\n    }\n  }else {\n    Serial.println(\"Error on HTTP request\");\n  }\n  http.end(); //Free the resources\n}\n\n//屏幕绘制信息\nvoid OLEDDisplay(String cityName, String weather, String temperature, int code_int){\n\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n  u8g2.setFontDirection(0);\n  u8g2.clearBuffer();\n  //u8g2.drawXBMP(3, 3, 35, 32, cloudy); u8g2.setCursor(43 , 16 ); u8g2.println(\"多\"); u8g2.setCursor(43 , 30 ); u8g2.println(\"云\");\n  u8g2.setCursor(65, 10);\n  u8g2.print(\"城市: \");\n  u8g2.print(cityName);\n  u8g2.setCursor(65, 25);\n  u8g2.print(\"天气: \");\n  u8g2.print(weather);\n  u8g2.setCursor(65, 40);\n  u8g2.print(\"温度: \");\n  u8g2.print(temperature);\n  u8g2.print(\"℃\");\n\n  //==========================天气图标显示=========================//\n  \n  //u8g2.drawXBMP(10, 3, sunny_x, sunny_y, sunny);\n  switch (code_int){\n    case 0:\n      u8g2.drawXBMP(3, 3, sunny_x, sunny_y, sunny);\n      break;\n    case 1:\n      u8g2.drawXBMP(3, 3, clear_x, clear_y, clear);\n      break;\n    case 2:\n      //\n      break;\n    case 3:\n      //\n      break;\n    case 4:\n      u8g2.drawXBMP(3, 3, cloudy_x, cloudy_y, cloudy);\n      break;\n    case 5:\n      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);\n      break;\n    case 6:\n      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);\n      break;\n    case 7:\n      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);\n      break;\n    case 8:\n      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);\n      break;\n    case 9:\n      u8g2.drawXBMP(3, 3, Overcast_x, Overcast_y, Overcast);\n      break;\n    case 10:\n      u8g2.drawXBMP(3, 3, Shower_x, Shower_y, Shower);\n      break;\n    case 11:\n      u8g2.drawXBMP(3, 3, Thundershower_x, Thundershower_y, Thundershower);\n      break;\n    case 12:\n      u8g2.drawXBMP(3, 3, ThundershowerWithHail_x, ThundershowerWithHail_y, ThundershowerWithHail);\n      break;\n    case 13:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 14:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 15:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 16:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 17:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 18:\n      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);\n      break;\n    case 19:\n      u8g2.drawXBMP(3, 3, IceRain_x, IceRain_y, IceRain);\n      break;\n    case 20:\n      u8g2.drawXBMP(3, 3, Sleet_x, Sleet_y, Sleet);\n      break;\n    case 21:\n      u8g2.drawXBMP(3, 3, SnowFlurry_x, SnowFlurry_y, SnowFlurry);\n      break;\n    case 22:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 23:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 24:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 25:\n      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);\n      break;\n    case 26:\n      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);\n      break;\n    case 27:\n      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);\n      break;\n    case 28:\n      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);\n      break;\n    case 29:\n      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);\n      break;\n    case 30:\n      u8g2.drawXBMP(3, 3, Foggy_x, Foggy_y, Foggy);\n      break;\n    case 31:\n      u8g2.drawXBMP(3, 3, Haze_x, Haze_y, Haze);\n      break;\n    case 32:\n      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);\n      break;\n    case 33:\n      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);\n      break;\n    case 34:\n      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);\n      break;\n    case 35:\n      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);\n      break;\n    case 36:\n      u8g2.drawXBMP(3, 3, Tornado_x, Tornado_y, Tornado);\n      break;\n    case 37:\n      u8g2.drawXBMP(3, 3, Cold_x, Cold_y, Cold);\n      break;\n    case 38:\n      u8g2.drawXBMP(3, 3, Hot_x, Hot_y, Hot);\n      break;\n    case 99:\n      u8g2.drawXBMP(3, 3, Unknown_x, Unknown_y, Unknown);\n      break;\n  \n  break;\n  }\n\n  //--------------------------时间显示--------------------------//\n  printLocalTime();\n\n  u8g2.sendBuffer();\n  //delay(1000);\n}\n\n//时间获取\n\nvoid printLocalTime(){\n\n  //delay(500);\n  struct tm timeinfo;\n  if (!getLocalTime(&timeinfo))\n  {\n      Serial.println(\"Failed to obtain time\");\n      u8g2.setCursor(0,60);\n      u8g2.print(\"未获取到时间请重置\");\n      return;\n  }\n  Serial.println(&timeinfo, \"%F %T %A\"); // 格式化输出,串口显示\n  //屏幕显示时间\n  //u8g2.clearBuffer();\n  u8g2.setFont(u8g2_font_wqy12_t_gb2312);\n  u8g2.setCursor(30, 64);\n  u8g2.print(&timeinfo, \"%F\");  //日期\n  u8g2.setCursor(65, 52);\n  u8g2.print(&timeinfo, \"%A\");  //星期\n  u8g2.setCursor(95, 64); \n  u8g2.print(&timeinfo, \"%R\"); //小时-分钟\n  // u8g2.setCursor(80, 64); \n  // u8g2.print(&timeinfo, \"%T\"); //小时-分钟-秒 \n\n  //==========================底部标语==========================//\n  // u8g2.setCursor(0,63);\n  // u8g2.print(\"平安喜乐\");\n\n  //u8g2.sendBuffer();\n}\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n  delay(1000);\n  u8g2.begin();\n  u8g2.enableUTF8Print();\n\n  WiFi_Connect();\n\n  //从网络时间服务器上获取并设置时间\n  // 获取成功后芯片会使用RTC时钟保持时间的更新\n  //            时区           时令             网络服务器\n  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n\n  \n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  ParserJson();\n  delay(3000);  //知心天气API访问限制 20次/min\n}\n\n```\n\n# 参考文档\n[https://blog.csdn.net/liujialong11/article/details/120068060?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-120068060.pc_agg_new_rank&utm_term=esp32%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA&spm=1000.2123.3001.4430](https://blog.csdn.net/liujialong11/article/details/120068060?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-120068060.pc_agg_new_rank&utm_term=esp32%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA&spm=1000.2123.3001.4430)\n[https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/nyiu3t](https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/nyiu3t)\n[https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430](https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430)","slug":"esp32-weather/esp32_weatherCode","published":1,"date":"2022-05-25T10:06:34.331Z","updated":"2022-03-30T01:50:46.049Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeor000j68urake00281","content":"<h1 id=\"获取天气API说明\"><a href=\"#获取天气API说明\" class=\"headerlink\" title=\"获取天气API说明\"></a>获取天气API说明</h1><span id=\"more\"></span>\n<p><em><strong>本次获取天气的API网站为知心天气</strong></em></p>\n<h5 id=\"一、注册知心天气\"><a href=\"#一、注册知心天气\" class=\"headerlink\" title=\"一、注册知心天气\"></a>一、注册知心天气</h5><p>在注册完成后可在控制台查看你的私钥如下：<br><img src=\"https://i.niupic.com/images/2022/03/21/9WTg.png\" alt=\"知心天气私钥\"></p>\n<h5 id=\"二、知心天气的API文档\"><a href=\"#二、知心天气的API文档\" class=\"headerlink\" title=\"二、知心天气的API文档\"></a>二、知心天气的API文档</h5><p><img src=\"https://i.niupic.com/images/2022/03/21/9WTk.png\" alt=\"知心天气API\"><br>红圈就是代码中的API链接，根据需求换成你自己想要的东西<br>key= 你知心天气的私钥<br>location= 获取城市的拼音<br>language= 语言，默认是简体中文<br>unit= 温度单位℃或者℉ </p>\n<h1 id=\"esp32桌面天气实现代码如下：\"><a href=\"#esp32桌面天气实现代码如下：\" class=\"headerlink\" title=\"esp32桌面天气实现代码如下：\"></a>esp32桌面天气实现代码如下：</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\">#include &quot;WiFi.h&quot;</span><br><span class=\"line\">#include &quot;ArduinoJson.h&quot;</span><br><span class=\"line\">#include &quot;HTTPClient.h&quot;</span><br><span class=\"line\">#include &quot;weatherpicture.h&quot;</span><br><span class=\"line\">#include &lt;U8g2lib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_SPI</span><br><span class=\"line\">#include &lt;SPI.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_I2C</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;Wire.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">//OLED硬件初始化</span><br><span class=\"line\">U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display</span><br><span class=\"line\"></span><br><span class=\"line\">// ------------------------WIFI连接信息---------------------------------//</span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">//-------------------------网络时间获取----------------------------------//</span><br><span class=\"line\">const char *ntpServer = &quot;pool.ntp.org&quot;; //网络时间服务器</span><br><span class=\"line\">const long gmtOffset_sec = 8 * 3600; //时区设置函数，东八区（UTC/GMT+8:00）写成8*3600   </span><br><span class=\"line\">const int daylightOffset_sec = 0;   //夏令时填写3600，否则填0</span><br><span class=\"line\"></span><br><span class=\"line\">//==========================函数声明====================================//</span><br><span class=\"line\"></span><br><span class=\"line\">void WiFi_Connect();</span><br><span class=\"line\">void ParserJson();</span><br><span class=\"line\">void OLEDDisplay(String cityName, String weather, String temperature, int code_int);</span><br><span class=\"line\">void printLocalTime();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//WiFi connect function</span><br><span class=\"line\">void WiFi_Connect()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">                    //Connection state judgment</span><br><span class=\"line\">    while(WiFi.status() != WL_CONNECTED)&#123;  </span><br><span class=\"line\">        delay(1000);</span><br><span class=\"line\">        Serial.println(&quot;Connecting to WiFi...&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        /**********屏幕显示wifi连接状态*************/</span><br><span class=\"line\">        u8g2.clearBuffer();</span><br><span class=\"line\">        u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">        u8g2.setCursor(0,16);</span><br><span class=\"line\">        u8g2.print(&quot;wifi连接中&quot;);</span><br><span class=\"line\">        u8g2.sendBuffer();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Serial.println(&quot;Connected to the WiFi network&quot;);</span><br><span class=\"line\">    u8g2.clearBuffer();</span><br><span class=\"line\">    u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">    u8g2.setCursor(0,16);</span><br><span class=\"line\">    u8g2.print(&quot;wifi成功&quot;);</span><br><span class=\"line\">    u8g2.sendBuffer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//获取Json报文并解析</span><br><span class=\"line\">void ParserJson()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  HTTPClient http;</span><br><span class=\"line\">  //                                                            你的私钥                      查询地址       语言   温度单位</span><br><span class=\"line\">  http.begin(&quot;https://api.seniverse.com/v3/weather/now.json?key=SvbJTBaB9LvBrsItI&amp;location=liuzhou&amp;language=zh-Hans&amp;unit=c&quot;);//Specify the URL</span><br><span class=\"line\">  int httpCode = http.GET();            // Make the request</span><br><span class=\"line\">  if (httpCode &gt; 0) &#123; // Check for the returning code</span><br><span class=\"line\"></span><br><span class=\"line\">    String payload = http.getString();</span><br><span class=\"line\">    Serial.println(httpCode);</span><br><span class=\"line\">    Serial.println(payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    StaticJsonDocument&lt;1024&gt; doc; </span><br><span class=\"line\"></span><br><span class=\"line\">    DeserializationError error = deserializeJson(doc, payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    if (error) &#123;</span><br><span class=\"line\">      Serial.println(&quot;JSON parsing failed!&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      JsonObject obj1 = doc[&quot;results&quot;][0];  //new 一个对象存储访问result信息</span><br><span class=\"line\">      String cityName = obj1[&quot;location&quot;][&quot;name&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String weather = obj1[&quot;now&quot;][&quot;text&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String code = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String temperature = obj1[&quot;now&quot;][&quot;temperature&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      int code_int = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;int&gt;();</span><br><span class=\"line\">      OLEDDisplay(cityName, weather, temperature, code_int);  //屏幕显示报文信息</span><br><span class=\"line\">      //int code_int = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;int&gt;();</span><br><span class=\"line\">      Serial.println(cityName);</span><br><span class=\"line\">      Serial.println(code);</span><br><span class=\"line\">      //Serial.println(weather);</span><br><span class=\"line\">      Serial.println(temperature);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;else &#123;</span><br><span class=\"line\">    Serial.println(&quot;Error on HTTP request&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  http.end(); //Free the resources</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//屏幕绘制信息</span><br><span class=\"line\">void OLEDDisplay(String cityName, String weather, String temperature, int code_int)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">  u8g2.setFontDirection(0);</span><br><span class=\"line\">  u8g2.clearBuffer();</span><br><span class=\"line\">  //u8g2.drawXBMP(3, 3, 35, 32, cloudy); u8g2.setCursor(43 , 16 ); u8g2.println(&quot;多&quot;); u8g2.setCursor(43 , 30 ); u8g2.println(&quot;云&quot;);</span><br><span class=\"line\">  u8g2.setCursor(65, 10);</span><br><span class=\"line\">  u8g2.print(&quot;城市: &quot;);</span><br><span class=\"line\">  u8g2.print(cityName);</span><br><span class=\"line\">  u8g2.setCursor(65, 25);</span><br><span class=\"line\">  u8g2.print(&quot;天气: &quot;);</span><br><span class=\"line\">  u8g2.print(weather);</span><br><span class=\"line\">  u8g2.setCursor(65, 40);</span><br><span class=\"line\">  u8g2.print(&quot;温度: &quot;);</span><br><span class=\"line\">  u8g2.print(temperature);</span><br><span class=\"line\">  u8g2.print(&quot;℃&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  //==========================天气图标显示=========================//</span><br><span class=\"line\">  </span><br><span class=\"line\">  //u8g2.drawXBMP(10, 3, sunny_x, sunny_y, sunny);</span><br><span class=\"line\">  switch (code_int)&#123;</span><br><span class=\"line\">    case 0:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, sunny_x, sunny_y, sunny);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 1:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, clear_x, clear_y, clear);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 2:</span><br><span class=\"line\">      //</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 3:</span><br><span class=\"line\">      //</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 4:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, cloudy_x, cloudy_y, cloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 5:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 6:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 7:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 8:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 9:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Overcast_x, Overcast_y, Overcast);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 10:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Shower_x, Shower_y, Shower);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 11:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Thundershower_x, Thundershower_y, Thundershower);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 12:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, ThundershowerWithHail_x, ThundershowerWithHail_y, ThundershowerWithHail);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 13:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 14:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 15:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 16:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 17:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 18:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 19:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, IceRain_x, IceRain_y, IceRain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 20:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Sleet_x, Sleet_y, Sleet);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 21:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, SnowFlurry_x, SnowFlurry_y, SnowFlurry);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 22:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 23:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 24:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 25:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 26:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 27:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 28:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 29:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 30:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Foggy_x, Foggy_y, Foggy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 31:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Haze_x, Haze_y, Haze);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 32:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 33:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 34:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 35:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 36:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Tornado_x, Tornado_y, Tornado);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 37:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Cold_x, Cold_y, Cold);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 38:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hot_x, Hot_y, Hot);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 99:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Unknown_x, Unknown_y, Unknown);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">  </span><br><span class=\"line\">  break;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //--------------------------时间显示--------------------------//</span><br><span class=\"line\">  printLocalTime();</span><br><span class=\"line\"></span><br><span class=\"line\">  u8g2.sendBuffer();</span><br><span class=\"line\">  //delay(1000);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//时间获取</span><br><span class=\"line\"></span><br><span class=\"line\">void printLocalTime()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  //delay(500);</span><br><span class=\"line\">  struct tm timeinfo;</span><br><span class=\"line\">  if (!getLocalTime(&amp;timeinfo))</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      Serial.println(&quot;Failed to obtain time&quot;);</span><br><span class=\"line\">      u8g2.setCursor(0,60);</span><br><span class=\"line\">      u8g2.print(&quot;未获取到时间请重置&quot;);</span><br><span class=\"line\">      return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.println(&amp;timeinfo, &quot;%F %T %A&quot;); // 格式化输出,串口显示</span><br><span class=\"line\">  //屏幕显示时间</span><br><span class=\"line\">  //u8g2.clearBuffer();</span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">  u8g2.setCursor(30, 64);</span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%F&quot;);  //日期</span><br><span class=\"line\">  u8g2.setCursor(65, 52);</span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%A&quot;);  //星期</span><br><span class=\"line\">  u8g2.setCursor(95, 64); </span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%R&quot;); //小时-分钟</span><br><span class=\"line\">  // u8g2.setCursor(80, 64); </span><br><span class=\"line\">  // u8g2.print(&amp;timeinfo, &quot;%T&quot;); //小时-分钟-秒 </span><br><span class=\"line\"></span><br><span class=\"line\">  //==========================底部标语==========================//</span><br><span class=\"line\">  // u8g2.setCursor(0,63);</span><br><span class=\"line\">  // u8g2.print(&quot;平安喜乐&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  //u8g2.sendBuffer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  // put your setup code here, to run once:</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  u8g2.begin();</span><br><span class=\"line\">  u8g2.enableUTF8Print();</span><br><span class=\"line\"></span><br><span class=\"line\">  WiFi_Connect();</span><br><span class=\"line\"></span><br><span class=\"line\">  //从网络时间服务器上获取并设置时间</span><br><span class=\"line\">  // 获取成功后芯片会使用RTC时钟保持时间的更新</span><br><span class=\"line\">  //            时区           时令             网络服务器</span><br><span class=\"line\">  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // put your main code here, to run repeatedly:</span><br><span class=\"line\">  ParserJson();</span><br><span class=\"line\">  delay(3000);  //知心天气API访问限制 20次/min</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><p><a href=\"https://blog.csdn.net/liujialong11/article/details/120068060?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-120068060.pc_agg_new_rank&utm_term=esp32%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA&spm=1000.2123.3001.4430\">https://blog.csdn.net/liujialong11/article/details/120068060?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2<del>aggregatepage</del>first_rank_ecpm_v1~rank_v31_ecpm-2-120068060.pc_agg_new_rank&amp;utm_term=esp32%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA&amp;spm=1000.2123.3001.4430</a><br><a href=\"https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/nyiu3t\">https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/nyiu3t</a><br><a href=\"https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430\">https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2<del>aggregatepage</del>first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&amp;utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&amp;spm=1000.2123.3001.4430</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"获取天气API说明\"><a href=\"#获取天气API说明\" class=\"headerlink\" title=\"获取天气API说明\"></a>获取天气API说明</h1>","more":"<p><em><strong>本次获取天气的API网站为知心天气</strong></em></p>\n<h5 id=\"一、注册知心天气\"><a href=\"#一、注册知心天气\" class=\"headerlink\" title=\"一、注册知心天气\"></a>一、注册知心天气</h5><p>在注册完成后可在控制台查看你的私钥如下：<br><img src=\"https://i.niupic.com/images/2022/03/21/9WTg.png\" alt=\"知心天气私钥\"></p>\n<h5 id=\"二、知心天气的API文档\"><a href=\"#二、知心天气的API文档\" class=\"headerlink\" title=\"二、知心天气的API文档\"></a>二、知心天气的API文档</h5><p><img src=\"https://i.niupic.com/images/2022/03/21/9WTk.png\" alt=\"知心天气API\"><br>红圈就是代码中的API链接，根据需求换成你自己想要的东西<br>key= 你知心天气的私钥<br>location= 获取城市的拼音<br>language= 语言，默认是简体中文<br>unit= 温度单位℃或者℉ </p>\n<h1 id=\"esp32桌面天气实现代码如下：\"><a href=\"#esp32桌面天气实现代码如下：\" class=\"headerlink\" title=\"esp32桌面天气实现代码如下：\"></a>esp32桌面天气实现代码如下：</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Arduino.h&gt;</span><br><span class=\"line\">#include &quot;WiFi.h&quot;</span><br><span class=\"line\">#include &quot;ArduinoJson.h&quot;</span><br><span class=\"line\">#include &quot;HTTPClient.h&quot;</span><br><span class=\"line\">#include &quot;weatherpicture.h&quot;</span><br><span class=\"line\">#include &lt;U8g2lib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_SPI</span><br><span class=\"line\">#include &lt;SPI.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\">#ifdef U8X8_HAVE_HW_I2C</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;Wire.h&gt;</span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">//OLED硬件初始化</span><br><span class=\"line\">U8G2_SSD1306_128X64_NONAME_F_SW_I2C u8g2(U8G2_R0, /* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);   // All Boards without Reset of the Display</span><br><span class=\"line\"></span><br><span class=\"line\">// ------------------------WIFI连接信息---------------------------------//</span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">//-------------------------网络时间获取----------------------------------//</span><br><span class=\"line\">const char *ntpServer = &quot;pool.ntp.org&quot;; //网络时间服务器</span><br><span class=\"line\">const long gmtOffset_sec = 8 * 3600; //时区设置函数，东八区（UTC/GMT+8:00）写成8*3600   </span><br><span class=\"line\">const int daylightOffset_sec = 0;   //夏令时填写3600，否则填0</span><br><span class=\"line\"></span><br><span class=\"line\">//==========================函数声明====================================//</span><br><span class=\"line\"></span><br><span class=\"line\">void WiFi_Connect();</span><br><span class=\"line\">void ParserJson();</span><br><span class=\"line\">void OLEDDisplay(String cityName, String weather, String temperature, int code_int);</span><br><span class=\"line\">void printLocalTime();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">//WiFi connect function</span><br><span class=\"line\">void WiFi_Connect()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">                    //Connection state judgment</span><br><span class=\"line\">    while(WiFi.status() != WL_CONNECTED)&#123;  </span><br><span class=\"line\">        delay(1000);</span><br><span class=\"line\">        Serial.println(&quot;Connecting to WiFi...&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        /**********屏幕显示wifi连接状态*************/</span><br><span class=\"line\">        u8g2.clearBuffer();</span><br><span class=\"line\">        u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">        u8g2.setCursor(0,16);</span><br><span class=\"line\">        u8g2.print(&quot;wifi连接中&quot;);</span><br><span class=\"line\">        u8g2.sendBuffer();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    Serial.println(&quot;Connected to the WiFi network&quot;);</span><br><span class=\"line\">    u8g2.clearBuffer();</span><br><span class=\"line\">    u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">    u8g2.setCursor(0,16);</span><br><span class=\"line\">    u8g2.print(&quot;wifi成功&quot;);</span><br><span class=\"line\">    u8g2.sendBuffer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//获取Json报文并解析</span><br><span class=\"line\">void ParserJson()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  HTTPClient http;</span><br><span class=\"line\">  //                                                            你的私钥                      查询地址       语言   温度单位</span><br><span class=\"line\">  http.begin(&quot;https://api.seniverse.com/v3/weather/now.json?key=SvbJTBaB9LvBrsItI&amp;location=liuzhou&amp;language=zh-Hans&amp;unit=c&quot;);//Specify the URL</span><br><span class=\"line\">  int httpCode = http.GET();            // Make the request</span><br><span class=\"line\">  if (httpCode &gt; 0) &#123; // Check for the returning code</span><br><span class=\"line\"></span><br><span class=\"line\">    String payload = http.getString();</span><br><span class=\"line\">    Serial.println(httpCode);</span><br><span class=\"line\">    Serial.println(payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    StaticJsonDocument&lt;1024&gt; doc; </span><br><span class=\"line\"></span><br><span class=\"line\">    DeserializationError error = deserializeJson(doc, payload);</span><br><span class=\"line\"></span><br><span class=\"line\">    if (error) &#123;</span><br><span class=\"line\">      Serial.println(&quot;JSON parsing failed!&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      JsonObject obj1 = doc[&quot;results&quot;][0];  //new 一个对象存储访问result信息</span><br><span class=\"line\">      String cityName = obj1[&quot;location&quot;][&quot;name&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String weather = obj1[&quot;now&quot;][&quot;text&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String code = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      String temperature = obj1[&quot;now&quot;][&quot;temperature&quot;].as&lt;String&gt;();</span><br><span class=\"line\">      int code_int = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;int&gt;();</span><br><span class=\"line\">      OLEDDisplay(cityName, weather, temperature, code_int);  //屏幕显示报文信息</span><br><span class=\"line\">      //int code_int = obj1[&quot;now&quot;][&quot;code&quot;].as&lt;int&gt;();</span><br><span class=\"line\">      Serial.println(cityName);</span><br><span class=\"line\">      Serial.println(code);</span><br><span class=\"line\">      //Serial.println(weather);</span><br><span class=\"line\">      Serial.println(temperature);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;else &#123;</span><br><span class=\"line\">    Serial.println(&quot;Error on HTTP request&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  http.end(); //Free the resources</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//屏幕绘制信息</span><br><span class=\"line\">void OLEDDisplay(String cityName, String weather, String temperature, int code_int)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">  u8g2.setFontDirection(0);</span><br><span class=\"line\">  u8g2.clearBuffer();</span><br><span class=\"line\">  //u8g2.drawXBMP(3, 3, 35, 32, cloudy); u8g2.setCursor(43 , 16 ); u8g2.println(&quot;多&quot;); u8g2.setCursor(43 , 30 ); u8g2.println(&quot;云&quot;);</span><br><span class=\"line\">  u8g2.setCursor(65, 10);</span><br><span class=\"line\">  u8g2.print(&quot;城市: &quot;);</span><br><span class=\"line\">  u8g2.print(cityName);</span><br><span class=\"line\">  u8g2.setCursor(65, 25);</span><br><span class=\"line\">  u8g2.print(&quot;天气: &quot;);</span><br><span class=\"line\">  u8g2.print(weather);</span><br><span class=\"line\">  u8g2.setCursor(65, 40);</span><br><span class=\"line\">  u8g2.print(&quot;温度: &quot;);</span><br><span class=\"line\">  u8g2.print(temperature);</span><br><span class=\"line\">  u8g2.print(&quot;℃&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  //==========================天气图标显示=========================//</span><br><span class=\"line\">  </span><br><span class=\"line\">  //u8g2.drawXBMP(10, 3, sunny_x, sunny_y, sunny);</span><br><span class=\"line\">  switch (code_int)&#123;</span><br><span class=\"line\">    case 0:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, sunny_x, sunny_y, sunny);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 1:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, clear_x, clear_y, clear);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 2:</span><br><span class=\"line\">      //</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 3:</span><br><span class=\"line\">      //</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 4:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, cloudy_x, cloudy_y, cloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 5:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 6:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 7:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, PartlyCloudy_x, PartlyCloudy_y, PartlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 8:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, MostlyCloudy_x, MostlyCloudy_y, MostlyCloudy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 9:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Overcast_x, Overcast_y, Overcast);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 10:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Shower_x, Shower_y, Shower);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 11:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Thundershower_x, Thundershower_y, Thundershower);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 12:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, ThundershowerWithHail_x, ThundershowerWithHail_y, ThundershowerWithHail);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 13:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 14:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 15:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 16:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 17:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 18:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Rain_x, Rain_y, Rain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 19:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, IceRain_x, IceRain_y, IceRain);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 20:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Sleet_x, Sleet_y, Sleet);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 21:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, SnowFlurry_x, SnowFlurry_y, SnowFlurry);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 22:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 23:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 24:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 25:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Snow_x, Snow_y, Snow);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 26:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 27:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Dust_x, Dust_y, Dust);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 28:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 29:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Duststorm_x, Duststorm_y, Duststorm);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 30:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Foggy_x, Foggy_y, Foggy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 31:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Haze_x, Haze_y, Haze);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 32:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 33:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Windy_x, Windy_y, Windy);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 34:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 35:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hurricane_x, Hurricane_y, Hurricane);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 36:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Tornado_x, Tornado_y, Tornado);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 37:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Cold_x, Cold_y, Cold);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 38:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Hot_x, Hot_y, Hot);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">    case 99:</span><br><span class=\"line\">      u8g2.drawXBMP(3, 3, Unknown_x, Unknown_y, Unknown);</span><br><span class=\"line\">      break;</span><br><span class=\"line\">  </span><br><span class=\"line\">  break;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  //--------------------------时间显示--------------------------//</span><br><span class=\"line\">  printLocalTime();</span><br><span class=\"line\"></span><br><span class=\"line\">  u8g2.sendBuffer();</span><br><span class=\"line\">  //delay(1000);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//时间获取</span><br><span class=\"line\"></span><br><span class=\"line\">void printLocalTime()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  //delay(500);</span><br><span class=\"line\">  struct tm timeinfo;</span><br><span class=\"line\">  if (!getLocalTime(&amp;timeinfo))</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      Serial.println(&quot;Failed to obtain time&quot;);</span><br><span class=\"line\">      u8g2.setCursor(0,60);</span><br><span class=\"line\">      u8g2.print(&quot;未获取到时间请重置&quot;);</span><br><span class=\"line\">      return;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Serial.println(&amp;timeinfo, &quot;%F %T %A&quot;); // 格式化输出,串口显示</span><br><span class=\"line\">  //屏幕显示时间</span><br><span class=\"line\">  //u8g2.clearBuffer();</span><br><span class=\"line\">  u8g2.setFont(u8g2_font_wqy12_t_gb2312);</span><br><span class=\"line\">  u8g2.setCursor(30, 64);</span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%F&quot;);  //日期</span><br><span class=\"line\">  u8g2.setCursor(65, 52);</span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%A&quot;);  //星期</span><br><span class=\"line\">  u8g2.setCursor(95, 64); </span><br><span class=\"line\">  u8g2.print(&amp;timeinfo, &quot;%R&quot;); //小时-分钟</span><br><span class=\"line\">  // u8g2.setCursor(80, 64); </span><br><span class=\"line\">  // u8g2.print(&amp;timeinfo, &quot;%T&quot;); //小时-分钟-秒 </span><br><span class=\"line\"></span><br><span class=\"line\">  //==========================底部标语==========================//</span><br><span class=\"line\">  // u8g2.setCursor(0,63);</span><br><span class=\"line\">  // u8g2.print(&quot;平安喜乐&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">  //u8g2.sendBuffer();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  // put your setup code here, to run once:</span><br><span class=\"line\">  Serial.begin(115200);</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  u8g2.begin();</span><br><span class=\"line\">  u8g2.enableUTF8Print();</span><br><span class=\"line\"></span><br><span class=\"line\">  WiFi_Connect();</span><br><span class=\"line\"></span><br><span class=\"line\">  //从网络时间服务器上获取并设置时间</span><br><span class=\"line\">  // 获取成功后芯片会使用RTC时钟保持时间的更新</span><br><span class=\"line\">  //            时区           时令             网络服务器</span><br><span class=\"line\">  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  // put your main code here, to run repeatedly:</span><br><span class=\"line\">  ParserJson();</span><br><span class=\"line\">  delay(3000);  //知心天气API访问限制 20次/min</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><p><a href=\"https://blog.csdn.net/liujialong11/article/details/120068060?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-2-120068060.pc_agg_new_rank&utm_term=esp32%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA&spm=1000.2123.3001.4430\">https://blog.csdn.net/liujialong11/article/details/120068060?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2<del>aggregatepage</del>first_rank_ecpm_v1~rank_v31_ecpm-2-120068060.pc_agg_new_rank&amp;utm_term=esp32%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF%E6%98%BE%E7%A4%BA&amp;spm=1000.2123.3001.4430</a><br><a href=\"https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/nyiu3t\">https://seniverse.yuque.com/books/share/e52aa43f-8fe9-4ffa-860d-96c0f3cf1c49/nyiu3t</a><br><a href=\"https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~aggregatepage~first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&spm=1000.2123.3001.4430\">https://blog.csdn.net/qq_41868901/article/details/104221495?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2<del>aggregatepage</del>first_rank_ecpm_v1~rank_v31_ecpm-4-104221495.pc_agg_new_rank&amp;utm_term=esp32+%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1&amp;spm=1000.2123.3001.4430</a></p>"},{"title":"知心天气图标字模头文件","_content":"\n# 知心天气图标字模头文件\n<!-- more -->\n搞这个东西是真的难受\n![难顶](https://img1.baidu.com/it/u=2104894784,1188466874&fm=253&fmt=auto&app=138&f=JPEG?w=501&h=500)\n\n```\n/**\n * 说明：这个头文件存放天气图标的字模\n * \n */ \n\n#ifndef weatherpicture_H\n#define weatherpicture_H\n\n#endif\n\n#define sunny_x 51\n#define sunny_y 51\n// 晴 0\nstatic const unsigned char sunny[] = {\n0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,\n0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xFC,0xFF,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\0@1x.bmp\",0\n(51 X 51 )*/\n};\n\n#define clear_x 51 \n#define clear_y 52\n// 夜晚 1\nstatic const unsigned char clear[]{\n0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0xFE,0x0F,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x80,0xFF,0x0F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x07,0x00,0x00,0x00,0x00,0xE0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,\n0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,\n0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,\n0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,\n0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xFF,0xFF,0xFF,\n0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0x07,0xFF,0xFF,0xFF,0xFF,0x03,0xF0,0x07,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\1@1x.bmp\",0\n (51 X 52 )*/\n};\n\n#define cloudy_x 60\n#define cloudy_y 47\n// 多云 4\nstatic const unsigned char cloudy[] = {\n0x00,0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x7F,0x00,0x00,\n0x00,0x00,0xF8,0xF8,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x03,0x00,\n0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,\n0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFC,0x1F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFC,0x3F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,\n0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0x01,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0x00,0xFE,0x3F,0x00,0xF8,0xFF,0xFF,0x7F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\4@1x.bmp\",0\n(60 X 47 )*/\n};\n\n#define PartlyCloudy_x 60\n#define PartlyCloudy_y 44\n// 晴间多云 5、7\nstatic const unsigned char PartlyCloudy[] = {\n0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,\n0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xE0,0xCF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\5@1x.bmp\",0\n (60 X 44 )*/\n};\n\n#define MostlyCloudy_x 60\n#define MostlyCloudy_y 51\n// 阴间多云 6、8\nstatic const unsigned char MostlyCloudy[] = {\n0x00,0x00,0x00,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,\n0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x03,0x00,0x00,\n0x00,0x00,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0x00,0x0E,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xE7,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\6@1x.bmp\",0\n(60 X 51 )*/\n};\n\n#define Overcast_x 60\n#define Overcast_y 40\n//  阴 9\nstatic const unsigned char Overcast[] = {\n0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x7F,0x00,0x00,\n0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x80,0x3F,0xFE,0xFF,0xFF,0x01,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\9@1x.bmp\",0\n(60 X 40 )*/\n};\n\n#define Shower_x 60\n#define Shower_y 59\n// 阵雨 10\nstatic const unsigned char Shower[] = {\n0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,\n0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x03,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0x8F,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x3C,0x00,0x1E,0x00,0x00,0x00,0x78,0x00,0x3E,0x00,0x1F,0x00,0x00,\n0x00,0x7C,0x00,0x3E,0x00,0x1F,0x00,0x00,0x00,0x7C,0x00,0x3E,0x80,0x1F,0x00,0x00,0x00,0x7E,0x00,0x1F,0x80,0x0F,0x00,0x00,0x00,0x3E,0x00,0x1F,0x80,0x0F,0x00,0x00,\n0x00,0x3F,0x80,0x1F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xE0,0x07,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,\n0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x01,0x00,0x00,0x80,0x07,0xC0,0x03,0xE0,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\10@1x.bmp\",0\n(60 X 59 )*/\n};\n\n#define Thundershower_x 56\n#define Thundershower_y 56\n// 雷阵雨 11\nstatic const unsigned char Thundershower[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x08,0xC0,0xFF,0x00,0x18,0x00,0x00,0x3C,0xC0,0x7F,0x00,0x3C,0x00,0x00,\n0x3E,0xE0,0x7F,0x00,0x3C,0x00,0x00,0x3E,0xE0,0x3F,0x00,0x3E,0x00,0x00,0x1F,0xE0,0xFF,0x01,0x3E,0x00,0x00,0x1F,0xF0,0xFF,0x00,0x1F,0x00,0x00,0x1F,0xF0,0x7F,0x00,\n0x1F,0x00,0x80,0x0F,0xF8,0x3F,0x00,0x1F,0x00,0x80,0x0F,0x80,0x1F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x0F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x07,0xC0,0x07,0x00,0xC0,0x07,\n0xC0,0x03,0xC0,0x07,0x00,0xC0,0x03,0xE0,0x01,0x80,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,\n0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\11@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define ThundershowerWithHail_x 56\n#define ThundershowerWithHail_y 56\n// 雷阵雨伴有冰雹 12\nstatic const unsigned char ThundershowerWithHail[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x80,\n0x03,0xE0,0x7F,0x00,0x0E,0x00,0xE0,0x07,0xE0,0x3F,0x00,0x3F,0x00,0xE0,0x0F,0xE0,0xFF,0x81,0x3F,0x00,0xF0,0x0F,0xF0,0xFF,0x80,0x7F,0x00,0xF0,0x0F,0xF0,0x7F,0x80,\n0x7F,0x00,0xF0,0x0F,0xF8,0x3F,0x80,0x3F,0x00,0xE0,0x07,0x80,0x1F,0x00,0x3F,0x00,0xC0,0x03,0xC0,0x0F,0x00,0x1E,0x00,0x00,0x00,0xC0,0x07,0x00,0x00,0x00,0x00,0x00,\n0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,\n0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\12@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Rain_x 56\n#define Rain_y 54\n// 小雨、中雨、大于、暴雨、大暴雨、特大暴雨 13、14、15、16、17、18\nstatic const unsigned char Rain[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x18,0x00,0x06,0x00,0x03,0x00,0x00,0x1C,0x00,0x0E,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x80,0x0F,0xC0,\n0x03,0x00,0x00,0x0F,0x80,0x07,0xC0,0x03,0x00,0x00,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x80,0x0F,0xC0,0x03,0xE0,0x01,0x00,0x80,0x07,0xC0,0x03,0xF0,0x01,0x00,0xC0,0x07,\n0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0x70,0x00,0x00,0xC0,0x01,0xE0,0x00,0x70,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\13@1x.bmp\",0\n(56 X 54 )*/\n};\n\n#define IceRain_x 56\n#define IceRain_y 57\n// 冻雨 19\nstatic const unsigned char IceRain[] = {\n0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x18,0x00,0x04,0x00,0x00,\n0x70,0x00,0x3C,0x00,0x0E,0x00,0x00,0xF8,0x00,0x7E,0x00,0x1F,0x00,0x00,0xFC,0x01,0xFF,0x80,0x3F,0x00,0x00,0xFE,0x03,0xFF,0xC0,0x7F,0x00,0x00,0xFC,0x01,0x7E,0x80,\n0x3F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x1F,0x00,0x00,0x70,0x00,0x1C,0x00,0x0E,0x00,0x00,0x20,0x10,0x08,0x00,0x04,0x00,0x00,0x00,0x38,0x00,0x18,0x00,0x00,0x00,0x00,\n0x7C,0x00,0x3C,0x00,0x00,0x00,0x00,0xFE,0x00,0x7E,0x00,0x00,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFE,0x00,0xFF,0x00,0x00,0x00,0x00,0x7C,0x00,0x7E,0x00,\n0x00,0x00,0x00,0x38,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\19@1x.bmp\",0\n(56 X 57 )*/\n};\n\n#define Sleet_x 56\n#define Sleet_y 55\n// 雨夹雪 20\nstatic const unsigned char Sleet[] = {\n0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3B,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3F,0x00,0x00,0xF8,0x00,0x3E,0x80,\n0x3F,0x00,0x00,0x78,0x00,0x1E,0xC0,0x7F,0x00,0x00,0x7C,0x00,0x1F,0xE0,0xFF,0x00,0x00,0x3C,0x00,0x0F,0xF0,0xFF,0x01,0x00,0x3C,0x00,0x0F,0xE0,0xFF,0x00,0x00,0x3E,\n0x80,0x0F,0x80,0x3F,0x00,0x00,0x1E,0x80,0x07,0x80,0x3F,0x00,0x00,0x1F,0xC0,0x07,0x80,0x3B,0x00,0x00,0x0F,0xC0,0x03,0x80,0x33,0x00,0x00,0x06,0x80,0x01,0x00,0x00,\n0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\20@1x.bmp\",0\n(56 X 55 )*/\n};\n\n#define SnowFlurry_x 56\n#define SnowFlurry_y 56\n// 阵雪 21\nstatic const unsigned char SnowFlurry[] = {\n0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,\n0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x7F,0x00,\n0xC0,0xE0,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x3D,0xC0,0x3B,\n0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xE0,0x7F,0xE0,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,\n0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,\n0x00,0x00,0x80,0x19,0x80,0x19,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\21@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Snow_x 56\n#define Snow_y 53\n// 小雪、中雪、大雪、暴雪 22、23、24、25\nstatic const unsigned char Snow[] = {\n0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x80,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0x00,0xC6,0x00,0x00,0x00,0x00,0xFF,0x00,0xEE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,\n0x00,0x00,0x00,0x80,0xFF,0x83,0xFF,0x03,0x00,0x00,0xC0,0xFF,0xC3,0xFF,0x07,0x00,0x00,0xC0,0xFF,0x83,0xFF,0x03,0x00,0x00,0x80,0xFF,0x01,0xFF,0x01,0x00,0x00,0x00,\n0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xEE,0x00,0xEE,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\22@1x.bmp\",0\n(56 X 53 )*/\n};\n\n#define Dust_x 53\n#define Dust_y 45\n// 浮尘、扬沙 26、27\nstatic const unsigned char Dust[] = {\n0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0x7C,0xC0,0x07,\n0x7C,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFF,0xE1,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xC0,0x07,0x7C,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xE0,0x0F,0xFC,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,\n0xFF,0xF1,0x1F,0x00,0x7E,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0xFF,0xE0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xE1,0x1F,0x00,0xFE,0xE0,0x0F,\n0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE0,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xF1,0x1F,0x00,0xFE,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\26@1x.bmp\",0\n(53 X 45 )*/\n};\n\n#define Duststorm_x 58\n#define Duststorm_y 34\n// 沙尘暴、强沙尘暴 28、29\nstatic const unsigned char Duststorm[] = {\n0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x38,0x1C,0x0E,0x87,0xFF,0x03,0x00,0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x07,0x00,0x00,0x7C,0x3E,0x9F,0x8F,0xFF,0x07,0x00,\n0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x0F,0x00,0x00,0x38,0x1C,0x0E,0x87,0x87,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,\n0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x0F,0x00,0x8F,0x87,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x8F,0xC7,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x06,0x83,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x78,0x3C,0xFE,0xFF,0xFF,0x3F,0x00,\n0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x00,0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x01,0xF8,0x78,0x3C,0xFE,0xFF,0xFF,0xFF,0x03,0x60,0x30,0x18,0xFC,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x03,\n0x00,0x1C,0x0E,0x87,0xC7,0xE3,0xF3,0x03,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x03,0x00,0x3E,0x9F,0xCF,0xC7,0xE7,0xFF,0x01,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x01,\n0x00,0x1C,0x0E,0x87,0x83,0xC1,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\28@1x.bmp\",0\n(58 X 34 )*/\n};\n\n#define Foggy_x 54\n#define Foggy_y 50\n// 雾 30\nstatic const unsigned char Foggy[] = {\n0x00,0xE0,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFE,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,\n0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,\n0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\30@1x.bmp\",0\n(54 X 50 )*/\n};\n\n#define Haze_x 56\n#define Haze_y 50\n// 霾 31\nstatic const unsigned char Haze[] = {\n0x7C,0x00,0x00,0x3E,0x00,0x00,0x78,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,\n0x00,0x00,0x7C,0x10,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0xC0,0x7F,0x00,0xC0,0xFF,0x0F,0x00,0xF0,\n0xFF,0x01,0xF0,0xFF,0x3F,0x00,0xFC,0xFF,0x07,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xFC,0xFF,0xFF,0x80,0xFF,0xFF,0x1F,0xFC,0x87,0xFF,0x81,0xFF,0xF1,0x3F,0xFE,0x01,\n0xFC,0xC3,0x3F,0x80,0x3F,0x7E,0x00,0xF8,0xE7,0x0F,0x00,0x7F,0x3F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x3F,0x00,0xE0,0xFF,0x03,0x00,0xFE,0x3F,0x00,0xC0,0xFF,0x03,0x00,\n0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x00,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,\n0xFF,0x01,0x00,0xFC,0x3F,0x00,0xC0,0xFF,0x03,0x00,0xFC,0x3F,0x00,0xE0,0xFF,0x07,0x00,0xFE,0x7F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x7E,0x00,0xF8,0xE3,0x1F,0x00,0x7F,\n0xFE,0x01,0xFC,0xC3,0x3F,0xC0,0x3F,0xFC,0x8F,0xFF,0x81,0xFF,0xFB,0x3F,0xF8,0xFF,0xFF,0x00,0xFF,0xFF,0x1F,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xE0,0xFF,0x3F,0x00,\n0xFC,0xFF,0x07,0xC0,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFE,0x01,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3C,0x00,0x00,0x78,0x7C,0x00,0x00,0x3E,0x00,\n0x00,0x7C,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0x7C,0x38,0x00,0x00,0x1C,0x00,0x00,0x38,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\31@1x.bmp\",0\n(56 X 50 )*/\n};\n\n#define Windy_x 56\n#define Windy_y 44\n// 风、大风 32、33\nstatic const unsigned char Windy[] = {\n0x00,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFD,0x01,0x00,0x00,0x00,0x00,0x7C,0xF0,\n0x01,0xFC,0x03,0x00,0x00,0x3C,0xE0,0x03,0xFF,0x0F,0x00,0x00,0x3C,0xC0,0x83,0xFF,0x1F,0x00,0x00,0x00,0xC0,0xC3,0x9F,0x3F,0x00,0x00,0x00,0xC0,0xE3,0x07,0x7E,0x00,\n0x00,0x00,0xE0,0xE3,0x03,0x7C,0x00,0x00,0x00,0xF0,0xF1,0x01,0xF8,0x00,0x00,0x00,0xF8,0xF1,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0xF0,\n0x00,0xF0,0xFF,0xFF,0xFF,0x3F,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0x03,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,\n0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,\n0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,\n0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x07,0x3E,0x00,0x00,0x00,0x00,0x80,0x0F,0x1F,0x00,0x00,0x00,0x00,0x80,0xFF,0x1F,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\32@1x.bmp\",0\n(56 X 44 )*/\n};\n\n#define Hurricane_x 56\n#define Hurricane_y 56\n// 飓风、热带风暴 34、35\nstatic const unsigned char Hurricane[] = {\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,\n0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,\n0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,\n0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,\n0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\34@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Tornado_x 56\n#define Tornado_y 55\n// 龙卷风 36\nstatic const unsigned char Tornado[] = {\n0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0x03,0x00,\n0xC0,0xFF,0x07,0xF8,0x3F,0x00,0x00,0x00,0xFC,0x0F,0xFC,0x07,0x00,0x00,0x00,0xE0,0x1F,0xFE,0x00,0x80,0xFF,0x01,0x80,0x3F,0x7F,0x00,0xFE,0xFF,0x7F,0x00,0x7E,0x1F,\n0xC0,0xFF,0xFF,0xFF,0x03,0x7C,0x0F,0xF0,0xFF,0xFF,0xFF,0x0F,0xF8,0x0F,0xFC,0x3F,0x00,0xFC,0x1F,0xF0,0x0F,0xFE,0x01,0x00,0x80,0x3F,0xF8,0x1F,0x3E,0x00,0x00,0x00,\n0x7E,0x78,0x7F,0x1E,0x00,0x00,0x00,0x78,0x7E,0xFE,0x1F,0x00,0x00,0x00,0xF8,0x3F,0xFC,0x3F,0x00,0x00,0x00,0xFE,0x1F,0xF8,0xFF,0x01,0x00,0xC0,0xFF,0x0F,0xE0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0x20,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0x00,0xFE,0xFF,0x3F,0x00,\n0x07,0xF0,0x03,0x00,0x00,0x00,0xC0,0x0F,0xF0,0x0F,0x00,0x00,0x00,0xF0,0x0F,0xE0,0x7F,0x00,0x00,0x00,0xFE,0x07,0x80,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x80,0x07,0x00,0x00,0xF0,0x07,0x00,0xF0,0x07,0x00,0x00,0xE0,0xFF,0x81,0xFF,0x07,0x00,0x00,0xC0,0xFF,0xFF,\n0xFF,0x03,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFF,0x1F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xC0,0xC7,0x07,\n0x00,0x00,0x00,0x00,0xC0,0xE7,0x07,0x00,0x00,0x00,0x00,0x80,0xEF,0x03,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,\n0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,\n0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\36@1x.bmp\",0\n(56 X 55 )*/\n};\n\n#define Cold_x 51\n#define Cold_y 58\n// 冷 37\nstatic const unsigned char Cold[] = {\n0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,\n0x00,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x8F,0xC7,0x07,0x00,0x00,0x00,0x04,0x9F,0xE7,0x07,0x01,0x00,0x00,\n0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x1E,0xF0,0x3F,0xC0,0x01,0x00,0x03,0x1E,0xE0,0x1F,0xE0,\n0x01,0x03,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x3F,0x1C,0x80,0x07,0xE0,0xF1,0x07,0xFF,0x3C,0x80,0x07,0xE0,0xF8,0x03,0xFC,0x3D,0x80,0x07,0xF0,0xFE,0x01,0xF8,0x3F,\n0x80,0x07,0xF0,0x7F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0x80,0x7F,0x80,0x07,0xF0,0x07,0x00,0x00,0xFF,0x80,0x07,0xFC,0x03,0x00,0xE0,0xFF,0x83,0x07,0xFF,0x3F,\n0x00,0xFC,0xFF,0x8F,0x87,0xFF,0xFF,0x01,0xFF,0xC7,0x9F,0xE7,0x9F,0xFF,0x03,0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,0x00,0x00,0xF8,\n0x7F,0x00,0x00,0x00,0x00,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,\n0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0xFF,0xE7,0x9F,0xE7,0x9F,0xFF,0x03,0xFC,0xFF,0x87,0x87,0xFF,0xFF,0x01,0xE0,0xFF,0x83,0x07,0xFE,0x3F,0x00,0x00,0xFF,0x80,0x07,\n0xFC,0x03,0x00,0x80,0x7F,0x80,0x07,0xF0,0x0F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0xF8,0x3F,0x80,0x07,0xF0,0x7F,0x00,0xFE,0x3D,0x80,0x07,0xF0,0xFE,0x01,0x7F,\n0x3C,0x80,0x07,0xE0,0xF8,0x03,0x3F,0x1C,0x80,0x07,0xE0,0xE1,0x07,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x02,0x1E,0xE0,0x1F,0xE0,0x01,0x03,0x00,0x1E,0xF0,0x3F,0xC0,\n0x01,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x04,0x9F,0xE7,0x87,0x01,0x00,0x00,0x80,\n0x8F,0xC7,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,\n0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\37@1x.bmp\",0\n(51 X 58 )*/\n};\n\n#define Hot_x 51\n#define Hot_y 51\n// 热 38\nstatic const unsigned char Hot[] = {\n0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,\n0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xFC,0xFF,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\38@1x.bmp\",0\n(51 X 51 )*/\n};\n\n#define Unknown_x 53\n#define Unknown_y 23\n// 未知 99\nstatic const unsigned char Unknown[] = {\n0x07,0x80,0x03,0xE0,0x00,0x0E,0x00,0x0F,0x80,0x03,0xE0,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x3F,0x80,0x03,0x78,\n0x80,0x3F,0x00,0x7F,0x80,0x03,0x38,0x80,0x3B,0x00,0x77,0x80,0x03,0x38,0xC0,0x7B,0x00,0xF7,0x80,0x03,0x1C,0xC0,0x71,0x00,0xE7,0x81,0x03,0x1C,0xE0,0x71,0x00,0xC7,\n0x81,0x03,0x1E,0xE0,0xF0,0x00,0xC7,0x83,0x03,0x0E,0xE0,0xE0,0x00,0x87,0x87,0x03,0x0E,0xF0,0xE0,0x01,0x07,0x87,0x03,0x07,0x70,0xC0,0x01,0x07,0x8F,0x03,0x07,0x78,\n0xC0,0x03,0x07,0x9E,0x83,0x03,0xF8,0xFF,0x03,0x07,0xBC,0x83,0x03,0xFC,0xFF,0x03,0x07,0xBC,0xC3,0x03,0xFC,0xFF,0x07,0x07,0xF8,0xC3,0x01,0x1C,0x00,0x07,0x07,0xF0,\n0xC3,0x01,0x1E,0x00,0x0F,0x07,0xF0,0xE3,0x00,0x0E,0x00,0x0E,0x07,0xE0,0xE3,0x00,0x0F,0x00,0x1E,0x07,0xC0,0xF3,0x00,0x07,0x00,0x1E,0x07,0xC0,0x73,0x00,0x07,0x00,\n0x1C,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\99@1x.bmp\",0\n(53 X 23 )*/\n};\n\n```","source":"_posts/esp32-weather/esp32_weatherpicture_H.md","raw":"---\ntitle: 知心天气图标字模头文件\n---\n\n# 知心天气图标字模头文件\n<!-- more -->\n搞这个东西是真的难受\n![难顶](https://img1.baidu.com/it/u=2104894784,1188466874&fm=253&fmt=auto&app=138&f=JPEG?w=501&h=500)\n\n```\n/**\n * 说明：这个头文件存放天气图标的字模\n * \n */ \n\n#ifndef weatherpicture_H\n#define weatherpicture_H\n\n#endif\n\n#define sunny_x 51\n#define sunny_y 51\n// 晴 0\nstatic const unsigned char sunny[] = {\n0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,\n0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xFC,0xFF,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\0@1x.bmp\",0\n(51 X 51 )*/\n};\n\n#define clear_x 51 \n#define clear_y 52\n// 夜晚 1\nstatic const unsigned char clear[]{\n0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0xFE,0x0F,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x80,0xFF,0x0F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x07,0x00,0x00,0x00,0x00,0xE0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,\n0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,\n0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,\n0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,\n0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xFF,0xFF,0xFF,\n0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0x07,0xFF,0xFF,0xFF,0xFF,0x03,0xF0,0x07,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\1@1x.bmp\",0\n (51 X 52 )*/\n};\n\n#define cloudy_x 60\n#define cloudy_y 47\n// 多云 4\nstatic const unsigned char cloudy[] = {\n0x00,0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x7F,0x00,0x00,\n0x00,0x00,0xF8,0xF8,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x03,0x00,\n0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,\n0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFC,0x1F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFC,0x3F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,\n0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0x01,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0x00,0xFE,0x3F,0x00,0xF8,0xFF,0xFF,0x7F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\4@1x.bmp\",0\n(60 X 47 )*/\n};\n\n#define PartlyCloudy_x 60\n#define PartlyCloudy_y 44\n// 晴间多云 5、7\nstatic const unsigned char PartlyCloudy[] = {\n0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,\n0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xE0,0xCF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\5@1x.bmp\",0\n (60 X 44 )*/\n};\n\n#define MostlyCloudy_x 60\n#define MostlyCloudy_y 51\n// 阴间多云 6、8\nstatic const unsigned char MostlyCloudy[] = {\n0x00,0x00,0x00,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,\n0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,\n0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x03,0x00,0x00,\n0x00,0x00,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0x00,0x0E,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xE7,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\6@1x.bmp\",0\n(60 X 51 )*/\n};\n\n#define Overcast_x 60\n#define Overcast_y 40\n//  阴 9\nstatic const unsigned char Overcast[] = {\n0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x7F,0x00,0x00,\n0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x80,0x3F,0xFE,0xFF,0xFF,0x01,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,\n0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\9@1x.bmp\",0\n(60 X 40 )*/\n};\n\n#define Shower_x 60\n#define Shower_y 59\n// 阵雨 10\nstatic const unsigned char Shower[] = {\n0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,\n0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x03,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0x8F,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,\n0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,\n0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x3C,0x00,0x1E,0x00,0x00,0x00,0x78,0x00,0x3E,0x00,0x1F,0x00,0x00,\n0x00,0x7C,0x00,0x3E,0x00,0x1F,0x00,0x00,0x00,0x7C,0x00,0x3E,0x80,0x1F,0x00,0x00,0x00,0x7E,0x00,0x1F,0x80,0x0F,0x00,0x00,0x00,0x3E,0x00,0x1F,0x80,0x0F,0x00,0x00,\n0x00,0x3F,0x80,0x1F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xE0,0x07,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,\n0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x01,0x00,0x00,0x80,0x07,0xC0,0x03,0xE0,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\10@1x.bmp\",0\n(60 X 59 )*/\n};\n\n#define Thundershower_x 56\n#define Thundershower_y 56\n// 雷阵雨 11\nstatic const unsigned char Thundershower[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x08,0xC0,0xFF,0x00,0x18,0x00,0x00,0x3C,0xC0,0x7F,0x00,0x3C,0x00,0x00,\n0x3E,0xE0,0x7F,0x00,0x3C,0x00,0x00,0x3E,0xE0,0x3F,0x00,0x3E,0x00,0x00,0x1F,0xE0,0xFF,0x01,0x3E,0x00,0x00,0x1F,0xF0,0xFF,0x00,0x1F,0x00,0x00,0x1F,0xF0,0x7F,0x00,\n0x1F,0x00,0x80,0x0F,0xF8,0x3F,0x00,0x1F,0x00,0x80,0x0F,0x80,0x1F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x0F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x07,0xC0,0x07,0x00,0xC0,0x07,\n0xC0,0x03,0xC0,0x07,0x00,0xC0,0x03,0xE0,0x01,0x80,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,\n0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\11@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define ThundershowerWithHail_x 56\n#define ThundershowerWithHail_y 56\n// 雷阵雨伴有冰雹 12\nstatic const unsigned char ThundershowerWithHail[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x80,\n0x03,0xE0,0x7F,0x00,0x0E,0x00,0xE0,0x07,0xE0,0x3F,0x00,0x3F,0x00,0xE0,0x0F,0xE0,0xFF,0x81,0x3F,0x00,0xF0,0x0F,0xF0,0xFF,0x80,0x7F,0x00,0xF0,0x0F,0xF0,0x7F,0x80,\n0x7F,0x00,0xF0,0x0F,0xF8,0x3F,0x80,0x3F,0x00,0xE0,0x07,0x80,0x1F,0x00,0x3F,0x00,0xC0,0x03,0xC0,0x0F,0x00,0x1E,0x00,0x00,0x00,0xC0,0x07,0x00,0x00,0x00,0x00,0x00,\n0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,\n0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\12@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Rain_x 56\n#define Rain_y 54\n// 小雨、中雨、大于、暴雨、大暴雨、特大暴雨 13、14、15、16、17、18\nstatic const unsigned char Rain[] = {\n0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,\n0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,\n0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x18,0x00,0x06,0x00,0x03,0x00,0x00,0x1C,0x00,0x0E,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x80,0x0F,0xC0,\n0x03,0x00,0x00,0x0F,0x80,0x07,0xC0,0x03,0x00,0x00,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x80,0x0F,0xC0,0x03,0xE0,0x01,0x00,0x80,0x07,0xC0,0x03,0xF0,0x01,0x00,0xC0,0x07,\n0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0x70,0x00,0x00,0xC0,0x01,0xE0,0x00,0x70,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\13@1x.bmp\",0\n(56 X 54 )*/\n};\n\n#define IceRain_x 56\n#define IceRain_y 57\n// 冻雨 19\nstatic const unsigned char IceRain[] = {\n0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x18,0x00,0x04,0x00,0x00,\n0x70,0x00,0x3C,0x00,0x0E,0x00,0x00,0xF8,0x00,0x7E,0x00,0x1F,0x00,0x00,0xFC,0x01,0xFF,0x80,0x3F,0x00,0x00,0xFE,0x03,0xFF,0xC0,0x7F,0x00,0x00,0xFC,0x01,0x7E,0x80,\n0x3F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x1F,0x00,0x00,0x70,0x00,0x1C,0x00,0x0E,0x00,0x00,0x20,0x10,0x08,0x00,0x04,0x00,0x00,0x00,0x38,0x00,0x18,0x00,0x00,0x00,0x00,\n0x7C,0x00,0x3C,0x00,0x00,0x00,0x00,0xFE,0x00,0x7E,0x00,0x00,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFE,0x00,0xFF,0x00,0x00,0x00,0x00,0x7C,0x00,0x7E,0x00,\n0x00,0x00,0x00,0x38,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\19@1x.bmp\",0\n(56 X 57 )*/\n};\n\n#define Sleet_x 56\n#define Sleet_y 55\n// 雨夹雪 20\nstatic const unsigned char Sleet[] = {\n0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3B,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3F,0x00,0x00,0xF8,0x00,0x3E,0x80,\n0x3F,0x00,0x00,0x78,0x00,0x1E,0xC0,0x7F,0x00,0x00,0x7C,0x00,0x1F,0xE0,0xFF,0x00,0x00,0x3C,0x00,0x0F,0xF0,0xFF,0x01,0x00,0x3C,0x00,0x0F,0xE0,0xFF,0x00,0x00,0x3E,\n0x80,0x0F,0x80,0x3F,0x00,0x00,0x1E,0x80,0x07,0x80,0x3F,0x00,0x00,0x1F,0xC0,0x07,0x80,0x3B,0x00,0x00,0x0F,0xC0,0x03,0x80,0x33,0x00,0x00,0x06,0x80,0x01,0x00,0x00,\n0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\20@1x.bmp\",0\n(56 X 55 )*/\n};\n\n#define SnowFlurry_x 56\n#define SnowFlurry_y 56\n// 阵雪 21\nstatic const unsigned char SnowFlurry[] = {\n0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,\n0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x7F,0x00,\n0xC0,0xE0,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x3D,0xC0,0x3B,\n0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xE0,0x7F,0xE0,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,\n0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,\n0x00,0x00,0x80,0x19,0x80,0x19,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\21@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Snow_x 56\n#define Snow_y 53\n// 小雪、中雪、大雪、暴雪 22、23、24、25\nstatic const unsigned char Snow[] = {\n0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x80,0xFF,\n0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,\n0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0x00,0xC6,0x00,0x00,0x00,0x00,0xFF,0x00,0xEE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,\n0x00,0x00,0x00,0x80,0xFF,0x83,0xFF,0x03,0x00,0x00,0xC0,0xFF,0xC3,0xFF,0x07,0x00,0x00,0xC0,0xFF,0x83,0xFF,0x03,0x00,0x00,0x80,0xFF,0x01,0xFF,0x01,0x00,0x00,0x00,\n0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xEE,0x00,0xEE,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\22@1x.bmp\",0\n(56 X 53 )*/\n};\n\n#define Dust_x 53\n#define Dust_y 45\n// 浮尘、扬沙 26、27\nstatic const unsigned char Dust[] = {\n0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0x7C,0xC0,0x07,\n0x7C,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFF,0xE1,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xC0,0x07,0x7C,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xE0,0x0F,0xFC,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,\n0xFF,0xF1,0x1F,0x00,0x7E,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0xFF,0xE0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xE1,0x1F,0x00,0xFE,0xE0,0x0F,\n0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE0,0x1F,0x00,0xFF,\n0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xF1,0x1F,0x00,0xFE,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\26@1x.bmp\",0\n(53 X 45 )*/\n};\n\n#define Duststorm_x 58\n#define Duststorm_y 34\n// 沙尘暴、强沙尘暴 28、29\nstatic const unsigned char Duststorm[] = {\n0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x38,0x1C,0x0E,0x87,0xFF,0x03,0x00,0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x07,0x00,0x00,0x7C,0x3E,0x9F,0x8F,0xFF,0x07,0x00,\n0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x0F,0x00,0x00,0x38,0x1C,0x0E,0x87,0x87,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,\n0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x0F,0x00,0x8F,0x87,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,\n0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x8F,0xC7,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x06,0x83,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x78,0x3C,0xFE,0xFF,0xFF,0x3F,0x00,\n0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x00,0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x01,0xF8,0x78,0x3C,0xFE,0xFF,0xFF,0xFF,0x03,0x60,0x30,0x18,0xFC,0xFF,0xFF,0xFF,0x03,\n0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x03,\n0x00,0x1C,0x0E,0x87,0xC7,0xE3,0xF3,0x03,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x03,0x00,0x3E,0x9F,0xCF,0xC7,0xE7,0xFF,0x01,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x01,\n0x00,0x1C,0x0E,0x87,0x83,0xC1,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\28@1x.bmp\",0\n(58 X 34 )*/\n};\n\n#define Foggy_x 54\n#define Foggy_y 50\n// 雾 30\nstatic const unsigned char Foggy[] = {\n0x00,0xE0,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFE,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,\n0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,\n0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\30@1x.bmp\",0\n(54 X 50 )*/\n};\n\n#define Haze_x 56\n#define Haze_y 50\n// 霾 31\nstatic const unsigned char Haze[] = {\n0x7C,0x00,0x00,0x3E,0x00,0x00,0x78,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,\n0x00,0x00,0x7C,0x10,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0xC0,0x7F,0x00,0xC0,0xFF,0x0F,0x00,0xF0,\n0xFF,0x01,0xF0,0xFF,0x3F,0x00,0xFC,0xFF,0x07,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xFC,0xFF,0xFF,0x80,0xFF,0xFF,0x1F,0xFC,0x87,0xFF,0x81,0xFF,0xF1,0x3F,0xFE,0x01,\n0xFC,0xC3,0x3F,0x80,0x3F,0x7E,0x00,0xF8,0xE7,0x0F,0x00,0x7F,0x3F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x3F,0x00,0xE0,0xFF,0x03,0x00,0xFE,0x3F,0x00,0xC0,0xFF,0x03,0x00,\n0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x00,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,\n0xFF,0x01,0x00,0xFC,0x3F,0x00,0xC0,0xFF,0x03,0x00,0xFC,0x3F,0x00,0xE0,0xFF,0x07,0x00,0xFE,0x7F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x7E,0x00,0xF8,0xE3,0x1F,0x00,0x7F,\n0xFE,0x01,0xFC,0xC3,0x3F,0xC0,0x3F,0xFC,0x8F,0xFF,0x81,0xFF,0xFB,0x3F,0xF8,0xFF,0xFF,0x00,0xFF,0xFF,0x1F,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xE0,0xFF,0x3F,0x00,\n0xFC,0xFF,0x07,0xC0,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFE,0x01,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3C,0x00,0x00,0x78,0x7C,0x00,0x00,0x3E,0x00,\n0x00,0x7C,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0x7C,0x38,0x00,0x00,0x1C,0x00,0x00,0x38,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\31@1x.bmp\",0\n(56 X 50 )*/\n};\n\n#define Windy_x 56\n#define Windy_y 44\n// 风、大风 32、33\nstatic const unsigned char Windy[] = {\n0x00,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFD,0x01,0x00,0x00,0x00,0x00,0x7C,0xF0,\n0x01,0xFC,0x03,0x00,0x00,0x3C,0xE0,0x03,0xFF,0x0F,0x00,0x00,0x3C,0xC0,0x83,0xFF,0x1F,0x00,0x00,0x00,0xC0,0xC3,0x9F,0x3F,0x00,0x00,0x00,0xC0,0xE3,0x07,0x7E,0x00,\n0x00,0x00,0xE0,0xE3,0x03,0x7C,0x00,0x00,0x00,0xF0,0xF1,0x01,0xF8,0x00,0x00,0x00,0xF8,0xF1,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0xF0,\n0x00,0xF0,0xFF,0xFF,0xFF,0x3F,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0x03,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,\n0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,\n0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,\n0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x07,0x3E,0x00,0x00,0x00,0x00,0x80,0x0F,0x1F,0x00,0x00,0x00,0x00,0x80,0xFF,0x1F,0x00,\n0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\32@1x.bmp\",0\n(56 X 44 )*/\n};\n\n#define Hurricane_x 56\n#define Hurricane_y 56\n// 飓风、热带风暴 34、35\nstatic const unsigned char Hurricane[] = {\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,\n0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,\n0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,\n0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,\n0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\34@1x.bmp\",0\n(56 X 56 )*/\n};\n\n#define Tornado_x 56\n#define Tornado_y 55\n// 龙卷风 36\nstatic const unsigned char Tornado[] = {\n0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0x03,0x00,\n0xC0,0xFF,0x07,0xF8,0x3F,0x00,0x00,0x00,0xFC,0x0F,0xFC,0x07,0x00,0x00,0x00,0xE0,0x1F,0xFE,0x00,0x80,0xFF,0x01,0x80,0x3F,0x7F,0x00,0xFE,0xFF,0x7F,0x00,0x7E,0x1F,\n0xC0,0xFF,0xFF,0xFF,0x03,0x7C,0x0F,0xF0,0xFF,0xFF,0xFF,0x0F,0xF8,0x0F,0xFC,0x3F,0x00,0xFC,0x1F,0xF0,0x0F,0xFE,0x01,0x00,0x80,0x3F,0xF8,0x1F,0x3E,0x00,0x00,0x00,\n0x7E,0x78,0x7F,0x1E,0x00,0x00,0x00,0x78,0x7E,0xFE,0x1F,0x00,0x00,0x00,0xF8,0x3F,0xFC,0x3F,0x00,0x00,0x00,0xFE,0x1F,0xF8,0xFF,0x01,0x00,0xC0,0xFF,0x0F,0xE0,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0x20,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0x00,0xFE,0xFF,0x3F,0x00,\n0x07,0xF0,0x03,0x00,0x00,0x00,0xC0,0x0F,0xF0,0x0F,0x00,0x00,0x00,0xF0,0x0F,0xE0,0x7F,0x00,0x00,0x00,0xFE,0x07,0x80,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x80,0x07,0x00,0x00,0xF0,0x07,0x00,0xF0,0x07,0x00,0x00,0xE0,0xFF,0x81,0xFF,0x07,0x00,0x00,0xC0,0xFF,0xFF,\n0xFF,0x03,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFF,0x1F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\n0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xC0,0xC7,0x07,\n0x00,0x00,0x00,0x00,0xC0,0xE7,0x07,0x00,0x00,0x00,0x00,0x80,0xEF,0x03,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,\n0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,\n0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\36@1x.bmp\",0\n(56 X 55 )*/\n};\n\n#define Cold_x 51\n#define Cold_y 58\n// 冷 37\nstatic const unsigned char Cold[] = {\n0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,\n0x00,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x8F,0xC7,0x07,0x00,0x00,0x00,0x04,0x9F,0xE7,0x07,0x01,0x00,0x00,\n0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x1E,0xF0,0x3F,0xC0,0x01,0x00,0x03,0x1E,0xE0,0x1F,0xE0,\n0x01,0x03,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x3F,0x1C,0x80,0x07,0xE0,0xF1,0x07,0xFF,0x3C,0x80,0x07,0xE0,0xF8,0x03,0xFC,0x3D,0x80,0x07,0xF0,0xFE,0x01,0xF8,0x3F,\n0x80,0x07,0xF0,0x7F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0x80,0x7F,0x80,0x07,0xF0,0x07,0x00,0x00,0xFF,0x80,0x07,0xFC,0x03,0x00,0xE0,0xFF,0x83,0x07,0xFF,0x3F,\n0x00,0xFC,0xFF,0x8F,0x87,0xFF,0xFF,0x01,0xFF,0xC7,0x9F,0xE7,0x9F,0xFF,0x03,0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,0x00,0x00,0xF8,\n0x7F,0x00,0x00,0x00,0x00,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,\n0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0xFF,0xE7,0x9F,0xE7,0x9F,0xFF,0x03,0xFC,0xFF,0x87,0x87,0xFF,0xFF,0x01,0xE0,0xFF,0x83,0x07,0xFE,0x3F,0x00,0x00,0xFF,0x80,0x07,\n0xFC,0x03,0x00,0x80,0x7F,0x80,0x07,0xF0,0x0F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0xF8,0x3F,0x80,0x07,0xF0,0x7F,0x00,0xFE,0x3D,0x80,0x07,0xF0,0xFE,0x01,0x7F,\n0x3C,0x80,0x07,0xE0,0xF8,0x03,0x3F,0x1C,0x80,0x07,0xE0,0xE1,0x07,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x02,0x1E,0xE0,0x1F,0xE0,0x01,0x03,0x00,0x1E,0xF0,0x3F,0xC0,\n0x01,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x04,0x9F,0xE7,0x87,0x01,0x00,0x00,0x80,\n0x8F,0xC7,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,\n0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\37@1x.bmp\",0\n(51 X 58 )*/\n};\n\n#define Hot_x 51\n#define Hot_y 51\n// 热 38\nstatic const unsigned char Hot[] = {\n0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,\n0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,\n0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,\n0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,\n0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,\n0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,\n0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,\n0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,\n0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,\n0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,\n0xFC,0xFF,0x01,0x00,0x00,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\38@1x.bmp\",0\n(51 X 51 )*/\n};\n\n#define Unknown_x 53\n#define Unknown_y 23\n// 未知 99\nstatic const unsigned char Unknown[] = {\n0x07,0x80,0x03,0xE0,0x00,0x0E,0x00,0x0F,0x80,0x03,0xE0,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x3F,0x80,0x03,0x78,\n0x80,0x3F,0x00,0x7F,0x80,0x03,0x38,0x80,0x3B,0x00,0x77,0x80,0x03,0x38,0xC0,0x7B,0x00,0xF7,0x80,0x03,0x1C,0xC0,0x71,0x00,0xE7,0x81,0x03,0x1C,0xE0,0x71,0x00,0xC7,\n0x81,0x03,0x1E,0xE0,0xF0,0x00,0xC7,0x83,0x03,0x0E,0xE0,0xE0,0x00,0x87,0x87,0x03,0x0E,0xF0,0xE0,0x01,0x07,0x87,0x03,0x07,0x70,0xC0,0x01,0x07,0x8F,0x03,0x07,0x78,\n0xC0,0x03,0x07,0x9E,0x83,0x03,0xF8,0xFF,0x03,0x07,0xBC,0x83,0x03,0xFC,0xFF,0x03,0x07,0xBC,0xC3,0x03,0xFC,0xFF,0x07,0x07,0xF8,0xC3,0x01,0x1C,0x00,0x07,0x07,0xF0,\n0xC3,0x01,0x1E,0x00,0x0F,0x07,0xF0,0xE3,0x00,0x0E,0x00,0x0E,0x07,0xE0,0xE3,0x00,0x0F,0x00,0x1E,0x07,0xC0,0xF3,0x00,0x07,0x00,0x1E,0x07,0xC0,0x73,0x00,0x07,0x00,\n0x1C,\n/*\"E:\\知心天气天气图标\\天气图标单色图\\99@1x.bmp\",0\n(53 X 23 )*/\n};\n\n```","slug":"esp32-weather/esp32_weatherpicture_H","published":1,"date":"2022-05-25T10:06:34.352Z","updated":"2022-03-30T01:50:53.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeos000k68ur7wq0bgjg","content":"<h1 id=\"知心天气图标字模头文件\"><a href=\"#知心天气图标字模头文件\" class=\"headerlink\" title=\"知心天气图标字模头文件\"></a>知心天气图标字模头文件</h1><span id=\"more\"></span>\n<p>搞这个东西是真的难受<br><img src=\"https://img1.baidu.com/it/u=2104894784,1188466874&fm=253&fmt=auto&app=138&f=JPEG?w=501&h=500\" alt=\"难顶\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 说明：这个头文件存放天气图标的字模</span><br><span class=\"line\"> * </span><br><span class=\"line\"> */ </span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef weatherpicture_H</span><br><span class=\"line\">#define weatherpicture_H</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">#define sunny_x 51</span><br><span class=\"line\">#define sunny_y 51</span><br><span class=\"line\">// 晴 0</span><br><span class=\"line\">static const unsigned char sunny[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\0@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define clear_x 51 </span><br><span class=\"line\">#define clear_y 52</span><br><span class=\"line\">// 夜晚 1</span><br><span class=\"line\">static const unsigned char clear[]&#123;</span><br><span class=\"line\">0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0xFE,0x0F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x80,0xFF,0x0F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x07,0x00,0x00,0x00,0x00,0xE0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,</span><br><span class=\"line\">0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,</span><br><span class=\"line\">0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0x07,0xFF,0xFF,0xFF,0xFF,0x03,0xF0,0x07,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\1@1x.bmp&quot;,0</span><br><span class=\"line\"> (51 X 52 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define cloudy_x 60</span><br><span class=\"line\">#define cloudy_y 47</span><br><span class=\"line\">// 多云 4</span><br><span class=\"line\">static const unsigned char cloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xF8,0xF8,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x03,0x00,</span><br><span class=\"line\">0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,</span><br><span class=\"line\">0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFC,0x1F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFC,0x3F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0x01,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0x00,0xFE,0x3F,0x00,0xF8,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\4@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 47 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define PartlyCloudy_x 60</span><br><span class=\"line\">#define PartlyCloudy_y 44</span><br><span class=\"line\">// 晴间多云 5、7</span><br><span class=\"line\">static const unsigned char PartlyCloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xE0,0xCF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\5@1x.bmp&quot;,0</span><br><span class=\"line\"> (60 X 44 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define MostlyCloudy_x 60</span><br><span class=\"line\">#define MostlyCloudy_y 51</span><br><span class=\"line\">// 阴间多云 6、8</span><br><span class=\"line\">static const unsigned char MostlyCloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x03,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0x00,0x0E,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xE7,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\6@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Overcast_x 60</span><br><span class=\"line\">#define Overcast_y 40</span><br><span class=\"line\">//  阴 9</span><br><span class=\"line\">static const unsigned char Overcast[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x80,0x3F,0xFE,0xFF,0xFF,0x01,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\9@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 40 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Shower_x 60</span><br><span class=\"line\">#define Shower_y 59</span><br><span class=\"line\">// 阵雨 10</span><br><span class=\"line\">static const unsigned char Shower[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x03,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0x8F,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x3C,0x00,0x1E,0x00,0x00,0x00,0x78,0x00,0x3E,0x00,0x1F,0x00,0x00,</span><br><span class=\"line\">0x00,0x7C,0x00,0x3E,0x00,0x1F,0x00,0x00,0x00,0x7C,0x00,0x3E,0x80,0x1F,0x00,0x00,0x00,0x7E,0x00,0x1F,0x80,0x0F,0x00,0x00,0x00,0x3E,0x00,0x1F,0x80,0x0F,0x00,0x00,</span><br><span class=\"line\">0x00,0x3F,0x80,0x1F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xE0,0x07,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,</span><br><span class=\"line\">0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x01,0x00,0x00,0x80,0x07,0xC0,0x03,0xE0,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\10@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 59 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Thundershower_x 56</span><br><span class=\"line\">#define Thundershower_y 56</span><br><span class=\"line\">// 雷阵雨 11</span><br><span class=\"line\">static const unsigned char Thundershower[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x08,0xC0,0xFF,0x00,0x18,0x00,0x00,0x3C,0xC0,0x7F,0x00,0x3C,0x00,0x00,</span><br><span class=\"line\">0x3E,0xE0,0x7F,0x00,0x3C,0x00,0x00,0x3E,0xE0,0x3F,0x00,0x3E,0x00,0x00,0x1F,0xE0,0xFF,0x01,0x3E,0x00,0x00,0x1F,0xF0,0xFF,0x00,0x1F,0x00,0x00,0x1F,0xF0,0x7F,0x00,</span><br><span class=\"line\">0x1F,0x00,0x80,0x0F,0xF8,0x3F,0x00,0x1F,0x00,0x80,0x0F,0x80,0x1F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x0F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x07,0xC0,0x07,0x00,0xC0,0x07,</span><br><span class=\"line\">0xC0,0x03,0xC0,0x07,0x00,0xC0,0x03,0xE0,0x01,0x80,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\11@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define ThundershowerWithHail_x 56</span><br><span class=\"line\">#define ThundershowerWithHail_y 56</span><br><span class=\"line\">// 雷阵雨伴有冰雹 12</span><br><span class=\"line\">static const unsigned char ThundershowerWithHail[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x80,</span><br><span class=\"line\">0x03,0xE0,0x7F,0x00,0x0E,0x00,0xE0,0x07,0xE0,0x3F,0x00,0x3F,0x00,0xE0,0x0F,0xE0,0xFF,0x81,0x3F,0x00,0xF0,0x0F,0xF0,0xFF,0x80,0x7F,0x00,0xF0,0x0F,0xF0,0x7F,0x80,</span><br><span class=\"line\">0x7F,0x00,0xF0,0x0F,0xF8,0x3F,0x80,0x3F,0x00,0xE0,0x07,0x80,0x1F,0x00,0x3F,0x00,0xC0,0x03,0xC0,0x0F,0x00,0x1E,0x00,0x00,0x00,0xC0,0x07,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\12@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Rain_x 56</span><br><span class=\"line\">#define Rain_y 54</span><br><span class=\"line\">// 小雨、中雨、大于、暴雨、大暴雨、特大暴雨 13、14、15、16、17、18</span><br><span class=\"line\">static const unsigned char Rain[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x18,0x00,0x06,0x00,0x03,0x00,0x00,0x1C,0x00,0x0E,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x80,0x0F,0xC0,</span><br><span class=\"line\">0x03,0x00,0x00,0x0F,0x80,0x07,0xC0,0x03,0x00,0x00,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x80,0x0F,0xC0,0x03,0xE0,0x01,0x00,0x80,0x07,0xC0,0x03,0xF0,0x01,0x00,0xC0,0x07,</span><br><span class=\"line\">0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0x70,0x00,0x00,0xC0,0x01,0xE0,0x00,0x70,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\13@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 54 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define IceRain_x 56</span><br><span class=\"line\">#define IceRain_y 57</span><br><span class=\"line\">// 冻雨 19</span><br><span class=\"line\">static const unsigned char IceRain[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x18,0x00,0x04,0x00,0x00,</span><br><span class=\"line\">0x70,0x00,0x3C,0x00,0x0E,0x00,0x00,0xF8,0x00,0x7E,0x00,0x1F,0x00,0x00,0xFC,0x01,0xFF,0x80,0x3F,0x00,0x00,0xFE,0x03,0xFF,0xC0,0x7F,0x00,0x00,0xFC,0x01,0x7E,0x80,</span><br><span class=\"line\">0x3F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x1F,0x00,0x00,0x70,0x00,0x1C,0x00,0x0E,0x00,0x00,0x20,0x10,0x08,0x00,0x04,0x00,0x00,0x00,0x38,0x00,0x18,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x7C,0x00,0x3C,0x00,0x00,0x00,0x00,0xFE,0x00,0x7E,0x00,0x00,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFE,0x00,0xFF,0x00,0x00,0x00,0x00,0x7C,0x00,0x7E,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x38,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\19@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 57 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Sleet_x 56</span><br><span class=\"line\">#define Sleet_y 55</span><br><span class=\"line\">// 雨夹雪 20</span><br><span class=\"line\">static const unsigned char Sleet[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3B,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3F,0x00,0x00,0xF8,0x00,0x3E,0x80,</span><br><span class=\"line\">0x3F,0x00,0x00,0x78,0x00,0x1E,0xC0,0x7F,0x00,0x00,0x7C,0x00,0x1F,0xE0,0xFF,0x00,0x00,0x3C,0x00,0x0F,0xF0,0xFF,0x01,0x00,0x3C,0x00,0x0F,0xE0,0xFF,0x00,0x00,0x3E,</span><br><span class=\"line\">0x80,0x0F,0x80,0x3F,0x00,0x00,0x1E,0x80,0x07,0x80,0x3F,0x00,0x00,0x1F,0xC0,0x07,0x80,0x3B,0x00,0x00,0x0F,0xC0,0x03,0x80,0x33,0x00,0x00,0x06,0x80,0x01,0x00,0x00,</span><br><span class=\"line\">0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\20@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 55 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define SnowFlurry_x 56</span><br><span class=\"line\">#define SnowFlurry_y 56</span><br><span class=\"line\">// 阵雪 21</span><br><span class=\"line\">static const unsigned char SnowFlurry[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,</span><br><span class=\"line\">0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xC0,0xE0,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x3D,0xC0,0x3B,</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xE0,0x7F,0xE0,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,</span><br><span class=\"line\">0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,</span><br><span class=\"line\">0x00,0x00,0x80,0x19,0x80,0x19,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\21@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Snow_x 56</span><br><span class=\"line\">#define Snow_y 53</span><br><span class=\"line\">// 小雪、中雪、大雪、暴雪 22、23、24、25</span><br><span class=\"line\">static const unsigned char Snow[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x80,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0x00,0xC6,0x00,0x00,0x00,0x00,0xFF,0x00,0xEE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0xFF,0x83,0xFF,0x03,0x00,0x00,0xC0,0xFF,0xC3,0xFF,0x07,0x00,0x00,0xC0,0xFF,0x83,0xFF,0x03,0x00,0x00,0x80,0xFF,0x01,0xFF,0x01,0x00,0x00,0x00,</span><br><span class=\"line\">0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xEE,0x00,0xEE,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\22@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 53 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Dust_x 53</span><br><span class=\"line\">#define Dust_y 45</span><br><span class=\"line\">// 浮尘、扬沙 26、27</span><br><span class=\"line\">static const unsigned char Dust[] = &#123;</span><br><span class=\"line\">0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0x7C,0xC0,0x07,</span><br><span class=\"line\">0x7C,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFF,0xE1,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xC0,0x07,0x7C,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xE0,0x0F,0xFC,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,</span><br><span class=\"line\">0xFF,0xF1,0x1F,0x00,0x7E,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFF,0xE0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xE1,0x1F,0x00,0xFE,0xE0,0x0F,</span><br><span class=\"line\">0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE0,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xF1,0x1F,0x00,0xFE,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\26@1x.bmp&quot;,0</span><br><span class=\"line\">(53 X 45 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Duststorm_x 58</span><br><span class=\"line\">#define Duststorm_y 34</span><br><span class=\"line\">// 沙尘暴、强沙尘暴 28、29</span><br><span class=\"line\">static const unsigned char Duststorm[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x38,0x1C,0x0E,0x87,0xFF,0x03,0x00,0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x07,0x00,0x00,0x7C,0x3E,0x9F,0x8F,0xFF,0x07,0x00,</span><br><span class=\"line\">0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x0F,0x00,0x00,0x38,0x1C,0x0E,0x87,0x87,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x0F,0x00,0x8F,0x87,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x8F,0xC7,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x06,0x83,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x78,0x3C,0xFE,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x00,0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x01,0xF8,0x78,0x3C,0xFE,0xFF,0xFF,0xFF,0x03,0x60,0x30,0x18,0xFC,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x03,</span><br><span class=\"line\">0x00,0x1C,0x0E,0x87,0xC7,0xE3,0xF3,0x03,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x03,0x00,0x3E,0x9F,0xCF,0xC7,0xE7,0xFF,0x01,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x01,</span><br><span class=\"line\">0x00,0x1C,0x0E,0x87,0x83,0xC1,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\28@1x.bmp&quot;,0</span><br><span class=\"line\">(58 X 34 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Foggy_x 54</span><br><span class=\"line\">#define Foggy_y 50</span><br><span class=\"line\">// 雾 30</span><br><span class=\"line\">static const unsigned char Foggy[] = &#123;</span><br><span class=\"line\">0x00,0xE0,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFE,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\30@1x.bmp&quot;,0</span><br><span class=\"line\">(54 X 50 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Haze_x 56</span><br><span class=\"line\">#define Haze_y 50</span><br><span class=\"line\">// 霾 31</span><br><span class=\"line\">static const unsigned char Haze[] = &#123;</span><br><span class=\"line\">0x7C,0x00,0x00,0x3E,0x00,0x00,0x78,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,</span><br><span class=\"line\">0x00,0x00,0x7C,0x10,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0xC0,0x7F,0x00,0xC0,0xFF,0x0F,0x00,0xF0,</span><br><span class=\"line\">0xFF,0x01,0xF0,0xFF,0x3F,0x00,0xFC,0xFF,0x07,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xFC,0xFF,0xFF,0x80,0xFF,0xFF,0x1F,0xFC,0x87,0xFF,0x81,0xFF,0xF1,0x3F,0xFE,0x01,</span><br><span class=\"line\">0xFC,0xC3,0x3F,0x80,0x3F,0x7E,0x00,0xF8,0xE7,0x0F,0x00,0x7F,0x3F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x3F,0x00,0xE0,0xFF,0x03,0x00,0xFE,0x3F,0x00,0xC0,0xFF,0x03,0x00,</span><br><span class=\"line\">0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x00,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,</span><br><span class=\"line\">0xFF,0x01,0x00,0xFC,0x3F,0x00,0xC0,0xFF,0x03,0x00,0xFC,0x3F,0x00,0xE0,0xFF,0x07,0x00,0xFE,0x7F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x7E,0x00,0xF8,0xE3,0x1F,0x00,0x7F,</span><br><span class=\"line\">0xFE,0x01,0xFC,0xC3,0x3F,0xC0,0x3F,0xFC,0x8F,0xFF,0x81,0xFF,0xFB,0x3F,0xF8,0xFF,0xFF,0x00,0xFF,0xFF,0x1F,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xE0,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x07,0xC0,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFE,0x01,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3C,0x00,0x00,0x78,0x7C,0x00,0x00,0x3E,0x00,</span><br><span class=\"line\">0x00,0x7C,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0x7C,0x38,0x00,0x00,0x1C,0x00,0x00,0x38,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\31@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 50 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Windy_x 56</span><br><span class=\"line\">#define Windy_y 44</span><br><span class=\"line\">// 风、大风 32、33</span><br><span class=\"line\">static const unsigned char Windy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFD,0x01,0x00,0x00,0x00,0x00,0x7C,0xF0,</span><br><span class=\"line\">0x01,0xFC,0x03,0x00,0x00,0x3C,0xE0,0x03,0xFF,0x0F,0x00,0x00,0x3C,0xC0,0x83,0xFF,0x1F,0x00,0x00,0x00,0xC0,0xC3,0x9F,0x3F,0x00,0x00,0x00,0xC0,0xE3,0x07,0x7E,0x00,</span><br><span class=\"line\">0x00,0x00,0xE0,0xE3,0x03,0x7C,0x00,0x00,0x00,0xF0,0xF1,0x01,0xF8,0x00,0x00,0x00,0xF8,0xF1,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0xF0,</span><br><span class=\"line\">0x00,0xF0,0xFF,0xFF,0xFF,0x3F,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0x03,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x07,0x3E,0x00,0x00,0x00,0x00,0x80,0x0F,0x1F,0x00,0x00,0x00,0x00,0x80,0xFF,0x1F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\32@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 44 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Hurricane_x 56</span><br><span class=\"line\">#define Hurricane_y 56</span><br><span class=\"line\">// 飓风、热带风暴 34、35</span><br><span class=\"line\">static const unsigned char Hurricane[] = &#123;</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\34@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Tornado_x 56</span><br><span class=\"line\">#define Tornado_y 55</span><br><span class=\"line\">// 龙卷风 36</span><br><span class=\"line\">static const unsigned char Tornado[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0x03,0x00,</span><br><span class=\"line\">0xC0,0xFF,0x07,0xF8,0x3F,0x00,0x00,0x00,0xFC,0x0F,0xFC,0x07,0x00,0x00,0x00,0xE0,0x1F,0xFE,0x00,0x80,0xFF,0x01,0x80,0x3F,0x7F,0x00,0xFE,0xFF,0x7F,0x00,0x7E,0x1F,</span><br><span class=\"line\">0xC0,0xFF,0xFF,0xFF,0x03,0x7C,0x0F,0xF0,0xFF,0xFF,0xFF,0x0F,0xF8,0x0F,0xFC,0x3F,0x00,0xFC,0x1F,0xF0,0x0F,0xFE,0x01,0x00,0x80,0x3F,0xF8,0x1F,0x3E,0x00,0x00,0x00,</span><br><span class=\"line\">0x7E,0x78,0x7F,0x1E,0x00,0x00,0x00,0x78,0x7E,0xFE,0x1F,0x00,0x00,0x00,0xF8,0x3F,0xFC,0x3F,0x00,0x00,0x00,0xFE,0x1F,0xF8,0xFF,0x01,0x00,0xC0,0xFF,0x0F,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0x20,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0x00,0xFE,0xFF,0x3F,0x00,</span><br><span class=\"line\">0x07,0xF0,0x03,0x00,0x00,0x00,0xC0,0x0F,0xF0,0x0F,0x00,0x00,0x00,0xF0,0x0F,0xE0,0x7F,0x00,0x00,0x00,0xFE,0x07,0x80,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x80,0x07,0x00,0x00,0xF0,0x07,0x00,0xF0,0x07,0x00,0x00,0xE0,0xFF,0x81,0xFF,0x07,0x00,0x00,0xC0,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x03,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFF,0x1F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xC0,0xC7,0x07,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xC0,0xE7,0x07,0x00,0x00,0x00,0x00,0x80,0xEF,0x03,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,</span><br><span class=\"line\">0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\36@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 55 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Cold_x 51</span><br><span class=\"line\">#define Cold_y 58</span><br><span class=\"line\">// 冷 37</span><br><span class=\"line\">static const unsigned char Cold[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x8F,0xC7,0x07,0x00,0x00,0x00,0x04,0x9F,0xE7,0x07,0x01,0x00,0x00,</span><br><span class=\"line\">0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x1E,0xF0,0x3F,0xC0,0x01,0x00,0x03,0x1E,0xE0,0x1F,0xE0,</span><br><span class=\"line\">0x01,0x03,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x3F,0x1C,0x80,0x07,0xE0,0xF1,0x07,0xFF,0x3C,0x80,0x07,0xE0,0xF8,0x03,0xFC,0x3D,0x80,0x07,0xF0,0xFE,0x01,0xF8,0x3F,</span><br><span class=\"line\">0x80,0x07,0xF0,0x7F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0x80,0x7F,0x80,0x07,0xF0,0x07,0x00,0x00,0xFF,0x80,0x07,0xFC,0x03,0x00,0xE0,0xFF,0x83,0x07,0xFF,0x3F,</span><br><span class=\"line\">0x00,0xFC,0xFF,0x8F,0x87,0xFF,0xFF,0x01,0xFF,0xC7,0x9F,0xE7,0x9F,0xFF,0x03,0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,0x00,0x00,0xF8,</span><br><span class=\"line\">0x7F,0x00,0x00,0x00,0x00,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,</span><br><span class=\"line\">0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0xFF,0xE7,0x9F,0xE7,0x9F,0xFF,0x03,0xFC,0xFF,0x87,0x87,0xFF,0xFF,0x01,0xE0,0xFF,0x83,0x07,0xFE,0x3F,0x00,0x00,0xFF,0x80,0x07,</span><br><span class=\"line\">0xFC,0x03,0x00,0x80,0x7F,0x80,0x07,0xF0,0x0F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0xF8,0x3F,0x80,0x07,0xF0,0x7F,0x00,0xFE,0x3D,0x80,0x07,0xF0,0xFE,0x01,0x7F,</span><br><span class=\"line\">0x3C,0x80,0x07,0xE0,0xF8,0x03,0x3F,0x1C,0x80,0x07,0xE0,0xE1,0x07,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x02,0x1E,0xE0,0x1F,0xE0,0x01,0x03,0x00,0x1E,0xF0,0x3F,0xC0,</span><br><span class=\"line\">0x01,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x04,0x9F,0xE7,0x87,0x01,0x00,0x00,0x80,</span><br><span class=\"line\">0x8F,0xC7,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\37@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 58 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Hot_x 51</span><br><span class=\"line\">#define Hot_y 51</span><br><span class=\"line\">// 热 38</span><br><span class=\"line\">static const unsigned char Hot[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\38@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Unknown_x 53</span><br><span class=\"line\">#define Unknown_y 23</span><br><span class=\"line\">// 未知 99</span><br><span class=\"line\">static const unsigned char Unknown[] = &#123;</span><br><span class=\"line\">0x07,0x80,0x03,0xE0,0x00,0x0E,0x00,0x0F,0x80,0x03,0xE0,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x3F,0x80,0x03,0x78,</span><br><span class=\"line\">0x80,0x3F,0x00,0x7F,0x80,0x03,0x38,0x80,0x3B,0x00,0x77,0x80,0x03,0x38,0xC0,0x7B,0x00,0xF7,0x80,0x03,0x1C,0xC0,0x71,0x00,0xE7,0x81,0x03,0x1C,0xE0,0x71,0x00,0xC7,</span><br><span class=\"line\">0x81,0x03,0x1E,0xE0,0xF0,0x00,0xC7,0x83,0x03,0x0E,0xE0,0xE0,0x00,0x87,0x87,0x03,0x0E,0xF0,0xE0,0x01,0x07,0x87,0x03,0x07,0x70,0xC0,0x01,0x07,0x8F,0x03,0x07,0x78,</span><br><span class=\"line\">0xC0,0x03,0x07,0x9E,0x83,0x03,0xF8,0xFF,0x03,0x07,0xBC,0x83,0x03,0xFC,0xFF,0x03,0x07,0xBC,0xC3,0x03,0xFC,0xFF,0x07,0x07,0xF8,0xC3,0x01,0x1C,0x00,0x07,0x07,0xF0,</span><br><span class=\"line\">0xC3,0x01,0x1E,0x00,0x0F,0x07,0xF0,0xE3,0x00,0x0E,0x00,0x0E,0x07,0xE0,0xE3,0x00,0x0F,0x00,0x1E,0x07,0xC0,0xF3,0x00,0x07,0x00,0x1E,0x07,0xC0,0x73,0x00,0x07,0x00,</span><br><span class=\"line\">0x1C,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\99@1x.bmp&quot;,0</span><br><span class=\"line\">(53 X 23 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"知心天气图标字模头文件\"><a href=\"#知心天气图标字模头文件\" class=\"headerlink\" title=\"知心天气图标字模头文件\"></a>知心天气图标字模头文件</h1>","more":"<p>搞这个东西是真的难受<br><img src=\"https://img1.baidu.com/it/u=2104894784,1188466874&fm=253&fmt=auto&app=138&f=JPEG?w=501&h=500\" alt=\"难顶\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 说明：这个头文件存放天气图标的字模</span><br><span class=\"line\"> * </span><br><span class=\"line\"> */ </span><br><span class=\"line\"></span><br><span class=\"line\">#ifndef weatherpicture_H</span><br><span class=\"line\">#define weatherpicture_H</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br><span class=\"line\"></span><br><span class=\"line\">#define sunny_x 51</span><br><span class=\"line\">#define sunny_y 51</span><br><span class=\"line\">// 晴 0</span><br><span class=\"line\">static const unsigned char sunny[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\0@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define clear_x 51 </span><br><span class=\"line\">#define clear_y 52</span><br><span class=\"line\">// 夜晚 1</span><br><span class=\"line\">static const unsigned char clear[]&#123;</span><br><span class=\"line\">0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0x1F,0x00,0x00,0x00,0x00,0x00,0xF8,0x1F,0x00,0x00,0x00,0x00,0x00,0xFE,0x0F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x80,0xFF,0x0F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x07,0x00,0x00,0x00,0x00,0xE0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,</span><br><span class=\"line\">0xFF,0x07,0x00,0x00,0x00,0x00,0xF0,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xF8,0xFF,0x07,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFE,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,</span><br><span class=\"line\">0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x3F,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0x07,0xFF,0xFF,0xFF,0xFF,0x03,0xF0,0x07,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x06,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\1@1x.bmp&quot;,0</span><br><span class=\"line\"> (51 X 52 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define cloudy_x 60</span><br><span class=\"line\">#define cloudy_y 47</span><br><span class=\"line\">// 多云 4</span><br><span class=\"line\">static const unsigned char cloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xF8,0xF8,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x03,0x00,</span><br><span class=\"line\">0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,</span><br><span class=\"line\">0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFC,0x1F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFC,0x3F,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x80,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0x01,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0x00,0xFE,0x3F,0x00,0xF8,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\4@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 47 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define PartlyCloudy_x 60</span><br><span class=\"line\">#define PartlyCloudy_y 44</span><br><span class=\"line\">// 晴间多云 5、7</span><br><span class=\"line\">static const unsigned char PartlyCloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xE0,0xCF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\5@1x.bmp&quot;,0</span><br><span class=\"line\"> (60 X 44 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define MostlyCloudy_x 60</span><br><span class=\"line\">#define MostlyCloudy_y 51</span><br><span class=\"line\">// 阴间多云 6、8</span><br><span class=\"line\">static const unsigned char MostlyCloudy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xF0,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x03,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0x00,0x0E,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xE7,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\6@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Overcast_x 60</span><br><span class=\"line\">#define Overcast_y 40</span><br><span class=\"line\">//  阴 9</span><br><span class=\"line\">static const unsigned char Overcast[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x80,0x3F,0xFE,0xFF,0xFF,0x01,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,</span><br><span class=\"line\">0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\9@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 40 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Shower_x 60</span><br><span class=\"line\">#define Shower_y 59</span><br><span class=\"line\">// 阵雨 10</span><br><span class=\"line\">static const unsigned char Shower[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x7F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x03,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0x8F,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,</span><br><span class=\"line\">0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,</span><br><span class=\"line\">0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x3C,0x00,0x1E,0x00,0x00,0x00,0x78,0x00,0x3E,0x00,0x1F,0x00,0x00,</span><br><span class=\"line\">0x00,0x7C,0x00,0x3E,0x00,0x1F,0x00,0x00,0x00,0x7C,0x00,0x3E,0x80,0x1F,0x00,0x00,0x00,0x7E,0x00,0x1F,0x80,0x0F,0x00,0x00,0x00,0x3E,0x00,0x1F,0x80,0x0F,0x00,0x00,</span><br><span class=\"line\">0x00,0x3F,0x80,0x1F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xC0,0x07,0x00,0x00,0x00,0x1F,0x80,0x0F,0xE0,0x07,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,</span><br><span class=\"line\">0x80,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x00,0x80,0x0F,0xC0,0x07,0xE0,0x01,0x00,0x00,0x80,0x07,0xC0,0x03,0xE0,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\10@1x.bmp&quot;,0</span><br><span class=\"line\">(60 X 59 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Thundershower_x 56</span><br><span class=\"line\">#define Thundershower_y 56</span><br><span class=\"line\">// 雷阵雨 11</span><br><span class=\"line\">static const unsigned char Thundershower[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x08,0xC0,0xFF,0x00,0x18,0x00,0x00,0x3C,0xC0,0x7F,0x00,0x3C,0x00,0x00,</span><br><span class=\"line\">0x3E,0xE0,0x7F,0x00,0x3C,0x00,0x00,0x3E,0xE0,0x3F,0x00,0x3E,0x00,0x00,0x1F,0xE0,0xFF,0x01,0x3E,0x00,0x00,0x1F,0xF0,0xFF,0x00,0x1F,0x00,0x00,0x1F,0xF0,0x7F,0x00,</span><br><span class=\"line\">0x1F,0x00,0x80,0x0F,0xF8,0x3F,0x00,0x1F,0x00,0x80,0x0F,0x80,0x1F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x0F,0x80,0x0F,0x00,0xC0,0x07,0xC0,0x07,0xC0,0x07,0x00,0xC0,0x07,</span><br><span class=\"line\">0xC0,0x03,0xC0,0x07,0x00,0xC0,0x03,0xE0,0x01,0x80,0x03,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\11@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define ThundershowerWithHail_x 56</span><br><span class=\"line\">#define ThundershowerWithHail_y 56</span><br><span class=\"line\">// 雷阵雨伴有冰雹 12</span><br><span class=\"line\">static const unsigned char ThundershowerWithHail[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x80,</span><br><span class=\"line\">0x03,0xE0,0x7F,0x00,0x0E,0x00,0xE0,0x07,0xE0,0x3F,0x00,0x3F,0x00,0xE0,0x0F,0xE0,0xFF,0x81,0x3F,0x00,0xF0,0x0F,0xF0,0xFF,0x80,0x7F,0x00,0xF0,0x0F,0xF0,0x7F,0x80,</span><br><span class=\"line\">0x7F,0x00,0xF0,0x0F,0xF8,0x3F,0x80,0x3F,0x00,0xE0,0x07,0x80,0x1F,0x00,0x3F,0x00,0xC0,0x03,0xC0,0x0F,0x00,0x1E,0x00,0x00,0x00,0xC0,0x07,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xC0,0x03,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\12@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Rain_x 56</span><br><span class=\"line\">#define Rain_y 54</span><br><span class=\"line\">// 小雨、中雨、大于、暴雨、大暴雨、特大暴雨 13、14、15、16、17、18</span><br><span class=\"line\">static const unsigned char Rain[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x81,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xF0,0xDF,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x7F,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x18,0x00,0x06,0x00,0x03,0x00,0x00,0x1C,0x00,0x0E,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x00,0x0F,0x80,0x07,0x00,0x00,0x1E,0x80,0x0F,0xC0,</span><br><span class=\"line\">0x03,0x00,0x00,0x0F,0x80,0x07,0xC0,0x03,0x00,0x00,0x0F,0xC0,0x07,0xE0,0x03,0x00,0x80,0x0F,0xC0,0x03,0xE0,0x01,0x00,0x80,0x07,0xC0,0x03,0xF0,0x01,0x00,0xC0,0x07,</span><br><span class=\"line\">0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0xF0,0x00,0x00,0xC0,0x03,0xE0,0x01,0x70,0x00,0x00,0xC0,0x01,0xE0,0x00,0x70,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\13@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 54 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define IceRain_x 56</span><br><span class=\"line\">#define IceRain_y 57</span><br><span class=\"line\">// 冻雨 19</span><br><span class=\"line\">static const unsigned char IceRain[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0xF0,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x18,0x00,0x04,0x00,0x00,</span><br><span class=\"line\">0x70,0x00,0x3C,0x00,0x0E,0x00,0x00,0xF8,0x00,0x7E,0x00,0x1F,0x00,0x00,0xFC,0x01,0xFF,0x80,0x3F,0x00,0x00,0xFE,0x03,0xFF,0xC0,0x7F,0x00,0x00,0xFC,0x01,0x7E,0x80,</span><br><span class=\"line\">0x3F,0x00,0x00,0xF8,0x00,0x3C,0x00,0x1F,0x00,0x00,0x70,0x00,0x1C,0x00,0x0E,0x00,0x00,0x20,0x10,0x08,0x00,0x04,0x00,0x00,0x00,0x38,0x00,0x18,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x7C,0x00,0x3C,0x00,0x00,0x00,0x00,0xFE,0x00,0x7E,0x00,0x00,0x00,0x00,0xFF,0x01,0xFF,0x00,0x00,0x00,0x00,0xFE,0x00,0xFF,0x00,0x00,0x00,0x00,0x7C,0x00,0x7E,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x38,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\19@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 57 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Sleet_x 56</span><br><span class=\"line\">#define Sleet_y 55</span><br><span class=\"line\">// 雨夹雪 20</span><br><span class=\"line\">static const unsigned char Sleet[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3B,0x00,0x00,0xF0,0x00,0x3C,0x80,0x3F,0x00,0x00,0xF8,0x00,0x3E,0x80,</span><br><span class=\"line\">0x3F,0x00,0x00,0x78,0x00,0x1E,0xC0,0x7F,0x00,0x00,0x7C,0x00,0x1F,0xE0,0xFF,0x00,0x00,0x3C,0x00,0x0F,0xF0,0xFF,0x01,0x00,0x3C,0x00,0x0F,0xE0,0xFF,0x00,0x00,0x3E,</span><br><span class=\"line\">0x80,0x0F,0x80,0x3F,0x00,0x00,0x1E,0x80,0x07,0x80,0x3F,0x00,0x00,0x1F,0xC0,0x07,0x80,0x3B,0x00,0x00,0x0F,0xC0,0x03,0x80,0x33,0x00,0x00,0x06,0x80,0x01,0x00,0x00,</span><br><span class=\"line\">0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\20@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 55 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define SnowFlurry_x 56</span><br><span class=\"line\">#define SnowFlurry_y 56</span><br><span class=\"line\">// 阵雪 21</span><br><span class=\"line\">static const unsigned char SnowFlurry[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x00,0xFE,0xFF,0x03,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xC0,</span><br><span class=\"line\">0xFF,0xFF,0x1F,0x00,0x00,0x00,0xF8,0xFF,0xFF,0x1F,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x80,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xC0,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xC0,0xE0,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0x3D,0xC0,0x3B,</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xE0,0x7F,0xE0,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,</span><br><span class=\"line\">0xFF,0xF0,0xFF,0x00,0x00,0x00,0xF0,0xFF,0xF0,0xFF,0x00,0x00,0x00,0xC0,0x3F,0x80,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,0x00,0x00,0xC0,0x3F,0xC0,0x3F,0x00,</span><br><span class=\"line\">0x00,0x00,0x80,0x19,0x80,0x19,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\21@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Snow_x 56</span><br><span class=\"line\">#define Snow_y 53</span><br><span class=\"line\">// 小雪、中雪、大雪、暴雪 22、23、24、25</span><br><span class=\"line\">static const unsigned char Snow[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0xC0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x03,0x00,0x00,0x00,0x00,0xFC,0xFF,0x07,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x80,0xFF,</span><br><span class=\"line\">0xFF,0x1F,0x00,0x00,0xE0,0x9F,0xFF,0xFF,0x3F,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x00,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,</span><br><span class=\"line\">0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x80,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE6,0x00,0xC6,0x00,0x00,0x00,0x00,0xFF,0x00,0xEE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFE,0x00,0xFE,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0xFF,0x83,0xFF,0x03,0x00,0x00,0xC0,0xFF,0xC3,0xFF,0x07,0x00,0x00,0xC0,0xFF,0x83,0xFF,0x03,0x00,0x00,0x80,0xFF,0x01,0xFF,0x01,0x00,0x00,0x00,</span><br><span class=\"line\">0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xFF,0x00,0xFE,0x00,0x00,0x00,0x00,0xEE,0x00,0xEE,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\22@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 53 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Dust_x 53</span><br><span class=\"line\">#define Dust_y 45</span><br><span class=\"line\">// 浮尘、扬沙 26、27</span><br><span class=\"line\">static const unsigned char Dust[] = &#123;</span><br><span class=\"line\">0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFE,0xE1,0x1F,0x00,0x7C,0xC0,0x07,</span><br><span class=\"line\">0x7C,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFF,0xE1,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xC0,0x07,0x7C,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xE1,0x1F,0x00,0x7E,0xE0,0x0F,0xFC,0xC0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,</span><br><span class=\"line\">0xFF,0xF1,0x1F,0x00,0x7E,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFF,0xE0,0x0F,0xFE,0xE1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xE1,0x1F,0x00,0xFE,0xE0,0x0F,</span><br><span class=\"line\">0xFE,0xE0,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x0F,0xFE,0xE0,0x1F,0x00,0xFF,</span><br><span class=\"line\">0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF1,0x1F,0xFF,0xF1,0x1F,0x00,0xFF,0xF0,0x1F,0xFF,0xF1,0x1F,0x00,0xFE,0xE0,0x0F,0xFE,0xE0,0x0F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\26@1x.bmp&quot;,0</span><br><span class=\"line\">(53 X 45 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Duststorm_x 58</span><br><span class=\"line\">#define Duststorm_y 34</span><br><span class=\"line\">// 沙尘暴、强沙尘暴 28、29</span><br><span class=\"line\">static const unsigned char Duststorm[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0x00,0x38,0x1C,0x0E,0x87,0xFF,0x03,0x00,0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x07,0x00,0x00,0x7C,0x3E,0x9F,0x8F,0xFF,0x07,0x00,</span><br><span class=\"line\">0x00,0x7C,0x3E,0x1F,0x8F,0xFF,0x0F,0x00,0x00,0x38,0x1C,0x0E,0x87,0x87,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x80,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x0F,0x00,0x8F,0x87,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,</span><br><span class=\"line\">0x8F,0xCF,0xFF,0xFF,0xFF,0xFF,0x03,0x00,0x8F,0xC7,0xFF,0xFF,0xFF,0xFF,0x01,0x00,0x06,0x83,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x78,0x3C,0xFE,0xFF,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x00,0xF8,0x7C,0x3C,0xFE,0xFF,0xFF,0xFF,0x01,0xF8,0x78,0x3C,0xFE,0xFF,0xFF,0xFF,0x03,0x60,0x30,0x18,0xFC,0xFF,0xFF,0xFF,0x03,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x03,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0x03,</span><br><span class=\"line\">0x00,0x1C,0x0E,0x87,0xC7,0xE3,0xF3,0x03,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x03,0x00,0x3E,0x9F,0xCF,0xC7,0xE7,0xFF,0x01,0x00,0x3E,0x9F,0x8F,0xC7,0xE3,0xFF,0x01,</span><br><span class=\"line\">0x00,0x1C,0x0E,0x87,0x83,0xC1,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\28@1x.bmp&quot;,0</span><br><span class=\"line\">(58 X 34 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Foggy_x 54</span><br><span class=\"line\">#define Foggy_y 50</span><br><span class=\"line\">// 雾 30</span><br><span class=\"line\">static const unsigned char Foggy[] = &#123;</span><br><span class=\"line\">0x00,0xE0,0xFF,0x01,0x00,0x00,0x00,0x00,0xF8,0xFF,0x0F,0x00,0x00,0x00,0x00,0xFE,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xC0,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\30@1x.bmp&quot;,0</span><br><span class=\"line\">(54 X 50 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Haze_x 56</span><br><span class=\"line\">#define Haze_y 50</span><br><span class=\"line\">// 霾 31</span><br><span class=\"line\">static const unsigned char Haze[] = &#123;</span><br><span class=\"line\">0x7C,0x00,0x00,0x3E,0x00,0x00,0x78,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,</span><br><span class=\"line\">0x00,0x00,0x7C,0x10,0x00,0x00,0x08,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFE,0x01,0x00,0xC0,0x7F,0x00,0xC0,0xFF,0x0F,0x00,0xF0,</span><br><span class=\"line\">0xFF,0x01,0xF0,0xFF,0x3F,0x00,0xFC,0xFF,0x07,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xFC,0xFF,0xFF,0x80,0xFF,0xFF,0x1F,0xFC,0x87,0xFF,0x81,0xFF,0xF1,0x3F,0xFE,0x01,</span><br><span class=\"line\">0xFC,0xC3,0x3F,0x80,0x3F,0x7E,0x00,0xF8,0xE7,0x0F,0x00,0x7F,0x3F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x3F,0x00,0xE0,0xFF,0x03,0x00,0xFE,0x3F,0x00,0xC0,0xFF,0x03,0x00,</span><br><span class=\"line\">0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x00,0xFF,0x00,0x00,0xFC,0x1F,0x00,0x80,0xFF,0x01,0x00,0xFC,0x1F,0x00,0x80,</span><br><span class=\"line\">0xFF,0x01,0x00,0xFC,0x3F,0x00,0xC0,0xFF,0x03,0x00,0xFC,0x3F,0x00,0xE0,0xFF,0x07,0x00,0xFE,0x7F,0x00,0xF0,0xF7,0x07,0x00,0x7E,0x7E,0x00,0xF8,0xE3,0x1F,0x00,0x7F,</span><br><span class=\"line\">0xFE,0x01,0xFC,0xC3,0x3F,0xC0,0x3F,0xFC,0x8F,0xFF,0x81,0xFF,0xFB,0x3F,0xF8,0xFF,0xFF,0x00,0xFF,0xFF,0x1F,0xF8,0xFF,0x7F,0x00,0xFE,0xFF,0x0F,0xE0,0xFF,0x3F,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x07,0xC0,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFE,0x01,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x3C,0x00,0x00,0x78,0x7C,0x00,0x00,0x3E,0x00,</span><br><span class=\"line\">0x00,0x7C,0x7C,0x00,0x00,0x7E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0xFC,0x7C,0x00,0x00,0x3E,0x00,0x00,0x7C,0x38,0x00,0x00,0x1C,0x00,0x00,0x38,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\31@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 50 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Windy_x 56</span><br><span class=\"line\">#define Windy_y 44</span><br><span class=\"line\">// 风、大风 32、33</span><br><span class=\"line\">static const unsigned char Windy[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xC0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x7F,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0x00,0x00,0x00,0x00,0x00,0xF8,0xFD,0x01,0x00,0x00,0x00,0x00,0x7C,0xF0,</span><br><span class=\"line\">0x01,0xFC,0x03,0x00,0x00,0x3C,0xE0,0x03,0xFF,0x0F,0x00,0x00,0x3C,0xC0,0x83,0xFF,0x1F,0x00,0x00,0x00,0xC0,0xC3,0x9F,0x3F,0x00,0x00,0x00,0xC0,0xE3,0x07,0x7E,0x00,</span><br><span class=\"line\">0x00,0x00,0xE0,0xE3,0x03,0x7C,0x00,0x00,0x00,0xF0,0xF1,0x01,0xF8,0x00,0x00,0x00,0xF8,0xF1,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0xF0,0xFF,0xFF,0xFF,0x7F,0xF0,</span><br><span class=\"line\">0x00,0xF0,0xFF,0xFF,0xFF,0x3F,0xF0,0x00,0xF0,0xFE,0xFF,0xFF,0x03,0xF0,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x03,0x3C,0x00,0x00,0x00,0x00,0xC0,0x07,0x3E,0x00,0x00,0x00,0x00,0x80,0x0F,0x1F,0x00,0x00,0x00,0x00,0x80,0xFF,0x1F,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xFF,0x0F,0x00,0x00,0x00,0x00,0x00,0xFE,0x07,0x00,0x00,0x00,0x00,0x00,0xF8,0x01,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\32@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 44 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Hurricane_x 56</span><br><span class=\"line\">#define Hurricane_y 56</span><br><span class=\"line\">// 飓风、热带风暴 34、35</span><br><span class=\"line\">static const unsigned char Hurricane[] = &#123;</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFE,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xE0,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x00,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x00,0x00,0x00,0xC0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0xFF,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x80,0x7F,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0x3F,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\34@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 56 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Tornado_x 56</span><br><span class=\"line\">#define Tornado_y 55</span><br><span class=\"line\">// 龙卷风 36</span><br><span class=\"line\">static const unsigned char Tornado[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF0,0xFF,0x03,0x00,</span><br><span class=\"line\">0xC0,0xFF,0x07,0xF8,0x3F,0x00,0x00,0x00,0xFC,0x0F,0xFC,0x07,0x00,0x00,0x00,0xE0,0x1F,0xFE,0x00,0x80,0xFF,0x01,0x80,0x3F,0x7F,0x00,0xFE,0xFF,0x7F,0x00,0x7E,0x1F,</span><br><span class=\"line\">0xC0,0xFF,0xFF,0xFF,0x03,0x7C,0x0F,0xF0,0xFF,0xFF,0xFF,0x0F,0xF8,0x0F,0xFC,0x3F,0x00,0xFC,0x1F,0xF0,0x0F,0xFE,0x01,0x00,0x80,0x3F,0xF8,0x1F,0x3E,0x00,0x00,0x00,</span><br><span class=\"line\">0x7E,0x78,0x7F,0x1E,0x00,0x00,0x00,0x78,0x7E,0xFE,0x1F,0x00,0x00,0x00,0xF8,0x3F,0xFC,0x3F,0x00,0x00,0x00,0xFE,0x1F,0xF8,0xFF,0x01,0x00,0xC0,0xFF,0x0F,0xE0,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x03,0x80,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x3F,0x00,0x20,0xF0,0xFF,0xFF,0xFF,0x07,0x00,0xF0,0x00,0xFE,0xFF,0x3F,0x00,</span><br><span class=\"line\">0x07,0xF0,0x03,0x00,0x00,0x00,0xC0,0x0F,0xF0,0x0F,0x00,0x00,0x00,0xF0,0x0F,0xE0,0x7F,0x00,0x00,0x00,0xFE,0x07,0x80,0xFF,0x0F,0x00,0xF0,0xFF,0x01,0x00,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x3F,0x00,0x00,0xE0,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,0xFF,0xFF,0x7F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x00,0x80,0x07,0x00,0x00,0xF0,0x07,0x00,0xF0,0x07,0x00,0x00,0xE0,0xFF,0x81,0xFF,0x07,0x00,0x00,0xC0,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x03,0x00,0x00,0x00,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFC,0xFF,0x1F,0x00,0x00,0x00,0x00,0xC0,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x01,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xE0,0x83,0x0F,0x00,0x00,0x00,0x00,0xC0,0xC7,0x07,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0xC0,0xE7,0x07,0x00,0x00,0x00,0x00,0x80,0xEF,0x03,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0x00,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,</span><br><span class=\"line\">0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\36@1x.bmp&quot;,0</span><br><span class=\"line\">(56 X 55 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Cold_x 51</span><br><span class=\"line\">#define Cold_y 58</span><br><span class=\"line\">// 冷 37</span><br><span class=\"line\">static const unsigned char Cold[] = &#123;</span><br><span class=\"line\">0x00,0x00,0x00,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,</span><br><span class=\"line\">0x00,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x8F,0xC7,0x07,0x00,0x00,0x00,0x04,0x9F,0xE7,0x07,0x01,0x00,0x00,</span><br><span class=\"line\">0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x1E,0xF0,0x3F,0xC0,0x01,0x00,0x03,0x1E,0xE0,0x1F,0xE0,</span><br><span class=\"line\">0x01,0x03,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x3F,0x1C,0x80,0x07,0xE0,0xF1,0x07,0xFF,0x3C,0x80,0x07,0xE0,0xF8,0x03,0xFC,0x3D,0x80,0x07,0xF0,0xFE,0x01,0xF8,0x3F,</span><br><span class=\"line\">0x80,0x07,0xF0,0x7F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0x80,0x7F,0x80,0x07,0xF0,0x07,0x00,0x00,0xFF,0x80,0x07,0xFC,0x03,0x00,0xE0,0xFF,0x83,0x07,0xFF,0x3F,</span><br><span class=\"line\">0x00,0xFC,0xFF,0x8F,0x87,0xFF,0xFF,0x01,0xFF,0xC7,0x9F,0xE7,0x9F,0xFF,0x03,0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,0x00,0x00,0xF8,</span><br><span class=\"line\">0x7F,0x00,0x00,0x00,0x00,0x00,0xE0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF0,0x3F,0x00,0x00,0x00,0x00,0x00,0xF8,0xFF,0x00,0x00,0x00,0x1F,0x00,0xFE,0xFF,0x01,0xC0,0x03,</span><br><span class=\"line\">0xFF,0x80,0xFF,0xFF,0x07,0xF8,0x03,0xFF,0xE7,0x9F,0xE7,0x9F,0xFF,0x03,0xFC,0xFF,0x87,0x87,0xFF,0xFF,0x01,0xE0,0xFF,0x83,0x07,0xFE,0x3F,0x00,0x00,0xFF,0x80,0x07,</span><br><span class=\"line\">0xFC,0x03,0x00,0x80,0x7F,0x80,0x07,0xF0,0x0F,0x00,0xE0,0x3F,0x80,0x07,0xF0,0x1F,0x00,0xF8,0x3F,0x80,0x07,0xF0,0x7F,0x00,0xFE,0x3D,0x80,0x07,0xF0,0xFE,0x01,0x7F,</span><br><span class=\"line\">0x3C,0x80,0x07,0xE0,0xF8,0x03,0x3F,0x1C,0x80,0x07,0xE0,0xE1,0x07,0x0F,0x1E,0xC0,0x0F,0xE0,0xC1,0x07,0x02,0x1E,0xE0,0x1F,0xE0,0x01,0x03,0x00,0x1E,0xF0,0x3F,0xC0,</span><br><span class=\"line\">0x01,0x00,0x00,0x1E,0xF8,0xFF,0xC0,0x03,0x00,0x00,0x0E,0xFC,0xFF,0xC1,0x03,0x00,0x00,0x0E,0xBE,0xF7,0xC3,0x03,0x00,0x00,0x04,0x9F,0xE7,0x87,0x01,0x00,0x00,0x80,</span><br><span class=\"line\">0x8F,0xC7,0x07,0x00,0x00,0x00,0x80,0x87,0x87,0x0F,0x00,0x00,0x00,0x80,0x83,0x07,0x07,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,</span><br><span class=\"line\">0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x80,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x00,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\37@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 58 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Hot_x 51</span><br><span class=\"line\">#define Hot_y 51</span><br><span class=\"line\">// 热 38</span><br><span class=\"line\">static const unsigned char Hot[] = &#123;</span><br><span class=\"line\">0x00,0x00,0xFC,0xFF,0x01,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xFC,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0x00,0x00,0xFE,0xFF,0xFF,0xFF,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xFC,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0x03,0xFC,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0xFF,0xFF,0x01,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0x01,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xF0,0xFF,0xFF,0xFF,0xFF,0x7F,0x00,0xE0,</span><br><span class=\"line\">0xFF,0xFF,0xFF,0xFF,0x3F,0x00,0xC0,0xFF,0xFF,0xFF,0xFF,0x1F,0x00,0x80,0xFF,0xFF,0xFF,0xFF,0x0F,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0xFE,0xFF,0xFF,0xFF,</span><br><span class=\"line\">0x03,0x00,0x00,0xFC,0xFF,0xFF,0xFF,0x01,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x00,0x00,0x00,0xE0,0xFF,0xFF,0x3F,0x00,0x00,0x00,0x80,0xFF,0xFF,0x0F,0x00,0x00,0x00,0x00,</span><br><span class=\"line\">0xFC,0xFF,0x01,0x00,0x00,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\38@1x.bmp&quot;,0</span><br><span class=\"line\">(51 X 51 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">#define Unknown_x 53</span><br><span class=\"line\">#define Unknown_y 23</span><br><span class=\"line\">// 未知 99</span><br><span class=\"line\">static const unsigned char Unknown[] = &#123;</span><br><span class=\"line\">0x07,0x80,0x03,0xE0,0x00,0x0E,0x00,0x0F,0x80,0x03,0xE0,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x1F,0x80,0x03,0x70,0x00,0x1F,0x00,0x3F,0x80,0x03,0x78,</span><br><span class=\"line\">0x80,0x3F,0x00,0x7F,0x80,0x03,0x38,0x80,0x3B,0x00,0x77,0x80,0x03,0x38,0xC0,0x7B,0x00,0xF7,0x80,0x03,0x1C,0xC0,0x71,0x00,0xE7,0x81,0x03,0x1C,0xE0,0x71,0x00,0xC7,</span><br><span class=\"line\">0x81,0x03,0x1E,0xE0,0xF0,0x00,0xC7,0x83,0x03,0x0E,0xE0,0xE0,0x00,0x87,0x87,0x03,0x0E,0xF0,0xE0,0x01,0x07,0x87,0x03,0x07,0x70,0xC0,0x01,0x07,0x8F,0x03,0x07,0x78,</span><br><span class=\"line\">0xC0,0x03,0x07,0x9E,0x83,0x03,0xF8,0xFF,0x03,0x07,0xBC,0x83,0x03,0xFC,0xFF,0x03,0x07,0xBC,0xC3,0x03,0xFC,0xFF,0x07,0x07,0xF8,0xC3,0x01,0x1C,0x00,0x07,0x07,0xF0,</span><br><span class=\"line\">0xC3,0x01,0x1E,0x00,0x0F,0x07,0xF0,0xE3,0x00,0x0E,0x00,0x0E,0x07,0xE0,0xE3,0x00,0x0F,0x00,0x1E,0x07,0xC0,0xF3,0x00,0x07,0x00,0x1E,0x07,0xC0,0x73,0x00,0x07,0x00,</span><br><span class=\"line\">0x1C,</span><br><span class=\"line\">/*&quot;E:\\知心天气天气图标\\天气图标单色图\\99@1x.bmp&quot;,0</span><br><span class=\"line\">(53 X 23 )*/</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"esp32与0.96寸屏幕实现信息传输","_content":"## esp32与0.96寸屏幕实现信息传输代码\n### 示例代码:\n<!-- more -->\n```\n#include <Wire.h> \n#include \"SSD1306Wire.h\" \n\nSSD1306Wire display(0x3c, SDA, SCL);   // ADDRESS, SDA, SCL\n\nvoid drawLines() {\n  for (int16_t i = 0; i < display.getWidth(); i += 4) {\n    display.drawLine(0, 0, i, display.getHeight() - 1);\n    display.display();\n    delay(10);\n  }\n  for (int16_t i = 0; i < display.getHeight(); i += 4) {\n    display.drawLine(0, 0, display.getWidth() - 1, i);\n    display.display();\n    delay(10);\n  }\n  delay(250);\n\n  display.clear();\n  for (int16_t i = 0; i < display.getWidth(); i += 4) {\n    display.drawLine(0, display.getHeight() - 1, i, 0);\n    display.display();\n    delay(10);\n  }\n  for (int16_t i = display.getHeight() - 1; i >= 0; i -= 4) {\n    display.drawLine(0, display.getHeight() - 1, display.getWidth() - 1, i);\n    display.display();\n    delay(10);\n  }\n  delay(250);\n\n  display.clear();\n  for (int16_t i = display.getWidth() - 1; i >= 0; i -= 4) {\n    display.drawLine(display.getWidth() - 1, display.getHeight() - 1, i, 0);\n    display.display();\n    delay(10);\n  }\n  for (int16_t i = display.getHeight() - 1; i >= 0; i -= 4) {\n    display.drawLine(display.getWidth() - 1, display.getHeight() - 1, 0, i);\n    display.display();\n    delay(10);\n  }\n  delay(250);\n  display.clear();\n  for (int16_t i = 0; i < display.getHeight(); i += 4) {\n    display.drawLine(display.getWidth() - 1, 0, 0, i);\n    display.display();\n    delay(10);\n  }\n  for (int16_t i = 0; i < display.getWidth(); i += 4) {\n    display.drawLine(display.getWidth() - 1, 0, i, display.getHeight() - 1);\n    display.display();\n    delay(10);\n  }\n  delay(250);\n}\n\n// Adapted from Adafruit_SSD1306\nvoid drawRect(void) {\n  for (int16_t i = 0; i < display.getHeight() / 2; i += 2) {\n    display.drawRect(i, i, display.getWidth() - 2 * i, display.getHeight() - 2 * i);\n    display.display();\n    delay(10);\n  }\n}\n\n// Adapted from Adafruit_SSD1306\nvoid fillRect(void) {\n  uint8_t color = 1;\n  for (int16_t i = 0; i < display.getHeight() / 2; i += 3) {\n    display.setColor((color % 2 == 0) ? BLACK : WHITE); // alternate colors\n    display.fillRect(i, i, display.getWidth() - i * 2, display.getHeight() - i * 2);\n    display.display();\n    delay(10);\n    color++;\n  }\n  // Reset back to WHITE\n  display.setColor(WHITE);\n}\n\n// Adapted from Adafruit_SSD1306\nvoid drawCircle(void) {\n  for (int16_t i = 0; i < display.getHeight(); i += 2) {\n    display.drawCircle(display.getWidth() / 2, display.getHeight() / 2, i);\n    display.display();\n    delay(10);\n  }\n  delay(1000);\n  display.clear();\n\n  // This will draw the part of the circel in quadrant 1\n  // Quadrants are numberd like this:\n  //   0010 | 0001\n  //  ------|-----\n  //   0100 | 1000\n  //\n  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000001);\n  display.display();\n  delay(200);\n  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000011);\n  display.display();\n  delay(200);\n  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000111);\n  display.display();\n  delay(200);\n  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00001111);\n  display.display();\n}\n\nvoid printBuffer(void) {\n  // Initialize the log buffer\n  // allocate memory to store 8 lines of text and 30 chars per line.\n  display.setLogBuffer(5, 20);  //5表述屏幕显示5行，20表示每行存放的char的长度\n\n  // Some test data\n  const char* test[] = {\n    \"Hello\",\n    \"World\" ,\n    \"----\",\n    \"Show off\",\n    \"how\",\n    \"the log buffer\",\n    \"is\",\n    \"working.\",\n    \"Even\",\n    \"scrolling is\",\n    \"working\"\n  };\n\n  for (uint8_t i = 0; i < 11; i++) {\n    display.clear();\n    // Print to the screen\n    display.println(test[i]);\n    // Draw it to the internal screen buffer\n    display.drawLogBuffer(0, 0);\n    // Display it on the screen\n    display.display();\n    delay(500);\n  }\n}\n\nvoid setup() {\n  display.init();\n\n  display.flipScreenVertically();\n\n  display.setContrast(255);\n\n  drawLines();\n  delay(1000);\n  display.clear();\n\n  drawRect();\n  delay(1000);\n  display.clear();\n\n  fillRect();\n  delay(1000);\n  display.clear();\n\n  drawCircle();\n  delay(1000);\n  display.clear();\n\n  printBuffer();\n  delay(1000);\n  display.clear();\n}\n\nvoid loop() {\n  \n  display.init();\n  display.flipScreenVertically();\n  printBuffer();\n  delay(1000);\n  display.clear();\n }\n\n```\n### 程序弄好了，接下来是接线图：\n![接线](https://i.niupic.com/images/2022/03/15/9Wyz.jpg)\n### VS Code platform IDE软件使用：\n![烧录](https://i.niupic.com/images/2022/03/15/9WyB.png)\n### 最终结果：\n**ps:图片屏幕展示内容与示例代码实现不一样，图片里的是我另一个代码**\n![显示](https://i.niupic.com/images/2022/03/15/9WyA.jpg)","source":"_posts/esp32-weather/esp32and0.96LED_connect.md","raw":"---\ntitle: esp32与0.96寸屏幕实现信息传输\n---\n## esp32与0.96寸屏幕实现信息传输代码\n### 示例代码:\n<!-- more -->\n```\n#include <Wire.h> \n#include \"SSD1306Wire.h\" \n\nSSD1306Wire display(0x3c, SDA, SCL);   // ADDRESS, SDA, SCL\n\nvoid drawLines() {\n  for (int16_t i = 0; i < display.getWidth(); i += 4) {\n    display.drawLine(0, 0, i, display.getHeight() - 1);\n    display.display();\n    delay(10);\n  }\n  for (int16_t i = 0; i < display.getHeight(); i += 4) {\n    display.drawLine(0, 0, display.getWidth() - 1, i);\n    display.display();\n    delay(10);\n  }\n  delay(250);\n\n  display.clear();\n  for (int16_t i = 0; i < display.getWidth(); i += 4) {\n    display.drawLine(0, display.getHeight() - 1, i, 0);\n    display.display();\n    delay(10);\n  }\n  for (int16_t i = display.getHeight() - 1; i >= 0; i -= 4) {\n    display.drawLine(0, display.getHeight() - 1, display.getWidth() - 1, i);\n    display.display();\n    delay(10);\n  }\n  delay(250);\n\n  display.clear();\n  for (int16_t i = display.getWidth() - 1; i >= 0; i -= 4) {\n    display.drawLine(display.getWidth() - 1, display.getHeight() - 1, i, 0);\n    display.display();\n    delay(10);\n  }\n  for (int16_t i = display.getHeight() - 1; i >= 0; i -= 4) {\n    display.drawLine(display.getWidth() - 1, display.getHeight() - 1, 0, i);\n    display.display();\n    delay(10);\n  }\n  delay(250);\n  display.clear();\n  for (int16_t i = 0; i < display.getHeight(); i += 4) {\n    display.drawLine(display.getWidth() - 1, 0, 0, i);\n    display.display();\n    delay(10);\n  }\n  for (int16_t i = 0; i < display.getWidth(); i += 4) {\n    display.drawLine(display.getWidth() - 1, 0, i, display.getHeight() - 1);\n    display.display();\n    delay(10);\n  }\n  delay(250);\n}\n\n// Adapted from Adafruit_SSD1306\nvoid drawRect(void) {\n  for (int16_t i = 0; i < display.getHeight() / 2; i += 2) {\n    display.drawRect(i, i, display.getWidth() - 2 * i, display.getHeight() - 2 * i);\n    display.display();\n    delay(10);\n  }\n}\n\n// Adapted from Adafruit_SSD1306\nvoid fillRect(void) {\n  uint8_t color = 1;\n  for (int16_t i = 0; i < display.getHeight() / 2; i += 3) {\n    display.setColor((color % 2 == 0) ? BLACK : WHITE); // alternate colors\n    display.fillRect(i, i, display.getWidth() - i * 2, display.getHeight() - i * 2);\n    display.display();\n    delay(10);\n    color++;\n  }\n  // Reset back to WHITE\n  display.setColor(WHITE);\n}\n\n// Adapted from Adafruit_SSD1306\nvoid drawCircle(void) {\n  for (int16_t i = 0; i < display.getHeight(); i += 2) {\n    display.drawCircle(display.getWidth() / 2, display.getHeight() / 2, i);\n    display.display();\n    delay(10);\n  }\n  delay(1000);\n  display.clear();\n\n  // This will draw the part of the circel in quadrant 1\n  // Quadrants are numberd like this:\n  //   0010 | 0001\n  //  ------|-----\n  //   0100 | 1000\n  //\n  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000001);\n  display.display();\n  delay(200);\n  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000011);\n  display.display();\n  delay(200);\n  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000111);\n  display.display();\n  delay(200);\n  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00001111);\n  display.display();\n}\n\nvoid printBuffer(void) {\n  // Initialize the log buffer\n  // allocate memory to store 8 lines of text and 30 chars per line.\n  display.setLogBuffer(5, 20);  //5表述屏幕显示5行，20表示每行存放的char的长度\n\n  // Some test data\n  const char* test[] = {\n    \"Hello\",\n    \"World\" ,\n    \"----\",\n    \"Show off\",\n    \"how\",\n    \"the log buffer\",\n    \"is\",\n    \"working.\",\n    \"Even\",\n    \"scrolling is\",\n    \"working\"\n  };\n\n  for (uint8_t i = 0; i < 11; i++) {\n    display.clear();\n    // Print to the screen\n    display.println(test[i]);\n    // Draw it to the internal screen buffer\n    display.drawLogBuffer(0, 0);\n    // Display it on the screen\n    display.display();\n    delay(500);\n  }\n}\n\nvoid setup() {\n  display.init();\n\n  display.flipScreenVertically();\n\n  display.setContrast(255);\n\n  drawLines();\n  delay(1000);\n  display.clear();\n\n  drawRect();\n  delay(1000);\n  display.clear();\n\n  fillRect();\n  delay(1000);\n  display.clear();\n\n  drawCircle();\n  delay(1000);\n  display.clear();\n\n  printBuffer();\n  delay(1000);\n  display.clear();\n}\n\nvoid loop() {\n  \n  display.init();\n  display.flipScreenVertically();\n  printBuffer();\n  delay(1000);\n  display.clear();\n }\n\n```\n### 程序弄好了，接下来是接线图：\n![接线](https://i.niupic.com/images/2022/03/15/9Wyz.jpg)\n### VS Code platform IDE软件使用：\n![烧录](https://i.niupic.com/images/2022/03/15/9WyB.png)\n### 最终结果：\n**ps:图片屏幕展示内容与示例代码实现不一样，图片里的是我另一个代码**\n![显示](https://i.niupic.com/images/2022/03/15/9WyA.jpg)","slug":"esp32-weather/esp32and0.96LED_connect","published":1,"date":"2022-05-25T10:06:34.302Z","updated":"2022-03-24T09:46:38.179Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeot000l68ur3omg4f2y","content":"<h2 id=\"esp32与0-96寸屏幕实现信息传输代码\"><a href=\"#esp32与0-96寸屏幕实现信息传输代码\" class=\"headerlink\" title=\"esp32与0.96寸屏幕实现信息传输代码\"></a>esp32与0.96寸屏幕实现信息传输代码</h2><h3 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码:\"></a>示例代码:</h3><span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Wire.h&gt; </span><br><span class=\"line\">#include &quot;SSD1306Wire.h&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">SSD1306Wire display(0x3c, SDA, SCL);   // ADDRESS, SDA, SCL</span><br><span class=\"line\"></span><br><span class=\"line\">void drawLines() &#123;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getWidth(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(0, 0, i, display.getHeight() - 1);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(0, 0, display.getWidth() - 1, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(250);</span><br><span class=\"line\"></span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getWidth(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(0, display.getHeight() - 1, i, 0);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for (int16_t i = display.getHeight() - 1; i &gt;= 0; i -= 4) &#123;</span><br><span class=\"line\">    display.drawLine(0, display.getHeight() - 1, display.getWidth() - 1, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(250);</span><br><span class=\"line\"></span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\">  for (int16_t i = display.getWidth() - 1; i &gt;= 0; i -= 4) &#123;</span><br><span class=\"line\">    display.drawLine(display.getWidth() - 1, display.getHeight() - 1, i, 0);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for (int16_t i = display.getHeight() - 1; i &gt;= 0; i -= 4) &#123;</span><br><span class=\"line\">    display.drawLine(display.getWidth() - 1, display.getHeight() - 1, 0, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(250);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(display.getWidth() - 1, 0, 0, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getWidth(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(display.getWidth() - 1, 0, i, display.getHeight() - 1);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(250);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Adapted from Adafruit_SSD1306</span><br><span class=\"line\">void drawRect(void) &#123;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight() / 2; i += 2) &#123;</span><br><span class=\"line\">    display.drawRect(i, i, display.getWidth() - 2 * i, display.getHeight() - 2 * i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Adapted from Adafruit_SSD1306</span><br><span class=\"line\">void fillRect(void) &#123;</span><br><span class=\"line\">  uint8_t color = 1;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight() / 2; i += 3) &#123;</span><br><span class=\"line\">    display.setColor((color % 2 == 0) ? BLACK : WHITE); // alternate colors</span><br><span class=\"line\">    display.fillRect(i, i, display.getWidth() - i * 2, display.getHeight() - i * 2);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">    color++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // Reset back to WHITE</span><br><span class=\"line\">  display.setColor(WHITE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Adapted from Adafruit_SSD1306</span><br><span class=\"line\">void drawCircle(void) &#123;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight(); i += 2) &#123;</span><br><span class=\"line\">    display.drawCircle(display.getWidth() / 2, display.getHeight() / 2, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  // This will draw the part of the circel in quadrant 1</span><br><span class=\"line\">  // Quadrants are numberd like this:</span><br><span class=\"line\">  //   0010 | 0001</span><br><span class=\"line\">  //  ------|-----</span><br><span class=\"line\">  //   0100 | 1000</span><br><span class=\"line\">  //</span><br><span class=\"line\">  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000001);</span><br><span class=\"line\">  display.display();</span><br><span class=\"line\">  delay(200);</span><br><span class=\"line\">  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000011);</span><br><span class=\"line\">  display.display();</span><br><span class=\"line\">  delay(200);</span><br><span class=\"line\">  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000111);</span><br><span class=\"line\">  display.display();</span><br><span class=\"line\">  delay(200);</span><br><span class=\"line\">  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00001111);</span><br><span class=\"line\">  display.display();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void printBuffer(void) &#123;</span><br><span class=\"line\">  // Initialize the log buffer</span><br><span class=\"line\">  // allocate memory to store 8 lines of text and 30 chars per line.</span><br><span class=\"line\">  display.setLogBuffer(5, 20);  //5表述屏幕显示5行，20表示每行存放的char的长度</span><br><span class=\"line\"></span><br><span class=\"line\">  // Some test data</span><br><span class=\"line\">  const char* test[] = &#123;</span><br><span class=\"line\">    &quot;Hello&quot;,</span><br><span class=\"line\">    &quot;World&quot; ,</span><br><span class=\"line\">    &quot;----&quot;,</span><br><span class=\"line\">    &quot;Show off&quot;,</span><br><span class=\"line\">    &quot;how&quot;,</span><br><span class=\"line\">    &quot;the log buffer&quot;,</span><br><span class=\"line\">    &quot;is&quot;,</span><br><span class=\"line\">    &quot;working.&quot;,</span><br><span class=\"line\">    &quot;Even&quot;,</span><br><span class=\"line\">    &quot;scrolling is&quot;,</span><br><span class=\"line\">    &quot;working&quot;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  for (uint8_t i = 0; i &lt; 11; i++) &#123;</span><br><span class=\"line\">    display.clear();</span><br><span class=\"line\">    // Print to the screen</span><br><span class=\"line\">    display.println(test[i]);</span><br><span class=\"line\">    // Draw it to the internal screen buffer</span><br><span class=\"line\">    display.drawLogBuffer(0, 0);</span><br><span class=\"line\">    // Display it on the screen</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(500);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  display.init();</span><br><span class=\"line\"></span><br><span class=\"line\">  display.flipScreenVertically();</span><br><span class=\"line\"></span><br><span class=\"line\">  display.setContrast(255);</span><br><span class=\"line\"></span><br><span class=\"line\">  drawLines();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  drawRect();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  fillRect();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  drawCircle();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  printBuffer();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  display.init();</span><br><span class=\"line\">  display.flipScreenVertically();</span><br><span class=\"line\">  printBuffer();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"程序弄好了，接下来是接线图：\"><a href=\"#程序弄好了，接下来是接线图：\" class=\"headerlink\" title=\"程序弄好了，接下来是接线图：\"></a>程序弄好了，接下来是接线图：</h3><p><img src=\"https://i.niupic.com/images/2022/03/15/9Wyz.jpg\" alt=\"接线\"></p>\n<h3 id=\"VS-Code-platform-IDE软件使用：\"><a href=\"#VS-Code-platform-IDE软件使用：\" class=\"headerlink\" title=\"VS Code platform IDE软件使用：\"></a>VS Code platform IDE软件使用：</h3><p><img src=\"https://i.niupic.com/images/2022/03/15/9WyB.png\" alt=\"烧录\"></p>\n<h3 id=\"最终结果：\"><a href=\"#最终结果：\" class=\"headerlink\" title=\"最终结果：\"></a>最终结果：</h3><p><strong>ps:图片屏幕展示内容与示例代码实现不一样，图片里的是我另一个代码</strong><br><img src=\"https://i.niupic.com/images/2022/03/15/9WyA.jpg\" alt=\"显示\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"esp32与0-96寸屏幕实现信息传输代码\"><a href=\"#esp32与0-96寸屏幕实现信息传输代码\" class=\"headerlink\" title=\"esp32与0.96寸屏幕实现信息传输代码\"></a>esp32与0.96寸屏幕实现信息传输代码</h2><h3 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码:\"></a>示例代码:</h3>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;Wire.h&gt; </span><br><span class=\"line\">#include &quot;SSD1306Wire.h&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">SSD1306Wire display(0x3c, SDA, SCL);   // ADDRESS, SDA, SCL</span><br><span class=\"line\"></span><br><span class=\"line\">void drawLines() &#123;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getWidth(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(0, 0, i, display.getHeight() - 1);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(0, 0, display.getWidth() - 1, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(250);</span><br><span class=\"line\"></span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getWidth(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(0, display.getHeight() - 1, i, 0);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for (int16_t i = display.getHeight() - 1; i &gt;= 0; i -= 4) &#123;</span><br><span class=\"line\">    display.drawLine(0, display.getHeight() - 1, display.getWidth() - 1, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(250);</span><br><span class=\"line\"></span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\">  for (int16_t i = display.getWidth() - 1; i &gt;= 0; i -= 4) &#123;</span><br><span class=\"line\">    display.drawLine(display.getWidth() - 1, display.getHeight() - 1, i, 0);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for (int16_t i = display.getHeight() - 1; i &gt;= 0; i -= 4) &#123;</span><br><span class=\"line\">    display.drawLine(display.getWidth() - 1, display.getHeight() - 1, 0, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(250);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(display.getWidth() - 1, 0, 0, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getWidth(); i += 4) &#123;</span><br><span class=\"line\">    display.drawLine(display.getWidth() - 1, 0, i, display.getHeight() - 1);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(250);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Adapted from Adafruit_SSD1306</span><br><span class=\"line\">void drawRect(void) &#123;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight() / 2; i += 2) &#123;</span><br><span class=\"line\">    display.drawRect(i, i, display.getWidth() - 2 * i, display.getHeight() - 2 * i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Adapted from Adafruit_SSD1306</span><br><span class=\"line\">void fillRect(void) &#123;</span><br><span class=\"line\">  uint8_t color = 1;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight() / 2; i += 3) &#123;</span><br><span class=\"line\">    display.setColor((color % 2 == 0) ? BLACK : WHITE); // alternate colors</span><br><span class=\"line\">    display.fillRect(i, i, display.getWidth() - i * 2, display.getHeight() - i * 2);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">    color++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  // Reset back to WHITE</span><br><span class=\"line\">  display.setColor(WHITE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// Adapted from Adafruit_SSD1306</span><br><span class=\"line\">void drawCircle(void) &#123;</span><br><span class=\"line\">  for (int16_t i = 0; i &lt; display.getHeight(); i += 2) &#123;</span><br><span class=\"line\">    display.drawCircle(display.getWidth() / 2, display.getHeight() / 2, i);</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(10);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  // This will draw the part of the circel in quadrant 1</span><br><span class=\"line\">  // Quadrants are numberd like this:</span><br><span class=\"line\">  //   0010 | 0001</span><br><span class=\"line\">  //  ------|-----</span><br><span class=\"line\">  //   0100 | 1000</span><br><span class=\"line\">  //</span><br><span class=\"line\">  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000001);</span><br><span class=\"line\">  display.display();</span><br><span class=\"line\">  delay(200);</span><br><span class=\"line\">  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000011);</span><br><span class=\"line\">  display.display();</span><br><span class=\"line\">  delay(200);</span><br><span class=\"line\">  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00000111);</span><br><span class=\"line\">  display.display();</span><br><span class=\"line\">  delay(200);</span><br><span class=\"line\">  display.drawCircleQuads(display.getWidth() / 2, display.getHeight() / 2, display.getHeight() / 4, 0b00001111);</span><br><span class=\"line\">  display.display();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void printBuffer(void) &#123;</span><br><span class=\"line\">  // Initialize the log buffer</span><br><span class=\"line\">  // allocate memory to store 8 lines of text and 30 chars per line.</span><br><span class=\"line\">  display.setLogBuffer(5, 20);  //5表述屏幕显示5行，20表示每行存放的char的长度</span><br><span class=\"line\"></span><br><span class=\"line\">  // Some test data</span><br><span class=\"line\">  const char* test[] = &#123;</span><br><span class=\"line\">    &quot;Hello&quot;,</span><br><span class=\"line\">    &quot;World&quot; ,</span><br><span class=\"line\">    &quot;----&quot;,</span><br><span class=\"line\">    &quot;Show off&quot;,</span><br><span class=\"line\">    &quot;how&quot;,</span><br><span class=\"line\">    &quot;the log buffer&quot;,</span><br><span class=\"line\">    &quot;is&quot;,</span><br><span class=\"line\">    &quot;working.&quot;,</span><br><span class=\"line\">    &quot;Even&quot;,</span><br><span class=\"line\">    &quot;scrolling is&quot;,</span><br><span class=\"line\">    &quot;working&quot;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  for (uint8_t i = 0; i &lt; 11; i++) &#123;</span><br><span class=\"line\">    display.clear();</span><br><span class=\"line\">    // Print to the screen</span><br><span class=\"line\">    display.println(test[i]);</span><br><span class=\"line\">    // Draw it to the internal screen buffer</span><br><span class=\"line\">    display.drawLogBuffer(0, 0);</span><br><span class=\"line\">    // Display it on the screen</span><br><span class=\"line\">    display.display();</span><br><span class=\"line\">    delay(500);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup() &#123;</span><br><span class=\"line\">  display.init();</span><br><span class=\"line\"></span><br><span class=\"line\">  display.flipScreenVertically();</span><br><span class=\"line\"></span><br><span class=\"line\">  display.setContrast(255);</span><br><span class=\"line\"></span><br><span class=\"line\">  drawLines();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  drawRect();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  fillRect();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  drawCircle();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">  printBuffer();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop() &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  display.init();</span><br><span class=\"line\">  display.flipScreenVertically();</span><br><span class=\"line\">  printBuffer();</span><br><span class=\"line\">  delay(1000);</span><br><span class=\"line\">  display.clear();</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"程序弄好了，接下来是接线图：\"><a href=\"#程序弄好了，接下来是接线图：\" class=\"headerlink\" title=\"程序弄好了，接下来是接线图：\"></a>程序弄好了，接下来是接线图：</h3><p><img src=\"https://i.niupic.com/images/2022/03/15/9Wyz.jpg\" alt=\"接线\"></p>\n<h3 id=\"VS-Code-platform-IDE软件使用：\"><a href=\"#VS-Code-platform-IDE软件使用：\" class=\"headerlink\" title=\"VS Code platform IDE软件使用：\"></a>VS Code platform IDE软件使用：</h3><p><img src=\"https://i.niupic.com/images/2022/03/15/9WyB.png\" alt=\"烧录\"></p>\n<h3 id=\"最终结果：\"><a href=\"#最终结果：\" class=\"headerlink\" title=\"最终结果：\"></a>最终结果：</h3><p><strong>ps:图片屏幕展示内容与示例代码实现不一样，图片里的是我另一个代码</strong><br><img src=\"https://i.niupic.com/images/2022/03/15/9WyA.jpg\" alt=\"显示\"></p>"},{"title":"ESP32通过WIFI获取网络时间","_content":"\n### 一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间\n<!-- more --> \n***不知道wifi怎么连接的这里有相关链接***——[esp32wifi连接网络](https://yu-728.github.io/2022/03/18/esp32_WiFi/)\n\n### 二、esp32中与时间相关的函数了解\n1. 使用STA或ETH模式连上互联网\n2. 使用下面函数从网络时间服务器上获取并设置时间：\n```\nvoid configTime(long gmtOffset_sec, int daylightOffset_sec, const char* server1, const char* server2 = nullptr, const char* server3 = nullptr)\n```\n网络时间服务器最常用的主机名是 pool.ntp.org ；\n**这时就有人说了，我不喜欢这个服务器还有其他的吗？**\n以下是一些常用的网络时间服务器供大家使用：\n\nName|Address\n---          |:--:\nWorldwide    |pool.ntp.org\nAsia         |asia.pool.ntp.org\nEurope       |europe.pool.ntp.org\nNorth America|north-america.pool.ntp.org\nSouth America|south-america.pool.ntp.org\nOceania|oceania.pool.ntp.org\n\n通过网络时间服务器获得的时间是世界协调时间（UTC）/格林尼治时间（GMT），不同地区的时间可以通过时区换算\n***gmtOffset_sec*** 参数就是用来修正时区的，比如对于我们东八区（UTC/GMT+08:00）来说该参数就需要填写 8 * 3600 \n如果使用夏令时 daylightOffset_sec 就填写3600，否则就填写0；\n3. 设置完成后就可以使用下面函数读取当前时间了：\nbool getLocalTime(struct tm * info, uint32_t ms = 5000)\nms 为该操作超时时间，超时则返回false；\ninfo 是一个 ***struct tm*** 结构体对象，用于接收当前时间；\n#### Struct tm 结构体解析：\n\n```\nstruct tm {\nint tm_sec; // 秒，取值0~59；\nint tm_min; // 分，取值0~59；\nint tm_hour; // 时，取值0~23；\nint tm_mday; // 月中的日期，取值1~31；\nint tm_mon; // 月，取值0~11；\nint tm_year; // 年，其值等于实际年份减去1900；\nint tm_wday; // 星期，取值0~6，0为周日，1为周一，依此类推；\nint tm_yday; // 年中的日期，取值0~365，0代表1月1日，1代表1月2日，依此类推；\nint tm_isdst; // 夏令时标识符，实行夏令时的时候，tm_isdst为正；不实行夏令时的进候，tm_isdst为0；不了解情况时，tm_isdst()为负\n};\n```\n\n***结构体格式化输出规则***\n\n>%a 星期几的简写\n%A 星期几的全称\n%b 月分的简写\n%B 月份的全称\n%c 标准的日期的时间串\n%C 年份的后两位数字\n%d 十进制表示的每月的第几天\n%D 月/天/年\n%e 在两字符域中，十进制表示的每月的第几天\n%F 年-月-日\n%g 年份的后两位数字，使用基于周的年\n%G 年分，使用基于周的年\n%h 简写的月份名\n%H 24小时制的小时\n%I 12小时制的小时\n%j 十进制表示的每年的第几天\n%m 十进制表示的月份\n%M 十时制表示的分钟数\n%p 本地的AM或PM的等价显示\n%r 12小时的时间\n%R 显示小时和分钟：hh:mm\n%S 十进制的秒数\n%t 水平制表符\n%T 显示时分秒：hh:mm:ss\n%u 每周的第几天，星期一为第一天 （值从0到6，星期一为0）\n%U 第年的第几周，把星期日做为第一天（值从0到53）\n%V 每年的第几周，使用基于周的年\n%w 十进制表示的星期几（值从0到6，星期天为0）\n%W 每年的第几周，把星期一做为第一天（值从0到53）\n%x 标准的日期串\n%X 标准的时间串\n%y 不带世纪的十进制年份（值从0到99）\n%Y 带世纪部分的十进制年份\n%z，%Z 时区名称，如果不能得到时区名称则返回空字符\n\n\n## 示例代码：\n```\n#include <WiFi.h>\n\nconst char* ssid = \"HONOR V20\"; //wifi nane\nconst char* password = \"yubaolin\"; // wifi password\n\n//-----------网络时间获取-----------//\nconst char *ntpServer = \"pool.ntp.org\"; //网络时间服务器\n//时区设置函数，东八区（UTC/GMT+8:00）写成8*3600\nconst long gmtOffset_sec = 8 * 3600;    \nconst int daylightOffset_sec = 0;   //夏令时填写3600，否则填0\n\nvoid printLocalTime()\n{\n    struct tm timeinfo;\n    if (!getLocalTime(&timeinfo))\n    {\n        Serial.println(\"Failed to obtain time\");\n        return;\n    }\n    Serial.println(&timeinfo, \"%F %T %A\"); // 格式化输出\n}\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println();\n\n    WiFi.begin(ssid, password);\n    while (WiFi.status() != WL_CONNECTED)\n    {\n        delay(500);\n        Serial.print(\".\");\n    }\n    Serial.println(\"WiFi connected!\");\n\n    // 从网络时间服务器上获取并设置时间\n    // 获取成功后芯片会使用RTC时钟保持时间的更新\n    configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n    printLocalTime();\n\n    // WiFi.disconnect(true);\n    // WiFi.mode(WIFI_OFF);\n    // Serial.println(\"WiFi disconnected!\");\n}\n\nvoid loop()\n{\n    delay(1000);\n    printLocalTime();\n}\n```\n### 结果\n![wifi获取时间](https://i.niupic.com/images/2022/03/21/9WTc.png)\n\n\n## 参考文档\n[https://blog.csdn.net/Naisu_kun/article/details/115627629?spm=1001.2101.3001.6650.17&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&utm_relevant_index=19](https://blog.csdn.net/Naisu_kun/article/details/115627629?spm=1001.2101.3001.6650.17&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&utm_relevant_index=19)","source":"_posts/esp32-weather/esp_Time.md","raw":"---\ntitle: ESP32通过WIFI获取网络时间\n---\n\n### 一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间\n<!-- more --> \n***不知道wifi怎么连接的这里有相关链接***——[esp32wifi连接网络](https://yu-728.github.io/2022/03/18/esp32_WiFi/)\n\n### 二、esp32中与时间相关的函数了解\n1. 使用STA或ETH模式连上互联网\n2. 使用下面函数从网络时间服务器上获取并设置时间：\n```\nvoid configTime(long gmtOffset_sec, int daylightOffset_sec, const char* server1, const char* server2 = nullptr, const char* server3 = nullptr)\n```\n网络时间服务器最常用的主机名是 pool.ntp.org ；\n**这时就有人说了，我不喜欢这个服务器还有其他的吗？**\n以下是一些常用的网络时间服务器供大家使用：\n\nName|Address\n---          |:--:\nWorldwide    |pool.ntp.org\nAsia         |asia.pool.ntp.org\nEurope       |europe.pool.ntp.org\nNorth America|north-america.pool.ntp.org\nSouth America|south-america.pool.ntp.org\nOceania|oceania.pool.ntp.org\n\n通过网络时间服务器获得的时间是世界协调时间（UTC）/格林尼治时间（GMT），不同地区的时间可以通过时区换算\n***gmtOffset_sec*** 参数就是用来修正时区的，比如对于我们东八区（UTC/GMT+08:00）来说该参数就需要填写 8 * 3600 \n如果使用夏令时 daylightOffset_sec 就填写3600，否则就填写0；\n3. 设置完成后就可以使用下面函数读取当前时间了：\nbool getLocalTime(struct tm * info, uint32_t ms = 5000)\nms 为该操作超时时间，超时则返回false；\ninfo 是一个 ***struct tm*** 结构体对象，用于接收当前时间；\n#### Struct tm 结构体解析：\n\n```\nstruct tm {\nint tm_sec; // 秒，取值0~59；\nint tm_min; // 分，取值0~59；\nint tm_hour; // 时，取值0~23；\nint tm_mday; // 月中的日期，取值1~31；\nint tm_mon; // 月，取值0~11；\nint tm_year; // 年，其值等于实际年份减去1900；\nint tm_wday; // 星期，取值0~6，0为周日，1为周一，依此类推；\nint tm_yday; // 年中的日期，取值0~365，0代表1月1日，1代表1月2日，依此类推；\nint tm_isdst; // 夏令时标识符，实行夏令时的时候，tm_isdst为正；不实行夏令时的进候，tm_isdst为0；不了解情况时，tm_isdst()为负\n};\n```\n\n***结构体格式化输出规则***\n\n>%a 星期几的简写\n%A 星期几的全称\n%b 月分的简写\n%B 月份的全称\n%c 标准的日期的时间串\n%C 年份的后两位数字\n%d 十进制表示的每月的第几天\n%D 月/天/年\n%e 在两字符域中，十进制表示的每月的第几天\n%F 年-月-日\n%g 年份的后两位数字，使用基于周的年\n%G 年分，使用基于周的年\n%h 简写的月份名\n%H 24小时制的小时\n%I 12小时制的小时\n%j 十进制表示的每年的第几天\n%m 十进制表示的月份\n%M 十时制表示的分钟数\n%p 本地的AM或PM的等价显示\n%r 12小时的时间\n%R 显示小时和分钟：hh:mm\n%S 十进制的秒数\n%t 水平制表符\n%T 显示时分秒：hh:mm:ss\n%u 每周的第几天，星期一为第一天 （值从0到6，星期一为0）\n%U 第年的第几周，把星期日做为第一天（值从0到53）\n%V 每年的第几周，使用基于周的年\n%w 十进制表示的星期几（值从0到6，星期天为0）\n%W 每年的第几周，把星期一做为第一天（值从0到53）\n%x 标准的日期串\n%X 标准的时间串\n%y 不带世纪的十进制年份（值从0到99）\n%Y 带世纪部分的十进制年份\n%z，%Z 时区名称，如果不能得到时区名称则返回空字符\n\n\n## 示例代码：\n```\n#include <WiFi.h>\n\nconst char* ssid = \"HONOR V20\"; //wifi nane\nconst char* password = \"yubaolin\"; // wifi password\n\n//-----------网络时间获取-----------//\nconst char *ntpServer = \"pool.ntp.org\"; //网络时间服务器\n//时区设置函数，东八区（UTC/GMT+8:00）写成8*3600\nconst long gmtOffset_sec = 8 * 3600;    \nconst int daylightOffset_sec = 0;   //夏令时填写3600，否则填0\n\nvoid printLocalTime()\n{\n    struct tm timeinfo;\n    if (!getLocalTime(&timeinfo))\n    {\n        Serial.println(\"Failed to obtain time\");\n        return;\n    }\n    Serial.println(&timeinfo, \"%F %T %A\"); // 格式化输出\n}\n\nvoid setup()\n{\n    Serial.begin(115200);\n    Serial.println();\n\n    WiFi.begin(ssid, password);\n    while (WiFi.status() != WL_CONNECTED)\n    {\n        delay(500);\n        Serial.print(\".\");\n    }\n    Serial.println(\"WiFi connected!\");\n\n    // 从网络时间服务器上获取并设置时间\n    // 获取成功后芯片会使用RTC时钟保持时间的更新\n    configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);\n    printLocalTime();\n\n    // WiFi.disconnect(true);\n    // WiFi.mode(WIFI_OFF);\n    // Serial.println(\"WiFi disconnected!\");\n}\n\nvoid loop()\n{\n    delay(1000);\n    printLocalTime();\n}\n```\n### 结果\n![wifi获取时间](https://i.niupic.com/images/2022/03/21/9WTc.png)\n\n\n## 参考文档\n[https://blog.csdn.net/Naisu_kun/article/details/115627629?spm=1001.2101.3001.6650.17&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&utm_relevant_index=19](https://blog.csdn.net/Naisu_kun/article/details/115627629?spm=1001.2101.3001.6650.17&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&utm_relevant_index=19)","slug":"esp32-weather/esp_Time","published":1,"date":"2022-05-25T10:06:34.398Z","updated":"2022-03-24T09:46:46.652Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeou000m68ur4hrfd8c1","content":"<h3 id=\"一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间\"><a href=\"#一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间\" class=\"headerlink\" title=\"一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间\"></a>一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间</h3><span id=\"more\"></span> \n<p><em><strong>不知道wifi怎么连接的这里有相关链接</strong></em>——<a href=\"https://yu-728.github.io/2022/03/18/esp32_WiFi/\">esp32wifi连接网络</a></p>\n<h3 id=\"二、esp32中与时间相关的函数了解\"><a href=\"#二、esp32中与时间相关的函数了解\" class=\"headerlink\" title=\"二、esp32中与时间相关的函数了解\"></a>二、esp32中与时间相关的函数了解</h3><ol>\n<li>使用STA或ETH模式连上互联网</li>\n<li>使用下面函数从网络时间服务器上获取并设置时间：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void configTime(long gmtOffset_sec, int daylightOffset_sec, const char* server1, const char* server2 = nullptr, const char* server3 = nullptr)</span><br></pre></td></tr></table></figure>\n网络时间服务器最常用的主机名是 pool.ntp.org ；</li>\n</ol>\n<p><strong>这时就有人说了，我不喜欢这个服务器还有其他的吗？</strong><br>以下是一些常用的网络时间服务器供大家使用：</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th align=\"center\">Address</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Worldwide</td>\n<td align=\"center\">pool.ntp.org</td>\n</tr>\n<tr>\n<td>Asia</td>\n<td align=\"center\">asia.pool.ntp.org</td>\n</tr>\n<tr>\n<td>Europe</td>\n<td align=\"center\">europe.pool.ntp.org</td>\n</tr>\n<tr>\n<td>North America</td>\n<td align=\"center\">north-america.pool.ntp.org</td>\n</tr>\n<tr>\n<td>South America</td>\n<td align=\"center\">south-america.pool.ntp.org</td>\n</tr>\n<tr>\n<td>Oceania</td>\n<td align=\"center\">oceania.pool.ntp.org</td>\n</tr>\n</tbody></table>\n<p>通过网络时间服务器获得的时间是世界协调时间（UTC）/格林尼治时间（GMT），不同地区的时间可以通过时区换算<br><em><strong>gmtOffset_sec</strong></em> 参数就是用来修正时区的，比如对于我们东八区（UTC/GMT+08:00）来说该参数就需要填写 8 * 3600<br>如果使用夏令时 daylightOffset_sec 就填写3600，否则就填写0；<br>3. 设置完成后就可以使用下面函数读取当前时间了：<br>bool getLocalTime(struct tm * info, uint32_t ms = 5000)<br>ms 为该操作超时时间，超时则返回false；<br>info 是一个 <em><strong>struct tm</strong></em> 结构体对象，用于接收当前时间；</p>\n<h4 id=\"Struct-tm-结构体解析：\"><a href=\"#Struct-tm-结构体解析：\" class=\"headerlink\" title=\"Struct tm 结构体解析：\"></a>Struct tm 结构体解析：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct tm &#123;</span><br><span class=\"line\">int tm_sec; // 秒，取值0~59；</span><br><span class=\"line\">int tm_min; // 分，取值0~59；</span><br><span class=\"line\">int tm_hour; // 时，取值0~23；</span><br><span class=\"line\">int tm_mday; // 月中的日期，取值1~31；</span><br><span class=\"line\">int tm_mon; // 月，取值0~11；</span><br><span class=\"line\">int tm_year; // 年，其值等于实际年份减去1900；</span><br><span class=\"line\">int tm_wday; // 星期，取值0~6，0为周日，1为周一，依此类推；</span><br><span class=\"line\">int tm_yday; // 年中的日期，取值0~365，0代表1月1日，1代表1月2日，依此类推；</span><br><span class=\"line\">int tm_isdst; // 夏令时标识符，实行夏令时的时候，tm_isdst为正；不实行夏令时的进候，tm_isdst为0；不了解情况时，tm_isdst()为负</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>结构体格式化输出规则</strong></em></p>\n<blockquote>\n<p>%a 星期几的简写<br>%A 星期几的全称<br>%b 月分的简写<br>%B 月份的全称<br>%c 标准的日期的时间串<br>%C 年份的后两位数字<br>%d 十进制表示的每月的第几天<br>%D 月/天/年<br>%e 在两字符域中，十进制表示的每月的第几天<br>%F 年-月-日<br>%g 年份的后两位数字，使用基于周的年<br>%G 年分，使用基于周的年<br>%h 简写的月份名<br>%H 24小时制的小时<br>%I 12小时制的小时<br>%j 十进制表示的每年的第几天<br>%m 十进制表示的月份<br>%M 十时制表示的分钟数<br>%p 本地的AM或PM的等价显示<br>%r 12小时的时间<br>%R 显示小时和分钟：hh:mm<br>%S 十进制的秒数<br>%t 水平制表符<br>%T 显示时分秒：hh:mm:ss<br>%u 每周的第几天，星期一为第一天 （值从0到6，星期一为0）<br>%U 第年的第几周，把星期日做为第一天（值从0到53）<br>%V 每年的第几周，使用基于周的年<br>%w 十进制表示的星期几（值从0到6，星期天为0）<br>%W 每年的第几周，把星期一做为第一天（值从0到53）<br>%x 标准的日期串<br>%X 标准的时间串<br>%y 不带世纪的十进制年份（值从0到99）<br>%Y 带世纪部分的十进制年份<br>%z，%Z 时区名称，如果不能得到时区名称则返回空字符</p>\n</blockquote>\n<h2 id=\"示例代码：\"><a href=\"#示例代码：\" class=\"headerlink\" title=\"示例代码：\"></a>示例代码：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;WiFi.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">//-----------网络时间获取-----------//</span><br><span class=\"line\">const char *ntpServer = &quot;pool.ntp.org&quot;; //网络时间服务器</span><br><span class=\"line\">//时区设置函数，东八区（UTC/GMT+8:00）写成8*3600</span><br><span class=\"line\">const long gmtOffset_sec = 8 * 3600;    </span><br><span class=\"line\">const int daylightOffset_sec = 0;   //夏令时填写3600，否则填0</span><br><span class=\"line\"></span><br><span class=\"line\">void printLocalTime()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    struct tm timeinfo;</span><br><span class=\"line\">    if (!getLocalTime(&amp;timeinfo))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Serial.println(&quot;Failed to obtain time&quot;);</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.println(&amp;timeinfo, &quot;%F %T %A&quot;); // 格式化输出</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Serial.begin(115200);</span><br><span class=\"line\">    Serial.println();</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">    while (WiFi.status() != WL_CONNECTED)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        delay(500);</span><br><span class=\"line\">        Serial.print(&quot;.&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.println(&quot;WiFi connected!&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    // 从网络时间服务器上获取并设置时间</span><br><span class=\"line\">    // 获取成功后芯片会使用RTC时钟保持时间的更新</span><br><span class=\"line\">    configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);</span><br><span class=\"line\">    printLocalTime();</span><br><span class=\"line\"></span><br><span class=\"line\">    // WiFi.disconnect(true);</span><br><span class=\"line\">    // WiFi.mode(WIFI_OFF);</span><br><span class=\"line\">    // Serial.println(&quot;WiFi disconnected!&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    delay(1000);</span><br><span class=\"line\">    printLocalTime();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p><img src=\"https://i.niupic.com/images/2022/03/21/9WTc.png\" alt=\"wifi获取时间\"></p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://blog.csdn.net/Naisu_kun/article/details/115627629?spm=1001.2101.3001.6650.17&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-17.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-17.pc_relevant_default&utm_relevant_index=19\">https://blog.csdn.net/Naisu_kun/article/details/115627629?spm=1001.2101.3001.6650.17&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&amp;utm_relevant_index=19</a></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间\"><a href=\"#一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间\" class=\"headerlink\" title=\"一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间\"></a>一、这里首先要知道esp32的wifi如何连接，才能获取到网络服务器的时间</h3>","more":"<p><em><strong>不知道wifi怎么连接的这里有相关链接</strong></em>——<a href=\"https://yu-728.github.io/2022/03/18/esp32_WiFi/\">esp32wifi连接网络</a></p>\n<h3 id=\"二、esp32中与时间相关的函数了解\"><a href=\"#二、esp32中与时间相关的函数了解\" class=\"headerlink\" title=\"二、esp32中与时间相关的函数了解\"></a>二、esp32中与时间相关的函数了解</h3><ol>\n<li>使用STA或ETH模式连上互联网</li>\n<li>使用下面函数从网络时间服务器上获取并设置时间：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void configTime(long gmtOffset_sec, int daylightOffset_sec, const char* server1, const char* server2 = nullptr, const char* server3 = nullptr)</span><br></pre></td></tr></table></figure>\n网络时间服务器最常用的主机名是 pool.ntp.org ；</li>\n</ol>\n<p><strong>这时就有人说了，我不喜欢这个服务器还有其他的吗？</strong><br>以下是一些常用的网络时间服务器供大家使用：</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th align=\"center\">Address</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Worldwide</td>\n<td align=\"center\">pool.ntp.org</td>\n</tr>\n<tr>\n<td>Asia</td>\n<td align=\"center\">asia.pool.ntp.org</td>\n</tr>\n<tr>\n<td>Europe</td>\n<td align=\"center\">europe.pool.ntp.org</td>\n</tr>\n<tr>\n<td>North America</td>\n<td align=\"center\">north-america.pool.ntp.org</td>\n</tr>\n<tr>\n<td>South America</td>\n<td align=\"center\">south-america.pool.ntp.org</td>\n</tr>\n<tr>\n<td>Oceania</td>\n<td align=\"center\">oceania.pool.ntp.org</td>\n</tr>\n</tbody></table>\n<p>通过网络时间服务器获得的时间是世界协调时间（UTC）/格林尼治时间（GMT），不同地区的时间可以通过时区换算<br><em><strong>gmtOffset_sec</strong></em> 参数就是用来修正时区的，比如对于我们东八区（UTC/GMT+08:00）来说该参数就需要填写 8 * 3600<br>如果使用夏令时 daylightOffset_sec 就填写3600，否则就填写0；<br>3. 设置完成后就可以使用下面函数读取当前时间了：<br>bool getLocalTime(struct tm * info, uint32_t ms = 5000)<br>ms 为该操作超时时间，超时则返回false；<br>info 是一个 <em><strong>struct tm</strong></em> 结构体对象，用于接收当前时间；</p>\n<h4 id=\"Struct-tm-结构体解析：\"><a href=\"#Struct-tm-结构体解析：\" class=\"headerlink\" title=\"Struct tm 结构体解析：\"></a>Struct tm 结构体解析：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct tm &#123;</span><br><span class=\"line\">int tm_sec; // 秒，取值0~59；</span><br><span class=\"line\">int tm_min; // 分，取值0~59；</span><br><span class=\"line\">int tm_hour; // 时，取值0~23；</span><br><span class=\"line\">int tm_mday; // 月中的日期，取值1~31；</span><br><span class=\"line\">int tm_mon; // 月，取值0~11；</span><br><span class=\"line\">int tm_year; // 年，其值等于实际年份减去1900；</span><br><span class=\"line\">int tm_wday; // 星期，取值0~6，0为周日，1为周一，依此类推；</span><br><span class=\"line\">int tm_yday; // 年中的日期，取值0~365，0代表1月1日，1代表1月2日，依此类推；</span><br><span class=\"line\">int tm_isdst; // 夏令时标识符，实行夏令时的时候，tm_isdst为正；不实行夏令时的进候，tm_isdst为0；不了解情况时，tm_isdst()为负</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>结构体格式化输出规则</strong></em></p>\n<blockquote>\n<p>%a 星期几的简写<br>%A 星期几的全称<br>%b 月分的简写<br>%B 月份的全称<br>%c 标准的日期的时间串<br>%C 年份的后两位数字<br>%d 十进制表示的每月的第几天<br>%D 月/天/年<br>%e 在两字符域中，十进制表示的每月的第几天<br>%F 年-月-日<br>%g 年份的后两位数字，使用基于周的年<br>%G 年分，使用基于周的年<br>%h 简写的月份名<br>%H 24小时制的小时<br>%I 12小时制的小时<br>%j 十进制表示的每年的第几天<br>%m 十进制表示的月份<br>%M 十时制表示的分钟数<br>%p 本地的AM或PM的等价显示<br>%r 12小时的时间<br>%R 显示小时和分钟：hh:mm<br>%S 十进制的秒数<br>%t 水平制表符<br>%T 显示时分秒：hh:mm:ss<br>%u 每周的第几天，星期一为第一天 （值从0到6，星期一为0）<br>%U 第年的第几周，把星期日做为第一天（值从0到53）<br>%V 每年的第几周，使用基于周的年<br>%w 十进制表示的星期几（值从0到6，星期天为0）<br>%W 每年的第几周，把星期一做为第一天（值从0到53）<br>%x 标准的日期串<br>%X 标准的时间串<br>%y 不带世纪的十进制年份（值从0到99）<br>%Y 带世纪部分的十进制年份<br>%z，%Z 时区名称，如果不能得到时区名称则返回空字符</p>\n</blockquote>\n<h2 id=\"示例代码：\"><a href=\"#示例代码：\" class=\"headerlink\" title=\"示例代码：\"></a>示例代码：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;WiFi.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">const char* ssid = &quot;HONOR V20&quot;; //wifi nane</span><br><span class=\"line\">const char* password = &quot;yubaolin&quot;; // wifi password</span><br><span class=\"line\"></span><br><span class=\"line\">//-----------网络时间获取-----------//</span><br><span class=\"line\">const char *ntpServer = &quot;pool.ntp.org&quot;; //网络时间服务器</span><br><span class=\"line\">//时区设置函数，东八区（UTC/GMT+8:00）写成8*3600</span><br><span class=\"line\">const long gmtOffset_sec = 8 * 3600;    </span><br><span class=\"line\">const int daylightOffset_sec = 0;   //夏令时填写3600，否则填0</span><br><span class=\"line\"></span><br><span class=\"line\">void printLocalTime()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    struct tm timeinfo;</span><br><span class=\"line\">    if (!getLocalTime(&amp;timeinfo))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        Serial.println(&quot;Failed to obtain time&quot;);</span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.println(&amp;timeinfo, &quot;%F %T %A&quot;); // 格式化输出</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void setup()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    Serial.begin(115200);</span><br><span class=\"line\">    Serial.println();</span><br><span class=\"line\"></span><br><span class=\"line\">    WiFi.begin(ssid, password);</span><br><span class=\"line\">    while (WiFi.status() != WL_CONNECTED)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        delay(500);</span><br><span class=\"line\">        Serial.print(&quot;.&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Serial.println(&quot;WiFi connected!&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    // 从网络时间服务器上获取并设置时间</span><br><span class=\"line\">    // 获取成功后芯片会使用RTC时钟保持时间的更新</span><br><span class=\"line\">    configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);</span><br><span class=\"line\">    printLocalTime();</span><br><span class=\"line\"></span><br><span class=\"line\">    // WiFi.disconnect(true);</span><br><span class=\"line\">    // WiFi.mode(WIFI_OFF);</span><br><span class=\"line\">    // Serial.println(&quot;WiFi disconnected!&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void loop()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    delay(1000);</span><br><span class=\"line\">    printLocalTime();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p><img src=\"https://i.niupic.com/images/2022/03/21/9WTc.png\" alt=\"wifi获取时间\"></p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><p><a href=\"https://blog.csdn.net/Naisu_kun/article/details/115627629?spm=1001.2101.3001.6650.17&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-17.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-17.pc_relevant_default&utm_relevant_index=19\">https://blog.csdn.net/Naisu_kun/article/details/115627629?spm=1001.2101.3001.6650.17&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-17.pc_relevant_default&amp;utm_relevant_index=19</a></p>"},{"title":"BODAS的使用记录","_content":"# 前言\n好久没写博客了，上一次写博客还是上一次，清明和“三月三”假期玩了好几天，博客都断更了...假期结束开始上班了，努力和以前一样一天一篇博客。\n<!--more-->\n最近接触了静液压系统，接触到了BODAS这个软件，和以前使用的调参数的软件有着异曲同工之妙。但是使用起来还是有所区别的，毕竟是力士乐开发的，还需要用加密狗。\n# BODAS介绍\n具体的我也不太了解，用我的话来说就是一款力士乐高级静液压系统配套使用的调参数的工具，在连接控制器后可以实时改变其中的参数。至于控制器中的底层逻辑我们是看不到的。毕竟人家力士乐也害怕被抄袭。\n# BODAS使用\n使用过程如下：\n1. pcan连接力士乐的CAN0控制器，我这边是12pin和13pin\n12pin: CAN HIGH\n13pin: CAN LOW\n2. 插上力士乐的加密狗，打开软件，点击Search for 会自动连接控制器\n3. 控制器连接完成后就可以根据自己的需要进行参数修改。在修改参数前最好对文件进行保存，顶部工具栏中有PAR to PC 和ERP to PC 是将PAR文件和ERP文件保存到本地电脑中。\n4. 修改完参数后记得点击Save对参数进行保存，有些参数需要重新上电后才生效。\n5. PCAN数据读取，要使用PCAN读取控制器实时的参数，记得要把参数文件中的调试帧开启。（PS：具体名字我记不清了，我就记得是Test开头的）Test XXX on(off为关闭)\n\n做完以上的操作你就可以在你是用pcan软件中读取到你修改参数值后的实时参数变化了。\n\n**第一次使用BODAS不是很熟练，后续有一定的使用经验和理解后会对此文章进行补充，未完待续...**","source":"_posts/learning/BODAS-Using.md","raw":"---\ntitle: BODAS的使用记录\n---\n# 前言\n好久没写博客了，上一次写博客还是上一次，清明和“三月三”假期玩了好几天，博客都断更了...假期结束开始上班了，努力和以前一样一天一篇博客。\n<!--more-->\n最近接触了静液压系统，接触到了BODAS这个软件，和以前使用的调参数的软件有着异曲同工之妙。但是使用起来还是有所区别的，毕竟是力士乐开发的，还需要用加密狗。\n# BODAS介绍\n具体的我也不太了解，用我的话来说就是一款力士乐高级静液压系统配套使用的调参数的工具，在连接控制器后可以实时改变其中的参数。至于控制器中的底层逻辑我们是看不到的。毕竟人家力士乐也害怕被抄袭。\n# BODAS使用\n使用过程如下：\n1. pcan连接力士乐的CAN0控制器，我这边是12pin和13pin\n12pin: CAN HIGH\n13pin: CAN LOW\n2. 插上力士乐的加密狗，打开软件，点击Search for 会自动连接控制器\n3. 控制器连接完成后就可以根据自己的需要进行参数修改。在修改参数前最好对文件进行保存，顶部工具栏中有PAR to PC 和ERP to PC 是将PAR文件和ERP文件保存到本地电脑中。\n4. 修改完参数后记得点击Save对参数进行保存，有些参数需要重新上电后才生效。\n5. PCAN数据读取，要使用PCAN读取控制器实时的参数，记得要把参数文件中的调试帧开启。（PS：具体名字我记不清了，我就记得是Test开头的）Test XXX on(off为关闭)\n\n做完以上的操作你就可以在你是用pcan软件中读取到你修改参数值后的实时参数变化了。\n\n**第一次使用BODAS不是很熟练，后续有一定的使用经验和理解后会对此文章进行补充，未完待续...**","slug":"learning/BODAS-Using","published":1,"date":"2022-05-25T10:06:34.412Z","updated":"2022-04-08T07:17:15.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeov000n68urflngf6e2","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>好久没写博客了，上一次写博客还是上一次，清明和“三月三”假期玩了好几天，博客都断更了…假期结束开始上班了，努力和以前一样一天一篇博客。</p>\n<span id=\"more\"></span>\n<p>最近接触了静液压系统，接触到了BODAS这个软件，和以前使用的调参数的软件有着异曲同工之妙。但是使用起来还是有所区别的，毕竟是力士乐开发的，还需要用加密狗。</p>\n<h1 id=\"BODAS介绍\"><a href=\"#BODAS介绍\" class=\"headerlink\" title=\"BODAS介绍\"></a>BODAS介绍</h1><p>具体的我也不太了解，用我的话来说就是一款力士乐高级静液压系统配套使用的调参数的工具，在连接控制器后可以实时改变其中的参数。至于控制器中的底层逻辑我们是看不到的。毕竟人家力士乐也害怕被抄袭。</p>\n<h1 id=\"BODAS使用\"><a href=\"#BODAS使用\" class=\"headerlink\" title=\"BODAS使用\"></a>BODAS使用</h1><p>使用过程如下：</p>\n<ol>\n<li>pcan连接力士乐的CAN0控制器，我这边是12pin和13pin<br>12pin: CAN HIGH<br>13pin: CAN LOW</li>\n<li>插上力士乐的加密狗，打开软件，点击Search for 会自动连接控制器</li>\n<li>控制器连接完成后就可以根据自己的需要进行参数修改。在修改参数前最好对文件进行保存，顶部工具栏中有PAR to PC 和ERP to PC 是将PAR文件和ERP文件保存到本地电脑中。</li>\n<li>修改完参数后记得点击Save对参数进行保存，有些参数需要重新上电后才生效。</li>\n<li>PCAN数据读取，要使用PCAN读取控制器实时的参数，记得要把参数文件中的调试帧开启。（PS：具体名字我记不清了，我就记得是Test开头的）Test XXX on(off为关闭)</li>\n</ol>\n<p>做完以上的操作你就可以在你是用pcan软件中读取到你修改参数值后的实时参数变化了。</p>\n<p><strong>第一次使用BODAS不是很熟练，后续有一定的使用经验和理解后会对此文章进行补充，未完待续…</strong></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>好久没写博客了，上一次写博客还是上一次，清明和“三月三”假期玩了好几天，博客都断更了…假期结束开始上班了，努力和以前一样一天一篇博客。</p>","more":"<p>最近接触了静液压系统，接触到了BODAS这个软件，和以前使用的调参数的软件有着异曲同工之妙。但是使用起来还是有所区别的，毕竟是力士乐开发的，还需要用加密狗。</p>\n<h1 id=\"BODAS介绍\"><a href=\"#BODAS介绍\" class=\"headerlink\" title=\"BODAS介绍\"></a>BODAS介绍</h1><p>具体的我也不太了解，用我的话来说就是一款力士乐高级静液压系统配套使用的调参数的工具，在连接控制器后可以实时改变其中的参数。至于控制器中的底层逻辑我们是看不到的。毕竟人家力士乐也害怕被抄袭。</p>\n<h1 id=\"BODAS使用\"><a href=\"#BODAS使用\" class=\"headerlink\" title=\"BODAS使用\"></a>BODAS使用</h1><p>使用过程如下：</p>\n<ol>\n<li>pcan连接力士乐的CAN0控制器，我这边是12pin和13pin<br>12pin: CAN HIGH<br>13pin: CAN LOW</li>\n<li>插上力士乐的加密狗，打开软件，点击Search for 会自动连接控制器</li>\n<li>控制器连接完成后就可以根据自己的需要进行参数修改。在修改参数前最好对文件进行保存，顶部工具栏中有PAR to PC 和ERP to PC 是将PAR文件和ERP文件保存到本地电脑中。</li>\n<li>修改完参数后记得点击Save对参数进行保存，有些参数需要重新上电后才生效。</li>\n<li>PCAN数据读取，要使用PCAN读取控制器实时的参数，记得要把参数文件中的调试帧开启。（PS：具体名字我记不清了，我就记得是Test开头的）Test XXX on(off为关闭)</li>\n</ol>\n<p>做完以上的操作你就可以在你是用pcan软件中读取到你修改参数值后的实时参数变化了。</p>\n<p><strong>第一次使用BODAS不是很熟练，后续有一定的使用经验和理解后会对此文章进行补充，未完待续…</strong></p>"},{"title":"CAN总线的数据解析","_content":"\n# CAN报文的种类和帧格式解析\n<!-- more -->\n## 1.1 报文种类\n数据帧：用于发送节点向接受节点传送数据（最常用）\n远程帧：用于接收节点向某个发送节点请求数据\n错误帧：用于当某节点检测出错误时向其他节点通知错误帧\n过载帧：用于接收节点向发送节点通知自身接收能力的帧\n帧间隔：将数据帧或远程帧与前面的帧分离的帧\n## 1.2数据帧格式解析\n数据帧组成：\n帧起始|仲裁段|控制段|数据段|CRC段|ACK段|帧结束\n---|:--:|:--:|:--:|:--:|:--:|---:\n\n### 一、帧起始\n帧起始，SOF，由1个显性位组成\n***在总线空闲的时候***，发送节点发出帧起始，其他接收节点从这个帧起始位进行<font color=#FF0000>同步。</font>\n### 二、仲裁段\n标准格式：\nID[0: 10]|RTR\n---|:--:|\n扩展格式：\nID[0: 10]| SRR| IDE|ID[11: 28]| RTR|\n---|:--:|:--:|:--:|:--:|\n\n- 扩展帧：29位ID，前11ID位置与标准帧ID编码位置相同\n- SRR：代替远程帧请求位，占1bit,为显性\n- IDE：识别符扩展位，占1bit\n     标准帧中该位位于<font color=#FF0000>控制段</font>，为显性\n     扩展帧中该位位于<font color=#FF0000>仲裁段</font>，为隐性\n- RTR：远程帧发送标识位，占1bit，为显性\n\n#### 掌握仲裁机制\nID越小越优先\n\n### 三、控制段\n标准格式：\nIDE| r0 | DLC|\n---|:--:|:--:|\n扩展格式：\nr1 | r0 | DLC|\n---|:--:|:--:|\n- IDE：识别符扩展位，占1bit\n     标准帧中该位位于<font color=#FF0000>控制段</font>，为显性\n     扩展帧中该位位于<font color=#FF0000>仲裁段</font>，为隐性\n- DLC：数据段的长度码，占4bit，BCD编码，范围**0~8**\n  ***PS：接收方对DLC=9~15的情况并不视为错误***\n- r0、r1：保留位0和1，各占1bit,总是用显性电平填充\n### 四、数据段\n***Data: Byte0 ~ Byte7,八位字节***\n**传输时首先发送MSB（最高位），大端模式（Motoroal）**\n在报文解析软件（如PE5）中可以自行设置解析报文格式为Motrola/Intel\n\n一般在发送报文的时候会设置报文的发送模式，Motorola（大端模式，低位高地址，高位低地址）或者Intel（小端模式，高位高地址，低位低地址）\n个人觉得用Intel好一些比较容易理解，报文数据解析起来也方便。\n**这里说一下我使用Motrola发报文遇到的问题以及为什么使用Intel模式好**\n这里我在使用Motrola发送数据再用PE5解析报文的时候发现，如果我发的数据是先发了4个bit随后再发1个byte的数据。再用PE5解析的时候Byte0那个内存0——3bit位没有数据（因为Motrolas数据从高地址开始），随后那个1Byte的数据从Byte1开始存储数据。等于说Byte0那个内存0——3bit就浪费了。用Intel模式就不会出现这个问题。\n### 五、CRC段\n这个段我们不需要去关注太多，知道这是判断数据帧是否有效就行。就是发送的数据和接收节点收到的报文是否正确。\n简单说一下此段的帧格式：\nCRC值[0: 14]|CRC界定符|\n---         |    :--:|\n### 六、ACK段\n发送节点根据此段判断报文是否发送成功。\n结构：\nACK应答位|ACK界定符（1个隐性电平）|\n---         |    :--:|\nACK应答位：\n发送节点：发送隐性电平\n接收正确的节点：发送显性电平\n总线显与结果：显性电平\n### 七、帧结束\n由7个连续的隐性位组成\n### 八、帧间隔ITM\n帧间隔ITM：\n3个连续的隐性位组成\n总线空闲：\n11个连续隐性位，帧间隔ITM在末尾的连续3个隐性位","source":"_posts/learning/CAN_DataAnalysis.md","raw":"---\ntitle: CAN总线的数据解析\n---\n\n# CAN报文的种类和帧格式解析\n<!-- more -->\n## 1.1 报文种类\n数据帧：用于发送节点向接受节点传送数据（最常用）\n远程帧：用于接收节点向某个发送节点请求数据\n错误帧：用于当某节点检测出错误时向其他节点通知错误帧\n过载帧：用于接收节点向发送节点通知自身接收能力的帧\n帧间隔：将数据帧或远程帧与前面的帧分离的帧\n## 1.2数据帧格式解析\n数据帧组成：\n帧起始|仲裁段|控制段|数据段|CRC段|ACK段|帧结束\n---|:--:|:--:|:--:|:--:|:--:|---:\n\n### 一、帧起始\n帧起始，SOF，由1个显性位组成\n***在总线空闲的时候***，发送节点发出帧起始，其他接收节点从这个帧起始位进行<font color=#FF0000>同步。</font>\n### 二、仲裁段\n标准格式：\nID[0: 10]|RTR\n---|:--:|\n扩展格式：\nID[0: 10]| SRR| IDE|ID[11: 28]| RTR|\n---|:--:|:--:|:--:|:--:|\n\n- 扩展帧：29位ID，前11ID位置与标准帧ID编码位置相同\n- SRR：代替远程帧请求位，占1bit,为显性\n- IDE：识别符扩展位，占1bit\n     标准帧中该位位于<font color=#FF0000>控制段</font>，为显性\n     扩展帧中该位位于<font color=#FF0000>仲裁段</font>，为隐性\n- RTR：远程帧发送标识位，占1bit，为显性\n\n#### 掌握仲裁机制\nID越小越优先\n\n### 三、控制段\n标准格式：\nIDE| r0 | DLC|\n---|:--:|:--:|\n扩展格式：\nr1 | r0 | DLC|\n---|:--:|:--:|\n- IDE：识别符扩展位，占1bit\n     标准帧中该位位于<font color=#FF0000>控制段</font>，为显性\n     扩展帧中该位位于<font color=#FF0000>仲裁段</font>，为隐性\n- DLC：数据段的长度码，占4bit，BCD编码，范围**0~8**\n  ***PS：接收方对DLC=9~15的情况并不视为错误***\n- r0、r1：保留位0和1，各占1bit,总是用显性电平填充\n### 四、数据段\n***Data: Byte0 ~ Byte7,八位字节***\n**传输时首先发送MSB（最高位），大端模式（Motoroal）**\n在报文解析软件（如PE5）中可以自行设置解析报文格式为Motrola/Intel\n\n一般在发送报文的时候会设置报文的发送模式，Motorola（大端模式，低位高地址，高位低地址）或者Intel（小端模式，高位高地址，低位低地址）\n个人觉得用Intel好一些比较容易理解，报文数据解析起来也方便。\n**这里说一下我使用Motrola发报文遇到的问题以及为什么使用Intel模式好**\n这里我在使用Motrola发送数据再用PE5解析报文的时候发现，如果我发的数据是先发了4个bit随后再发1个byte的数据。再用PE5解析的时候Byte0那个内存0——3bit位没有数据（因为Motrolas数据从高地址开始），随后那个1Byte的数据从Byte1开始存储数据。等于说Byte0那个内存0——3bit就浪费了。用Intel模式就不会出现这个问题。\n### 五、CRC段\n这个段我们不需要去关注太多，知道这是判断数据帧是否有效就行。就是发送的数据和接收节点收到的报文是否正确。\n简单说一下此段的帧格式：\nCRC值[0: 14]|CRC界定符|\n---         |    :--:|\n### 六、ACK段\n发送节点根据此段判断报文是否发送成功。\n结构：\nACK应答位|ACK界定符（1个隐性电平）|\n---         |    :--:|\nACK应答位：\n发送节点：发送隐性电平\n接收正确的节点：发送显性电平\n总线显与结果：显性电平\n### 七、帧结束\n由7个连续的隐性位组成\n### 八、帧间隔ITM\n帧间隔ITM：\n3个连续的隐性位组成\n总线空闲：\n11个连续隐性位，帧间隔ITM在末尾的连续3个隐性位","slug":"learning/CAN_DataAnalysis","published":1,"date":"2022-05-25T10:06:34.422Z","updated":"2022-05-10T00:46:44.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeow000o68ur46av0vcq","content":"<h1 id=\"CAN报文的种类和帧格式解析\"><a href=\"#CAN报文的种类和帧格式解析\" class=\"headerlink\" title=\"CAN报文的种类和帧格式解析\"></a>CAN报文的种类和帧格式解析</h1><span id=\"more\"></span>\n<h2 id=\"1-1-报文种类\"><a href=\"#1-1-报文种类\" class=\"headerlink\" title=\"1.1 报文种类\"></a>1.1 报文种类</h2><p>数据帧：用于发送节点向接受节点传送数据（最常用）<br>远程帧：用于接收节点向某个发送节点请求数据<br>错误帧：用于当某节点检测出错误时向其他节点通知错误帧<br>过载帧：用于接收节点向发送节点通知自身接收能力的帧<br>帧间隔：将数据帧或远程帧与前面的帧分离的帧</p>\n<h2 id=\"1-2数据帧格式解析\"><a href=\"#1-2数据帧格式解析\" class=\"headerlink\" title=\"1.2数据帧格式解析\"></a>1.2数据帧格式解析</h2><p>数据帧组成：<br>帧起始|仲裁段|控制段|数据段|CRC段|ACK段|帧结束<br>—|:–:|:–:|:–:|:–:|:–:|—:</p>\n<h3 id=\"一、帧起始\"><a href=\"#一、帧起始\" class=\"headerlink\" title=\"一、帧起始\"></a>一、帧起始</h3><p>帧起始，SOF，由1个显性位组成<br><em><strong>在总线空闲的时候</strong></em>，发送节点发出帧起始，其他接收节点从这个帧起始位进行<font color=#FF0000>同步。</font></p>\n<h3 id=\"二、仲裁段\"><a href=\"#二、仲裁段\" class=\"headerlink\" title=\"二、仲裁段\"></a>二、仲裁段</h3><p>标准格式：<br>ID[0: 10]|RTR<br>—|:–:|<br>扩展格式：<br>ID[0: 10]| SRR| IDE|ID[11: 28]| RTR|<br>—|:–:|:–:|:–:|:–:|</p>\n<ul>\n<li>扩展帧：29位ID，前11ID位置与标准帧ID编码位置相同</li>\n<li>SRR：代替远程帧请求位，占1bit,为显性</li>\n<li>IDE：识别符扩展位，占1bit<br>   标准帧中该位位于<font color=#FF0000>控制段</font>，为显性<br>   扩展帧中该位位于<font color=#FF0000>仲裁段</font>，为隐性</li>\n<li>RTR：远程帧发送标识位，占1bit，为显性</li>\n</ul>\n<h4 id=\"掌握仲裁机制\"><a href=\"#掌握仲裁机制\" class=\"headerlink\" title=\"掌握仲裁机制\"></a>掌握仲裁机制</h4><p>ID越小越优先</p>\n<h3 id=\"三、控制段\"><a href=\"#三、控制段\" class=\"headerlink\" title=\"三、控制段\"></a>三、控制段</h3><p>标准格式：<br>IDE| r0 | DLC|<br>—|:–:|:–:|<br>扩展格式：<br>r1 | r0 | DLC|<br>—|:–:|:–:|</p>\n<ul>\n<li>IDE：识别符扩展位，占1bit<br>   标准帧中该位位于<font color=#FF0000>控制段</font>，为显性<br>   扩展帧中该位位于<font color=#FF0000>仲裁段</font>，为隐性</li>\n<li>DLC：数据段的长度码，占4bit，BCD编码，范围<strong>0~8</strong><br><em><strong>PS：接收方对DLC=9~15的情况并不视为错误</strong></em></li>\n<li>r0、r1：保留位0和1，各占1bit,总是用显性电平填充<h3 id=\"四、数据段\"><a href=\"#四、数据段\" class=\"headerlink\" title=\"四、数据段\"></a>四、数据段</h3></li>\n</ul>\n<p><em><strong>Data: Byte0 ~ Byte7,八位字节</strong></em><br><strong>传输时首先发送MSB（最高位），大端模式（Motoroal）</strong><br>在报文解析软件（如PE5）中可以自行设置解析报文格式为Motrola/Intel</p>\n<p>一般在发送报文的时候会设置报文的发送模式，Motorola（大端模式，低位高地址，高位低地址）或者Intel（小端模式，高位高地址，低位低地址）<br>个人觉得用Intel好一些比较容易理解，报文数据解析起来也方便。<br><strong>这里说一下我使用Motrola发报文遇到的问题以及为什么使用Intel模式好</strong><br>这里我在使用Motrola发送数据再用PE5解析报文的时候发现，如果我发的数据是先发了4个bit随后再发1个byte的数据。再用PE5解析的时候Byte0那个内存0——3bit位没有数据（因为Motrolas数据从高地址开始），随后那个1Byte的数据从Byte1开始存储数据。等于说Byte0那个内存0——3bit就浪费了。用Intel模式就不会出现这个问题。</p>\n<h3 id=\"五、CRC段\"><a href=\"#五、CRC段\" class=\"headerlink\" title=\"五、CRC段\"></a>五、CRC段</h3><p>这个段我们不需要去关注太多，知道这是判断数据帧是否有效就行。就是发送的数据和接收节点收到的报文是否正确。<br>简单说一下此段的帧格式：<br>CRC值[0: 14]|CRC界定符|<br>—         |    :–:|</p>\n<h3 id=\"六、ACK段\"><a href=\"#六、ACK段\" class=\"headerlink\" title=\"六、ACK段\"></a>六、ACK段</h3><p>发送节点根据此段判断报文是否发送成功。<br>结构：<br>ACK应答位|ACK界定符（1个隐性电平）|<br>—         |    :–:|<br>ACK应答位：<br>发送节点：发送隐性电平<br>接收正确的节点：发送显性电平<br>总线显与结果：显性电平</p>\n<h3 id=\"七、帧结束\"><a href=\"#七、帧结束\" class=\"headerlink\" title=\"七、帧结束\"></a>七、帧结束</h3><p>由7个连续的隐性位组成</p>\n<h3 id=\"八、帧间隔ITM\"><a href=\"#八、帧间隔ITM\" class=\"headerlink\" title=\"八、帧间隔ITM\"></a>八、帧间隔ITM</h3><p>帧间隔ITM：<br>3个连续的隐性位组成<br>总线空闲：<br>11个连续隐性位，帧间隔ITM在末尾的连续3个隐性位</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"CAN报文的种类和帧格式解析\"><a href=\"#CAN报文的种类和帧格式解析\" class=\"headerlink\" title=\"CAN报文的种类和帧格式解析\"></a>CAN报文的种类和帧格式解析</h1>","more":"<h2 id=\"1-1-报文种类\"><a href=\"#1-1-报文种类\" class=\"headerlink\" title=\"1.1 报文种类\"></a>1.1 报文种类</h2><p>数据帧：用于发送节点向接受节点传送数据（最常用）<br>远程帧：用于接收节点向某个发送节点请求数据<br>错误帧：用于当某节点检测出错误时向其他节点通知错误帧<br>过载帧：用于接收节点向发送节点通知自身接收能力的帧<br>帧间隔：将数据帧或远程帧与前面的帧分离的帧</p>\n<h2 id=\"1-2数据帧格式解析\"><a href=\"#1-2数据帧格式解析\" class=\"headerlink\" title=\"1.2数据帧格式解析\"></a>1.2数据帧格式解析</h2><p>数据帧组成：<br>帧起始|仲裁段|控制段|数据段|CRC段|ACK段|帧结束<br>—|:–:|:–:|:–:|:–:|:–:|—:</p>\n<h3 id=\"一、帧起始\"><a href=\"#一、帧起始\" class=\"headerlink\" title=\"一、帧起始\"></a>一、帧起始</h3><p>帧起始，SOF，由1个显性位组成<br><em><strong>在总线空闲的时候</strong></em>，发送节点发出帧起始，其他接收节点从这个帧起始位进行<font color=#FF0000>同步。</font></p>\n<h3 id=\"二、仲裁段\"><a href=\"#二、仲裁段\" class=\"headerlink\" title=\"二、仲裁段\"></a>二、仲裁段</h3><p>标准格式：<br>ID[0: 10]|RTR<br>—|:–:|<br>扩展格式：<br>ID[0: 10]| SRR| IDE|ID[11: 28]| RTR|<br>—|:–:|:–:|:–:|:–:|</p>\n<ul>\n<li>扩展帧：29位ID，前11ID位置与标准帧ID编码位置相同</li>\n<li>SRR：代替远程帧请求位，占1bit,为显性</li>\n<li>IDE：识别符扩展位，占1bit<br>   标准帧中该位位于<font color=#FF0000>控制段</font>，为显性<br>   扩展帧中该位位于<font color=#FF0000>仲裁段</font>，为隐性</li>\n<li>RTR：远程帧发送标识位，占1bit，为显性</li>\n</ul>\n<h4 id=\"掌握仲裁机制\"><a href=\"#掌握仲裁机制\" class=\"headerlink\" title=\"掌握仲裁机制\"></a>掌握仲裁机制</h4><p>ID越小越优先</p>\n<h3 id=\"三、控制段\"><a href=\"#三、控制段\" class=\"headerlink\" title=\"三、控制段\"></a>三、控制段</h3><p>标准格式：<br>IDE| r0 | DLC|<br>—|:–:|:–:|<br>扩展格式：<br>r1 | r0 | DLC|<br>—|:–:|:–:|</p>\n<ul>\n<li>IDE：识别符扩展位，占1bit<br>   标准帧中该位位于<font color=#FF0000>控制段</font>，为显性<br>   扩展帧中该位位于<font color=#FF0000>仲裁段</font>，为隐性</li>\n<li>DLC：数据段的长度码，占4bit，BCD编码，范围<strong>0~8</strong><br><em><strong>PS：接收方对DLC=9~15的情况并不视为错误</strong></em></li>\n<li>r0、r1：保留位0和1，各占1bit,总是用显性电平填充<h3 id=\"四、数据段\"><a href=\"#四、数据段\" class=\"headerlink\" title=\"四、数据段\"></a>四、数据段</h3></li>\n</ul>\n<p><em><strong>Data: Byte0 ~ Byte7,八位字节</strong></em><br><strong>传输时首先发送MSB（最高位），大端模式（Motoroal）</strong><br>在报文解析软件（如PE5）中可以自行设置解析报文格式为Motrola/Intel</p>\n<p>一般在发送报文的时候会设置报文的发送模式，Motorola（大端模式，低位高地址，高位低地址）或者Intel（小端模式，高位高地址，低位低地址）<br>个人觉得用Intel好一些比较容易理解，报文数据解析起来也方便。<br><strong>这里说一下我使用Motrola发报文遇到的问题以及为什么使用Intel模式好</strong><br>这里我在使用Motrola发送数据再用PE5解析报文的时候发现，如果我发的数据是先发了4个bit随后再发1个byte的数据。再用PE5解析的时候Byte0那个内存0——3bit位没有数据（因为Motrolas数据从高地址开始），随后那个1Byte的数据从Byte1开始存储数据。等于说Byte0那个内存0——3bit就浪费了。用Intel模式就不会出现这个问题。</p>\n<h3 id=\"五、CRC段\"><a href=\"#五、CRC段\" class=\"headerlink\" title=\"五、CRC段\"></a>五、CRC段</h3><p>这个段我们不需要去关注太多，知道这是判断数据帧是否有效就行。就是发送的数据和接收节点收到的报文是否正确。<br>简单说一下此段的帧格式：<br>CRC值[0: 14]|CRC界定符|<br>—         |    :–:|</p>\n<h3 id=\"六、ACK段\"><a href=\"#六、ACK段\" class=\"headerlink\" title=\"六、ACK段\"></a>六、ACK段</h3><p>发送节点根据此段判断报文是否发送成功。<br>结构：<br>ACK应答位|ACK界定符（1个隐性电平）|<br>—         |    :–:|<br>ACK应答位：<br>发送节点：发送隐性电平<br>接收正确的节点：发送显性电平<br>总线显与结果：显性电平</p>\n<h3 id=\"七、帧结束\"><a href=\"#七、帧结束\" class=\"headerlink\" title=\"七、帧结束\"></a>七、帧结束</h3><p>由7个连续的隐性位组成</p>\n<h3 id=\"八、帧间隔ITM\"><a href=\"#八、帧间隔ITM\" class=\"headerlink\" title=\"八、帧间隔ITM\"></a>八、帧间隔ITM</h3><p>帧间隔ITM：<br>3个连续的隐性位组成<br>总线空闲：<br>11个连续隐性位，帧间隔ITM在末尾的连续3个隐性位</p>"},{"title":"汽车控制模块知识","_content":"# 汽车控制模块知识\n<!--more-->\n## 一、VCU介绍\n\nVCU （Vehicle Control Unit）**<font color=#FF0000> 电动汽车整车控制器</font>**，一般仅新能源汽车配备、传统燃油车无需该装置。\n\n电动汽车整车控制器（ VCU，Vehicle Control Unit ）是电动汽车动力系统的总成控制器，负责协调发动机、驱动电机、变速箱、动力电池等各部件的工作，具有提高车辆的动力性能、安全性能和经济性等作用。\n\n电动汽车整车控制器 VCU（Vehicle Control Unit ）是电动汽车整车控制系统的核心部件，是用来控制电动车电机的启动、运行、进退、速度、停止以及电动车的其它电子器件的核心控制器件。 VCU作为纯电动汽车控制系统最核心的部件， 其承担了数据交换、 安全管理、驾驶员意图解释、能量流管理的任务。\n\nVCU采集电机控制系统信号、加速踏板信号、制动踏板信号及其他部件信号，根据驾驶员的驾驶意图综合分析并作出响应判断后， 监控下层的各部件控制器的动作， 对汽车的正常行驶、 电池能量的制动回馈、网络管理、 故障诊断与处理、车辆状态监控等功能起着关键作用\n\n## 二、ECU\nECU （Electronic Control Unit ）电子控制单元，**<font color=#FF0000> 燃油车整车控制器</font>**\nECU（Electronic Control Unit ）电子控制单元，又称“行车电脑”、“车载电脑”等。\n\n从用途上讲则是汽车专用微机控制器。它和普通的电脑一样 , 由微处理器（ CPU）、存储器（ROM、、 RAM）、输入 / 输出接口（ I/O ）、模数转换器（ A/D）以及整形、驱动等大规模集成电路组成。用一句简单的话来形容就是“ ECU就是汽车的大脑”。\n\nECU控制发动机的进气量，喷油量，点火时间等，从而决定引擎运转效率和功率、扭力等。\n\n发动机工作在各种转速、档位、负荷、温度等条件时‘所对应’的进气量，喷油量，点火时间等信息，以数据库方式记录在ECU中，这个数据库称为“M.A.P.”。刷ECU的实质就是修改这个“M.A.P.”---数据库。改变控制发动机的数据，影响发动机的运转，在引擎可承受范围内，达到所需要的效果。\n\n## 三、HCU\n\nHCU（ Hybrid Control Unit ）**<font color=#FF0000>混合动力整车控制器</font>**\nHCU是ABS执行机构，一般由增压阀（常开阀）、减压阀（常闭阀）、回液泵、储能器组成。增压阀和减压阀受控于 ECU 信号， 实现液路的开关， 从而实现常规、保压、减压、增压的制动过程。 电动泵由柱塞式油泵和驱动电机组成， 主要作用是将蓄能器内的制动液保持一定的压力。\n\nHCU 作为整个混合动力系统的主控制器，承担了整个系统的能量分配、扭矩管理、错误诊断等功能。\n","source":"_posts/learning/Car-controlmodel.md","raw":"---\ntitle: 汽车控制模块知识\n---\n# 汽车控制模块知识\n<!--more-->\n## 一、VCU介绍\n\nVCU （Vehicle Control Unit）**<font color=#FF0000> 电动汽车整车控制器</font>**，一般仅新能源汽车配备、传统燃油车无需该装置。\n\n电动汽车整车控制器（ VCU，Vehicle Control Unit ）是电动汽车动力系统的总成控制器，负责协调发动机、驱动电机、变速箱、动力电池等各部件的工作，具有提高车辆的动力性能、安全性能和经济性等作用。\n\n电动汽车整车控制器 VCU（Vehicle Control Unit ）是电动汽车整车控制系统的核心部件，是用来控制电动车电机的启动、运行、进退、速度、停止以及电动车的其它电子器件的核心控制器件。 VCU作为纯电动汽车控制系统最核心的部件， 其承担了数据交换、 安全管理、驾驶员意图解释、能量流管理的任务。\n\nVCU采集电机控制系统信号、加速踏板信号、制动踏板信号及其他部件信号，根据驾驶员的驾驶意图综合分析并作出响应判断后， 监控下层的各部件控制器的动作， 对汽车的正常行驶、 电池能量的制动回馈、网络管理、 故障诊断与处理、车辆状态监控等功能起着关键作用\n\n## 二、ECU\nECU （Electronic Control Unit ）电子控制单元，**<font color=#FF0000> 燃油车整车控制器</font>**\nECU（Electronic Control Unit ）电子控制单元，又称“行车电脑”、“车载电脑”等。\n\n从用途上讲则是汽车专用微机控制器。它和普通的电脑一样 , 由微处理器（ CPU）、存储器（ROM、、 RAM）、输入 / 输出接口（ I/O ）、模数转换器（ A/D）以及整形、驱动等大规模集成电路组成。用一句简单的话来形容就是“ ECU就是汽车的大脑”。\n\nECU控制发动机的进气量，喷油量，点火时间等，从而决定引擎运转效率和功率、扭力等。\n\n发动机工作在各种转速、档位、负荷、温度等条件时‘所对应’的进气量，喷油量，点火时间等信息，以数据库方式记录在ECU中，这个数据库称为“M.A.P.”。刷ECU的实质就是修改这个“M.A.P.”---数据库。改变控制发动机的数据，影响发动机的运转，在引擎可承受范围内，达到所需要的效果。\n\n## 三、HCU\n\nHCU（ Hybrid Control Unit ）**<font color=#FF0000>混合动力整车控制器</font>**\nHCU是ABS执行机构，一般由增压阀（常开阀）、减压阀（常闭阀）、回液泵、储能器组成。增压阀和减压阀受控于 ECU 信号， 实现液路的开关， 从而实现常规、保压、减压、增压的制动过程。 电动泵由柱塞式油泵和驱动电机组成， 主要作用是将蓄能器内的制动液保持一定的压力。\n\nHCU 作为整个混合动力系统的主控制器，承担了整个系统的能量分配、扭矩管理、错误诊断等功能。\n","slug":"learning/Car-controlmodel","published":1,"date":"2022-05-25T10:06:34.422Z","updated":"2022-03-30T01:50:20.488Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeox000p68urdns226ci","content":"<h1 id=\"汽车控制模块知识\"><a href=\"#汽车控制模块知识\" class=\"headerlink\" title=\"汽车控制模块知识\"></a>汽车控制模块知识</h1><span id=\"more\"></span>\n<h2 id=\"一、VCU介绍\"><a href=\"#一、VCU介绍\" class=\"headerlink\" title=\"一、VCU介绍\"></a>一、VCU介绍</h2><p>VCU （Vehicle Control Unit）**<font color=#FF0000> 电动汽车整车控制器</font>**，一般仅新能源汽车配备、传统燃油车无需该装置。</p>\n<p>电动汽车整车控制器（ VCU，Vehicle Control Unit ）是电动汽车动力系统的总成控制器，负责协调发动机、驱动电机、变速箱、动力电池等各部件的工作，具有提高车辆的动力性能、安全性能和经济性等作用。</p>\n<p>电动汽车整车控制器 VCU（Vehicle Control Unit ）是电动汽车整车控制系统的核心部件，是用来控制电动车电机的启动、运行、进退、速度、停止以及电动车的其它电子器件的核心控制器件。 VCU作为纯电动汽车控制系统最核心的部件， 其承担了数据交换、 安全管理、驾驶员意图解释、能量流管理的任务。</p>\n<p>VCU采集电机控制系统信号、加速踏板信号、制动踏板信号及其他部件信号，根据驾驶员的驾驶意图综合分析并作出响应判断后， 监控下层的各部件控制器的动作， 对汽车的正常行驶、 电池能量的制动回馈、网络管理、 故障诊断与处理、车辆状态监控等功能起着关键作用</p>\n<h2 id=\"二、ECU\"><a href=\"#二、ECU\" class=\"headerlink\" title=\"二、ECU\"></a>二、ECU</h2><p>ECU （Electronic Control Unit ）电子控制单元，**<font color=#FF0000> 燃油车整车控制器</font>**<br>ECU（Electronic Control Unit ）电子控制单元，又称“行车电脑”、“车载电脑”等。</p>\n<p>从用途上讲则是汽车专用微机控制器。它和普通的电脑一样 , 由微处理器（ CPU）、存储器（ROM、、 RAM）、输入 / 输出接口（ I/O ）、模数转换器（ A/D）以及整形、驱动等大规模集成电路组成。用一句简单的话来形容就是“ ECU就是汽车的大脑”。</p>\n<p>ECU控制发动机的进气量，喷油量，点火时间等，从而决定引擎运转效率和功率、扭力等。</p>\n<p>发动机工作在各种转速、档位、负荷、温度等条件时‘所对应’的进气量，喷油量，点火时间等信息，以数据库方式记录在ECU中，这个数据库称为“M.A.P.”。刷ECU的实质就是修改这个“M.A.P.”—数据库。改变控制发动机的数据，影响发动机的运转，在引擎可承受范围内，达到所需要的效果。</p>\n<h2 id=\"三、HCU\"><a href=\"#三、HCU\" class=\"headerlink\" title=\"三、HCU\"></a>三、HCU</h2><p>HCU（ Hybrid Control Unit ）**<font color=#FF0000>混合动力整车控制器</font>**<br>HCU是ABS执行机构，一般由增压阀（常开阀）、减压阀（常闭阀）、回液泵、储能器组成。增压阀和减压阀受控于 ECU 信号， 实现液路的开关， 从而实现常规、保压、减压、增压的制动过程。 电动泵由柱塞式油泵和驱动电机组成， 主要作用是将蓄能器内的制动液保持一定的压力。</p>\n<p>HCU 作为整个混合动力系统的主控制器，承担了整个系统的能量分配、扭矩管理、错误诊断等功能。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"汽车控制模块知识\"><a href=\"#汽车控制模块知识\" class=\"headerlink\" title=\"汽车控制模块知识\"></a>汽车控制模块知识</h1>","more":"<h2 id=\"一、VCU介绍\"><a href=\"#一、VCU介绍\" class=\"headerlink\" title=\"一、VCU介绍\"></a>一、VCU介绍</h2><p>VCU （Vehicle Control Unit）**<font color=#FF0000> 电动汽车整车控制器</font>**，一般仅新能源汽车配备、传统燃油车无需该装置。</p>\n<p>电动汽车整车控制器（ VCU，Vehicle Control Unit ）是电动汽车动力系统的总成控制器，负责协调发动机、驱动电机、变速箱、动力电池等各部件的工作，具有提高车辆的动力性能、安全性能和经济性等作用。</p>\n<p>电动汽车整车控制器 VCU（Vehicle Control Unit ）是电动汽车整车控制系统的核心部件，是用来控制电动车电机的启动、运行、进退、速度、停止以及电动车的其它电子器件的核心控制器件。 VCU作为纯电动汽车控制系统最核心的部件， 其承担了数据交换、 安全管理、驾驶员意图解释、能量流管理的任务。</p>\n<p>VCU采集电机控制系统信号、加速踏板信号、制动踏板信号及其他部件信号，根据驾驶员的驾驶意图综合分析并作出响应判断后， 监控下层的各部件控制器的动作， 对汽车的正常行驶、 电池能量的制动回馈、网络管理、 故障诊断与处理、车辆状态监控等功能起着关键作用</p>\n<h2 id=\"二、ECU\"><a href=\"#二、ECU\" class=\"headerlink\" title=\"二、ECU\"></a>二、ECU</h2><p>ECU （Electronic Control Unit ）电子控制单元，**<font color=#FF0000> 燃油车整车控制器</font>**<br>ECU（Electronic Control Unit ）电子控制单元，又称“行车电脑”、“车载电脑”等。</p>\n<p>从用途上讲则是汽车专用微机控制器。它和普通的电脑一样 , 由微处理器（ CPU）、存储器（ROM、、 RAM）、输入 / 输出接口（ I/O ）、模数转换器（ A/D）以及整形、驱动等大规模集成电路组成。用一句简单的话来形容就是“ ECU就是汽车的大脑”。</p>\n<p>ECU控制发动机的进气量，喷油量，点火时间等，从而决定引擎运转效率和功率、扭力等。</p>\n<p>发动机工作在各种转速、档位、负荷、温度等条件时‘所对应’的进气量，喷油量，点火时间等信息，以数据库方式记录在ECU中，这个数据库称为“M.A.P.”。刷ECU的实质就是修改这个“M.A.P.”—数据库。改变控制发动机的数据，影响发动机的运转，在引擎可承受范围内，达到所需要的效果。</p>\n<h2 id=\"三、HCU\"><a href=\"#三、HCU\" class=\"headerlink\" title=\"三、HCU\"></a>三、HCU</h2><p>HCU（ Hybrid Control Unit ）**<font color=#FF0000>混合动力整车控制器</font>**<br>HCU是ABS执行机构，一般由增压阀（常开阀）、减压阀（常闭阀）、回液泵、储能器组成。增压阀和减压阀受控于 ECU 信号， 实现液路的开关， 从而实现常规、保压、减压、增压的制动过程。 电动泵由柱塞式油泵和驱动电机组成， 主要作用是将蓄能器内的制动液保持一定的压力。</p>\n<p>HCU 作为整个混合动力系统的主控制器，承担了整个系统的能量分配、扭矩管理、错误诊断等功能。</p>"},{"title":"电气知识","_content":"# 基础电气知识\n<!-- more -->\n##  一、滤波\n\n1. 电容滤波: 隔直通交\n2. 电感滤波：隔交通直\n\n相关知识链接： \n[滤波原理及常见的滤波电路](http://m.elecfans.com/article/991612.html)\n\n## 二、常用电器\n### 发电机：\nB+：发电机电压输出端\nD+：充电指示端\nE：接地端\n\n电路符号：G\nG－发电机，\nGD－直流发电机；\nGA－交流发电机；\nGS -TF 同步发电机\nGA－YF 异步发电机；\nGH－永磁发电机\n\n![发电机符号](https://iknow-pic.cdn.bcebos.com/b3119313b07eca80fa4fcb95902397dda144837e?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_600%2Ch_800%2Climit_1%2Fquality%2Cq_85%2Fformat%2Cf_jpg)\n\n### 电动机：\n**电动机符号：**\n![电动机符号](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.korenyy.cn%2Fdata%2Fupload%2F202002%2F1582770321881899.png&refer=http%3A%2F%2Fwww.korenyy.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651196151&t=ba8016bc75adb710b4c1a2cf010d688c)\n\n### 二极管：\n正向导通，反向截止\n\n### 熔断器：\n作用：短路和过流保护\n分类：\n5A——橙\n7.5——棕\n10A——红\n15A——蓝\n20A——黄\n30A——绿\n\n**熔断器原理图符号：**\n![熔断器原理图符号](https://iknow-pic.cdn.bcebos.com/9345d688d43f8794f7031051c21b0ef41ad53ad4?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_600%2Ch_800%2Climit_1%2Fquality%2Cq_85%2Fformat%2Cf_jpg)\n\n### 电锁：\n4个档位\n1. 辅助：插入启动开关钥匙后沿<font color=#FF0000>逆时针方向</font>转动一个档位，该档位是自动复位的（松手回到OFF档），此档位未使用。\n2. OFF：断电，除发动机罩的举升电机开关外，其他电路和用电设备均被断电。\n3. ON：取电，开关开。\n4. START：插入钥匙后<font color=#FF0000>顺时针方向</font>转动的第二个档位，发动机启动后松手自动复位至ON档。\n\n### 继电器：\n继电器（英文名称：relay）是一种电控制器件，是当输入量（激励量）的变化达到规定要求时，在电气输出电路中使被控量发生预定的阶跃变化的一种电器。它具有控制系统（又称输入回路）和被控制系统（又称输出回路）之间的互动关系。通常应用于自动化的控制电路中，它实际上是用小电流去控制大电流运作的一种“自动开关”。故在电路中起着自动调节、安全保护、转换电路等作用。——百度百科\n\n**原理结构图：**\n![继电器原理图](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Ffile1.renrendoc.com%2Ffileroot_temp2%2F2020-3%2F29%2F4e82c10c-7ec3-4d13-8abd-289ace7a8f96%2F4e82c10c-7ec3-4d13-8abd-289ace7a8f964.gif&refer=http%3A%2F%2Ffile1.renrendoc.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651195179&t=0c5a62e6ab58fb494180bc54989aecb1)\n**电路符号图：**\n![继电器电路图符号](https://bkimg.cdn.bcebos.com/pic/adaf2edda3cc7cd9fcb2fb0c3701213fb90e914c?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto)\n**实物图：**\n![继电器实物](https://bkimg.cdn.bcebos.com/pic/3801213fb80e7bec70006d752f2eb9389a506b4f?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto)\n\n### 接触器：\n接触器分为交流接触器（电压AC）和直流接触器（电压DC），它应用于电力、配电与用电场合。接触器广义上是指工业电中利用线圈流过电流产生磁场，使触头闭合，以达到控制负载的电器。——百度百科\n\n**接触器实物图：**\n![接触器实物图](https://bkimg.cdn.bcebos.com/pic/d50735fae6cd7b8960b1d32f052442a7d8330eb9?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UxMTY=,g_7,xp_5,yp_5/format,f_auto)\n\n### 传感器\n1. 温度传感器：\n    相当于温敏电阻，随温度升高电阻减小\n2. 压力传感器：\n    压力升高电阻升高\n3. 燃油油位传感器：\n    实际是一个可变电阻，油位上升，阻值减小。如果传感线搭铁仪表显示满量程，悬空仪表显示最小读数。\n4. 压力报警开关：\n    常用为机油压力报警、变速油压报警、行车制动低压报警、停车制动低压报警等\n5. 速度传感器：\n    变速箱的涡轮速度检测，安装在变速箱壳体上\n6. 接近开关（限位开关）：\n    原理：位移传感器，当物体移向接近开关并接近到一定距离时，开关才会动作。\n\n","source":"_posts/learning/EletricityKnowledge.md","raw":"---\ntitle: 电气知识\n---\n# 基础电气知识\n<!-- more -->\n##  一、滤波\n\n1. 电容滤波: 隔直通交\n2. 电感滤波：隔交通直\n\n相关知识链接： \n[滤波原理及常见的滤波电路](http://m.elecfans.com/article/991612.html)\n\n## 二、常用电器\n### 发电机：\nB+：发电机电压输出端\nD+：充电指示端\nE：接地端\n\n电路符号：G\nG－发电机，\nGD－直流发电机；\nGA－交流发电机；\nGS -TF 同步发电机\nGA－YF 异步发电机；\nGH－永磁发电机\n\n![发电机符号](https://iknow-pic.cdn.bcebos.com/b3119313b07eca80fa4fcb95902397dda144837e?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_600%2Ch_800%2Climit_1%2Fquality%2Cq_85%2Fformat%2Cf_jpg)\n\n### 电动机：\n**电动机符号：**\n![电动机符号](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.korenyy.cn%2Fdata%2Fupload%2F202002%2F1582770321881899.png&refer=http%3A%2F%2Fwww.korenyy.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651196151&t=ba8016bc75adb710b4c1a2cf010d688c)\n\n### 二极管：\n正向导通，反向截止\n\n### 熔断器：\n作用：短路和过流保护\n分类：\n5A——橙\n7.5——棕\n10A——红\n15A——蓝\n20A——黄\n30A——绿\n\n**熔断器原理图符号：**\n![熔断器原理图符号](https://iknow-pic.cdn.bcebos.com/9345d688d43f8794f7031051c21b0ef41ad53ad4?x-bce-process=image%2Fresize%2Cm_lfit%2Cw_600%2Ch_800%2Climit_1%2Fquality%2Cq_85%2Fformat%2Cf_jpg)\n\n### 电锁：\n4个档位\n1. 辅助：插入启动开关钥匙后沿<font color=#FF0000>逆时针方向</font>转动一个档位，该档位是自动复位的（松手回到OFF档），此档位未使用。\n2. OFF：断电，除发动机罩的举升电机开关外，其他电路和用电设备均被断电。\n3. ON：取电，开关开。\n4. START：插入钥匙后<font color=#FF0000>顺时针方向</font>转动的第二个档位，发动机启动后松手自动复位至ON档。\n\n### 继电器：\n继电器（英文名称：relay）是一种电控制器件，是当输入量（激励量）的变化达到规定要求时，在电气输出电路中使被控量发生预定的阶跃变化的一种电器。它具有控制系统（又称输入回路）和被控制系统（又称输出回路）之间的互动关系。通常应用于自动化的控制电路中，它实际上是用小电流去控制大电流运作的一种“自动开关”。故在电路中起着自动调节、安全保护、转换电路等作用。——百度百科\n\n**原理结构图：**\n![继电器原理图](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Ffile1.renrendoc.com%2Ffileroot_temp2%2F2020-3%2F29%2F4e82c10c-7ec3-4d13-8abd-289ace7a8f96%2F4e82c10c-7ec3-4d13-8abd-289ace7a8f964.gif&refer=http%3A%2F%2Ffile1.renrendoc.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651195179&t=0c5a62e6ab58fb494180bc54989aecb1)\n**电路符号图：**\n![继电器电路图符号](https://bkimg.cdn.bcebos.com/pic/adaf2edda3cc7cd9fcb2fb0c3701213fb90e914c?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto)\n**实物图：**\n![继电器实物](https://bkimg.cdn.bcebos.com/pic/3801213fb80e7bec70006d752f2eb9389a506b4f?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto)\n\n### 接触器：\n接触器分为交流接触器（电压AC）和直流接触器（电压DC），它应用于电力、配电与用电场合。接触器广义上是指工业电中利用线圈流过电流产生磁场，使触头闭合，以达到控制负载的电器。——百度百科\n\n**接触器实物图：**\n![接触器实物图](https://bkimg.cdn.bcebos.com/pic/d50735fae6cd7b8960b1d32f052442a7d8330eb9?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UxMTY=,g_7,xp_5,yp_5/format,f_auto)\n\n### 传感器\n1. 温度传感器：\n    相当于温敏电阻，随温度升高电阻减小\n2. 压力传感器：\n    压力升高电阻升高\n3. 燃油油位传感器：\n    实际是一个可变电阻，油位上升，阻值减小。如果传感线搭铁仪表显示满量程，悬空仪表显示最小读数。\n4. 压力报警开关：\n    常用为机油压力报警、变速油压报警、行车制动低压报警、停车制动低压报警等\n5. 速度传感器：\n    变速箱的涡轮速度检测，安装在变速箱壳体上\n6. 接近开关（限位开关）：\n    原理：位移传感器，当物体移向接近开关并接近到一定距离时，开关才会动作。\n\n","slug":"learning/EletricityKnowledge","published":1,"date":"2022-05-25T10:06:34.439Z","updated":"2022-04-08T09:35:02.838Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeoz000q68urec3ba990","content":"<h1 id=\"基础电气知识\"><a href=\"#基础电气知识\" class=\"headerlink\" title=\"基础电气知识\"></a>基础电气知识</h1><span id=\"more\"></span>\n<h2 id=\"一、滤波\"><a href=\"#一、滤波\" class=\"headerlink\" title=\"一、滤波\"></a>一、滤波</h2><ol>\n<li>电容滤波: 隔直通交</li>\n<li>电感滤波：隔交通直</li>\n</ol>\n<p>相关知识链接：<br><a href=\"http://m.elecfans.com/article/991612.html\">滤波原理及常见的滤波电路</a></p>\n<h2 id=\"二、常用电器\"><a href=\"#二、常用电器\" class=\"headerlink\" title=\"二、常用电器\"></a>二、常用电器</h2><h3 id=\"发电机：\"><a href=\"#发电机：\" class=\"headerlink\" title=\"发电机：\"></a>发电机：</h3><p>B+：发电机电压输出端<br>D+：充电指示端<br>E：接地端</p>\n<p>电路符号：G<br>G－发电机，<br>GD－直流发电机；<br>GA－交流发电机；<br>GS -TF 同步发电机<br>GA－YF 异步发电机；<br>GH－永磁发电机</p>\n<p><img src=\"https://iknow-pic.cdn.bcebos.com/b3119313b07eca80fa4fcb95902397dda144837e?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1/quality,q_85/format,f_jpg\" alt=\"发电机符号\"></p>\n<h3 id=\"电动机：\"><a href=\"#电动机：\" class=\"headerlink\" title=\"电动机：\"></a>电动机：</h3><p><strong>电动机符号：</strong><br><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.korenyy.cn%2Fdata%2Fupload%2F202002%2F1582770321881899.png&refer=http%3A%2F%2Fwww.korenyy.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651196151&t=ba8016bc75adb710b4c1a2cf010d688c\" alt=\"电动机符号\"></p>\n<h3 id=\"二极管：\"><a href=\"#二极管：\" class=\"headerlink\" title=\"二极管：\"></a>二极管：</h3><p>正向导通，反向截止</p>\n<h3 id=\"熔断器：\"><a href=\"#熔断器：\" class=\"headerlink\" title=\"熔断器：\"></a>熔断器：</h3><p>作用：短路和过流保护<br>分类：<br>5A——橙<br>7.5——棕<br>10A——红<br>15A——蓝<br>20A——黄<br>30A——绿</p>\n<p><strong>熔断器原理图符号：</strong><br><img src=\"https://iknow-pic.cdn.bcebos.com/9345d688d43f8794f7031051c21b0ef41ad53ad4?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1/quality,q_85/format,f_jpg\" alt=\"熔断器原理图符号\"></p>\n<h3 id=\"电锁：\"><a href=\"#电锁：\" class=\"headerlink\" title=\"电锁：\"></a>电锁：</h3><p>4个档位</p>\n<ol>\n<li>辅助：插入启动开关钥匙后沿<font color=#FF0000>逆时针方向</font>转动一个档位，该档位是自动复位的（松手回到OFF档），此档位未使用。</li>\n<li>OFF：断电，除发动机罩的举升电机开关外，其他电路和用电设备均被断电。</li>\n<li>ON：取电，开关开。</li>\n<li>START：插入钥匙后<font color=#FF0000>顺时针方向</font>转动的第二个档位，发动机启动后松手自动复位至ON档。</li>\n</ol>\n<h3 id=\"继电器：\"><a href=\"#继电器：\" class=\"headerlink\" title=\"继电器：\"></a>继电器：</h3><p>继电器（英文名称：relay）是一种电控制器件，是当输入量（激励量）的变化达到规定要求时，在电气输出电路中使被控量发生预定的阶跃变化的一种电器。它具有控制系统（又称输入回路）和被控制系统（又称输出回路）之间的互动关系。通常应用于自动化的控制电路中，它实际上是用小电流去控制大电流运作的一种“自动开关”。故在电路中起着自动调节、安全保护、转换电路等作用。——百度百科</p>\n<p><strong>原理结构图：</strong><br><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Ffile1.renrendoc.com%2Ffileroot_temp2%2F2020-3%2F29%2F4e82c10c-7ec3-4d13-8abd-289ace7a8f96%2F4e82c10c-7ec3-4d13-8abd-289ace7a8f964.gif&refer=http%3A%2F%2Ffile1.renrendoc.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651195179&t=0c5a62e6ab58fb494180bc54989aecb1\" alt=\"继电器原理图\"><br><strong>电路符号图：</strong><br><img src=\"https://bkimg.cdn.bcebos.com/pic/adaf2edda3cc7cd9fcb2fb0c3701213fb90e914c?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto\" alt=\"继电器电路图符号\"><br><strong>实物图：</strong><br><img src=\"https://bkimg.cdn.bcebos.com/pic/3801213fb80e7bec70006d752f2eb9389a506b4f?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto\" alt=\"继电器实物\"></p>\n<h3 id=\"接触器：\"><a href=\"#接触器：\" class=\"headerlink\" title=\"接触器：\"></a>接触器：</h3><p>接触器分为交流接触器（电压AC）和直流接触器（电压DC），它应用于电力、配电与用电场合。接触器广义上是指工业电中利用线圈流过电流产生磁场，使触头闭合，以达到控制负载的电器。——百度百科</p>\n<p><strong>接触器实物图：</strong><br><img src=\"https://bkimg.cdn.bcebos.com/pic/d50735fae6cd7b8960b1d32f052442a7d8330eb9?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UxMTY=,g_7,xp_5,yp_5/format,f_auto\" alt=\"接触器实物图\"></p>\n<h3 id=\"传感器\"><a href=\"#传感器\" class=\"headerlink\" title=\"传感器\"></a>传感器</h3><ol>\n<li>温度传感器：<br> 相当于温敏电阻，随温度升高电阻减小</li>\n<li>压力传感器：<br> 压力升高电阻升高</li>\n<li>燃油油位传感器：<br> 实际是一个可变电阻，油位上升，阻值减小。如果传感线搭铁仪表显示满量程，悬空仪表显示最小读数。</li>\n<li>压力报警开关：<br> 常用为机油压力报警、变速油压报警、行车制动低压报警、停车制动低压报警等</li>\n<li>速度传感器：<br> 变速箱的涡轮速度检测，安装在变速箱壳体上</li>\n<li>接近开关（限位开关）：<br> 原理：位移传感器，当物体移向接近开关并接近到一定距离时，开关才会动作。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"基础电气知识\"><a href=\"#基础电气知识\" class=\"headerlink\" title=\"基础电气知识\"></a>基础电气知识</h1>","more":"<h2 id=\"一、滤波\"><a href=\"#一、滤波\" class=\"headerlink\" title=\"一、滤波\"></a>一、滤波</h2><ol>\n<li>电容滤波: 隔直通交</li>\n<li>电感滤波：隔交通直</li>\n</ol>\n<p>相关知识链接：<br><a href=\"http://m.elecfans.com/article/991612.html\">滤波原理及常见的滤波电路</a></p>\n<h2 id=\"二、常用电器\"><a href=\"#二、常用电器\" class=\"headerlink\" title=\"二、常用电器\"></a>二、常用电器</h2><h3 id=\"发电机：\"><a href=\"#发电机：\" class=\"headerlink\" title=\"发电机：\"></a>发电机：</h3><p>B+：发电机电压输出端<br>D+：充电指示端<br>E：接地端</p>\n<p>电路符号：G<br>G－发电机，<br>GD－直流发电机；<br>GA－交流发电机；<br>GS -TF 同步发电机<br>GA－YF 异步发电机；<br>GH－永磁发电机</p>\n<p><img src=\"https://iknow-pic.cdn.bcebos.com/b3119313b07eca80fa4fcb95902397dda144837e?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1/quality,q_85/format,f_jpg\" alt=\"发电机符号\"></p>\n<h3 id=\"电动机：\"><a href=\"#电动机：\" class=\"headerlink\" title=\"电动机：\"></a>电动机：</h3><p><strong>电动机符号：</strong><br><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.korenyy.cn%2Fdata%2Fupload%2F202002%2F1582770321881899.png&refer=http%3A%2F%2Fwww.korenyy.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651196151&t=ba8016bc75adb710b4c1a2cf010d688c\" alt=\"电动机符号\"></p>\n<h3 id=\"二极管：\"><a href=\"#二极管：\" class=\"headerlink\" title=\"二极管：\"></a>二极管：</h3><p>正向导通，反向截止</p>\n<h3 id=\"熔断器：\"><a href=\"#熔断器：\" class=\"headerlink\" title=\"熔断器：\"></a>熔断器：</h3><p>作用：短路和过流保护<br>分类：<br>5A——橙<br>7.5——棕<br>10A——红<br>15A——蓝<br>20A——黄<br>30A——绿</p>\n<p><strong>熔断器原理图符号：</strong><br><img src=\"https://iknow-pic.cdn.bcebos.com/9345d688d43f8794f7031051c21b0ef41ad53ad4?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1/quality,q_85/format,f_jpg\" alt=\"熔断器原理图符号\"></p>\n<h3 id=\"电锁：\"><a href=\"#电锁：\" class=\"headerlink\" title=\"电锁：\"></a>电锁：</h3><p>4个档位</p>\n<ol>\n<li>辅助：插入启动开关钥匙后沿<font color=#FF0000>逆时针方向</font>转动一个档位，该档位是自动复位的（松手回到OFF档），此档位未使用。</li>\n<li>OFF：断电，除发动机罩的举升电机开关外，其他电路和用电设备均被断电。</li>\n<li>ON：取电，开关开。</li>\n<li>START：插入钥匙后<font color=#FF0000>顺时针方向</font>转动的第二个档位，发动机启动后松手自动复位至ON档。</li>\n</ol>\n<h3 id=\"继电器：\"><a href=\"#继电器：\" class=\"headerlink\" title=\"继电器：\"></a>继电器：</h3><p>继电器（英文名称：relay）是一种电控制器件，是当输入量（激励量）的变化达到规定要求时，在电气输出电路中使被控量发生预定的阶跃变化的一种电器。它具有控制系统（又称输入回路）和被控制系统（又称输出回路）之间的互动关系。通常应用于自动化的控制电路中，它实际上是用小电流去控制大电流运作的一种“自动开关”。故在电路中起着自动调节、安全保护、转换电路等作用。——百度百科</p>\n<p><strong>原理结构图：</strong><br><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Ffile1.renrendoc.com%2Ffileroot_temp2%2F2020-3%2F29%2F4e82c10c-7ec3-4d13-8abd-289ace7a8f96%2F4e82c10c-7ec3-4d13-8abd-289ace7a8f964.gif&refer=http%3A%2F%2Ffile1.renrendoc.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1651195179&t=0c5a62e6ab58fb494180bc54989aecb1\" alt=\"继电器原理图\"><br><strong>电路符号图：</strong><br><img src=\"https://bkimg.cdn.bcebos.com/pic/adaf2edda3cc7cd9fcb2fb0c3701213fb90e914c?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto\" alt=\"继电器电路图符号\"><br><strong>实物图：</strong><br><img src=\"https://bkimg.cdn.bcebos.com/pic/3801213fb80e7bec70006d752f2eb9389a506b4f?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2U4MA==,g_7,xp_5,yp_5/format,f_auto\" alt=\"继电器实物\"></p>\n<h3 id=\"接触器：\"><a href=\"#接触器：\" class=\"headerlink\" title=\"接触器：\"></a>接触器：</h3><p>接触器分为交流接触器（电压AC）和直流接触器（电压DC），它应用于电力、配电与用电场合。接触器广义上是指工业电中利用线圈流过电流产生磁场，使触头闭合，以达到控制负载的电器。——百度百科</p>\n<p><strong>接触器实物图：</strong><br><img src=\"https://bkimg.cdn.bcebos.com/pic/d50735fae6cd7b8960b1d32f052442a7d8330eb9?x-bce-process=image/watermark,image_d2F0ZXIvYmFpa2UxMTY=,g_7,xp_5,yp_5/format,f_auto\" alt=\"接触器实物图\"></p>\n<h3 id=\"传感器\"><a href=\"#传感器\" class=\"headerlink\" title=\"传感器\"></a>传感器</h3><ol>\n<li>温度传感器：<br> 相当于温敏电阻，随温度升高电阻减小</li>\n<li>压力传感器：<br> 压力升高电阻升高</li>\n<li>燃油油位传感器：<br> 实际是一个可变电阻，油位上升，阻值减小。如果传感线搭铁仪表显示满量程，悬空仪表显示最小读数。</li>\n<li>压力报警开关：<br> 常用为机油压力报警、变速油压报警、行车制动低压报警、停车制动低压报警等</li>\n<li>速度传感器：<br> 变速箱的涡轮速度检测，安装在变速箱壳体上</li>\n<li>接近开关（限位开关）：<br> 原理：位移传感器，当物体移向接近开关并接近到一定距离时，开关才会动作。</li>\n</ol>"},{"title":"C中函数调用","_content":"## .c文件之间的函数调用方法\n<!-- more -->\n### 一、通过.h文件调用（推荐使用）\n在.c（源文件）文件中对函数进行定义，然后再.h文件中进行声明。\n当另一个.c文件调用之前定义好的函数时直接导入声明该函数的.h文件即可。\n举个例子：\n**这是A.h**\n```\n#ifndef __A_H__\n#define __A_H__\n\n\textern int var_A;\n\tint func_A();\n\n#endif\n```\n**这是A.c**\n```\n#include \"A.h\"\n\nint var_A = 0;\nint func_A()\n{\n\tvar_A += 1;\n\treturn var_A;\n}\n\n```\n假设有一个**main.c**想调用int func_A()函数\n**这是main.c**\n```\n#include \"A.h\"\n\n//此处可以不写，但是推荐写上便于后期代码维护，不然所调用函数都得去.h文件看\nextern int func_A(); \n\nint main()\n{\n\tint a = 0;\n\ta = func_A() + 1;\n\tprintf(\"a = %d\", a);\n\treturn 0;\n\t\n}\n```\n### 二、直接extern声明调用（两个.c需要在同一文件夹下）\n举个例子\n**这是一个function.c**\n```\nint a = 0;\nint function(){\n\ta +=  1；\n\treturn a;\n}\n```\n***这是主函数main.c**\n```\n#include <stdio.h>\nextern int function();\t//这里直接声明调用\nint main(){\n\tint b = 0;\n\tb = function() + 1;\n\tprintf(\"b = %d\", b);\n\treturn 0;\n}\n```\n### 三、.h定义函数 .c调用.h(这样用可能会导致链接重复定义)\n重复定义例子：\nA.h定义了function()\nB.h调用A.h, B.c调用B.h使用function()定义了一个func_B()\nC.h也调用了A.h, C.c调用C.h使用function()定义了一个func_C()\nmain.c 调用B.h和C.h然后使用func_B()和func_C()\n这时候编译的时候就会报错，重复定义了function()\n\n举个在.h中定义函数的例子\n**这是要调用的函数，在.h中定义**\n```\n#ifndef __func_H__\n#define __func_H__\n\n\tint function(int a, int b){\n\t\tretrun a + b;\n\t}\n\n#endif\n```\n**这是主函数**\n```\n#include <stdio.h>\n#include \"func.h\"\n\nint main(){\n\tint c = 11;\n\tint d = 11;\n\tint temp = 0;\n\ttemp = function(c, d);\n\treturn temp;\n}\n```\n## 参考链接\n[https://blog.csdn.net/jingzi123456789/article/details/51286119](https://blog.csdn.net/jingzi123456789/article/details/51286119)\n[https://blog.csdn.net/jingzi123456789/article/details/51286146](https://blog.csdn.net/jingzi123456789/article/details/51286146)\n[https://blog.csdn.net/jingzi123456789/article/details/51287139](https://blog.csdn.net/jingzi123456789/article/details/51287139)","source":"_posts/learning/FunctionCall.md","raw":"---\ntitle: C中函数调用\n---\n## .c文件之间的函数调用方法\n<!-- more -->\n### 一、通过.h文件调用（推荐使用）\n在.c（源文件）文件中对函数进行定义，然后再.h文件中进行声明。\n当另一个.c文件调用之前定义好的函数时直接导入声明该函数的.h文件即可。\n举个例子：\n**这是A.h**\n```\n#ifndef __A_H__\n#define __A_H__\n\n\textern int var_A;\n\tint func_A();\n\n#endif\n```\n**这是A.c**\n```\n#include \"A.h\"\n\nint var_A = 0;\nint func_A()\n{\n\tvar_A += 1;\n\treturn var_A;\n}\n\n```\n假设有一个**main.c**想调用int func_A()函数\n**这是main.c**\n```\n#include \"A.h\"\n\n//此处可以不写，但是推荐写上便于后期代码维护，不然所调用函数都得去.h文件看\nextern int func_A(); \n\nint main()\n{\n\tint a = 0;\n\ta = func_A() + 1;\n\tprintf(\"a = %d\", a);\n\treturn 0;\n\t\n}\n```\n### 二、直接extern声明调用（两个.c需要在同一文件夹下）\n举个例子\n**这是一个function.c**\n```\nint a = 0;\nint function(){\n\ta +=  1；\n\treturn a;\n}\n```\n***这是主函数main.c**\n```\n#include <stdio.h>\nextern int function();\t//这里直接声明调用\nint main(){\n\tint b = 0;\n\tb = function() + 1;\n\tprintf(\"b = %d\", b);\n\treturn 0;\n}\n```\n### 三、.h定义函数 .c调用.h(这样用可能会导致链接重复定义)\n重复定义例子：\nA.h定义了function()\nB.h调用A.h, B.c调用B.h使用function()定义了一个func_B()\nC.h也调用了A.h, C.c调用C.h使用function()定义了一个func_C()\nmain.c 调用B.h和C.h然后使用func_B()和func_C()\n这时候编译的时候就会报错，重复定义了function()\n\n举个在.h中定义函数的例子\n**这是要调用的函数，在.h中定义**\n```\n#ifndef __func_H__\n#define __func_H__\n\n\tint function(int a, int b){\n\t\tretrun a + b;\n\t}\n\n#endif\n```\n**这是主函数**\n```\n#include <stdio.h>\n#include \"func.h\"\n\nint main(){\n\tint c = 11;\n\tint d = 11;\n\tint temp = 0;\n\ttemp = function(c, d);\n\treturn temp;\n}\n```\n## 参考链接\n[https://blog.csdn.net/jingzi123456789/article/details/51286119](https://blog.csdn.net/jingzi123456789/article/details/51286119)\n[https://blog.csdn.net/jingzi123456789/article/details/51286146](https://blog.csdn.net/jingzi123456789/article/details/51286146)\n[https://blog.csdn.net/jingzi123456789/article/details/51287139](https://blog.csdn.net/jingzi123456789/article/details/51287139)","slug":"learning/FunctionCall","published":1,"date":"2022-05-25T10:06:34.455Z","updated":"2022-03-30T01:51:27.101Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceep0000r68urbeefendj","content":"<h2 id=\"c文件之间的函数调用方法\"><a href=\"#c文件之间的函数调用方法\" class=\"headerlink\" title=\".c文件之间的函数调用方法\"></a>.c文件之间的函数调用方法</h2><span id=\"more\"></span>\n<h3 id=\"一、通过-h文件调用（推荐使用）\"><a href=\"#一、通过-h文件调用（推荐使用）\" class=\"headerlink\" title=\"一、通过.h文件调用（推荐使用）\"></a>一、通过.h文件调用（推荐使用）</h3><p>在.c（源文件）文件中对函数进行定义，然后再.h文件中进行声明。<br>当另一个.c文件调用之前定义好的函数时直接导入声明该函数的.h文件即可。<br>举个例子：<br><strong>这是A.h</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifndef __A_H__</span><br><span class=\"line\">#define __A_H__</span><br><span class=\"line\"></span><br><span class=\"line\">\textern int var_A;</span><br><span class=\"line\">\tint func_A();</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p><strong>这是A.c</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &quot;A.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">int var_A = 0;</span><br><span class=\"line\">int func_A()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvar_A += 1;</span><br><span class=\"line\">\treturn var_A;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>假设有一个<strong>main.c</strong>想调用int func_A()函数<br><strong>这是main.c</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &quot;A.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">//此处可以不写，但是推荐写上便于后期代码维护，不然所调用函数都得去.h文件看</span><br><span class=\"line\">extern int func_A(); </span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint a = 0;</span><br><span class=\"line\">\ta = func_A() + 1;</span><br><span class=\"line\">\tprintf(&quot;a = %d&quot;, a);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、直接extern声明调用（两个-c需要在同一文件夹下）\"><a href=\"#二、直接extern声明调用（两个-c需要在同一文件夹下）\" class=\"headerlink\" title=\"二、直接extern声明调用（两个.c需要在同一文件夹下）\"></a>二、直接extern声明调用（两个.c需要在同一文件夹下）</h3><p>举个例子<br><strong>这是一个function.c</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int a = 0;</span><br><span class=\"line\">int function()&#123;</span><br><span class=\"line\">\ta +=  1；</span><br><span class=\"line\">\treturn a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>*<strong>这是主函数main.c</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">extern int function();\t//这里直接声明调用</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint b = 0;</span><br><span class=\"line\">\tb = function() + 1;</span><br><span class=\"line\">\tprintf(&quot;b = %d&quot;, b);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、-h定义函数-c调用-h-这样用可能会导致链接重复定义\"><a href=\"#三、-h定义函数-c调用-h-这样用可能会导致链接重复定义\" class=\"headerlink\" title=\"三、.h定义函数 .c调用.h(这样用可能会导致链接重复定义)\"></a>三、.h定义函数 .c调用.h(这样用可能会导致链接重复定义)</h3><p>重复定义例子：<br>A.h定义了function()<br>B.h调用A.h, B.c调用B.h使用function()定义了一个func_B()<br>C.h也调用了A.h, C.c调用C.h使用function()定义了一个func_C()<br>main.c 调用B.h和C.h然后使用func_B()和func_C()<br>这时候编译的时候就会报错，重复定义了function()</p>\n<p>举个在.h中定义函数的例子<br><strong>这是要调用的函数，在.h中定义</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifndef __func_H__</span><br><span class=\"line\">#define __func_H__</span><br><span class=\"line\"></span><br><span class=\"line\">\tint function(int a, int b)&#123;</span><br><span class=\"line\">\t\tretrun a + b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p><strong>这是主函数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &quot;func.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint c = 11;</span><br><span class=\"line\">\tint d = 11;</span><br><span class=\"line\">\tint temp = 0;</span><br><span class=\"line\">\ttemp = function(c, d);</span><br><span class=\"line\">\treturn temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/jingzi123456789/article/details/51286119\">https://blog.csdn.net/jingzi123456789/article/details/51286119</a><br><a href=\"https://blog.csdn.net/jingzi123456789/article/details/51286146\">https://blog.csdn.net/jingzi123456789/article/details/51286146</a><br><a href=\"https://blog.csdn.net/jingzi123456789/article/details/51287139\">https://blog.csdn.net/jingzi123456789/article/details/51287139</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"c文件之间的函数调用方法\"><a href=\"#c文件之间的函数调用方法\" class=\"headerlink\" title=\".c文件之间的函数调用方法\"></a>.c文件之间的函数调用方法</h2>","more":"<h3 id=\"一、通过-h文件调用（推荐使用）\"><a href=\"#一、通过-h文件调用（推荐使用）\" class=\"headerlink\" title=\"一、通过.h文件调用（推荐使用）\"></a>一、通过.h文件调用（推荐使用）</h3><p>在.c（源文件）文件中对函数进行定义，然后再.h文件中进行声明。<br>当另一个.c文件调用之前定义好的函数时直接导入声明该函数的.h文件即可。<br>举个例子：<br><strong>这是A.h</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifndef __A_H__</span><br><span class=\"line\">#define __A_H__</span><br><span class=\"line\"></span><br><span class=\"line\">\textern int var_A;</span><br><span class=\"line\">\tint func_A();</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p><strong>这是A.c</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &quot;A.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">int var_A = 0;</span><br><span class=\"line\">int func_A()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvar_A += 1;</span><br><span class=\"line\">\treturn var_A;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>假设有一个<strong>main.c</strong>想调用int func_A()函数<br><strong>这是main.c</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &quot;A.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">//此处可以不写，但是推荐写上便于后期代码维护，不然所调用函数都得去.h文件看</span><br><span class=\"line\">extern int func_A(); </span><br><span class=\"line\"></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tint a = 0;</span><br><span class=\"line\">\ta = func_A() + 1;</span><br><span class=\"line\">\tprintf(&quot;a = %d&quot;, a);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、直接extern声明调用（两个-c需要在同一文件夹下）\"><a href=\"#二、直接extern声明调用（两个-c需要在同一文件夹下）\" class=\"headerlink\" title=\"二、直接extern声明调用（两个.c需要在同一文件夹下）\"></a>二、直接extern声明调用（两个.c需要在同一文件夹下）</h3><p>举个例子<br><strong>这是一个function.c</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int a = 0;</span><br><span class=\"line\">int function()&#123;</span><br><span class=\"line\">\ta +=  1；</span><br><span class=\"line\">\treturn a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>*<strong>这是主函数main.c</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">extern int function();\t//这里直接声明调用</span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint b = 0;</span><br><span class=\"line\">\tb = function() + 1;</span><br><span class=\"line\">\tprintf(&quot;b = %d&quot;, b);</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、-h定义函数-c调用-h-这样用可能会导致链接重复定义\"><a href=\"#三、-h定义函数-c调用-h-这样用可能会导致链接重复定义\" class=\"headerlink\" title=\"三、.h定义函数 .c调用.h(这样用可能会导致链接重复定义)\"></a>三、.h定义函数 .c调用.h(这样用可能会导致链接重复定义)</h3><p>重复定义例子：<br>A.h定义了function()<br>B.h调用A.h, B.c调用B.h使用function()定义了一个func_B()<br>C.h也调用了A.h, C.c调用C.h使用function()定义了一个func_C()<br>main.c 调用B.h和C.h然后使用func_B()和func_C()<br>这时候编译的时候就会报错，重复定义了function()</p>\n<p>举个在.h中定义函数的例子<br><strong>这是要调用的函数，在.h中定义</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifndef __func_H__</span><br><span class=\"line\">#define __func_H__</span><br><span class=\"line\"></span><br><span class=\"line\">\tint function(int a, int b)&#123;</span><br><span class=\"line\">\t\tretrun a + b;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<p><strong>这是主函数</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &quot;func.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">int main()&#123;</span><br><span class=\"line\">\tint c = 11;</span><br><span class=\"line\">\tint d = 11;</span><br><span class=\"line\">\tint temp = 0;</span><br><span class=\"line\">\ttemp = function(c, d);</span><br><span class=\"line\">\treturn temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/jingzi123456789/article/details/51286119\">https://blog.csdn.net/jingzi123456789/article/details/51286119</a><br><a href=\"https://blog.csdn.net/jingzi123456789/article/details/51286146\">https://blog.csdn.net/jingzi123456789/article/details/51286146</a><br><a href=\"https://blog.csdn.net/jingzi123456789/article/details/51287139\">https://blog.csdn.net/jingzi123456789/article/details/51287139</a></p>"},{"title":"软件安装","_content":"# 软件安装\n**软件安装我不做太多赘述，直接放教程链接，亲测可用！！！\n如果以下没有的，可以再微信直接搜索你想要的软件，在搜索栏输入xxxx破解，一般都会出现相关公众号的破解教程和软件下载资源。**\n<!--more-->\n## 一、VScode 配置C/C++\n[知乎配置教程](https://zhuanlan.zhihu.com/p/87864677)\n[博客园配置教程](https://www.cnblogs.com/lsgxeva/p/11115650.html)\n\n## 二、keil C51、ARM、C166\n[keil C51](http://www.51hei.com/bbs/dpj-149575-1.html)\n~~~[keil C166](https://download.csdn.net/download/dfsl_2017/10629964)~~ 别点这个链接了，有新的方法而且很快！！！！\nkeil c166在网上的资源都特别少！今天去搜的时候突然看到了知乎大佬的一篇教程特别好！！！这里放他链接[知乎大佬链接](https://zhuanlan.zhihu.com/p/459594677) \n在下载自己想要的.exe后，注册机自己随便去找一个然后破解过程就不用我多说了，记得把注册机这里改成c166就可以。\n![图片](https://s3.bmp.ovh/imgs/2022/04/21/beb928ab7d5951ae.png)\n\n[keil ARM]()\n\n\n# 未完待续...","source":"_posts/learning/IDE_Install.md","raw":"---\ntitle: 软件安装\n---\n# 软件安装\n**软件安装我不做太多赘述，直接放教程链接，亲测可用！！！\n如果以下没有的，可以再微信直接搜索你想要的软件，在搜索栏输入xxxx破解，一般都会出现相关公众号的破解教程和软件下载资源。**\n<!--more-->\n## 一、VScode 配置C/C++\n[知乎配置教程](https://zhuanlan.zhihu.com/p/87864677)\n[博客园配置教程](https://www.cnblogs.com/lsgxeva/p/11115650.html)\n\n## 二、keil C51、ARM、C166\n[keil C51](http://www.51hei.com/bbs/dpj-149575-1.html)\n~~~[keil C166](https://download.csdn.net/download/dfsl_2017/10629964)~~ 别点这个链接了，有新的方法而且很快！！！！\nkeil c166在网上的资源都特别少！今天去搜的时候突然看到了知乎大佬的一篇教程特别好！！！这里放他链接[知乎大佬链接](https://zhuanlan.zhihu.com/p/459594677) \n在下载自己想要的.exe后，注册机自己随便去找一个然后破解过程就不用我多说了，记得把注册机这里改成c166就可以。\n![图片](https://s3.bmp.ovh/imgs/2022/04/21/beb928ab7d5951ae.png)\n\n[keil ARM]()\n\n\n# 未完待续...","slug":"learning/IDE_Install","published":1,"date":"2022-05-25T10:06:34.487Z","updated":"2022-04-21T07:18:08.267Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceep1000s68urhpb01hop","content":"<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><p><strong>软件安装我不做太多赘述，直接放教程链接，亲测可用！！！<br>如果以下没有的，可以再微信直接搜索你想要的软件，在搜索栏输入xxxx破解，一般都会出现相关公众号的破解教程和软件下载资源。</strong></p>\n<span id=\"more\"></span>\n<h2 id=\"一、VScode-配置C-C\"><a href=\"#一、VScode-配置C-C\" class=\"headerlink\" title=\"一、VScode 配置C/C++\"></a>一、VScode 配置C/C++</h2><p><a href=\"https://zhuanlan.zhihu.com/p/87864677\">知乎配置教程</a><br><a href=\"https://www.cnblogs.com/lsgxeva/p/11115650.html\">博客园配置教程</a></p>\n<h2 id=\"二、keil-C51、ARM、C166\"><a href=\"#二、keil-C51、ARM、C166\" class=\"headerlink\" title=\"二、keil C51、ARM、C166\"></a>二、keil C51、ARM、C166</h2><p><a href=\"http://www.51hei.com/bbs/dpj-149575-1.html\">keil C51</a></p>\n<p>~~~<a href=\"https://download.csdn.net/download/dfsl_2017/10629964\">keil C166</a>~~ 别点这个链接了，有新的方法而且很快！！！！<br>keil c166在网上的资源都特别少！今天去搜的时候突然看到了知乎大佬的一篇教程特别好！！！这里放他链接<a href=\"https://zhuanlan.zhihu.com/p/459594677\">知乎大佬链接</a><br>在下载自己想要的.exe后，注册机自己随便去找一个然后破解过程就不用我多说了，记得把注册机这里改成c166就可以。<br><img src=\"https://s3.bmp.ovh/imgs/2022/04/21/beb928ab7d5951ae.png\" alt=\"图片\"></p>\n<p><a href=\"\">keil ARM</a></p>\n<h1 id=\"未完待续…\"><a href=\"#未完待续…\" class=\"headerlink\" title=\"未完待续…\"></a>未完待续…</h1>","site":{"data":{}},"excerpt":"<h1 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h1><p><strong>软件安装我不做太多赘述，直接放教程链接，亲测可用！！！<br>如果以下没有的，可以再微信直接搜索你想要的软件，在搜索栏输入xxxx破解，一般都会出现相关公众号的破解教程和软件下载资源。</strong></p>","more":"<h2 id=\"一、VScode-配置C-C\"><a href=\"#一、VScode-配置C-C\" class=\"headerlink\" title=\"一、VScode 配置C/C++\"></a>一、VScode 配置C/C++</h2><p><a href=\"https://zhuanlan.zhihu.com/p/87864677\">知乎配置教程</a><br><a href=\"https://www.cnblogs.com/lsgxeva/p/11115650.html\">博客园配置教程</a></p>\n<h2 id=\"二、keil-C51、ARM、C166\"><a href=\"#二、keil-C51、ARM、C166\" class=\"headerlink\" title=\"二、keil C51、ARM、C166\"></a>二、keil C51、ARM、C166</h2><p><a href=\"http://www.51hei.com/bbs/dpj-149575-1.html\">keil C51</a></p>\n<p>~~~<a href=\"https://download.csdn.net/download/dfsl_2017/10629964\">keil C166</a>~~ 别点这个链接了，有新的方法而且很快！！！！<br>keil c166在网上的资源都特别少！今天去搜的时候突然看到了知乎大佬的一篇教程特别好！！！这里放他链接<a href=\"https://zhuanlan.zhihu.com/p/459594677\">知乎大佬链接</a><br>在下载自己想要的.exe后，注册机自己随便去找一个然后破解过程就不用我多说了，记得把注册机这里改成c166就可以。<br><img src=\"https://s3.bmp.ovh/imgs/2022/04/21/beb928ab7d5951ae.png\" alt=\"图片\"></p>\n<p><a href=\"\">keil ARM</a></p>\n<h1 id=\"未完待续…\"><a href=\"#未完待续…\" class=\"headerlink\" title=\"未完待续…\"></a>未完待续…</h1>"},{"title":"Markdown语法","_content":"# 一、标题：\n<!-- more -->\n# 这是一级标题\n## 二级标题\n### 三级标题\n#### 依次类推4、5、6...\n\n# 二、字体\n## 加粗\n要加粗的文字左右分别用<font color=#FF0000>两个*号</font>包起来，如下\n**加粗**\n## 斜体\n要斜体的文字左右分别用<font color=#FF0000>一个*号</font>包起来，如下\n*斜体*\n## 斜体加粗\n要斜体加粗的文字左右分别用<font color=#FF0000>三个*号</font>包起来，如下\n***斜体加粗***\n## 删除线\n要删除的文字左右分别用<font color=#FF0000>两个~~号</font>包起来，如下\n~~删除线~~\n\n# 三、引用\n在引用的文字前加>即可。引用也可以嵌套，如加两个>>三个>>>n个，如下\n>这是引用内容\n>>这是也是引用内容\n>>>这是也是引用内容\n>>>>这是也是引用内容\n>>>>>......\n\n# 四、分割线\n需要三个或三个以上的-或者*，如下\n**********************\n***\n--------------------\n---\n\n# 五、图片\n语法： \n![图片alt](图片地址 ''图片title'')\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加，如下：\n\n![汽车](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fup.enterdesk.com%2Fedpic%2F55%2Fbd%2F7b%2F55bd7b04e3de581cd67576c0529e13e8.jpg&refer=http%3A%2F%2Fup.enterdesk.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1649313531&t=511169c034c9205ffbcd8ac4167a2c15 \"奥迪\")\n**注：** 如果要使用本地图片，建议将图片上传Markdown图床。详细使用方法见大佬写的文章[markdown图床](https://www.jianshu.com/p/ea1eb11db63f)。\n\n# 六、超链接\n语法： \n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n示例： \n[简书](http://jianshu.com)\n[百度](http://baidu.com)\n\n# 七、列表\n## 无序列表\n语法： \n无序列表用 - + * 任何一种都可以\n示例：\n- 列表（-）\n+ 列表（+）\n* 列表（*）\n## 有序列表\n语法： \n数字加点，1. 2. 3. ......\n示例：\n1. 内容\n2. 内容\n3. 内容\n## 列表嵌套\n上一级和下一级之间敲**三个空格**即可\n- 一级列表\n   1. 二级列表\n   2. 二级列表\n      3. 三级\n\n# 八、表格\n语法： \n```\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n```\n\n第二行分割表头和内容。\n-有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略\n示例： \n姓名|技能|排行\n--|:--:|--: \n刘备|哭|大哥\n关羽|打|二哥\n张飞|骂|三弟\n\n# 九、代码\n语法： \n单行代码：代码之间分别用一个**反引号**包起来 \n`代码内容` \n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\n```\n  代码...\n  代码...\n  代码...\n```\n示例：\n\n`printf(\"hello, world!\");`\n\n```\nint main(){\n    return 0;\n}\n```\n\n# 十、流程图\n\n```flow\nst=>start: 开始框\nop=>operation: 处理框\ncond=>condition: 判断框(是或否?)\nsub1=>subroutine: 子流程\nio=>inputoutput: 输入输出框\ne=>end: 结束框\nst->op->cond\ncond(yes)->io->e\ncond(no)->sub1(right)->op\n``` \n>更多流程图详见[流程图格式](https://www.runoob.com/markdown/md-advance.html)\n\n# 十一、字体格式和字体颜色\n```\n<font  更改语法>   你的内容   </font>\n\n更改语法有: \n\ncolor=#0099ff   更改字体颜色\nface=\"黑体\"   更改字体\nsize= 7     更改字体大小\n\n\n<font face=\"黑体\">我是黑体字</font>\n<font face=\"微软雅黑\">我是微软雅黑</font>\n<font face=\"STCAIYUN\">我是华文彩云</font>\n<font color=#0099ff size=7 face=\"黑体\">color=#0099ff size=72 face=\"黑体\"</font>\n<font color=#00ffff size=72>color=#00ffff</font>\n<font color=gray size=72>color=gray</font>\n```\n\n附上更多颜色的rgb代码：\n颜色名 十六进制颜色值 颜色\nAliceBlue   #F0F8FF rgb(240, 248, 255)\nAntiqueWhite    #FAEBD7 rgb(250, 235, 215)\nAqua    #00FFFF rgb(0, 255, 255)\nAquamarine  #7FFFD4 rgb(127, 255, 212)\nAzure   #F0FFFF rgb(240, 255, 255)\nBeige   #F5F5DC rgb(245, 245, 220)\nBisque  #FFE4C4 rgb(255, 228, 196)\nBlack   #000000 rgb(0, 0, 0)\nBlanchedAlmond  #FFEBCD rgb(255, 235, 205)\nBlue    #0000FF rgb(0, 0, 255)\nBlueViolet  #8A2BE2 rgb(138, 43, 226)\nBrown   #A52A2A rgb(165, 42, 42)\nBurlyWood   #DEB887 rgb(222, 184, 135)\nCadetBlue   #5F9EA0 rgb(95, 158, 160)\nChartreuse  #7FFF00 rgb(127, 255, 0)\nChocolate   #D2691E rgb(210, 105, 30)\nCoral   #FF7F50 rgb(255, 127, 80)\nCornflowerBlue  #6495ED rgb(100, 149, 237)\nCornsilk    #FFF8DC rgb(255, 248, 220)\nCrimson #DC143C rgb(220, 20, 60)\nCyan    #00FFFF rgb(0, 255, 255)\nDarkBlue    #00008B rgb(0, 0, 139)\nDarkCyan    #008B8B rgb(0, 139, 139)\nDarkGoldenRod   #B8860B rgb(184, 134, 11)\nDarkGray    #A9A9A9 rgb(169, 169, 169)\nDarkGreen   #006400 rgb(0, 100, 0)\nDarkKhaki   #BDB76B rgb(189, 183, 107)\nDarkMagenta #8B008B rgb(139, 0, 139)\nDarkOliveGreen  #556B2F rgb(85, 107, 47)\nDarkorange  #FF8C00 rgb(255, 140, 0)\nDarkOrchid  #9932CC rgb(153, 50, 204)\nDarkRed #8B0000 rgb(139, 0, 0)\nDarkSalmon  #E9967A rgb(233, 150, 122)\nDarkSeaGreen    #8FBC8F rgb(143, 188, 143)\nDarkSlateBlue   #483D8B rgb(72, 61, 139)\nDarkSlateGray   #2F4F4F rgb(47, 79, 79)\nDarkTurquoise   #00CED1 rgb(0, 206, 209)\nDarkViolet  #9400D3 rgb(148, 0, 211)\nDeepPink    #FF1493 rgb(255, 20, 147)\nDeepSkyBlue #00BFFF rgb(0, 191, 255)\nDimGray #696969 rgb(105, 105, 105)\nDodgerBlue  #1E90FF rgb(30, 144, 255)\nFeldspar    #D19275 rgb(209, 146, 117)\nFireBrick   #B22222 rgb(178, 34, 34)\nFloralWhite #FFFAF0 rgb(255, 250, 240)\nForestGreen #228B22 rgb(34, 139, 34)\nFuchsia #FF00FF rgb(255, 0, 255)\nGainsboro   #DCDCDC rgb(220, 220, 220)\nGhostWhite  #F8F8FF rgb(248, 248, 255)\nGold    #FFD700 rgb(255, 215, 0)\nGoldenRod   #DAA520 rgb(218, 165, 32)\nGray    #808080 rgb(128, 128, 128)\nGreen   #008000 rgb(0, 128, 0)\nGreenYellow #ADFF2F rgb(173, 255, 47)\nHoneyDew    #F0FFF0 rgb(240, 255, 240)\nHotPink #FF69B4 rgb(255, 105, 180)\nIndianRed   #CD5C5C rgb(205, 92, 92)\nIndigo  #4B0082 rgb(75, 0, 130)\nIvory   #FFFFF0 rgb(255, 255, 240)\nKhaki   #F0E68C rgb(240, 230, 140)\nLavender    #E6E6FA rgb(230, 230, 250)\nLavenderBlush   #FFF0F5 rgb(255, 240, 245)\nLawnGreen   #7CFC00 rgb(124, 252, 0)\nLemonChiffon    #FFFACD rgb(255, 250, 205)\nLightBlue   #ADD8E6 rgb(173, 216, 230)\nLightCoral  #F08080 rgb(240, 128, 128)\nLightCyan   #E0FFFF rgb(224, 255, 255)\nLightGoldenRodYellow    #FAFAD2 rgb(250, 250, 210)\nLightGrey   #D3D3D3 rgb(211, 211, 211)\nLightGreen  #90EE90 rgb(144, 238, 144)\nLightPink   #FFB6C1 rgb(255, 182, 193)\nLightSalmon #FFA07A rgb(255, 160, 122)\nLightSeaGreen   #20B2AA rgb(32, 178, 170)\nLightSkyBlue    #87CEFA rgb(135, 206, 250)\nLightSlateBlue  #8470FF rgb(132, 112, 255)\nLightSlateGray  #778899 rgb(119, 136, 153)\nLightSteelBlue  #B0C4DE rgb(176, 196, 222)\nLightYellow #FFFFE0 rgb(255, 255, 224)\nLime    #00FF00 rgb(0, 255, 0)\nLimeGreen   #32CD32 rgb(50, 205, 50)\nLinen   #FAF0E6 rgb(250, 240, 230)\nMagenta #FF00FF rgb(255, 0, 255)\nMaroon  #800000 rgb(128, 0, 0)\nMediumAquaMarine    #66CDAA rgb(102, 205, 170)\nMediumBlue  #0000CD rgb(0, 0, 205)\nMediumOrchid    #BA55D3 rgb(186, 85, 211)\nMediumPurple    #9370D8 rgb(147, 112, 216)\nMediumSeaGreen  #3CB371 rgb(60, 179, 113)\nMediumSlateBlue #7B68EE rgb(123, 104, 238)\nMediumSpringGreen   #00FA9A rgb(0, 250, 154)\nMediumTurquoise #48D1CC rgb(72, 209, 204)\nMediumVioletRed #C71585 rgb(199, 21, 133)\nMidnightBlue    #191970 rgb(25, 25, 112)\nMintCream   #F5FFFA rgb(245, 255, 250)\nMistyRose   #FFE4E1 rgb(255, 228, 225)\nMoccasin    #FFE4B5 rgb(255, 228, 181)\nNavajoWhite #FFDEAD rgb(255, 222, 173)\nNavy    #000080 rgb(0, 0, 128)\nOldLace #FDF5E6 rgb(253, 245, 230)\nOlive   #808000 rgb(128, 128, 0)\nOliveDrab   #6B8E23 rgb(107, 142, 35)\nOrange  #FFA500 rgb(255, 165, 0)\nOrangeRed   #FF4500 rgb(255, 69, 0)\nOrchid  #DA70D6 rgb(218, 112, 214)\nPaleGoldenRod   #EEE8AA rgb(238, 232, 170)\nPaleGreen   #98FB98 rgb(152, 251, 152)\nPaleTurquoise   #AFEEEE rgb(175, 238, 238)\nPaleVioletRed   #D87093 rgb(216, 112, 147)\nPapayaWhip  #FFEFD5 rgb(255, 239, 213)\nPeachPuff   #FFDAB9 rgb(255, 218, 185)\nPeru    #CD853F rgb(205, 133, 63)\nPink    #FFC0CB rgb(255, 192, 203)\nPlum    #DDA0DD rgb(221, 160, 221)\nPowderBlue  #B0E0E6 rgb(176, 224, 230)\nPurple  #800080 rgb(128, 0, 128)\nRed #FF0000 rgb(255, 0, 0)\nRosyBrown   #BC8F8F rgb(188, 143, 143)\nRoyalBlue   #4169E1 rgb(65, 105, 225)\nSaddleBrown #8B4513 rgb(139, 69, 19)\nSalmon  #FA8072 rgb(250, 128, 114)\nSandyBrown  #F4A460 rgb(244, 164, 96)\nSeaGreen    #2E8B57 rgb(46, 139, 87)\nSeaShell    #FFF5EE rgb(255, 245, 238)\nSienna  #A0522D rgb(160, 82, 45)\nSilver  #C0C0C0 rgb(192, 192, 192)\nSkyBlue #87CEEB rgb(135, 206, 235)\nSlateBlue   #6A5ACD rgb(106, 90, 205)\nSlateGray   #708090 rgb(112, 128, 144)\nSnow    #FFFAFA rgb(255, 250, 250)\nSpringGreen #00FF7F rgb(0, 255, 127)\nSteelBlue   #4682B4 rgb(70, 130, 180)\nTan #D2B48C rgb(210, 180, 140)\nTeal    #008080 rgb(0, 128, 128)\nThistle #D8BFD8 rgb(216, 191, 216)\nTomato  #FF6347 rgb(255, 99, 71)\nTurquoise   #40E0D0 rgb(64, 224, 208)\nViolet  #EE82EE rgb(238, 130, 238)\nVioletRed   #D02090 rgb(208, 32, 144)\nWheat   #F5DEB3 rgb(245, 222, 179)\nWhite   #FFFFFF rgb(255, 255, 255)\nWhiteSmoke  #F5F5F5 rgb(245, 245, 245)\nYellow  #FFFF00 rgb(255, 255, 0)\nYellowGreen #9ACD32 rgb(154, 205, 50)\n\n# 参考文档链接\n### 更具体的使用方法可以去参考文档看\n>https://www.jianshu.com/p/191d1e21f7ed\n>https://blog.csdn.net/u011995719/article/details/77232626\n>https://www.jianshu.com/p/280c6a6f2594\n>https://www.runoob.com/markdown/md-advance.html\n\n后续有缘持续更新...\n","source":"_posts/learning/Language.md","raw":"---\ntitle: Markdown语法\n---\n# 一、标题：\n<!-- more -->\n# 这是一级标题\n## 二级标题\n### 三级标题\n#### 依次类推4、5、6...\n\n# 二、字体\n## 加粗\n要加粗的文字左右分别用<font color=#FF0000>两个*号</font>包起来，如下\n**加粗**\n## 斜体\n要斜体的文字左右分别用<font color=#FF0000>一个*号</font>包起来，如下\n*斜体*\n## 斜体加粗\n要斜体加粗的文字左右分别用<font color=#FF0000>三个*号</font>包起来，如下\n***斜体加粗***\n## 删除线\n要删除的文字左右分别用<font color=#FF0000>两个~~号</font>包起来，如下\n~~删除线~~\n\n# 三、引用\n在引用的文字前加>即可。引用也可以嵌套，如加两个>>三个>>>n个，如下\n>这是引用内容\n>>这是也是引用内容\n>>>这是也是引用内容\n>>>>这是也是引用内容\n>>>>>......\n\n# 四、分割线\n需要三个或三个以上的-或者*，如下\n**********************\n***\n--------------------\n---\n\n# 五、图片\n语法： \n![图片alt](图片地址 ''图片title'')\n\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加，如下：\n\n![汽车](https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fup.enterdesk.com%2Fedpic%2F55%2Fbd%2F7b%2F55bd7b04e3de581cd67576c0529e13e8.jpg&refer=http%3A%2F%2Fup.enterdesk.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1649313531&t=511169c034c9205ffbcd8ac4167a2c15 \"奥迪\")\n**注：** 如果要使用本地图片，建议将图片上传Markdown图床。详细使用方法见大佬写的文章[markdown图床](https://www.jianshu.com/p/ea1eb11db63f)。\n\n# 六、超链接\n语法： \n[超链接名](超链接地址 \"超链接title\")\ntitle可加可不加\n示例： \n[简书](http://jianshu.com)\n[百度](http://baidu.com)\n\n# 七、列表\n## 无序列表\n语法： \n无序列表用 - + * 任何一种都可以\n示例：\n- 列表（-）\n+ 列表（+）\n* 列表（*）\n## 有序列表\n语法： \n数字加点，1. 2. 3. ......\n示例：\n1. 内容\n2. 内容\n3. 内容\n## 列表嵌套\n上一级和下一级之间敲**三个空格**即可\n- 一级列表\n   1. 二级列表\n   2. 二级列表\n      3. 三级\n\n# 八、表格\n语法： \n```\n表头|表头|表头\n---|:--:|---:\n内容|内容|内容\n内容|内容|内容\n```\n\n第二行分割表头和内容。\n-有一个就行，为了对齐，多加了几个\n文字默认居左\n-两边加：表示文字居中\n-右边加：表示文字居右\n注：原生的语法两边都要用 | 包起来。此处省略\n示例： \n姓名|技能|排行\n--|:--:|--: \n刘备|哭|大哥\n关羽|打|二哥\n张飞|骂|三弟\n\n# 九、代码\n语法： \n单行代码：代码之间分别用一个**反引号**包起来 \n`代码内容` \n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\n```\n  代码...\n  代码...\n  代码...\n```\n示例：\n\n`printf(\"hello, world!\");`\n\n```\nint main(){\n    return 0;\n}\n```\n\n# 十、流程图\n\n```flow\nst=>start: 开始框\nop=>operation: 处理框\ncond=>condition: 判断框(是或否?)\nsub1=>subroutine: 子流程\nio=>inputoutput: 输入输出框\ne=>end: 结束框\nst->op->cond\ncond(yes)->io->e\ncond(no)->sub1(right)->op\n``` \n>更多流程图详见[流程图格式](https://www.runoob.com/markdown/md-advance.html)\n\n# 十一、字体格式和字体颜色\n```\n<font  更改语法>   你的内容   </font>\n\n更改语法有: \n\ncolor=#0099ff   更改字体颜色\nface=\"黑体\"   更改字体\nsize= 7     更改字体大小\n\n\n<font face=\"黑体\">我是黑体字</font>\n<font face=\"微软雅黑\">我是微软雅黑</font>\n<font face=\"STCAIYUN\">我是华文彩云</font>\n<font color=#0099ff size=7 face=\"黑体\">color=#0099ff size=72 face=\"黑体\"</font>\n<font color=#00ffff size=72>color=#00ffff</font>\n<font color=gray size=72>color=gray</font>\n```\n\n附上更多颜色的rgb代码：\n颜色名 十六进制颜色值 颜色\nAliceBlue   #F0F8FF rgb(240, 248, 255)\nAntiqueWhite    #FAEBD7 rgb(250, 235, 215)\nAqua    #00FFFF rgb(0, 255, 255)\nAquamarine  #7FFFD4 rgb(127, 255, 212)\nAzure   #F0FFFF rgb(240, 255, 255)\nBeige   #F5F5DC rgb(245, 245, 220)\nBisque  #FFE4C4 rgb(255, 228, 196)\nBlack   #000000 rgb(0, 0, 0)\nBlanchedAlmond  #FFEBCD rgb(255, 235, 205)\nBlue    #0000FF rgb(0, 0, 255)\nBlueViolet  #8A2BE2 rgb(138, 43, 226)\nBrown   #A52A2A rgb(165, 42, 42)\nBurlyWood   #DEB887 rgb(222, 184, 135)\nCadetBlue   #5F9EA0 rgb(95, 158, 160)\nChartreuse  #7FFF00 rgb(127, 255, 0)\nChocolate   #D2691E rgb(210, 105, 30)\nCoral   #FF7F50 rgb(255, 127, 80)\nCornflowerBlue  #6495ED rgb(100, 149, 237)\nCornsilk    #FFF8DC rgb(255, 248, 220)\nCrimson #DC143C rgb(220, 20, 60)\nCyan    #00FFFF rgb(0, 255, 255)\nDarkBlue    #00008B rgb(0, 0, 139)\nDarkCyan    #008B8B rgb(0, 139, 139)\nDarkGoldenRod   #B8860B rgb(184, 134, 11)\nDarkGray    #A9A9A9 rgb(169, 169, 169)\nDarkGreen   #006400 rgb(0, 100, 0)\nDarkKhaki   #BDB76B rgb(189, 183, 107)\nDarkMagenta #8B008B rgb(139, 0, 139)\nDarkOliveGreen  #556B2F rgb(85, 107, 47)\nDarkorange  #FF8C00 rgb(255, 140, 0)\nDarkOrchid  #9932CC rgb(153, 50, 204)\nDarkRed #8B0000 rgb(139, 0, 0)\nDarkSalmon  #E9967A rgb(233, 150, 122)\nDarkSeaGreen    #8FBC8F rgb(143, 188, 143)\nDarkSlateBlue   #483D8B rgb(72, 61, 139)\nDarkSlateGray   #2F4F4F rgb(47, 79, 79)\nDarkTurquoise   #00CED1 rgb(0, 206, 209)\nDarkViolet  #9400D3 rgb(148, 0, 211)\nDeepPink    #FF1493 rgb(255, 20, 147)\nDeepSkyBlue #00BFFF rgb(0, 191, 255)\nDimGray #696969 rgb(105, 105, 105)\nDodgerBlue  #1E90FF rgb(30, 144, 255)\nFeldspar    #D19275 rgb(209, 146, 117)\nFireBrick   #B22222 rgb(178, 34, 34)\nFloralWhite #FFFAF0 rgb(255, 250, 240)\nForestGreen #228B22 rgb(34, 139, 34)\nFuchsia #FF00FF rgb(255, 0, 255)\nGainsboro   #DCDCDC rgb(220, 220, 220)\nGhostWhite  #F8F8FF rgb(248, 248, 255)\nGold    #FFD700 rgb(255, 215, 0)\nGoldenRod   #DAA520 rgb(218, 165, 32)\nGray    #808080 rgb(128, 128, 128)\nGreen   #008000 rgb(0, 128, 0)\nGreenYellow #ADFF2F rgb(173, 255, 47)\nHoneyDew    #F0FFF0 rgb(240, 255, 240)\nHotPink #FF69B4 rgb(255, 105, 180)\nIndianRed   #CD5C5C rgb(205, 92, 92)\nIndigo  #4B0082 rgb(75, 0, 130)\nIvory   #FFFFF0 rgb(255, 255, 240)\nKhaki   #F0E68C rgb(240, 230, 140)\nLavender    #E6E6FA rgb(230, 230, 250)\nLavenderBlush   #FFF0F5 rgb(255, 240, 245)\nLawnGreen   #7CFC00 rgb(124, 252, 0)\nLemonChiffon    #FFFACD rgb(255, 250, 205)\nLightBlue   #ADD8E6 rgb(173, 216, 230)\nLightCoral  #F08080 rgb(240, 128, 128)\nLightCyan   #E0FFFF rgb(224, 255, 255)\nLightGoldenRodYellow    #FAFAD2 rgb(250, 250, 210)\nLightGrey   #D3D3D3 rgb(211, 211, 211)\nLightGreen  #90EE90 rgb(144, 238, 144)\nLightPink   #FFB6C1 rgb(255, 182, 193)\nLightSalmon #FFA07A rgb(255, 160, 122)\nLightSeaGreen   #20B2AA rgb(32, 178, 170)\nLightSkyBlue    #87CEFA rgb(135, 206, 250)\nLightSlateBlue  #8470FF rgb(132, 112, 255)\nLightSlateGray  #778899 rgb(119, 136, 153)\nLightSteelBlue  #B0C4DE rgb(176, 196, 222)\nLightYellow #FFFFE0 rgb(255, 255, 224)\nLime    #00FF00 rgb(0, 255, 0)\nLimeGreen   #32CD32 rgb(50, 205, 50)\nLinen   #FAF0E6 rgb(250, 240, 230)\nMagenta #FF00FF rgb(255, 0, 255)\nMaroon  #800000 rgb(128, 0, 0)\nMediumAquaMarine    #66CDAA rgb(102, 205, 170)\nMediumBlue  #0000CD rgb(0, 0, 205)\nMediumOrchid    #BA55D3 rgb(186, 85, 211)\nMediumPurple    #9370D8 rgb(147, 112, 216)\nMediumSeaGreen  #3CB371 rgb(60, 179, 113)\nMediumSlateBlue #7B68EE rgb(123, 104, 238)\nMediumSpringGreen   #00FA9A rgb(0, 250, 154)\nMediumTurquoise #48D1CC rgb(72, 209, 204)\nMediumVioletRed #C71585 rgb(199, 21, 133)\nMidnightBlue    #191970 rgb(25, 25, 112)\nMintCream   #F5FFFA rgb(245, 255, 250)\nMistyRose   #FFE4E1 rgb(255, 228, 225)\nMoccasin    #FFE4B5 rgb(255, 228, 181)\nNavajoWhite #FFDEAD rgb(255, 222, 173)\nNavy    #000080 rgb(0, 0, 128)\nOldLace #FDF5E6 rgb(253, 245, 230)\nOlive   #808000 rgb(128, 128, 0)\nOliveDrab   #6B8E23 rgb(107, 142, 35)\nOrange  #FFA500 rgb(255, 165, 0)\nOrangeRed   #FF4500 rgb(255, 69, 0)\nOrchid  #DA70D6 rgb(218, 112, 214)\nPaleGoldenRod   #EEE8AA rgb(238, 232, 170)\nPaleGreen   #98FB98 rgb(152, 251, 152)\nPaleTurquoise   #AFEEEE rgb(175, 238, 238)\nPaleVioletRed   #D87093 rgb(216, 112, 147)\nPapayaWhip  #FFEFD5 rgb(255, 239, 213)\nPeachPuff   #FFDAB9 rgb(255, 218, 185)\nPeru    #CD853F rgb(205, 133, 63)\nPink    #FFC0CB rgb(255, 192, 203)\nPlum    #DDA0DD rgb(221, 160, 221)\nPowderBlue  #B0E0E6 rgb(176, 224, 230)\nPurple  #800080 rgb(128, 0, 128)\nRed #FF0000 rgb(255, 0, 0)\nRosyBrown   #BC8F8F rgb(188, 143, 143)\nRoyalBlue   #4169E1 rgb(65, 105, 225)\nSaddleBrown #8B4513 rgb(139, 69, 19)\nSalmon  #FA8072 rgb(250, 128, 114)\nSandyBrown  #F4A460 rgb(244, 164, 96)\nSeaGreen    #2E8B57 rgb(46, 139, 87)\nSeaShell    #FFF5EE rgb(255, 245, 238)\nSienna  #A0522D rgb(160, 82, 45)\nSilver  #C0C0C0 rgb(192, 192, 192)\nSkyBlue #87CEEB rgb(135, 206, 235)\nSlateBlue   #6A5ACD rgb(106, 90, 205)\nSlateGray   #708090 rgb(112, 128, 144)\nSnow    #FFFAFA rgb(255, 250, 250)\nSpringGreen #00FF7F rgb(0, 255, 127)\nSteelBlue   #4682B4 rgb(70, 130, 180)\nTan #D2B48C rgb(210, 180, 140)\nTeal    #008080 rgb(0, 128, 128)\nThistle #D8BFD8 rgb(216, 191, 216)\nTomato  #FF6347 rgb(255, 99, 71)\nTurquoise   #40E0D0 rgb(64, 224, 208)\nViolet  #EE82EE rgb(238, 130, 238)\nVioletRed   #D02090 rgb(208, 32, 144)\nWheat   #F5DEB3 rgb(245, 222, 179)\nWhite   #FFFFFF rgb(255, 255, 255)\nWhiteSmoke  #F5F5F5 rgb(245, 245, 245)\nYellow  #FFFF00 rgb(255, 255, 0)\nYellowGreen #9ACD32 rgb(154, 205, 50)\n\n# 参考文档链接\n### 更具体的使用方法可以去参考文档看\n>https://www.jianshu.com/p/191d1e21f7ed\n>https://blog.csdn.net/u011995719/article/details/77232626\n>https://www.jianshu.com/p/280c6a6f2594\n>https://www.runoob.com/markdown/md-advance.html\n\n后续有缘持续更新...\n","slug":"learning/Language","published":1,"date":"2022-05-25T10:06:34.502Z","updated":"2022-03-24T09:46:34.283Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceep2000t68urhixi1wfe","content":"<h1 id=\"一、标题：\"><a href=\"#一、标题：\" class=\"headerlink\" title=\"一、标题：\"></a>一、标题：</h1><span id=\"more\"></span>\n<h1 id=\"这是一级标题\"><a href=\"#这是一级标题\" class=\"headerlink\" title=\"这是一级标题\"></a>这是一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"依次类推4、5、6…\"><a href=\"#依次类推4、5、6…\" class=\"headerlink\" title=\"依次类推4、5、6…\"></a>依次类推4、5、6…</h4><h1 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h1><h2 id=\"加粗\"><a href=\"#加粗\" class=\"headerlink\" title=\"加粗\"></a>加粗</h2><p>要加粗的文字左右分别用<font color=#FF0000>两个*号</font>包起来，如下<br><strong>加粗</strong></p>\n<h2 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h2><p>要斜体的文字左右分别用<font color=#FF0000>一个*号</font>包起来，如下<br><em>斜体</em></p>\n<h2 id=\"斜体加粗\"><a href=\"#斜体加粗\" class=\"headerlink\" title=\"斜体加粗\"></a>斜体加粗</h2><p>要斜体加粗的文字左右分别用<font color=#FF0000>三个*号</font>包起来，如下<br><em><strong>斜体加粗</strong></em></p>\n<h2 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h2><p>要删除的文字左右分别用<font color=#FF0000>两个<del>号</font>包起来，如下<br>~~删除线</del></p>\n<h1 id=\"三、引用\"><a href=\"#三、引用\" class=\"headerlink\" title=\"三、引用\"></a>三、引用</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个，如下</p>\n<blockquote>\n<p>这是引用内容</p>\n<blockquote>\n<p>这是也是引用内容</p>\n<blockquote>\n<p>这是也是引用内容</p>\n<blockquote>\n<p>这是也是引用内容</p>\n<blockquote>\n<p>……</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"四、分割线\"><a href=\"#四、分割线\" class=\"headerlink\" title=\"四、分割线\"></a>四、分割线</h1><p>需要三个或三个以上的-或者*，如下</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<h1 id=\"五、图片\"><a href=\"#五、图片\" class=\"headerlink\" title=\"五、图片\"></a>五、图片</h1><p>语法：<br>![图片alt](图片地址 ‘’图片title’’)</p>\n<p>图片alt就是显示在图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加，如下：</p>\n<p><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fup.enterdesk.com%2Fedpic%2F55%2Fbd%2F7b%2F55bd7b04e3de581cd67576c0529e13e8.jpg&refer=http%3A%2F%2Fup.enterdesk.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1649313531&t=511169c034c9205ffbcd8ac4167a2c15\" alt=\"汽车\" title=\"奥迪\"><br><strong>注：</strong> 如果要使用本地图片，建议将图片上传Markdown图床。详细使用方法见大佬写的文章<a href=\"https://www.jianshu.com/p/ea1eb11db63f\">markdown图床</a>。</p>\n<h1 id=\"六、超链接\"><a href=\"#六、超链接\" class=\"headerlink\" title=\"六、超链接\"></a>六、超链接</h1><p>语法：<br><a href=\"%E8%B6%85%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80\" title=\"超链接title\">超链接名</a><br>title可加可不加<br>示例：<br><a href=\"http://jianshu.com/\">简书</a><br><a href=\"http://baidu.com/\">百度</a></p>\n<h1 id=\"七、列表\"><a href=\"#七、列表\" class=\"headerlink\" title=\"七、列表\"></a>七、列表</h1><h2 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h2><p>语法：<br>无序列表用 - + * 任何一种都可以<br>示例：</p>\n<ul>\n<li>列表（-）</li>\n</ul>\n<ul>\n<li>列表（+）</li>\n</ul>\n<ul>\n<li>列表（*）<h2 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h2>语法：<br>数字加点，1. 2. 3. ……<br>示例：</li>\n</ul>\n<ol>\n<li>内容</li>\n<li>内容</li>\n<li>内容<h2 id=\"列表嵌套\"><a href=\"#列表嵌套\" class=\"headerlink\" title=\"列表嵌套\"></a>列表嵌套</h2>上一级和下一级之间敲<strong>三个空格</strong>即可</li>\n</ol>\n<ul>\n<li>一级列表<ol>\n<li>二级列表</li>\n<li>二级列表<ol start=\"3\">\n<li>三级</li>\n</ol>\n</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"八、表格\"><a href=\"#八、表格\" class=\"headerlink\" title=\"八、表格\"></a>八、表格</h1><p>语法： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|表头|表头</span><br><span class=\"line\">---|:--:|---:</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\">内容|内容|内容</span><br></pre></td></tr></table></figure>\n\n<p>第二行分割表头和内容。<br>-有一个就行，为了对齐，多加了几个<br>文字默认居左<br>-两边加：表示文字居中<br>-右边加：表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略<br>示例：<br>姓名|技能|排行<br>–|:–:|–:<br>刘备|哭|大哥<br>关羽|打|二哥<br>张飞|骂|三弟</p>\n<h1 id=\"九、代码\"><a href=\"#九、代码\" class=\"headerlink\" title=\"九、代码\"></a>九、代码</h1><p>语法：<br>单行代码：代码之间分别用一个<strong>反引号</strong>包起来<br><code>代码内容</code><br>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码...</span><br><span class=\"line\">代码...</span><br><span class=\"line\">代码...</span><br></pre></td></tr></table></figure>\n<p>示例：</p>\n<p><code>printf(&quot;hello, world!&quot;);</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main()&#123;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"十、流程图\"><a href=\"#十、流程图\" class=\"headerlink\" title=\"十、流程图\"></a>十、流程图</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始框</span><br><span class=\"line\">op=&gt;operation: 处理框</span><br><span class=\"line\">cond=&gt;condition: 判断框(是或否?)</span><br><span class=\"line\">sub1=&gt;subroutine: 子流程</span><br><span class=\"line\">io=&gt;inputoutput: 输入输出框</span><br><span class=\"line\">e=&gt;end: 结束框</span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;io-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更多流程图详见<a href=\"https://www.runoob.com/markdown/md-advance.html\">流程图格式</a></p>\n</blockquote>\n<h1 id=\"十一、字体格式和字体颜色\"><a href=\"#十一、字体格式和字体颜色\" class=\"headerlink\" title=\"十一、字体格式和字体颜色\"></a>十一、字体格式和字体颜色</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font  更改语法&gt;   你的内容   &lt;/font&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">更改语法有: </span><br><span class=\"line\"></span><br><span class=\"line\">color=#0099ff   更改字体颜色</span><br><span class=\"line\">face=&quot;黑体&quot;   更改字体</span><br><span class=\"line\">size= 7     更改字体大小</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class=\"line\">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</span><br><span class=\"line\">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</span><br><span class=\"line\">&lt;font color=#0099ff size=7 face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=&quot;黑体&quot;&lt;/font&gt;</span><br><span class=\"line\">&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;</span><br><span class=\"line\">&lt;font color=gray size=72&gt;color=gray&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n\n<p>附上更多颜色的rgb代码：<br>颜色名 十六进制颜色值 颜色<br>AliceBlue   #F0F8FF rgb(240, 248, 255)<br>AntiqueWhite    #FAEBD7 rgb(250, 235, 215)<br>Aqua    #00FFFF rgb(0, 255, 255)<br>Aquamarine  #7FFFD4 rgb(127, 255, 212)<br>Azure   #F0FFFF rgb(240, 255, 255)<br>Beige   #F5F5DC rgb(245, 245, 220)<br>Bisque  #FFE4C4 rgb(255, 228, 196)<br>Black   #000000 rgb(0, 0, 0)<br>BlanchedAlmond  #FFEBCD rgb(255, 235, 205)<br>Blue    #0000FF rgb(0, 0, 255)<br>BlueViolet  #8A2BE2 rgb(138, 43, 226)<br>Brown   #A52A2A rgb(165, 42, 42)<br>BurlyWood   #DEB887 rgb(222, 184, 135)<br>CadetBlue   #5F9EA0 rgb(95, 158, 160)<br>Chartreuse  #7FFF00 rgb(127, 255, 0)<br>Chocolate   #D2691E rgb(210, 105, 30)<br>Coral   #FF7F50 rgb(255, 127, 80)<br>CornflowerBlue  #6495ED rgb(100, 149, 237)<br>Cornsilk    #FFF8DC rgb(255, 248, 220)<br>Crimson #DC143C rgb(220, 20, 60)<br>Cyan    #00FFFF rgb(0, 255, 255)<br>DarkBlue    #00008B rgb(0, 0, 139)<br>DarkCyan    #008B8B rgb(0, 139, 139)<br>DarkGoldenRod   #B8860B rgb(184, 134, 11)<br>DarkGray    #A9A9A9 rgb(169, 169, 169)<br>DarkGreen   #006400 rgb(0, 100, 0)<br>DarkKhaki   #BDB76B rgb(189, 183, 107)<br>DarkMagenta #8B008B rgb(139, 0, 139)<br>DarkOliveGreen  #556B2F rgb(85, 107, 47)<br>Darkorange  #FF8C00 rgb(255, 140, 0)<br>DarkOrchid  #9932CC rgb(153, 50, 204)<br>DarkRed #8B0000 rgb(139, 0, 0)<br>DarkSalmon  #E9967A rgb(233, 150, 122)<br>DarkSeaGreen    #8FBC8F rgb(143, 188, 143)<br>DarkSlateBlue   #483D8B rgb(72, 61, 139)<br>DarkSlateGray   #2F4F4F rgb(47, 79, 79)<br>DarkTurquoise   #00CED1 rgb(0, 206, 209)<br>DarkViolet  #9400D3 rgb(148, 0, 211)<br>DeepPink    #FF1493 rgb(255, 20, 147)<br>DeepSkyBlue #00BFFF rgb(0, 191, 255)<br>DimGray #696969 rgb(105, 105, 105)<br>DodgerBlue  #1E90FF rgb(30, 144, 255)<br>Feldspar    #D19275 rgb(209, 146, 117)<br>FireBrick   #B22222 rgb(178, 34, 34)<br>FloralWhite #FFFAF0 rgb(255, 250, 240)<br>ForestGreen #228B22 rgb(34, 139, 34)<br>Fuchsia #FF00FF rgb(255, 0, 255)<br>Gainsboro   #DCDCDC rgb(220, 220, 220)<br>GhostWhite  #F8F8FF rgb(248, 248, 255)<br>Gold    #FFD700 rgb(255, 215, 0)<br>GoldenRod   #DAA520 rgb(218, 165, 32)<br>Gray    #808080 rgb(128, 128, 128)<br>Green   #008000 rgb(0, 128, 0)<br>GreenYellow #ADFF2F rgb(173, 255, 47)<br>HoneyDew    #F0FFF0 rgb(240, 255, 240)<br>HotPink #FF69B4 rgb(255, 105, 180)<br>IndianRed   #CD5C5C rgb(205, 92, 92)<br>Indigo  #4B0082 rgb(75, 0, 130)<br>Ivory   #FFFFF0 rgb(255, 255, 240)<br>Khaki   #F0E68C rgb(240, 230, 140)<br>Lavender    #E6E6FA rgb(230, 230, 250)<br>LavenderBlush   #FFF0F5 rgb(255, 240, 245)<br>LawnGreen   #7CFC00 rgb(124, 252, 0)<br>LemonChiffon    #FFFACD rgb(255, 250, 205)<br>LightBlue   #ADD8E6 rgb(173, 216, 230)<br>LightCoral  #F08080 rgb(240, 128, 128)<br>LightCyan   #E0FFFF rgb(224, 255, 255)<br>LightGoldenRodYellow    #FAFAD2 rgb(250, 250, 210)<br>LightGrey   #D3D3D3 rgb(211, 211, 211)<br>LightGreen  #90EE90 rgb(144, 238, 144)<br>LightPink   #FFB6C1 rgb(255, 182, 193)<br>LightSalmon #FFA07A rgb(255, 160, 122)<br>LightSeaGreen   #20B2AA rgb(32, 178, 170)<br>LightSkyBlue    #87CEFA rgb(135, 206, 250)<br>LightSlateBlue  #8470FF rgb(132, 112, 255)<br>LightSlateGray  #778899 rgb(119, 136, 153)<br>LightSteelBlue  #B0C4DE rgb(176, 196, 222)<br>LightYellow #FFFFE0 rgb(255, 255, 224)<br>Lime    #00FF00 rgb(0, 255, 0)<br>LimeGreen   #32CD32 rgb(50, 205, 50)<br>Linen   #FAF0E6 rgb(250, 240, 230)<br>Magenta #FF00FF rgb(255, 0, 255)<br>Maroon  #800000 rgb(128, 0, 0)<br>MediumAquaMarine    #66CDAA rgb(102, 205, 170)<br>MediumBlue  #0000CD rgb(0, 0, 205)<br>MediumOrchid    #BA55D3 rgb(186, 85, 211)<br>MediumPurple    #9370D8 rgb(147, 112, 216)<br>MediumSeaGreen  #3CB371 rgb(60, 179, 113)<br>MediumSlateBlue #7B68EE rgb(123, 104, 238)<br>MediumSpringGreen   #00FA9A rgb(0, 250, 154)<br>MediumTurquoise #48D1CC rgb(72, 209, 204)<br>MediumVioletRed #C71585 rgb(199, 21, 133)<br>MidnightBlue    #191970 rgb(25, 25, 112)<br>MintCream   #F5FFFA rgb(245, 255, 250)<br>MistyRose   #FFE4E1 rgb(255, 228, 225)<br>Moccasin    #FFE4B5 rgb(255, 228, 181)<br>NavajoWhite #FFDEAD rgb(255, 222, 173)<br>Navy    #000080 rgb(0, 0, 128)<br>OldLace #FDF5E6 rgb(253, 245, 230)<br>Olive   #808000 rgb(128, 128, 0)<br>OliveDrab   #6B8E23 rgb(107, 142, 35)<br>Orange  #FFA500 rgb(255, 165, 0)<br>OrangeRed   #FF4500 rgb(255, 69, 0)<br>Orchid  #DA70D6 rgb(218, 112, 214)<br>PaleGoldenRod   #EEE8AA rgb(238, 232, 170)<br>PaleGreen   #98FB98 rgb(152, 251, 152)<br>PaleTurquoise   #AFEEEE rgb(175, 238, 238)<br>PaleVioletRed   #D87093 rgb(216, 112, 147)<br>PapayaWhip  #FFEFD5 rgb(255, 239, 213)<br>PeachPuff   #FFDAB9 rgb(255, 218, 185)<br>Peru    #CD853F rgb(205, 133, 63)<br>Pink    #FFC0CB rgb(255, 192, 203)<br>Plum    #DDA0DD rgb(221, 160, 221)<br>PowderBlue  #B0E0E6 rgb(176, 224, 230)<br>Purple  #800080 rgb(128, 0, 128)<br>Red #FF0000 rgb(255, 0, 0)<br>RosyBrown   #BC8F8F rgb(188, 143, 143)<br>RoyalBlue   #4169E1 rgb(65, 105, 225)<br>SaddleBrown #8B4513 rgb(139, 69, 19)<br>Salmon  #FA8072 rgb(250, 128, 114)<br>SandyBrown  #F4A460 rgb(244, 164, 96)<br>SeaGreen    #2E8B57 rgb(46, 139, 87)<br>SeaShell    #FFF5EE rgb(255, 245, 238)<br>Sienna  #A0522D rgb(160, 82, 45)<br>Silver  #C0C0C0 rgb(192, 192, 192)<br>SkyBlue #87CEEB rgb(135, 206, 235)<br>SlateBlue   #6A5ACD rgb(106, 90, 205)<br>SlateGray   #708090 rgb(112, 128, 144)<br>Snow    #FFFAFA rgb(255, 250, 250)<br>SpringGreen #00FF7F rgb(0, 255, 127)<br>SteelBlue   #4682B4 rgb(70, 130, 180)<br>Tan #D2B48C rgb(210, 180, 140)<br>Teal    #008080 rgb(0, 128, 128)<br>Thistle #D8BFD8 rgb(216, 191, 216)<br>Tomato  #FF6347 rgb(255, 99, 71)<br>Turquoise   #40E0D0 rgb(64, 224, 208)<br>Violet  #EE82EE rgb(238, 130, 238)<br>VioletRed   #D02090 rgb(208, 32, 144)<br>Wheat   #F5DEB3 rgb(245, 222, 179)<br>White   #FFFFFF rgb(255, 255, 255)<br>WhiteSmoke  #F5F5F5 rgb(245, 245, 245)<br>Yellow  #FFFF00 rgb(255, 255, 0)<br>YellowGreen #9ACD32 rgb(154, 205, 50)</p>\n<h1 id=\"参考文档链接\"><a href=\"#参考文档链接\" class=\"headerlink\" title=\"参考文档链接\"></a>参考文档链接</h1><h3 id=\"更具体的使用方法可以去参考文档看\"><a href=\"#更具体的使用方法可以去参考文档看\" class=\"headerlink\" title=\"更具体的使用方法可以去参考文档看\"></a>更具体的使用方法可以去参考文档看</h3><blockquote>\n<p><a href=\"https://www.jianshu.com/p/191d1e21f7ed\">https://www.jianshu.com/p/191d1e21f7ed</a><br><a href=\"https://blog.csdn.net/u011995719/article/details/77232626\">https://blog.csdn.net/u011995719/article/details/77232626</a><br><a href=\"https://www.jianshu.com/p/280c6a6f2594\">https://www.jianshu.com/p/280c6a6f2594</a><br><a href=\"https://www.runoob.com/markdown/md-advance.html\">https://www.runoob.com/markdown/md-advance.html</a></p>\n</blockquote>\n<p>后续有缘持续更新…</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"一、标题：\"><a href=\"#一、标题：\" class=\"headerlink\" title=\"一、标题：\"></a>一、标题：</h1>","more":"<h1 id=\"这是一级标题\"><a href=\"#这是一级标题\" class=\"headerlink\" title=\"这是一级标题\"></a>这是一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"依次类推4、5、6…\"><a href=\"#依次类推4、5、6…\" class=\"headerlink\" title=\"依次类推4、5、6…\"></a>依次类推4、5、6…</h4><h1 id=\"二、字体\"><a href=\"#二、字体\" class=\"headerlink\" title=\"二、字体\"></a>二、字体</h1><h2 id=\"加粗\"><a href=\"#加粗\" class=\"headerlink\" title=\"加粗\"></a>加粗</h2><p>要加粗的文字左右分别用<font color=#FF0000>两个*号</font>包起来，如下<br><strong>加粗</strong></p>\n<h2 id=\"斜体\"><a href=\"#斜体\" class=\"headerlink\" title=\"斜体\"></a>斜体</h2><p>要斜体的文字左右分别用<font color=#FF0000>一个*号</font>包起来，如下<br><em>斜体</em></p>\n<h2 id=\"斜体加粗\"><a href=\"#斜体加粗\" class=\"headerlink\" title=\"斜体加粗\"></a>斜体加粗</h2><p>要斜体加粗的文字左右分别用<font color=#FF0000>三个*号</font>包起来，如下<br><em><strong>斜体加粗</strong></em></p>\n<h2 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a>删除线</h2><p>要删除的文字左右分别用<font color=#FF0000>两个<del>号</font>包起来，如下<br>~~删除线</del></p>\n<h1 id=\"三、引用\"><a href=\"#三、引用\" class=\"headerlink\" title=\"三、引用\"></a>三、引用</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;n个，如下</p>\n<blockquote>\n<p>这是引用内容</p>\n<blockquote>\n<p>这是也是引用内容</p>\n<blockquote>\n<p>这是也是引用内容</p>\n<blockquote>\n<p>这是也是引用内容</p>\n<blockquote>\n<p>……</p>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n</blockquote>\n<h1 id=\"四、分割线\"><a href=\"#四、分割线\" class=\"headerlink\" title=\"四、分割线\"></a>四、分割线</h1><p>需要三个或三个以上的-或者*，如下</p>\n<hr>\n<hr>\n<hr>\n<hr>\n<h1 id=\"五、图片\"><a href=\"#五、图片\" class=\"headerlink\" title=\"五、图片\"></a>五、图片</h1><p>语法：<br>![图片alt](图片地址 ‘’图片title’’)</p>\n<p>图片alt就是显示在图片下面的文字，相当于对图片内容的解释。<br>图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加，如下：</p>\n<p><img src=\"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fup.enterdesk.com%2Fedpic%2F55%2Fbd%2F7b%2F55bd7b04e3de581cd67576c0529e13e8.jpg&refer=http%3A%2F%2Fup.enterdesk.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1649313531&t=511169c034c9205ffbcd8ac4167a2c15\" alt=\"汽车\" title=\"奥迪\"><br><strong>注：</strong> 如果要使用本地图片，建议将图片上传Markdown图床。详细使用方法见大佬写的文章<a href=\"https://www.jianshu.com/p/ea1eb11db63f\">markdown图床</a>。</p>\n<h1 id=\"六、超链接\"><a href=\"#六、超链接\" class=\"headerlink\" title=\"六、超链接\"></a>六、超链接</h1><p>语法：<br><a href=\"%E8%B6%85%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80\" title=\"超链接title\">超链接名</a><br>title可加可不加<br>示例：<br><a href=\"http://jianshu.com/\">简书</a><br><a href=\"http://baidu.com/\">百度</a></p>\n<h1 id=\"七、列表\"><a href=\"#七、列表\" class=\"headerlink\" title=\"七、列表\"></a>七、列表</h1><h2 id=\"无序列表\"><a href=\"#无序列表\" class=\"headerlink\" title=\"无序列表\"></a>无序列表</h2><p>语法：<br>无序列表用 - + * 任何一种都可以<br>示例：</p>\n<ul>\n<li>列表（-）</li>\n</ul>\n<ul>\n<li>列表（+）</li>\n</ul>\n<ul>\n<li>列表（*）<h2 id=\"有序列表\"><a href=\"#有序列表\" class=\"headerlink\" title=\"有序列表\"></a>有序列表</h2>语法：<br>数字加点，1. 2. 3. ……<br>示例：</li>\n</ul>\n<ol>\n<li>内容</li>\n<li>内容</li>\n<li>内容<h2 id=\"列表嵌套\"><a href=\"#列表嵌套\" class=\"headerlink\" title=\"列表嵌套\"></a>列表嵌套</h2>上一级和下一级之间敲<strong>三个空格</strong>即可</li>\n</ol>\n<ul>\n<li>一级列表<ol>\n<li>二级列表</li>\n<li>二级列表<ol start=\"3\">\n<li>三级</li>\n</ol>\n</li>\n</ol>\n</li>\n</ul>\n<h1 id=\"八、表格\"><a href=\"#八、表格\" class=\"headerlink\" title=\"八、表格\"></a>八、表格</h1><p>语法： </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">表头|表头|表头</span><br><span class=\"line\">---|:--:|---:</span><br><span class=\"line\">内容|内容|内容</span><br><span class=\"line\">内容|内容|内容</span><br></pre></td></tr></table></figure>\n\n<p>第二行分割表头和内容。<br>-有一个就行，为了对齐，多加了几个<br>文字默认居左<br>-两边加：表示文字居中<br>-右边加：表示文字居右<br>注：原生的语法两边都要用 | 包起来。此处省略<br>示例：<br>姓名|技能|排行<br>–|:–:|–:<br>刘备|哭|大哥<br>关羽|打|二哥<br>张飞|骂|三弟</p>\n<h1 id=\"九、代码\"><a href=\"#九、代码\" class=\"headerlink\" title=\"九、代码\"></a>九、代码</h1><p>语法：<br>单行代码：代码之间分别用一个<strong>反引号</strong>包起来<br><code>代码内容</code><br>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">代码...</span><br><span class=\"line\">代码...</span><br><span class=\"line\">代码...</span><br></pre></td></tr></table></figure>\n<p>示例：</p>\n<p><code>printf(&quot;hello, world!&quot;);</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main()&#123;</span><br><span class=\"line\">    return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"十、流程图\"><a href=\"#十、流程图\" class=\"headerlink\" title=\"十、流程图\"></a>十、流程图</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: 开始框</span><br><span class=\"line\">op=&gt;operation: 处理框</span><br><span class=\"line\">cond=&gt;condition: 判断框(是或否?)</span><br><span class=\"line\">sub1=&gt;subroutine: 子流程</span><br><span class=\"line\">io=&gt;inputoutput: 输入输出框</span><br><span class=\"line\">e=&gt;end: 结束框</span><br><span class=\"line\">st-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;io-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub1(right)-&gt;op</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>更多流程图详见<a href=\"https://www.runoob.com/markdown/md-advance.html\">流程图格式</a></p>\n</blockquote>\n<h1 id=\"十一、字体格式和字体颜色\"><a href=\"#十一、字体格式和字体颜色\" class=\"headerlink\" title=\"十一、字体格式和字体颜色\"></a>十一、字体格式和字体颜色</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font  更改语法&gt;   你的内容   &lt;/font&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">更改语法有: </span><br><span class=\"line\"></span><br><span class=\"line\">color=#0099ff   更改字体颜色</span><br><span class=\"line\">face=&quot;黑体&quot;   更改字体</span><br><span class=\"line\">size= 7     更改字体大小</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class=\"line\">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</span><br><span class=\"line\">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</span><br><span class=\"line\">&lt;font color=#0099ff size=7 face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=&quot;黑体&quot;&lt;/font&gt;</span><br><span class=\"line\">&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;</span><br><span class=\"line\">&lt;font color=gray size=72&gt;color=gray&lt;/font&gt;</span><br></pre></td></tr></table></figure>\n\n<p>附上更多颜色的rgb代码：<br>颜色名 十六进制颜色值 颜色<br>AliceBlue   #F0F8FF rgb(240, 248, 255)<br>AntiqueWhite    #FAEBD7 rgb(250, 235, 215)<br>Aqua    #00FFFF rgb(0, 255, 255)<br>Aquamarine  #7FFFD4 rgb(127, 255, 212)<br>Azure   #F0FFFF rgb(240, 255, 255)<br>Beige   #F5F5DC rgb(245, 245, 220)<br>Bisque  #FFE4C4 rgb(255, 228, 196)<br>Black   #000000 rgb(0, 0, 0)<br>BlanchedAlmond  #FFEBCD rgb(255, 235, 205)<br>Blue    #0000FF rgb(0, 0, 255)<br>BlueViolet  #8A2BE2 rgb(138, 43, 226)<br>Brown   #A52A2A rgb(165, 42, 42)<br>BurlyWood   #DEB887 rgb(222, 184, 135)<br>CadetBlue   #5F9EA0 rgb(95, 158, 160)<br>Chartreuse  #7FFF00 rgb(127, 255, 0)<br>Chocolate   #D2691E rgb(210, 105, 30)<br>Coral   #FF7F50 rgb(255, 127, 80)<br>CornflowerBlue  #6495ED rgb(100, 149, 237)<br>Cornsilk    #FFF8DC rgb(255, 248, 220)<br>Crimson #DC143C rgb(220, 20, 60)<br>Cyan    #00FFFF rgb(0, 255, 255)<br>DarkBlue    #00008B rgb(0, 0, 139)<br>DarkCyan    #008B8B rgb(0, 139, 139)<br>DarkGoldenRod   #B8860B rgb(184, 134, 11)<br>DarkGray    #A9A9A9 rgb(169, 169, 169)<br>DarkGreen   #006400 rgb(0, 100, 0)<br>DarkKhaki   #BDB76B rgb(189, 183, 107)<br>DarkMagenta #8B008B rgb(139, 0, 139)<br>DarkOliveGreen  #556B2F rgb(85, 107, 47)<br>Darkorange  #FF8C00 rgb(255, 140, 0)<br>DarkOrchid  #9932CC rgb(153, 50, 204)<br>DarkRed #8B0000 rgb(139, 0, 0)<br>DarkSalmon  #E9967A rgb(233, 150, 122)<br>DarkSeaGreen    #8FBC8F rgb(143, 188, 143)<br>DarkSlateBlue   #483D8B rgb(72, 61, 139)<br>DarkSlateGray   #2F4F4F rgb(47, 79, 79)<br>DarkTurquoise   #00CED1 rgb(0, 206, 209)<br>DarkViolet  #9400D3 rgb(148, 0, 211)<br>DeepPink    #FF1493 rgb(255, 20, 147)<br>DeepSkyBlue #00BFFF rgb(0, 191, 255)<br>DimGray #696969 rgb(105, 105, 105)<br>DodgerBlue  #1E90FF rgb(30, 144, 255)<br>Feldspar    #D19275 rgb(209, 146, 117)<br>FireBrick   #B22222 rgb(178, 34, 34)<br>FloralWhite #FFFAF0 rgb(255, 250, 240)<br>ForestGreen #228B22 rgb(34, 139, 34)<br>Fuchsia #FF00FF rgb(255, 0, 255)<br>Gainsboro   #DCDCDC rgb(220, 220, 220)<br>GhostWhite  #F8F8FF rgb(248, 248, 255)<br>Gold    #FFD700 rgb(255, 215, 0)<br>GoldenRod   #DAA520 rgb(218, 165, 32)<br>Gray    #808080 rgb(128, 128, 128)<br>Green   #008000 rgb(0, 128, 0)<br>GreenYellow #ADFF2F rgb(173, 255, 47)<br>HoneyDew    #F0FFF0 rgb(240, 255, 240)<br>HotPink #FF69B4 rgb(255, 105, 180)<br>IndianRed   #CD5C5C rgb(205, 92, 92)<br>Indigo  #4B0082 rgb(75, 0, 130)<br>Ivory   #FFFFF0 rgb(255, 255, 240)<br>Khaki   #F0E68C rgb(240, 230, 140)<br>Lavender    #E6E6FA rgb(230, 230, 250)<br>LavenderBlush   #FFF0F5 rgb(255, 240, 245)<br>LawnGreen   #7CFC00 rgb(124, 252, 0)<br>LemonChiffon    #FFFACD rgb(255, 250, 205)<br>LightBlue   #ADD8E6 rgb(173, 216, 230)<br>LightCoral  #F08080 rgb(240, 128, 128)<br>LightCyan   #E0FFFF rgb(224, 255, 255)<br>LightGoldenRodYellow    #FAFAD2 rgb(250, 250, 210)<br>LightGrey   #D3D3D3 rgb(211, 211, 211)<br>LightGreen  #90EE90 rgb(144, 238, 144)<br>LightPink   #FFB6C1 rgb(255, 182, 193)<br>LightSalmon #FFA07A rgb(255, 160, 122)<br>LightSeaGreen   #20B2AA rgb(32, 178, 170)<br>LightSkyBlue    #87CEFA rgb(135, 206, 250)<br>LightSlateBlue  #8470FF rgb(132, 112, 255)<br>LightSlateGray  #778899 rgb(119, 136, 153)<br>LightSteelBlue  #B0C4DE rgb(176, 196, 222)<br>LightYellow #FFFFE0 rgb(255, 255, 224)<br>Lime    #00FF00 rgb(0, 255, 0)<br>LimeGreen   #32CD32 rgb(50, 205, 50)<br>Linen   #FAF0E6 rgb(250, 240, 230)<br>Magenta #FF00FF rgb(255, 0, 255)<br>Maroon  #800000 rgb(128, 0, 0)<br>MediumAquaMarine    #66CDAA rgb(102, 205, 170)<br>MediumBlue  #0000CD rgb(0, 0, 205)<br>MediumOrchid    #BA55D3 rgb(186, 85, 211)<br>MediumPurple    #9370D8 rgb(147, 112, 216)<br>MediumSeaGreen  #3CB371 rgb(60, 179, 113)<br>MediumSlateBlue #7B68EE rgb(123, 104, 238)<br>MediumSpringGreen   #00FA9A rgb(0, 250, 154)<br>MediumTurquoise #48D1CC rgb(72, 209, 204)<br>MediumVioletRed #C71585 rgb(199, 21, 133)<br>MidnightBlue    #191970 rgb(25, 25, 112)<br>MintCream   #F5FFFA rgb(245, 255, 250)<br>MistyRose   #FFE4E1 rgb(255, 228, 225)<br>Moccasin    #FFE4B5 rgb(255, 228, 181)<br>NavajoWhite #FFDEAD rgb(255, 222, 173)<br>Navy    #000080 rgb(0, 0, 128)<br>OldLace #FDF5E6 rgb(253, 245, 230)<br>Olive   #808000 rgb(128, 128, 0)<br>OliveDrab   #6B8E23 rgb(107, 142, 35)<br>Orange  #FFA500 rgb(255, 165, 0)<br>OrangeRed   #FF4500 rgb(255, 69, 0)<br>Orchid  #DA70D6 rgb(218, 112, 214)<br>PaleGoldenRod   #EEE8AA rgb(238, 232, 170)<br>PaleGreen   #98FB98 rgb(152, 251, 152)<br>PaleTurquoise   #AFEEEE rgb(175, 238, 238)<br>PaleVioletRed   #D87093 rgb(216, 112, 147)<br>PapayaWhip  #FFEFD5 rgb(255, 239, 213)<br>PeachPuff   #FFDAB9 rgb(255, 218, 185)<br>Peru    #CD853F rgb(205, 133, 63)<br>Pink    #FFC0CB rgb(255, 192, 203)<br>Plum    #DDA0DD rgb(221, 160, 221)<br>PowderBlue  #B0E0E6 rgb(176, 224, 230)<br>Purple  #800080 rgb(128, 0, 128)<br>Red #FF0000 rgb(255, 0, 0)<br>RosyBrown   #BC8F8F rgb(188, 143, 143)<br>RoyalBlue   #4169E1 rgb(65, 105, 225)<br>SaddleBrown #8B4513 rgb(139, 69, 19)<br>Salmon  #FA8072 rgb(250, 128, 114)<br>SandyBrown  #F4A460 rgb(244, 164, 96)<br>SeaGreen    #2E8B57 rgb(46, 139, 87)<br>SeaShell    #FFF5EE rgb(255, 245, 238)<br>Sienna  #A0522D rgb(160, 82, 45)<br>Silver  #C0C0C0 rgb(192, 192, 192)<br>SkyBlue #87CEEB rgb(135, 206, 235)<br>SlateBlue   #6A5ACD rgb(106, 90, 205)<br>SlateGray   #708090 rgb(112, 128, 144)<br>Snow    #FFFAFA rgb(255, 250, 250)<br>SpringGreen #00FF7F rgb(0, 255, 127)<br>SteelBlue   #4682B4 rgb(70, 130, 180)<br>Tan #D2B48C rgb(210, 180, 140)<br>Teal    #008080 rgb(0, 128, 128)<br>Thistle #D8BFD8 rgb(216, 191, 216)<br>Tomato  #FF6347 rgb(255, 99, 71)<br>Turquoise   #40E0D0 rgb(64, 224, 208)<br>Violet  #EE82EE rgb(238, 130, 238)<br>VioletRed   #D02090 rgb(208, 32, 144)<br>Wheat   #F5DEB3 rgb(245, 222, 179)<br>White   #FFFFFF rgb(255, 255, 255)<br>WhiteSmoke  #F5F5F5 rgb(245, 245, 245)<br>Yellow  #FFFF00 rgb(255, 255, 0)<br>YellowGreen #9ACD32 rgb(154, 205, 50)</p>\n<h1 id=\"参考文档链接\"><a href=\"#参考文档链接\" class=\"headerlink\" title=\"参考文档链接\"></a>参考文档链接</h1><h3 id=\"更具体的使用方法可以去参考文档看\"><a href=\"#更具体的使用方法可以去参考文档看\" class=\"headerlink\" title=\"更具体的使用方法可以去参考文档看\"></a>更具体的使用方法可以去参考文档看</h3><blockquote>\n<p><a href=\"https://www.jianshu.com/p/191d1e21f7ed\">https://www.jianshu.com/p/191d1e21f7ed</a><br><a href=\"https://blog.csdn.net/u011995719/article/details/77232626\">https://blog.csdn.net/u011995719/article/details/77232626</a><br><a href=\"https://www.jianshu.com/p/280c6a6f2594\">https://www.jianshu.com/p/280c6a6f2594</a><br><a href=\"https://www.runoob.com/markdown/md-advance.html\">https://www.runoob.com/markdown/md-advance.html</a></p>\n</blockquote>\n<p>后续有缘持续更新…</p>"},{"title":"SAE J1939协议","_content":"# 一、基本概念\n<!-- more -->\nSAE J1939（以下简称J1939）是美国汽车工程协会（SAE）的推荐标准，用于为中重型道路车辆上电子部件间的通讯提供标准的体系结构。它由“卡车与大型客车电气与电子委员会”（Track & Bus Electrical & Electronics Committee）下属的“卡车与大型客车控制和通讯网络附属委员会”（Track & Bus Control and Communications Network Subcommittee）开发编写。\n\nJ1939基于德国Bosch公司（Robert Bosch GmbH）开发的控制器局域网络（CAN：Controller Area Network），可达到250Kbps的通讯速率。它描述了重型车辆现场总线的一种网络应用，包括CAN网络物理层定义、数据链路层定义、应用层定义、网络层定义、故障诊断和网络管理。在SAE J1939协议中，不仅仅指定了传输类型、报文结构及其分段、流量检查等，而且报文内容本身也做了精确的定义。目前，J1939是在商用车辆、舰船、轨道机车、农业机械和大型发动机中应用最广泛的应用层协议。\n**基本规定：**\nPGN：Parameter Group Number\nSA（源地址）：Source Address\nSPN：Suspect Parameter Number\n<font color=#FF0000>SAE J1939的ID全部是29bit,是扩展帧</font>\n<font color=#FF0000>所有数据是小端（低字节LSB在前，高字节MSB在后）</font>\n# 二、PDU数据单元\nPUD构成：\n29-27|26|25|24-17|16-9|8-1\n--|:--:|:--:|:--:|:--:|--:\nP |R/EDP|DP  |PF  |PS  |SA\n\nP：优先权，从最高0设置到最低7。\nR/EDP：保留位/扩展数据页，以备后续开发使用。一般设置为0\nDP：数据页，选择参数群描述的辅助页，从页0开始分配，一般设置为0\nPF：PDU格式，它有两个功能:\n1. 确定PDU的格式，PDU分为两种格式PDU1和PDU2。\n2. 是确定数据域对应参数群编号的域。参数群编号不仅用来标识命令、数据、请求、确认和否定外，还可以标识CAN多包发送的信息\n\nPS：PDU特定，它的定义取决于PDU的格式，如下图所示\n![PDU](https://img-blog.csdnimg.cn/2021070710460688.jpg#pic_center)\n目标地址用DA标识，全局目标地址（255）要求所有设备作为消息响应者做出监听和响应。\nSA：源地址（知道这帧数据是从那个ECU发出的）\n# 三、PGN\nPGN:参数群编号\n把相同参数放到同一个组中，PGN就是编号，知道PGN就知道这个数据单元包传输了什么数据\n***PGN = PF + PS***\n将PGN转为十进制 —— 查J1939-71标准，找到PGN的数据进行数据分解 —— 将数据段数据根据对应的**SPN**进行分解，分别找到每个**SPN**的解释 —— 根据每个**SPN**的分辨率、偏移量计算实际物理值。\n# 四、SPN\nSPN，特定参数，它就是用来表示具体的物理参数。比如SPN190=发动机转速、SPN513=实际发动机-转矩百分比。\n**一个SPN码代表了一个物理参数。**\nPGN所代表的的参数组，就是由一个个的SPN组成的。\n例如PGN 61444=发送机控制器参数组，这个参数组里面包含了发动机转矩模式、驾驶员需求发动机-转矩百分比、实际发动机-转矩百分比、发动机转速等。即PGN 61444=SPN 899+SPN 512+SPN 513+SPN 190...\n每个帧中数据的部分就是SPN的实际数据，假设PGN所代表的的参数组是由2个SPN构成的，第一个SPN为2字节，第二个SPN为3字节，那么这个帧数据的大小就是5字节\n\n","source":"_posts/learning/SAE_J1939.md","raw":"---\ntitle: SAE J1939协议\n---\n# 一、基本概念\n<!-- more -->\nSAE J1939（以下简称J1939）是美国汽车工程协会（SAE）的推荐标准，用于为中重型道路车辆上电子部件间的通讯提供标准的体系结构。它由“卡车与大型客车电气与电子委员会”（Track & Bus Electrical & Electronics Committee）下属的“卡车与大型客车控制和通讯网络附属委员会”（Track & Bus Control and Communications Network Subcommittee）开发编写。\n\nJ1939基于德国Bosch公司（Robert Bosch GmbH）开发的控制器局域网络（CAN：Controller Area Network），可达到250Kbps的通讯速率。它描述了重型车辆现场总线的一种网络应用，包括CAN网络物理层定义、数据链路层定义、应用层定义、网络层定义、故障诊断和网络管理。在SAE J1939协议中，不仅仅指定了传输类型、报文结构及其分段、流量检查等，而且报文内容本身也做了精确的定义。目前，J1939是在商用车辆、舰船、轨道机车、农业机械和大型发动机中应用最广泛的应用层协议。\n**基本规定：**\nPGN：Parameter Group Number\nSA（源地址）：Source Address\nSPN：Suspect Parameter Number\n<font color=#FF0000>SAE J1939的ID全部是29bit,是扩展帧</font>\n<font color=#FF0000>所有数据是小端（低字节LSB在前，高字节MSB在后）</font>\n# 二、PDU数据单元\nPUD构成：\n29-27|26|25|24-17|16-9|8-1\n--|:--:|:--:|:--:|:--:|--:\nP |R/EDP|DP  |PF  |PS  |SA\n\nP：优先权，从最高0设置到最低7。\nR/EDP：保留位/扩展数据页，以备后续开发使用。一般设置为0\nDP：数据页，选择参数群描述的辅助页，从页0开始分配，一般设置为0\nPF：PDU格式，它有两个功能:\n1. 确定PDU的格式，PDU分为两种格式PDU1和PDU2。\n2. 是确定数据域对应参数群编号的域。参数群编号不仅用来标识命令、数据、请求、确认和否定外，还可以标识CAN多包发送的信息\n\nPS：PDU特定，它的定义取决于PDU的格式，如下图所示\n![PDU](https://img-blog.csdnimg.cn/2021070710460688.jpg#pic_center)\n目标地址用DA标识，全局目标地址（255）要求所有设备作为消息响应者做出监听和响应。\nSA：源地址（知道这帧数据是从那个ECU发出的）\n# 三、PGN\nPGN:参数群编号\n把相同参数放到同一个组中，PGN就是编号，知道PGN就知道这个数据单元包传输了什么数据\n***PGN = PF + PS***\n将PGN转为十进制 —— 查J1939-71标准，找到PGN的数据进行数据分解 —— 将数据段数据根据对应的**SPN**进行分解，分别找到每个**SPN**的解释 —— 根据每个**SPN**的分辨率、偏移量计算实际物理值。\n# 四、SPN\nSPN，特定参数，它就是用来表示具体的物理参数。比如SPN190=发动机转速、SPN513=实际发动机-转矩百分比。\n**一个SPN码代表了一个物理参数。**\nPGN所代表的的参数组，就是由一个个的SPN组成的。\n例如PGN 61444=发送机控制器参数组，这个参数组里面包含了发动机转矩模式、驾驶员需求发动机-转矩百分比、实际发动机-转矩百分比、发动机转速等。即PGN 61444=SPN 899+SPN 512+SPN 513+SPN 190...\n每个帧中数据的部分就是SPN的实际数据，假设PGN所代表的的参数组是由2个SPN构成的，第一个SPN为2字节，第二个SPN为3字节，那么这个帧数据的大小就是5字节\n\n","slug":"learning/SAE_J1939","published":1,"date":"2022-05-25T10:06:34.511Z","updated":"2022-03-30T01:51:45.833Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceep3000u68urffml1bx0","content":"<h1 id=\"一、基本概念\"><a href=\"#一、基本概念\" class=\"headerlink\" title=\"一、基本概念\"></a>一、基本概念</h1><span id=\"more\"></span>\n<p>SAE J1939（以下简称J1939）是美国汽车工程协会（SAE）的推荐标准，用于为中重型道路车辆上电子部件间的通讯提供标准的体系结构。它由“卡车与大型客车电气与电子委员会”（Track &amp; Bus Electrical &amp; Electronics Committee）下属的“卡车与大型客车控制和通讯网络附属委员会”（Track &amp; Bus Control and Communications Network Subcommittee）开发编写。</p>\n<p>J1939基于德国Bosch公司（Robert Bosch GmbH）开发的控制器局域网络（CAN：Controller Area Network），可达到250Kbps的通讯速率。它描述了重型车辆现场总线的一种网络应用，包括CAN网络物理层定义、数据链路层定义、应用层定义、网络层定义、故障诊断和网络管理。在SAE J1939协议中，不仅仅指定了传输类型、报文结构及其分段、流量检查等，而且报文内容本身也做了精确的定义。目前，J1939是在商用车辆、舰船、轨道机车、农业机械和大型发动机中应用最广泛的应用层协议。<br><strong>基本规定：</strong><br>PGN：Parameter Group Number<br>SA（源地址）：Source Address<br>SPN：Suspect Parameter Number<br><font color=#FF0000>SAE J1939的ID全部是29bit,是扩展帧</font><br><font color=#FF0000>所有数据是小端（低字节LSB在前，高字节MSB在后）</font></p>\n<h1 id=\"二、PDU数据单元\"><a href=\"#二、PDU数据单元\" class=\"headerlink\" title=\"二、PDU数据单元\"></a>二、PDU数据单元</h1><p>PUD构成：<br>29-27|26|25|24-17|16-9|8-1<br>–|:–:|:–:|:–:|:–:|–:<br>P |R/EDP|DP  |PF  |PS  |SA</p>\n<p>P：优先权，从最高0设置到最低7。<br>R/EDP：保留位/扩展数据页，以备后续开发使用。一般设置为0<br>DP：数据页，选择参数群描述的辅助页，从页0开始分配，一般设置为0<br>PF：PDU格式，它有两个功能:</p>\n<ol>\n<li>确定PDU的格式，PDU分为两种格式PDU1和PDU2。</li>\n<li>是确定数据域对应参数群编号的域。参数群编号不仅用来标识命令、数据、请求、确认和否定外，还可以标识CAN多包发送的信息</li>\n</ol>\n<p>PS：PDU特定，它的定义取决于PDU的格式，如下图所示<br><img src=\"https://img-blog.csdnimg.cn/2021070710460688.jpg#pic_center\" alt=\"PDU\"><br>目标地址用DA标识，全局目标地址（255）要求所有设备作为消息响应者做出监听和响应。<br>SA：源地址（知道这帧数据是从那个ECU发出的）</p>\n<h1 id=\"三、PGN\"><a href=\"#三、PGN\" class=\"headerlink\" title=\"三、PGN\"></a>三、PGN</h1><p>PGN:参数群编号<br>把相同参数放到同一个组中，PGN就是编号，知道PGN就知道这个数据单元包传输了什么数据<br><em><strong>PGN = PF + PS</strong></em><br>将PGN转为十进制 —— 查J1939-71标准，找到PGN的数据进行数据分解 —— 将数据段数据根据对应的<strong>SPN</strong>进行分解，分别找到每个<strong>SPN</strong>的解释 —— 根据每个<strong>SPN</strong>的分辨率、偏移量计算实际物理值。</p>\n<h1 id=\"四、SPN\"><a href=\"#四、SPN\" class=\"headerlink\" title=\"四、SPN\"></a>四、SPN</h1><p>SPN，特定参数，它就是用来表示具体的物理参数。比如SPN190=发动机转速、SPN513=实际发动机-转矩百分比。<br><strong>一个SPN码代表了一个物理参数。</strong><br>PGN所代表的的参数组，就是由一个个的SPN组成的。<br>例如PGN 61444=发送机控制器参数组，这个参数组里面包含了发动机转矩模式、驾驶员需求发动机-转矩百分比、实际发动机-转矩百分比、发动机转速等。即PGN 61444=SPN 899+SPN 512+SPN 513+SPN 190…<br>每个帧中数据的部分就是SPN的实际数据，假设PGN所代表的的参数组是由2个SPN构成的，第一个SPN为2字节，第二个SPN为3字节，那么这个帧数据的大小就是5字节</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"一、基本概念\"><a href=\"#一、基本概念\" class=\"headerlink\" title=\"一、基本概念\"></a>一、基本概念</h1>","more":"<p>SAE J1939（以下简称J1939）是美国汽车工程协会（SAE）的推荐标准，用于为中重型道路车辆上电子部件间的通讯提供标准的体系结构。它由“卡车与大型客车电气与电子委员会”（Track &amp; Bus Electrical &amp; Electronics Committee）下属的“卡车与大型客车控制和通讯网络附属委员会”（Track &amp; Bus Control and Communications Network Subcommittee）开发编写。</p>\n<p>J1939基于德国Bosch公司（Robert Bosch GmbH）开发的控制器局域网络（CAN：Controller Area Network），可达到250Kbps的通讯速率。它描述了重型车辆现场总线的一种网络应用，包括CAN网络物理层定义、数据链路层定义、应用层定义、网络层定义、故障诊断和网络管理。在SAE J1939协议中，不仅仅指定了传输类型、报文结构及其分段、流量检查等，而且报文内容本身也做了精确的定义。目前，J1939是在商用车辆、舰船、轨道机车、农业机械和大型发动机中应用最广泛的应用层协议。<br><strong>基本规定：</strong><br>PGN：Parameter Group Number<br>SA（源地址）：Source Address<br>SPN：Suspect Parameter Number<br><font color=#FF0000>SAE J1939的ID全部是29bit,是扩展帧</font><br><font color=#FF0000>所有数据是小端（低字节LSB在前，高字节MSB在后）</font></p>\n<h1 id=\"二、PDU数据单元\"><a href=\"#二、PDU数据单元\" class=\"headerlink\" title=\"二、PDU数据单元\"></a>二、PDU数据单元</h1><p>PUD构成：<br>29-27|26|25|24-17|16-9|8-1<br>–|:–:|:–:|:–:|:–:|–:<br>P |R/EDP|DP  |PF  |PS  |SA</p>\n<p>P：优先权，从最高0设置到最低7。<br>R/EDP：保留位/扩展数据页，以备后续开发使用。一般设置为0<br>DP：数据页，选择参数群描述的辅助页，从页0开始分配，一般设置为0<br>PF：PDU格式，它有两个功能:</p>\n<ol>\n<li>确定PDU的格式，PDU分为两种格式PDU1和PDU2。</li>\n<li>是确定数据域对应参数群编号的域。参数群编号不仅用来标识命令、数据、请求、确认和否定外，还可以标识CAN多包发送的信息</li>\n</ol>\n<p>PS：PDU特定，它的定义取决于PDU的格式，如下图所示<br><img src=\"https://img-blog.csdnimg.cn/2021070710460688.jpg#pic_center\" alt=\"PDU\"><br>目标地址用DA标识，全局目标地址（255）要求所有设备作为消息响应者做出监听和响应。<br>SA：源地址（知道这帧数据是从那个ECU发出的）</p>\n<h1 id=\"三、PGN\"><a href=\"#三、PGN\" class=\"headerlink\" title=\"三、PGN\"></a>三、PGN</h1><p>PGN:参数群编号<br>把相同参数放到同一个组中，PGN就是编号，知道PGN就知道这个数据单元包传输了什么数据<br><em><strong>PGN = PF + PS</strong></em><br>将PGN转为十进制 —— 查J1939-71标准，找到PGN的数据进行数据分解 —— 将数据段数据根据对应的<strong>SPN</strong>进行分解，分别找到每个<strong>SPN</strong>的解释 —— 根据每个<strong>SPN</strong>的分辨率、偏移量计算实际物理值。</p>\n<h1 id=\"四、SPN\"><a href=\"#四、SPN\" class=\"headerlink\" title=\"四、SPN\"></a>四、SPN</h1><p>SPN，特定参数，它就是用来表示具体的物理参数。比如SPN190=发动机转速、SPN513=实际发动机-转矩百分比。<br><strong>一个SPN码代表了一个物理参数。</strong><br>PGN所代表的的参数组，就是由一个个的SPN组成的。<br>例如PGN 61444=发送机控制器参数组，这个参数组里面包含了发动机转矩模式、驾驶员需求发动机-转矩百分比、实际发动机-转矩百分比、发动机转速等。即PGN 61444=SPN 899+SPN 512+SPN 513+SPN 190…<br>每个帧中数据的部分就是SPN的实际数据，假设PGN所代表的的参数组是由2个SPN构成的，第一个SPN为2字节，第二个SPN为3字节，那么这个帧数据的大小就是5字节</p>"},{"title":"matlab的polyspace使用","_content":"# polyspace使用记录\n<!--more-->\n## polyspace介绍\nPolyspace是Mathwork旗下的代码静态检查工具。olyspace会检查源代码，以确定可能在哪里发生潜在的运行时错误，例如算术溢出，缓冲区溢出，被零除和其他错误。软件开发人员和质量保证经理使用此信息来识别代码的哪些部分有故障或被证明是可靠的。该代码的其他部分已标记为未经验证的检查，应接受个人审查。诸如MISRA C之类的代码标准或准则试图解决代码质量，可移植性和可靠性。该产品检查C和C ++源代码是否符合这些编码标准中的一部分规则。\n\nPolyspace的Bug Finder工具通过对源代码执行静态程序分析来识别软件错误。它会发现缺陷，例如数值计算，编程，存储和其他错误。它还会生成软件指标，例如源文件的注释密度，循环复杂性，行数，参数，调用级别等，并在软件中标识出运行时错误\n\n## 使用方法\n### 一、新建工程\n![图1](https://img-blog.csdnimg.cn/20200501195805400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70)\n![picture1](https://img-blog.csdnimg.cn/20191202204042955.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ1MTgwMA==,size_16,color_FFFFFF,t_70)\n在输入工程信息的时候，可以勾选**Use temple**使用polyspace中带有的测试模板，随后根据自身需要选择相应的模板。\n\n### 二、添加测试文件\n![图2](https://img-blog.csdnimg.cn/20200501195936273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70)\n![picture2](https://img-blog.csdnimg.cn/20200501200221958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70)\n\n在添加文件时，是先添加源文件再添加头文件。记得勾选 **<font color=#FF0000>Add Source Floders</font>** 在点击Add Source Floders。\n**PS：如果使用了IDE自带的库文件也要记得添加进去**\n\n### 三、检查设置\n![1](https://img-blog.csdnimg.cn/20200501200311991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70)\n如果使用了模板就不用修改此图片内容，否则根据自己代码要求进行设置。\n\n![2](https://img-blog.csdnimg.cn/20200221212146874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70)\n### 四、运行和报告\n![3](https://img-blog.csdnimg.cn/2020022121293912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70)\n### 五、报告分析\n![4](https://img-blog.csdnimg.cn/20200221213659477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70)\n\n经Polyspace分析后的代码结果以不同颜色表:\n\n绿色： 代表为安全代码，无需花过多精力审查；\n\n红色： 代码问题代码，需要立刻解决；\n\n灰色： 代表不可达代码，需要审查是设计错误还是有意为之；\n\n橙色： 代表有风险代码，需要重点审查。\n\n另外还可以设定编码规范(如MISRA)和自定义代码风格，违反之处以紫色显示；同时可以看到代码变量随控制流的数据范围变化情况，快速查找和定位问题原因。\n\n\n# 参考文章\n[https://blog.csdn.net/qq_25920091/article/details/105881534](https://blog.csdn.net/qq_25920091/article/details/105881534)\n[https://blog.csdn.net/weixin_38451800/article/details/103352448](https://blog.csdn.net/weixin_38451800/article/details/103352448)\n\n[polyspace教程](https://blog.csdn.net/u013288925/article/details/104433825?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.pc_relevant_antiscanv2&spm=1001.2101.3001.4242.2&utm_relevant_index=4)","source":"_posts/learning/Using-polyspace.md","raw":"---\ntitle: matlab的polyspace使用\n---\n# polyspace使用记录\n<!--more-->\n## polyspace介绍\nPolyspace是Mathwork旗下的代码静态检查工具。olyspace会检查源代码，以确定可能在哪里发生潜在的运行时错误，例如算术溢出，缓冲区溢出，被零除和其他错误。软件开发人员和质量保证经理使用此信息来识别代码的哪些部分有故障或被证明是可靠的。该代码的其他部分已标记为未经验证的检查，应接受个人审查。诸如MISRA C之类的代码标准或准则试图解决代码质量，可移植性和可靠性。该产品检查C和C ++源代码是否符合这些编码标准中的一部分规则。\n\nPolyspace的Bug Finder工具通过对源代码执行静态程序分析来识别软件错误。它会发现缺陷，例如数值计算，编程，存储和其他错误。它还会生成软件指标，例如源文件的注释密度，循环复杂性，行数，参数，调用级别等，并在软件中标识出运行时错误\n\n## 使用方法\n### 一、新建工程\n![图1](https://img-blog.csdnimg.cn/20200501195805400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70)\n![picture1](https://img-blog.csdnimg.cn/20191202204042955.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ1MTgwMA==,size_16,color_FFFFFF,t_70)\n在输入工程信息的时候，可以勾选**Use temple**使用polyspace中带有的测试模板，随后根据自身需要选择相应的模板。\n\n### 二、添加测试文件\n![图2](https://img-blog.csdnimg.cn/20200501195936273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70)\n![picture2](https://img-blog.csdnimg.cn/20200501200221958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70)\n\n在添加文件时，是先添加源文件再添加头文件。记得勾选 **<font color=#FF0000>Add Source Floders</font>** 在点击Add Source Floders。\n**PS：如果使用了IDE自带的库文件也要记得添加进去**\n\n### 三、检查设置\n![1](https://img-blog.csdnimg.cn/20200501200311991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70)\n如果使用了模板就不用修改此图片内容，否则根据自己代码要求进行设置。\n\n![2](https://img-blog.csdnimg.cn/20200221212146874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70)\n### 四、运行和报告\n![3](https://img-blog.csdnimg.cn/2020022121293912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70)\n### 五、报告分析\n![4](https://img-blog.csdnimg.cn/20200221213659477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70)\n\n经Polyspace分析后的代码结果以不同颜色表:\n\n绿色： 代表为安全代码，无需花过多精力审查；\n\n红色： 代码问题代码，需要立刻解决；\n\n灰色： 代表不可达代码，需要审查是设计错误还是有意为之；\n\n橙色： 代表有风险代码，需要重点审查。\n\n另外还可以设定编码规范(如MISRA)和自定义代码风格，违反之处以紫色显示；同时可以看到代码变量随控制流的数据范围变化情况，快速查找和定位问题原因。\n\n\n# 参考文章\n[https://blog.csdn.net/qq_25920091/article/details/105881534](https://blog.csdn.net/qq_25920091/article/details/105881534)\n[https://blog.csdn.net/weixin_38451800/article/details/103352448](https://blog.csdn.net/weixin_38451800/article/details/103352448)\n\n[polyspace教程](https://blog.csdn.net/u013288925/article/details/104433825?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.pc_relevant_antiscanv2&spm=1001.2101.3001.4242.2&utm_relevant_index=4)","slug":"learning/Using-polyspace","published":1,"date":"2022-05-25T10:06:34.522Z","updated":"2022-03-31T09:25:27.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceep4000v68ur50t34u91","content":"<h1 id=\"polyspace使用记录\"><a href=\"#polyspace使用记录\" class=\"headerlink\" title=\"polyspace使用记录\"></a>polyspace使用记录</h1><span id=\"more\"></span>\n<h2 id=\"polyspace介绍\"><a href=\"#polyspace介绍\" class=\"headerlink\" title=\"polyspace介绍\"></a>polyspace介绍</h2><p>Polyspace是Mathwork旗下的代码静态检查工具。olyspace会检查源代码，以确定可能在哪里发生潜在的运行时错误，例如算术溢出，缓冲区溢出，被零除和其他错误。软件开发人员和质量保证经理使用此信息来识别代码的哪些部分有故障或被证明是可靠的。该代码的其他部分已标记为未经验证的检查，应接受个人审查。诸如MISRA C之类的代码标准或准则试图解决代码质量，可移植性和可靠性。该产品检查C和C ++源代码是否符合这些编码标准中的一部分规则。</p>\n<p>Polyspace的Bug Finder工具通过对源代码执行静态程序分析来识别软件错误。它会发现缺陷，例如数值计算，编程，存储和其他错误。它还会生成软件指标，例如源文件的注释密度，循环复杂性，行数，参数，调用级别等，并在软件中标识出运行时错误</p>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><h3 id=\"一、新建工程\"><a href=\"#一、新建工程\" class=\"headerlink\" title=\"一、新建工程\"></a>一、新建工程</h3><p><img src=\"https://img-blog.csdnimg.cn/20200501195805400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70\" alt=\"图1\"><br><img src=\"https://img-blog.csdnimg.cn/20191202204042955.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ1MTgwMA==,size_16,color_FFFFFF,t_70\" alt=\"picture1\"><br>在输入工程信息的时候，可以勾选<strong>Use temple</strong>使用polyspace中带有的测试模板，随后根据自身需要选择相应的模板。</p>\n<h3 id=\"二、添加测试文件\"><a href=\"#二、添加测试文件\" class=\"headerlink\" title=\"二、添加测试文件\"></a>二、添加测试文件</h3><p><img src=\"https://img-blog.csdnimg.cn/20200501195936273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70\" alt=\"图2\"><br><img src=\"https://img-blog.csdnimg.cn/20200501200221958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70\" alt=\"picture2\"></p>\n<p>在添加文件时，是先添加源文件再添加头文件。记得勾选 <strong><font color=#FF0000>Add Source Floders</font></strong> 在点击Add Source Floders。<br><strong>PS：如果使用了IDE自带的库文件也要记得添加进去</strong></p>\n<h3 id=\"三、检查设置\"><a href=\"#三、检查设置\" class=\"headerlink\" title=\"三、检查设置\"></a>三、检查设置</h3><p><img src=\"https://img-blog.csdnimg.cn/20200501200311991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70\" alt=\"1\"><br>如果使用了模板就不用修改此图片内容，否则根据自己代码要求进行设置。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200221212146874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70\" alt=\"2\"></p>\n<h3 id=\"四、运行和报告\"><a href=\"#四、运行和报告\" class=\"headerlink\" title=\"四、运行和报告\"></a>四、运行和报告</h3><p><img src=\"https://img-blog.csdnimg.cn/2020022121293912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70\" alt=\"3\"></p>\n<h3 id=\"五、报告分析\"><a href=\"#五、报告分析\" class=\"headerlink\" title=\"五、报告分析\"></a>五、报告分析</h3><p><img src=\"https://img-blog.csdnimg.cn/20200221213659477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70\" alt=\"4\"></p>\n<p>经Polyspace分析后的代码结果以不同颜色表:</p>\n<p>绿色： 代表为安全代码，无需花过多精力审查；</p>\n<p>红色： 代码问题代码，需要立刻解决；</p>\n<p>灰色： 代表不可达代码，需要审查是设计错误还是有意为之；</p>\n<p>橙色： 代表有风险代码，需要重点审查。</p>\n<p>另外还可以设定编码规范(如MISRA)和自定义代码风格，违反之处以紫色显示；同时可以看到代码变量随控制流的数据范围变化情况，快速查找和定位问题原因。</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://blog.csdn.net/qq_25920091/article/details/105881534\">https://blog.csdn.net/qq_25920091/article/details/105881534</a><br><a href=\"https://blog.csdn.net/weixin_38451800/article/details/103352448\">https://blog.csdn.net/weixin_38451800/article/details/103352448</a></p>\n<p><a href=\"https://blog.csdn.net/u013288925/article/details/104433825?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.pc_relevant_antiscanv2&spm=1001.2101.3001.4242.2&utm_relevant_index=4\">polyspace教程</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"polyspace使用记录\"><a href=\"#polyspace使用记录\" class=\"headerlink\" title=\"polyspace使用记录\"></a>polyspace使用记录</h1>","more":"<h2 id=\"polyspace介绍\"><a href=\"#polyspace介绍\" class=\"headerlink\" title=\"polyspace介绍\"></a>polyspace介绍</h2><p>Polyspace是Mathwork旗下的代码静态检查工具。olyspace会检查源代码，以确定可能在哪里发生潜在的运行时错误，例如算术溢出，缓冲区溢出，被零除和其他错误。软件开发人员和质量保证经理使用此信息来识别代码的哪些部分有故障或被证明是可靠的。该代码的其他部分已标记为未经验证的检查，应接受个人审查。诸如MISRA C之类的代码标准或准则试图解决代码质量，可移植性和可靠性。该产品检查C和C ++源代码是否符合这些编码标准中的一部分规则。</p>\n<p>Polyspace的Bug Finder工具通过对源代码执行静态程序分析来识别软件错误。它会发现缺陷，例如数值计算，编程，存储和其他错误。它还会生成软件指标，例如源文件的注释密度，循环复杂性，行数，参数，调用级别等，并在软件中标识出运行时错误</p>\n<h2 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h2><h3 id=\"一、新建工程\"><a href=\"#一、新建工程\" class=\"headerlink\" title=\"一、新建工程\"></a>一、新建工程</h3><p><img src=\"https://img-blog.csdnimg.cn/20200501195805400.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70\" alt=\"图1\"><br><img src=\"https://img-blog.csdnimg.cn/20191202204042955.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8zODQ1MTgwMA==,size_16,color_FFFFFF,t_70\" alt=\"picture1\"><br>在输入工程信息的时候，可以勾选<strong>Use temple</strong>使用polyspace中带有的测试模板，随后根据自身需要选择相应的模板。</p>\n<h3 id=\"二、添加测试文件\"><a href=\"#二、添加测试文件\" class=\"headerlink\" title=\"二、添加测试文件\"></a>二、添加测试文件</h3><p><img src=\"https://img-blog.csdnimg.cn/20200501195936273.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70\" alt=\"图2\"><br><img src=\"https://img-blog.csdnimg.cn/20200501200221958.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70\" alt=\"picture2\"></p>\n<p>在添加文件时，是先添加源文件再添加头文件。记得勾选 <strong><font color=#FF0000>Add Source Floders</font></strong> 在点击Add Source Floders。<br><strong>PS：如果使用了IDE自带的库文件也要记得添加进去</strong></p>\n<h3 id=\"三、检查设置\"><a href=\"#三、检查设置\" class=\"headerlink\" title=\"三、检查设置\"></a>三、检查设置</h3><p><img src=\"https://img-blog.csdnimg.cn/20200501200311991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI1OTIwMDkx,size_16,color_FFFFFF,t_70\" alt=\"1\"><br>如果使用了模板就不用修改此图片内容，否则根据自己代码要求进行设置。</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200221212146874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70\" alt=\"2\"></p>\n<h3 id=\"四、运行和报告\"><a href=\"#四、运行和报告\" class=\"headerlink\" title=\"四、运行和报告\"></a>四、运行和报告</h3><p><img src=\"https://img-blog.csdnimg.cn/2020022121293912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70\" alt=\"3\"></p>\n<h3 id=\"五、报告分析\"><a href=\"#五、报告分析\" class=\"headerlink\" title=\"五、报告分析\"></a>五、报告分析</h3><p><img src=\"https://img-blog.csdnimg.cn/20200221213659477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyODg5MjU=,size_16,color_FFFFFF,t_70\" alt=\"4\"></p>\n<p>经Polyspace分析后的代码结果以不同颜色表:</p>\n<p>绿色： 代表为安全代码，无需花过多精力审查；</p>\n<p>红色： 代码问题代码，需要立刻解决；</p>\n<p>灰色： 代表不可达代码，需要审查是设计错误还是有意为之；</p>\n<p>橙色： 代表有风险代码，需要重点审查。</p>\n<p>另外还可以设定编码规范(如MISRA)和自定义代码风格，违反之处以紫色显示；同时可以看到代码变量随控制流的数据范围变化情况，快速查找和定位问题原因。</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://blog.csdn.net/qq_25920091/article/details/105881534\">https://blog.csdn.net/qq_25920091/article/details/105881534</a><br><a href=\"https://blog.csdn.net/weixin_38451800/article/details/103352448\">https://blog.csdn.net/weixin_38451800/article/details/103352448</a></p>\n<p><a href=\"https://blog.csdn.net/u013288925/article/details/104433825?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1.pc_relevant_antiscanv2&spm=1001.2101.3001.4242.2&utm_relevant_index=4\">polyspace教程</a></p>"},{"title":"Hello World","_content":"<!-- more -->\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/learning/hello-world.md","raw":"---\ntitle: Hello World\n---\n<!-- more -->\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"learning/hello-world","published":1,"date":"2022-05-25T10:06:34.471Z","updated":"2022-03-30T01:51:54.676Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceep4000w68ur5edte8b6","content":"<span id=\"more\"></span>\n<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>"},{"title":"卷积学习与理解","_content":"# 卷积学习与理解\n## 前言\n最近在学OpenCV学到了图像平滑这一小节，其中使用了卷积的方法对图像进行平滑过滤。\n**卷积**一词在大学接触过，第一次见面是在高数第二回是在机械控制基础这门课。在我的印象中，我自始至终觉得卷积就是一个数学中的计算方法就像加减乘数一样，不用理解其中的物理含义。但是在最近接触opencv后，卷积的作用就远远不止于此，就开始了恶补。这里我直接放我的恶补路径，看各位大佬对卷积的理解然后融会贯通。\n下面是我的学习链接，也希望博主不要删除，便于我后续复习：\n[知乎大佬马同学](https://www.zhihu.com/question/22298352/answer/228543288)\n这位大佬讲得通俗易懂\n[知乎大佬镜面狐](https://www.zhihu.com/question/22298352/answer/96263002)\n这位大佬讲卷积公式如何从信号处理中获得\n[知乎大佬张俊博](https://www.zhihu.com/question/22298352/answer/34267457)\n这位大佬将的简单直白\n\n在恶补后我发现（学渣的迷之自信<手动狗头>），OpenCV中的卷积法好像就是使用卷积这一运算方法并没有用到其物理意义（与信号处理有关）\n\n","source":"_posts/learning/卷积学习与理解.md","raw":"---\ntitle: 卷积学习与理解\n---\n# 卷积学习与理解\n## 前言\n最近在学OpenCV学到了图像平滑这一小节，其中使用了卷积的方法对图像进行平滑过滤。\n**卷积**一词在大学接触过，第一次见面是在高数第二回是在机械控制基础这门课。在我的印象中，我自始至终觉得卷积就是一个数学中的计算方法就像加减乘数一样，不用理解其中的物理含义。但是在最近接触opencv后，卷积的作用就远远不止于此，就开始了恶补。这里我直接放我的恶补路径，看各位大佬对卷积的理解然后融会贯通。\n下面是我的学习链接，也希望博主不要删除，便于我后续复习：\n[知乎大佬马同学](https://www.zhihu.com/question/22298352/answer/228543288)\n这位大佬讲得通俗易懂\n[知乎大佬镜面狐](https://www.zhihu.com/question/22298352/answer/96263002)\n这位大佬讲卷积公式如何从信号处理中获得\n[知乎大佬张俊博](https://www.zhihu.com/question/22298352/answer/34267457)\n这位大佬将的简单直白\n\n在恶补后我发现（学渣的迷之自信<手动狗头>），OpenCV中的卷积法好像就是使用卷积这一运算方法并没有用到其物理意义（与信号处理有关）\n\n","slug":"learning/卷积学习与理解","published":1,"date":"2022-05-25T10:06:34.537Z","updated":"2022-05-16T03:20:24.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceep8000x68ur9evr5iiv","content":"<h1 id=\"卷积学习与理解\"><a href=\"#卷积学习与理解\" class=\"headerlink\" title=\"卷积学习与理解\"></a>卷积学习与理解</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近在学OpenCV学到了图像平滑这一小节，其中使用了卷积的方法对图像进行平滑过滤。<br><strong>卷积</strong>一词在大学接触过，第一次见面是在高数第二回是在机械控制基础这门课。在我的印象中，我自始至终觉得卷积就是一个数学中的计算方法就像加减乘数一样，不用理解其中的物理含义。但是在最近接触opencv后，卷积的作用就远远不止于此，就开始了恶补。这里我直接放我的恶补路径，看各位大佬对卷积的理解然后融会贯通。<br>下面是我的学习链接，也希望博主不要删除，便于我后续复习：<br><a href=\"https://www.zhihu.com/question/22298352/answer/228543288\">知乎大佬马同学</a><br>这位大佬讲得通俗易懂<br><a href=\"https://www.zhihu.com/question/22298352/answer/96263002\">知乎大佬镜面狐</a><br>这位大佬讲卷积公式如何从信号处理中获得<br><a href=\"https://www.zhihu.com/question/22298352/answer/34267457\">知乎大佬张俊博</a><br>这位大佬将的简单直白</p>\n<p>在恶补后我发现（学渣的迷之自信&lt;手动狗头&gt;），OpenCV中的卷积法好像就是使用卷积这一运算方法并没有用到其物理意义（与信号处理有关）</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"卷积学习与理解\"><a href=\"#卷积学习与理解\" class=\"headerlink\" title=\"卷积学习与理解\"></a>卷积学习与理解</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>最近在学OpenCV学到了图像平滑这一小节，其中使用了卷积的方法对图像进行平滑过滤。<br><strong>卷积</strong>一词在大学接触过，第一次见面是在高数第二回是在机械控制基础这门课。在我的印象中，我自始至终觉得卷积就是一个数学中的计算方法就像加减乘数一样，不用理解其中的物理含义。但是在最近接触opencv后，卷积的作用就远远不止于此，就开始了恶补。这里我直接放我的恶补路径，看各位大佬对卷积的理解然后融会贯通。<br>下面是我的学习链接，也希望博主不要删除，便于我后续复习：<br><a href=\"https://www.zhihu.com/question/22298352/answer/228543288\">知乎大佬马同学</a><br>这位大佬讲得通俗易懂<br><a href=\"https://www.zhihu.com/question/22298352/answer/96263002\">知乎大佬镜面狐</a><br>这位大佬讲卷积公式如何从信号处理中获得<br><a href=\"https://www.zhihu.com/question/22298352/answer/34267457\">知乎大佬张俊博</a><br>这位大佬将的简单直白</p>\n<p>在恶补后我发现（学渣的迷之自信&lt;手动狗头&gt;），OpenCV中的卷积法好像就是使用卷积这一运算方法并没有用到其物理意义（与信号处理有关）</p>\n"},{"title":"线性插值 np.interp()","_content":"# 线性插值 np.interp()\n<!--more-->\n函数：y = np.interp(x, xp, fp, left, right, period)\n\n单调增加样本点的一维线性插值\n\n将一维分段线性插值返回给具有给定离散数据点 (xp, fp) 的函数，在 x 处求值。\n\nx: 所求位置的x坐标值\n\nxp:离散点的x坐标值范围\n\nfp:离散点的y坐标值范围\n\nleft:当索引超出[xp,fp]时的左侧值（x<xp时在x位置的取值）\n\nright:当索引超出[xp,fp]时的右侧值（y>fp时在x位置的取值）\n\nperiod:\n\nExamples\n    --------\n    >>> xp = [1, 2, 3]\n    >>> fp = [3, 2, 0]\n    >>> np.interp(2.5, xp, fp)\n    1.0\n\n```\nline_len = 50 # line_len 的取值范围30~190\nmin_volume = 0\nmax_volume = 100\n vol = np.interp(line_len, [30, 190], [min_volume, max_volume])\n```\n![示例](https://s3.bmp.ovh/imgs/2022/05/16/6932d4620da7d251.jpg)","source":"_posts/numpy/interp.md","raw":"---\ntitle: 线性插值 np.interp()\n---\n# 线性插值 np.interp()\n<!--more-->\n函数：y = np.interp(x, xp, fp, left, right, period)\n\n单调增加样本点的一维线性插值\n\n将一维分段线性插值返回给具有给定离散数据点 (xp, fp) 的函数，在 x 处求值。\n\nx: 所求位置的x坐标值\n\nxp:离散点的x坐标值范围\n\nfp:离散点的y坐标值范围\n\nleft:当索引超出[xp,fp]时的左侧值（x<xp时在x位置的取值）\n\nright:当索引超出[xp,fp]时的右侧值（y>fp时在x位置的取值）\n\nperiod:\n\nExamples\n    --------\n    >>> xp = [1, 2, 3]\n    >>> fp = [3, 2, 0]\n    >>> np.interp(2.5, xp, fp)\n    1.0\n\n```\nline_len = 50 # line_len 的取值范围30~190\nmin_volume = 0\nmax_volume = 100\n vol = np.interp(line_len, [30, 190], [min_volume, max_volume])\n```\n![示例](https://s3.bmp.ovh/imgs/2022/05/16/6932d4620da7d251.jpg)","slug":"numpy/interp","published":1,"date":"2022-05-25T10:06:34.561Z","updated":"2022-05-16T03:17:22.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceep9000y68ur25in0bme","content":"<h1 id=\"线性插值-np-interp\"><a href=\"#线性插值-np-interp\" class=\"headerlink\" title=\"线性插值 np.interp()\"></a>线性插值 np.interp()</h1><span id=\"more\"></span>\n<p>函数：y = np.interp(x, xp, fp, left, right, period)</p>\n<p>单调增加样本点的一维线性插值</p>\n<p>将一维分段线性插值返回给具有给定离散数据点 (xp, fp) 的函数，在 x 处求值。</p>\n<p>x: 所求位置的x坐标值</p>\n<p>xp:离散点的x坐标值范围</p>\n<p>fp:离散点的y坐标值范围</p>\n<p>left:当索引超出[xp,fp]时的左侧值（x&lt;xp时在x位置的取值）</p>\n<p>right:当索引超出[xp,fp]时的右侧值（y&gt;fp时在x位置的取值）</p>\n<p>period:</p>\n<p>Examples<br>    ——–<br>    &gt;&gt;&gt; xp = [1, 2, 3]<br>    &gt;&gt;&gt; fp = [3, 2, 0]<br>    &gt;&gt;&gt; np.interp(2.5, xp, fp)<br>    1.0</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">line_len = 50 # line_len 的取值范围30~190</span><br><span class=\"line\">min_volume = 0</span><br><span class=\"line\">max_volume = 100</span><br><span class=\"line\"> vol = np.interp(line_len, [30, 190], [min_volume, max_volume])</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/05/16/6932d4620da7d251.jpg\" alt=\"示例\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"线性插值-np-interp\"><a href=\"#线性插值-np-interp\" class=\"headerlink\" title=\"线性插值 np.interp()\"></a>线性插值 np.interp()</h1>","more":"<p>函数：y = np.interp(x, xp, fp, left, right, period)</p>\n<p>单调增加样本点的一维线性插值</p>\n<p>将一维分段线性插值返回给具有给定离散数据点 (xp, fp) 的函数，在 x 处求值。</p>\n<p>x: 所求位置的x坐标值</p>\n<p>xp:离散点的x坐标值范围</p>\n<p>fp:离散点的y坐标值范围</p>\n<p>left:当索引超出[xp,fp]时的左侧值（x&lt;xp时在x位置的取值）</p>\n<p>right:当索引超出[xp,fp]时的右侧值（y&gt;fp时在x位置的取值）</p>\n<p>period:</p>\n<p>Examples<br>    ——–<br>    &gt;&gt;&gt; xp = [1, 2, 3]<br>    &gt;&gt;&gt; fp = [3, 2, 0]<br>    &gt;&gt;&gt; np.interp(2.5, xp, fp)<br>    1.0</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">line_len = 50 # line_len 的取值范围30~190</span><br><span class=\"line\">min_volume = 0</span><br><span class=\"line\">max_volume = 100</span><br><span class=\"line\"> vol = np.interp(line_len, [30, 190], [min_volume, max_volume])</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://s3.bmp.ovh/imgs/2022/05/16/6932d4620da7d251.jpg\" alt=\"示例\"></p>"},{"title":"numpy降维方法","_content":"# numpy中的降维方法\n<!--more-->\nnumpy中的降维方法：\nflat（）：返回一个iterator，然后去遍历\nflatten（）：将多维数组拉平，并拷贝一份\nravel（）：将多维数组拉平（一维）\nsqueeze（）：除去多维数组中，维数为1的维度，如315降维后3*5\nreshape（-1）：多维数组，拉平\nreshape（-1，5），其中-1表示我们不用亲自去指定这一维度的大小，理解为n维\n\n代码示例：\n```\nimport numpy as np\n\na = np.array([[1, 2, 3], [4, 5, 6]])\n\nc = []\nfor x in a.flat:\n    c.append(x)\nprint('flat迭代器降一维：\\n', c)\nd = a.flatten()\nprint('flatten方法降一维：\\n', d)\ne = a.ravel()\nprint('ravel方法降一维：\\n', e)\ng = np.squeeze(a)\nprint('squeeze方法降一维：\\n', g)\nf = a.reshape(-1)\nprint('reshape方法降一维：\\n', f)\na.resize((1, 6))\nprint('resize方法：\\n', a)\n\n```\n结果：\nflat迭代器降一维：\n [1, 2, 3, 4, 5, 6]\nflatten方法降一维：\n [1 2 3 4 5 6]\nravel方法降一维：\n [1 2 3 4 5 6]\nsqueeze方法降一维：\n [[1 2 3]\n [4 5 6]]\nreshape方法降一维：\n [1 2 3 4 5 6]\nresize方法：\n [[1 2 3 4 5 6]]\n","source":"_posts/numpy/numpy降维方法.md","raw":"---\ntitle: numpy降维方法\n---\n# numpy中的降维方法\n<!--more-->\nnumpy中的降维方法：\nflat（）：返回一个iterator，然后去遍历\nflatten（）：将多维数组拉平，并拷贝一份\nravel（）：将多维数组拉平（一维）\nsqueeze（）：除去多维数组中，维数为1的维度，如315降维后3*5\nreshape（-1）：多维数组，拉平\nreshape（-1，5），其中-1表示我们不用亲自去指定这一维度的大小，理解为n维\n\n代码示例：\n```\nimport numpy as np\n\na = np.array([[1, 2, 3], [4, 5, 6]])\n\nc = []\nfor x in a.flat:\n    c.append(x)\nprint('flat迭代器降一维：\\n', c)\nd = a.flatten()\nprint('flatten方法降一维：\\n', d)\ne = a.ravel()\nprint('ravel方法降一维：\\n', e)\ng = np.squeeze(a)\nprint('squeeze方法降一维：\\n', g)\nf = a.reshape(-1)\nprint('reshape方法降一维：\\n', f)\na.resize((1, 6))\nprint('resize方法：\\n', a)\n\n```\n结果：\nflat迭代器降一维：\n [1, 2, 3, 4, 5, 6]\nflatten方法降一维：\n [1 2 3 4 5 6]\nravel方法降一维：\n [1 2 3 4 5 6]\nsqueeze方法降一维：\n [[1 2 3]\n [4 5 6]]\nreshape方法降一维：\n [1 2 3 4 5 6]\nresize方法：\n [[1 2 3 4 5 6]]\n","slug":"numpy/numpy降维方法","published":1,"date":"2022-05-26T07:40:45.201Z","updated":"2022-06-01T08:41:13.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepa000z68ureyh3g1c4","content":"<h1 id=\"numpy中的降维方法\"><a href=\"#numpy中的降维方法\" class=\"headerlink\" title=\"numpy中的降维方法\"></a>numpy中的降维方法</h1><span id=\"more\"></span>\n<p>numpy中的降维方法：<br>flat（）：返回一个iterator，然后去遍历<br>flatten（）：将多维数组拉平，并拷贝一份<br>ravel（）：将多维数组拉平（一维）<br>squeeze（）：除去多维数组中，维数为1的维度，如315降维后3*5<br>reshape（-1）：多维数组，拉平<br>reshape（-1，5），其中-1表示我们不用亲自去指定这一维度的大小，理解为n维</p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">a = np.array([[1, 2, 3], [4, 5, 6]])</span><br><span class=\"line\"></span><br><span class=\"line\">c = []</span><br><span class=\"line\">for x in a.flat:</span><br><span class=\"line\">    c.append(x)</span><br><span class=\"line\">print(&#x27;flat迭代器降一维：\\n&#x27;, c)</span><br><span class=\"line\">d = a.flatten()</span><br><span class=\"line\">print(&#x27;flatten方法降一维：\\n&#x27;, d)</span><br><span class=\"line\">e = a.ravel()</span><br><span class=\"line\">print(&#x27;ravel方法降一维：\\n&#x27;, e)</span><br><span class=\"line\">g = np.squeeze(a)</span><br><span class=\"line\">print(&#x27;squeeze方法降一维：\\n&#x27;, g)</span><br><span class=\"line\">f = a.reshape(-1)</span><br><span class=\"line\">print(&#x27;reshape方法降一维：\\n&#x27;, f)</span><br><span class=\"line\">a.resize((1, 6))</span><br><span class=\"line\">print(&#x27;resize方法：\\n&#x27;, a)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>结果：<br>flat迭代器降一维：<br> [1, 2, 3, 4, 5, 6]<br>flatten方法降一维：<br> [1 2 3 4 5 6]<br>ravel方法降一维：<br> [1 2 3 4 5 6]<br>squeeze方法降一维：<br> [[1 2 3]<br> [4 5 6]]<br>reshape方法降一维：<br> [1 2 3 4 5 6]<br>resize方法：<br> [[1 2 3 4 5 6]]</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"numpy中的降维方法\"><a href=\"#numpy中的降维方法\" class=\"headerlink\" title=\"numpy中的降维方法\"></a>numpy中的降维方法</h1>","more":"<p>numpy中的降维方法：<br>flat（）：返回一个iterator，然后去遍历<br>flatten（）：将多维数组拉平，并拷贝一份<br>ravel（）：将多维数组拉平（一维）<br>squeeze（）：除去多维数组中，维数为1的维度，如315降维后3*5<br>reshape（-1）：多维数组，拉平<br>reshape（-1，5），其中-1表示我们不用亲自去指定这一维度的大小，理解为n维</p>\n<p>代码示例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">a = np.array([[1, 2, 3], [4, 5, 6]])</span><br><span class=\"line\"></span><br><span class=\"line\">c = []</span><br><span class=\"line\">for x in a.flat:</span><br><span class=\"line\">    c.append(x)</span><br><span class=\"line\">print(&#x27;flat迭代器降一维：\\n&#x27;, c)</span><br><span class=\"line\">d = a.flatten()</span><br><span class=\"line\">print(&#x27;flatten方法降一维：\\n&#x27;, d)</span><br><span class=\"line\">e = a.ravel()</span><br><span class=\"line\">print(&#x27;ravel方法降一维：\\n&#x27;, e)</span><br><span class=\"line\">g = np.squeeze(a)</span><br><span class=\"line\">print(&#x27;squeeze方法降一维：\\n&#x27;, g)</span><br><span class=\"line\">f = a.reshape(-1)</span><br><span class=\"line\">print(&#x27;reshape方法降一维：\\n&#x27;, f)</span><br><span class=\"line\">a.resize((1, 6))</span><br><span class=\"line\">print(&#x27;resize方法：\\n&#x27;, a)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>结果：<br>flat迭代器降一维：<br> [1, 2, 3, 4, 5, 6]<br>flatten方法降一维：<br> [1 2 3 4 5 6]<br>ravel方法降一维：<br> [1 2 3 4 5 6]<br>squeeze方法降一维：<br> [[1 2 3]<br> [4 5 6]]<br>reshape方法降一维：<br> [1 2 3 4 5 6]<br>resize方法：<br> [[1 2 3 4 5 6]]</p>"},{"title":"numpy-ravle()","_content":"# numpy-ravle()\n<!--more-->\nravel()将多维数据展平为一维数据，可以选择不同的数据索引方式（见文档参数四个可选值）\n使用：\n例子：\n```\n>>> import numpy as np\n>>> a = np.array([[1,2,3],[4,5,6]])\n>>> a\narray([[1, 2, 3],\n       [4, 5, 6]])\n>>> a.ravel()\narray([1, 2, 3, 4, 5, 6])\n\n```\n\n参考\n[https://blog.csdn.net/qq_34159047/article/details/111300468?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&utm_relevant_index=1](https://blog.csdn.net/qq_34159047/article/details/111300468?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&utm_relevant_index=1)","source":"_posts/numpy/ravel.md","raw":"---\ntitle: numpy-ravle()\n---\n# numpy-ravle()\n<!--more-->\nravel()将多维数据展平为一维数据，可以选择不同的数据索引方式（见文档参数四个可选值）\n使用：\n例子：\n```\n>>> import numpy as np\n>>> a = np.array([[1,2,3],[4,5,6]])\n>>> a\narray([[1, 2, 3],\n       [4, 5, 6]])\n>>> a.ravel()\narray([1, 2, 3, 4, 5, 6])\n\n```\n\n参考\n[https://blog.csdn.net/qq_34159047/article/details/111300468?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&utm_relevant_index=1](https://blog.csdn.net/qq_34159047/article/details/111300468?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&utm_relevant_index=1)","slug":"numpy/ravel","published":1,"date":"2022-05-25T10:06:34.561Z","updated":"2022-05-17T07:34:12.113Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeph001068ur9yrg53ih","content":"<h1 id=\"numpy-ravle\"><a href=\"#numpy-ravle\" class=\"headerlink\" title=\"numpy-ravle()\"></a>numpy-ravle()</h1><span id=\"more\"></span>\n<p>ravel()将多维数据展平为一维数据，可以选择不同的数据索引方式（见文档参数四个可选值）<br>使用：<br>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import numpy as np</span><br><span class=\"line\">&gt;&gt;&gt; a = np.array([[1,2,3],[4,5,6]])</span><br><span class=\"line\">&gt;&gt;&gt; a</span><br><span class=\"line\">array([[1, 2, 3],</span><br><span class=\"line\">       [4, 5, 6]])</span><br><span class=\"line\">&gt;&gt;&gt; a.ravel()</span><br><span class=\"line\">array([1, 2, 3, 4, 5, 6])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>参考<br><a href=\"https://blog.csdn.net/qq_34159047/article/details/111300468?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&utm_relevant_index=1\">https://blog.csdn.net/qq_34159047/article/details/111300468?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&amp;utm_relevant_index=1</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"numpy-ravle\"><a href=\"#numpy-ravle\" class=\"headerlink\" title=\"numpy-ravle()\"></a>numpy-ravle()</h1>","more":"<p>ravel()将多维数据展平为一维数据，可以选择不同的数据索引方式（见文档参数四个可选值）<br>使用：<br>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import numpy as np</span><br><span class=\"line\">&gt;&gt;&gt; a = np.array([[1,2,3],[4,5,6]])</span><br><span class=\"line\">&gt;&gt;&gt; a</span><br><span class=\"line\">array([[1, 2, 3],</span><br><span class=\"line\">       [4, 5, 6]])</span><br><span class=\"line\">&gt;&gt;&gt; a.ravel()</span><br><span class=\"line\">array([1, 2, 3, 4, 5, 6])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>参考<br><a href=\"https://blog.csdn.net/qq_34159047/article/details/111300468?spm=1001.2101.3001.6661.1&utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromBaidu~default-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&utm_relevant_index=1\">https://blog.csdn.net/qq_34159047/article/details/111300468?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-1-111300468-blog-84305399.pc_relevant_baidufeatures_v7&amp;utm_relevant_index=1</a></p>"},{"title":"Python中的X[:,0]和X[:,1]","_content":"# Python中的X[:,0]和X[:,1]说明\n<!--more-->\n今天在学习knn算法是例子中有一句：\nplt.scatter(red[:, 0], red[:, 1], 80, 'r', '^')\n不知道其中的red[:, 0]是什么意思便去了解学习。\n## 解释\nX[:,0]是numpy中数组的一种写法，表示对一个二维数组，取该二维数组第一维中的所有数据，第二维中取第0列数据，\n直观来说，X[:,0]就是取所有行的第0列数据, X[:,1] 就是取所有行的第1列数据。\n\n例子：\n```\nX = np.array([[0, 1],\n              [2, 3], \n              [4, 5], \n              [6, 7], \n              [8, 9], \n              [10, 11], \n              [12, 13], \n              [14, 15], \n              [16, 17], \n              [18, 19]])\nprint(X[:, 0])\n```\n结果：\n```\n[0 2 4 6 8 9 10 12 14 16 18]\n```\n参考：\n[https://blog.csdn.net/a394268045/article/details/79104219](https://blog.csdn.net/a394268045/article/details/79104219)","source":"_posts/numpy/数组取整列元素方法.md","raw":"---\ntitle: Python中的X[:,0]和X[:,1]\n---\n# Python中的X[:,0]和X[:,1]说明\n<!--more-->\n今天在学习knn算法是例子中有一句：\nplt.scatter(red[:, 0], red[:, 1], 80, 'r', '^')\n不知道其中的red[:, 0]是什么意思便去了解学习。\n## 解释\nX[:,0]是numpy中数组的一种写法，表示对一个二维数组，取该二维数组第一维中的所有数据，第二维中取第0列数据，\n直观来说，X[:,0]就是取所有行的第0列数据, X[:,1] 就是取所有行的第1列数据。\n\n例子：\n```\nX = np.array([[0, 1],\n              [2, 3], \n              [4, 5], \n              [6, 7], \n              [8, 9], \n              [10, 11], \n              [12, 13], \n              [14, 15], \n              [16, 17], \n              [18, 19]])\nprint(X[:, 0])\n```\n结果：\n```\n[0 2 4 6 8 9 10 12 14 16 18]\n```\n参考：\n[https://blog.csdn.net/a394268045/article/details/79104219](https://blog.csdn.net/a394268045/article/details/79104219)","slug":"numpy/数组取整列元素方法","published":1,"date":"2022-05-25T10:06:34.582Z","updated":"2022-05-17T07:20:03.537Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepi001168ur6h9v5e9w","content":"<h1 id=\"Python中的X-0-和X-1-说明\"><a href=\"#Python中的X-0-和X-1-说明\" class=\"headerlink\" title=\"Python中的X[:,0]和X[:,1]说明\"></a>Python中的X[:,0]和X[:,1]说明</h1><span id=\"more\"></span>\n<p>今天在学习knn算法是例子中有一句：<br>plt.scatter(red[:, 0], red[:, 1], 80, ‘r’, ‘^’)<br>不知道其中的red[:, 0]是什么意思便去了解学习。</p>\n<h2 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h2><p>X[:,0]是numpy中数组的一种写法，表示对一个二维数组，取该二维数组第一维中的所有数据，第二维中取第0列数据，<br>直观来说，X[:,0]就是取所有行的第0列数据, X[:,1] 就是取所有行的第1列数据。</p>\n<p>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X = np.array([[0, 1],</span><br><span class=\"line\">              [2, 3], </span><br><span class=\"line\">              [4, 5], </span><br><span class=\"line\">              [6, 7], </span><br><span class=\"line\">              [8, 9], </span><br><span class=\"line\">              [10, 11], </span><br><span class=\"line\">              [12, 13], </span><br><span class=\"line\">              [14, 15], </span><br><span class=\"line\">              [16, 17], </span><br><span class=\"line\">              [18, 19]])</span><br><span class=\"line\">print(X[:, 0])</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[0 2 4 6 8 9 10 12 14 16 18]</span><br></pre></td></tr></table></figure>\n<p>参考：<br><a href=\"https://blog.csdn.net/a394268045/article/details/79104219\">https://blog.csdn.net/a394268045/article/details/79104219</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Python中的X-0-和X-1-说明\"><a href=\"#Python中的X-0-和X-1-说明\" class=\"headerlink\" title=\"Python中的X[:,0]和X[:,1]说明\"></a>Python中的X[:,0]和X[:,1]说明</h1>","more":"<p>今天在学习knn算法是例子中有一句：<br>plt.scatter(red[:, 0], red[:, 1], 80, ‘r’, ‘^’)<br>不知道其中的red[:, 0]是什么意思便去了解学习。</p>\n<h2 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h2><p>X[:,0]是numpy中数组的一种写法，表示对一个二维数组，取该二维数组第一维中的所有数据，第二维中取第0列数据，<br>直观来说，X[:,0]就是取所有行的第0列数据, X[:,1] 就是取所有行的第1列数据。</p>\n<p>例子：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">X = np.array([[0, 1],</span><br><span class=\"line\">              [2, 3], </span><br><span class=\"line\">              [4, 5], </span><br><span class=\"line\">              [6, 7], </span><br><span class=\"line\">              [8, 9], </span><br><span class=\"line\">              [10, 11], </span><br><span class=\"line\">              [12, 13], </span><br><span class=\"line\">              [14, 15], </span><br><span class=\"line\">              [16, 17], </span><br><span class=\"line\">              [18, 19]])</span><br><span class=\"line\">print(X[:, 0])</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[0 2 4 6 8 9 10 12 14 16 18]</span><br></pre></td></tr></table></figure>\n<p>参考：<br><a href=\"https://blog.csdn.net/a394268045/article/details/79104219\">https://blog.csdn.net/a394268045/article/details/79104219</a></p>"},{"title":"pytorch + opencv + YOLov5 实现人像识别","_content":"# pytorch + opencv + YOLov5 实现人像识别\n<!--more-->\n# 准备工作\n1. IDE环境-->pycharm\n2. pytorch      \n3. opencv\n4. YOLOv5\n相关软件安装教程在以前的博客有\n# 一、 模型训练\n最开始打算自己训练模型的，但是因为电脑配置不行就没有训练，也没有科学上网（VPN）的方式取白嫖谷歌的GPU\n所以就用了YOLO自带的训练模型--->yolov5s.pt,下载方式去它的[Github](https://github.com/ultralytics/yolov5)自取\n# 二、代码实现\n代码如下：\n```\nimport time\n\nimport torch\nimport cv2 as cv\n\n# Model\n\"\"\"\ndef load(repo_or_dir, model, *args, source='github', force_reload=False, verbose=True, skip_validation=False,\n         **kwargs):\n从 github 存储库或本地目录加载模型。\n\n注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。\n\n如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。\n\n如果source是“local”，repo_or_dir则应为本地目录的路径。\n\n参数\n\nrepo_or_dir ( string ) – 如果source是 'github'，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 'pytorch/vision:0.10'。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。\n\nmodel ( string ) – 在 repo/dir's 中定义的可调用（入口点）的名称hubconf.py。\n\n*args（可选）– callable 的相应参数model。\n\nsource ( string , optional ) – 'github' 或 'local'。指定如何 repo_or_dir解释。默认为“github”。\n\nforce_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = 'local'。默认为False\n\nverbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = 'local'没有任何影响。默认为True。\n\nskip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。\n\n**kwargs (可选) – callable 的相应 kwargs model。\n\n返回\n\nmodel使用给定*args和调用时可调用 的输出**kwargs。\n\n\"\"\"\n# yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下\n# 网络模型从github上加载      yolov5路径  模型名\n# model = torch.hub.load('./yolov5', 'yolov5s')  # or yolov5m, yolov5l, yolov5x, custom-->表示使用自己的训练模型\n\n# 这里，换成自已的模型，调用best.pt\nmodel = torch.hub.load('./yolov5', 'custom', path='./weight/ppe_yolo_n.pt', source='local')\n\nmodel.conf = 0.52  # confidence threshold (0-1)\nmodel.iou = 0.45  # NMS IoU threshold (0-1)\n# 设置识别对象（classes文件的标签顺序）\n# (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs\n# model.classes = None\nlabel = ['person', 'vest', 'blue helmet', 'red helmet', 'white helmet', 'yellow helmet']\n\n# Images\n# 图片输入\n# img = 'https://ultralytics.com/images/zidane.jpg'  # or file, Path, PIL, OpenCV, numpy, list\n# img = 'img_t/bus.jpg'\n# opencv加载的图片是BGR的使用pytorch要使用RGB的\n# img = cv.imread(r'image/12.jpg')\n# img = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n\n# 从摄像头获取\ncap = cv.VideoCapture(0)\nif not cap.isOpened():\n    print(\"Cannot open camera\")\n    exit()\nwhile True:\n    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理\n    ret, frame = cap.read()\n    # 如果正确读取帧，ret为True\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    frame = cv.flip(frame, 1)\n    img = cv.cvtColor(frame, cv.COLOR_BGR2RGB)\n\n    # FPS计算time.start\n    start_time = time.time()\n\n    # Inference\n    results = model(img)\n    person = results.xyxy[0]  # xyxy[0]--> 0在classes是person标签,获取所有标签为0的数据\n    # GPU --> CPU\n    person = person.cpu()\n    # tensor --> array\n    person = person.numpy()\n\n    # end_time\n    end_time = time.time()\n    fps = 1 / (end_time - start_time)\n\n    # Results\n    results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n    print(results.xyxy[0])  # img1 predictions (tensor)\n    print('----------------')\n    print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n    # results.save()\n    # results.crop() # 截取检测的像素后，生成单一图片\n    # results.pandas()\n\n    # 显示\n    cv.putText(frame, 'FPS: ' + str(round(fps, 2)), (30, 50), cv.FONT_ITALIC, 1, (255, 255, 0), 2)\n    if len(person) > 0:\n        cv.putText(frame, 'Person: ' + str(int(person[0, 4] * 100)) + '%', (30, 100), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n        cv.rectangle(frame, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),\n                     (0, 255, 255), 3)  # 人框\n\n    cv.imshow('results', frame)\n\n    if cv.waitKey(10) & 0xFF == ord('q'):\n        break\ncap.release()\ncv.destroyAllWindows()\n\n```\n[参考链接](https://www.jianshu.com/p/4b9187d9dc9c)\n","source":"_posts/目标检测小项目/人像识别.md","raw":"---\ntitle: pytorch + opencv + YOLov5 实现人像识别\n---\n# pytorch + opencv + YOLov5 实现人像识别\n<!--more-->\n# 准备工作\n1. IDE环境-->pycharm\n2. pytorch      \n3. opencv\n4. YOLOv5\n相关软件安装教程在以前的博客有\n# 一、 模型训练\n最开始打算自己训练模型的，但是因为电脑配置不行就没有训练，也没有科学上网（VPN）的方式取白嫖谷歌的GPU\n所以就用了YOLO自带的训练模型--->yolov5s.pt,下载方式去它的[Github](https://github.com/ultralytics/yolov5)自取\n# 二、代码实现\n代码如下：\n```\nimport time\n\nimport torch\nimport cv2 as cv\n\n# Model\n\"\"\"\ndef load(repo_or_dir, model, *args, source='github', force_reload=False, verbose=True, skip_validation=False,\n         **kwargs):\n从 github 存储库或本地目录加载模型。\n\n注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。\n\n如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。\n\n如果source是“local”，repo_or_dir则应为本地目录的路径。\n\n参数\n\nrepo_or_dir ( string ) – 如果source是 'github'，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 'pytorch/vision:0.10'。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。\n\nmodel ( string ) – 在 repo/dir's 中定义的可调用（入口点）的名称hubconf.py。\n\n*args（可选）– callable 的相应参数model。\n\nsource ( string , optional ) – 'github' 或 'local'。指定如何 repo_or_dir解释。默认为“github”。\n\nforce_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = 'local'。默认为False\n\nverbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = 'local'没有任何影响。默认为True。\n\nskip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。\n\n**kwargs (可选) – callable 的相应 kwargs model。\n\n返回\n\nmodel使用给定*args和调用时可调用 的输出**kwargs。\n\n\"\"\"\n# yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下\n# 网络模型从github上加载      yolov5路径  模型名\n# model = torch.hub.load('./yolov5', 'yolov5s')  # or yolov5m, yolov5l, yolov5x, custom-->表示使用自己的训练模型\n\n# 这里，换成自已的模型，调用best.pt\nmodel = torch.hub.load('./yolov5', 'custom', path='./weight/ppe_yolo_n.pt', source='local')\n\nmodel.conf = 0.52  # confidence threshold (0-1)\nmodel.iou = 0.45  # NMS IoU threshold (0-1)\n# 设置识别对象（classes文件的标签顺序）\n# (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs\n# model.classes = None\nlabel = ['person', 'vest', 'blue helmet', 'red helmet', 'white helmet', 'yellow helmet']\n\n# Images\n# 图片输入\n# img = 'https://ultralytics.com/images/zidane.jpg'  # or file, Path, PIL, OpenCV, numpy, list\n# img = 'img_t/bus.jpg'\n# opencv加载的图片是BGR的使用pytorch要使用RGB的\n# img = cv.imread(r'image/12.jpg')\n# img = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n\n# 从摄像头获取\ncap = cv.VideoCapture(0)\nif not cap.isOpened():\n    print(\"Cannot open camera\")\n    exit()\nwhile True:\n    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理\n    ret, frame = cap.read()\n    # 如果正确读取帧，ret为True\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    frame = cv.flip(frame, 1)\n    img = cv.cvtColor(frame, cv.COLOR_BGR2RGB)\n\n    # FPS计算time.start\n    start_time = time.time()\n\n    # Inference\n    results = model(img)\n    person = results.xyxy[0]  # xyxy[0]--> 0在classes是person标签,获取所有标签为0的数据\n    # GPU --> CPU\n    person = person.cpu()\n    # tensor --> array\n    person = person.numpy()\n\n    # end_time\n    end_time = time.time()\n    fps = 1 / (end_time - start_time)\n\n    # Results\n    results.print()  # or .show(), .save(), .crop(), .pandas(), etc.\n    print(results.xyxy[0])  # img1 predictions (tensor)\n    print('----------------')\n    print(results.pandas().xyxy[0])  # img1 predictions (pandas)\n    # results.save()\n    # results.crop() # 截取检测的像素后，生成单一图片\n    # results.pandas()\n\n    # 显示\n    cv.putText(frame, 'FPS: ' + str(round(fps, 2)), (30, 50), cv.FONT_ITALIC, 1, (255, 255, 0), 2)\n    if len(person) > 0:\n        cv.putText(frame, 'Person: ' + str(int(person[0, 4] * 100)) + '%', (30, 100), cv.FONT_ITALIC, 1, (0, 255, 0), 2)\n        cv.rectangle(frame, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),\n                     (0, 255, 255), 3)  # 人框\n\n    cv.imshow('results', frame)\n\n    if cv.waitKey(10) & 0xFF == ord('q'):\n        break\ncap.release()\ncv.destroyAllWindows()\n\n```\n[参考链接](https://www.jianshu.com/p/4b9187d9dc9c)\n","slug":"目标检测小项目/人像识别","published":1,"date":"2022-06-01T08:24:40.550Z","updated":"2022-06-01T09:36:23.024Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepj001268ur3ke9g58r","content":"<h1 id=\"pytorch-opencv-YOLov5-实现人像识别\"><a href=\"#pytorch-opencv-YOLov5-实现人像识别\" class=\"headerlink\" title=\"pytorch + opencv + YOLov5 实现人像识别\"></a>pytorch + opencv + YOLov5 实现人像识别</h1><span id=\"more\"></span>\n<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><ol>\n<li>IDE环境–&gt;pycharm</li>\n<li>pytorch      </li>\n<li>opencv</li>\n<li>YOLOv5<br>相关软件安装教程在以前的博客有<h1 id=\"一、-模型训练\"><a href=\"#一、-模型训练\" class=\"headerlink\" title=\"一、 模型训练\"></a>一、 模型训练</h1>最开始打算自己训练模型的，但是因为电脑配置不行就没有训练，也没有科学上网（VPN）的方式取白嫖谷歌的GPU<br>所以就用了YOLO自带的训练模型—&gt;yolov5s.pt,下载方式去它的<a href=\"https://github.com/ultralytics/yolov5\">Github</a>自取<h1 id=\"二、代码实现\"><a href=\"#二、代码实现\" class=\"headerlink\" title=\"二、代码实现\"></a>二、代码实现</h1>代码如下：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"># Model</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">def load(repo_or_dir, model, *args, source=&#x27;github&#x27;, force_reload=False, verbose=True, skip_validation=False,</span><br><span class=\"line\">         **kwargs):</span><br><span class=\"line\">从 github 存储库或本地目录加载模型。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“local”，repo_or_dir则应为本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">参数</span><br><span class=\"line\"></span><br><span class=\"line\">repo_or_dir ( string ) – 如果source是 &#x27;github&#x27;，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 &#x27;pytorch/vision:0.10&#x27;。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">model ( string ) – 在 repo/dir&#x27;s 中定义的可调用（入口点）的名称hubconf.py。</span><br><span class=\"line\"></span><br><span class=\"line\">*args（可选）– callable 的相应参数model。</span><br><span class=\"line\"></span><br><span class=\"line\">source ( string , optional ) – &#x27;github&#x27; 或 &#x27;local&#x27;。指定如何 repo_or_dir解释。默认为“github”。</span><br><span class=\"line\"></span><br><span class=\"line\">force_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = &#x27;local&#x27;。默认为False</span><br><span class=\"line\"></span><br><span class=\"line\">verbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = &#x27;local&#x27;没有任何影响。默认为True。</span><br><span class=\"line\"></span><br><span class=\"line\">skip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。</span><br><span class=\"line\"></span><br><span class=\"line\">**kwargs (可选) – callable 的相应 kwargs model。</span><br><span class=\"line\"></span><br><span class=\"line\">返回</span><br><span class=\"line\"></span><br><span class=\"line\">model使用给定*args和调用时可调用 的输出**kwargs。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下</span><br><span class=\"line\"># 网络模型从github上加载      yolov5路径  模型名</span><br><span class=\"line\"># model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;yolov5s&#x27;)  # or yolov5m, yolov5l, yolov5x, custom--&gt;表示使用自己的训练模型</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里，换成自已的模型，调用best.pt</span><br><span class=\"line\">model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/ppe_yolo_n.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\"># 设置识别对象（classes文件的标签顺序）</span><br><span class=\"line\"># (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs</span><br><span class=\"line\"># model.classes = None</span><br><span class=\"line\">label = [&#x27;person&#x27;, &#x27;vest&#x27;, &#x27;blue helmet&#x27;, &#x27;red helmet&#x27;, &#x27;white helmet&#x27;, &#x27;yellow helmet&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># Images</span><br><span class=\"line\"># 图片输入</span><br><span class=\"line\"># img = &#x27;https://ultralytics.com/images/zidane.jpg&#x27;  # or file, Path, PIL, OpenCV, numpy, list</span><br><span class=\"line\"># img = &#x27;img_t/bus.jpg&#x27;</span><br><span class=\"line\"># opencv加载的图片是BGR的使用pytorch要使用RGB的</span><br><span class=\"line\"># img = cv.imread(r&#x27;image/12.jpg&#x27;)</span><br><span class=\"line\"># img = cv.cvtColor(img, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"></span><br><span class=\"line\"># 从摄像头获取</span><br><span class=\"line\">cap = cv.VideoCapture(0)</span><br><span class=\"line\">if not cap.isOpened():</span><br><span class=\"line\">    print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">    exit()</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    # 如果正确读取帧，ret为True</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    frame = cv.flip(frame, 1)</span><br><span class=\"line\">    img = cv.cvtColor(frame, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"></span><br><span class=\"line\">    # FPS计算time.start</span><br><span class=\"line\">    start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">    # Inference</span><br><span class=\"line\">    results = model(img)</span><br><span class=\"line\">    person = results.xyxy[0]  # xyxy[0]--&gt; 0在classes是person标签,获取所有标签为0的数据</span><br><span class=\"line\">    # GPU --&gt; CPU</span><br><span class=\"line\">    person = person.cpu()</span><br><span class=\"line\">    # tensor --&gt; array</span><br><span class=\"line\">    person = person.numpy()</span><br><span class=\"line\"></span><br><span class=\"line\">    # end_time</span><br><span class=\"line\">    end_time = time.time()</span><br><span class=\"line\">    fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">    # Results</span><br><span class=\"line\">    results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">    print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">    print(&#x27;----------------&#x27;)</span><br><span class=\"line\">    print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\">    # results.save()</span><br><span class=\"line\">    # results.crop() # 截取检测的像素后，生成单一图片</span><br><span class=\"line\">    # results.pandas()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 显示</span><br><span class=\"line\">    cv.putText(frame, &#x27;FPS: &#x27; + str(round(fps, 2)), (30, 50), cv.FONT_ITALIC, 1, (255, 255, 0), 2)</span><br><span class=\"line\">    if len(person) &gt; 0:</span><br><span class=\"line\">        cv.putText(frame, &#x27;Person: &#x27; + str(int(person[0, 4] * 100)) + &#x27;%&#x27;, (30, 100), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\">        cv.rectangle(frame, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),</span><br><span class=\"line\">                     (0, 255, 255), 3)  # 人框</span><br><span class=\"line\"></span><br><span class=\"line\">    cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\"></span><br><span class=\"line\">    if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">        break</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<a href=\"https://www.jianshu.com/p/4b9187d9dc9c\">参考链接</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"pytorch-opencv-YOLov5-实现人像识别\"><a href=\"#pytorch-opencv-YOLov5-实现人像识别\" class=\"headerlink\" title=\"pytorch + opencv + YOLov5 实现人像识别\"></a>pytorch + opencv + YOLov5 实现人像识别</h1>","more":"<h1 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h1><ol>\n<li>IDE环境–&gt;pycharm</li>\n<li>pytorch      </li>\n<li>opencv</li>\n<li>YOLOv5<br>相关软件安装教程在以前的博客有<h1 id=\"一、-模型训练\"><a href=\"#一、-模型训练\" class=\"headerlink\" title=\"一、 模型训练\"></a>一、 模型训练</h1>最开始打算自己训练模型的，但是因为电脑配置不行就没有训练，也没有科学上网（VPN）的方式取白嫖谷歌的GPU<br>所以就用了YOLO自带的训练模型—&gt;yolov5s.pt,下载方式去它的<a href=\"https://github.com/ultralytics/yolov5\">Github</a>自取<h1 id=\"二、代码实现\"><a href=\"#二、代码实现\" class=\"headerlink\" title=\"二、代码实现\"></a>二、代码实现</h1>代码如下：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">import torch</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"># Model</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">def load(repo_or_dir, model, *args, source=&#x27;github&#x27;, force_reload=False, verbose=True, skip_validation=False,</span><br><span class=\"line\">         **kwargs):</span><br><span class=\"line\">从 github 存储库或本地目录加载模型。</span><br><span class=\"line\"></span><br><span class=\"line\">注意：加载模型是典型的用例，但这也可用于加载其他对象，例如分词器、损失函数等。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“github”，repo_or_dir则应repo_owner/repo_name[:tag_name]采用带有可选标签/分支的形式。</span><br><span class=\"line\"></span><br><span class=\"line\">如果source是“local”，repo_or_dir则应为本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">参数</span><br><span class=\"line\"></span><br><span class=\"line\">repo_or_dir ( string ) – 如果source是 &#x27;github&#x27;，这应该对应于repo_owner/repo_name[:tag_name]具有可选标签/分支格式的 github 存储库，例如 &#x27;pytorch/vision:0.10&#x27;。如果tag_name未指定，则假定默认分支为main存在，否则为master。如果source是“local”，则它应该是本地目录的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">model ( string ) – 在 repo/dir&#x27;s 中定义的可调用（入口点）的名称hubconf.py。</span><br><span class=\"line\"></span><br><span class=\"line\">*args（可选）– callable 的相应参数model。</span><br><span class=\"line\"></span><br><span class=\"line\">source ( string , optional ) – &#x27;github&#x27; 或 &#x27;local&#x27;。指定如何 repo_or_dir解释。默认为“github”。</span><br><span class=\"line\"></span><br><span class=\"line\">force_reload ( bool , optional ) – 是否无条件强制重新下载github repo。如果 没有任何影响 source = &#x27;local&#x27;。默认为False</span><br><span class=\"line\"></span><br><span class=\"line\">verbose ( bool , optional ) – 如果False，静音有关命中本地缓存的消息。请注意，有关首次下载的消息无法静音。如果source = &#x27;local&#x27;没有任何影响。默认为True。</span><br><span class=\"line\"></span><br><span class=\"line\">skip_validation ( bool , optional ) – 如果False，torchhub 将检查github参数指定的分支或提交是否正确属于 repo 所有者。这将向 GitHub API 发出请求；您可以通过设置GITHUB_TOKEN环境变量来指定非默认 GitHub 令牌 。默认为False。</span><br><span class=\"line\"></span><br><span class=\"line\">**kwargs (可选) – callable 的相应 kwargs model。</span><br><span class=\"line\"></span><br><span class=\"line\">返回</span><br><span class=\"line\"></span><br><span class=\"line\">model使用给定*args和调用时可调用 的输出**kwargs。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># yolov5s表示主目录下的yolov5s.pt，而且必须是主目录下</span><br><span class=\"line\"># 网络模型从github上加载      yolov5路径  模型名</span><br><span class=\"line\"># model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;yolov5s&#x27;)  # or yolov5m, yolov5l, yolov5x, custom--&gt;表示使用自己的训练模型</span><br><span class=\"line\"></span><br><span class=\"line\"># 这里，换成自已的模型，调用best.pt</span><br><span class=\"line\">model = torch.hub.load(&#x27;./yolov5&#x27;, &#x27;custom&#x27;, path=&#x27;./weight/ppe_yolo_n.pt&#x27;, source=&#x27;local&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">model.conf = 0.52  # confidence threshold (0-1)</span><br><span class=\"line\">model.iou = 0.45  # NMS IoU threshold (0-1)</span><br><span class=\"line\"># 设置识别对象（classes文件的标签顺序）</span><br><span class=\"line\"># (optional list) filter by class, i.e. = [0, 15, 16] for persons, cats and dogs</span><br><span class=\"line\"># model.classes = None</span><br><span class=\"line\">label = [&#x27;person&#x27;, &#x27;vest&#x27;, &#x27;blue helmet&#x27;, &#x27;red helmet&#x27;, &#x27;white helmet&#x27;, &#x27;yellow helmet&#x27;]</span><br><span class=\"line\"></span><br><span class=\"line\"># Images</span><br><span class=\"line\"># 图片输入</span><br><span class=\"line\"># img = &#x27;https://ultralytics.com/images/zidane.jpg&#x27;  # or file, Path, PIL, OpenCV, numpy, list</span><br><span class=\"line\"># img = &#x27;img_t/bus.jpg&#x27;</span><br><span class=\"line\"># opencv加载的图片是BGR的使用pytorch要使用RGB的</span><br><span class=\"line\"># img = cv.imread(r&#x27;image/12.jpg&#x27;)</span><br><span class=\"line\"># img = cv.cvtColor(img, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"></span><br><span class=\"line\"># 从摄像头获取</span><br><span class=\"line\">cap = cv.VideoCapture(0)</span><br><span class=\"line\">if not cap.isOpened():</span><br><span class=\"line\">    print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">    exit()</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    # 如果正确读取帧，ret为True</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    frame = cv.flip(frame, 1)</span><br><span class=\"line\">    img = cv.cvtColor(frame, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"></span><br><span class=\"line\">    # FPS计算time.start</span><br><span class=\"line\">    start_time = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">    # Inference</span><br><span class=\"line\">    results = model(img)</span><br><span class=\"line\">    person = results.xyxy[0]  # xyxy[0]--&gt; 0在classes是person标签,获取所有标签为0的数据</span><br><span class=\"line\">    # GPU --&gt; CPU</span><br><span class=\"line\">    person = person.cpu()</span><br><span class=\"line\">    # tensor --&gt; array</span><br><span class=\"line\">    person = person.numpy()</span><br><span class=\"line\"></span><br><span class=\"line\">    # end_time</span><br><span class=\"line\">    end_time = time.time()</span><br><span class=\"line\">    fps = 1 / (end_time - start_time)</span><br><span class=\"line\"></span><br><span class=\"line\">    # Results</span><br><span class=\"line\">    results.print()  # or .show(), .save(), .crop(), .pandas(), etc.</span><br><span class=\"line\">    print(results.xyxy[0])  # img1 predictions (tensor)</span><br><span class=\"line\">    print(&#x27;----------------&#x27;)</span><br><span class=\"line\">    print(results.pandas().xyxy[0])  # img1 predictions (pandas)</span><br><span class=\"line\">    # results.save()</span><br><span class=\"line\">    # results.crop() # 截取检测的像素后，生成单一图片</span><br><span class=\"line\">    # results.pandas()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 显示</span><br><span class=\"line\">    cv.putText(frame, &#x27;FPS: &#x27; + str(round(fps, 2)), (30, 50), cv.FONT_ITALIC, 1, (255, 255, 0), 2)</span><br><span class=\"line\">    if len(person) &gt; 0:</span><br><span class=\"line\">        cv.putText(frame, &#x27;Person: &#x27; + str(int(person[0, 4] * 100)) + &#x27;%&#x27;, (30, 100), cv.FONT_ITALIC, 1, (0, 255, 0), 2)</span><br><span class=\"line\">        cv.rectangle(frame, (int(person[0, 0]), int(person[0, 1])), (int(person[0, 2]), int(person[0, 3])),</span><br><span class=\"line\">                     (0, 255, 255), 3)  # 人框</span><br><span class=\"line\"></span><br><span class=\"line\">    cv.imshow(&#x27;results&#x27;, frame)</span><br><span class=\"line\"></span><br><span class=\"line\">    if cv.waitKey(10) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">        break</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<a href=\"https://www.jianshu.com/p/4b9187d9dc9c\">参考链接</a></li>\n</ol>"},{"title":"Canny边缘检测算法","_content":"# Canny边缘检测算法基本原理\n<!--more-->\n1. 图像灰度化\n2. 高斯滤波\n3. 用一阶偏导的有限差分来计算梯度的幅值和方向\n4. 对梯度幅值进行非极大值抑制\n5. 用双阈值算法检测和连接边缘\n\n参考：\n[参考文档](https://blog.csdn.net/likezhaobin/article/details/6892176?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2-6892176-blog-117639872.pc_relevant_antiscanv3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2-6892176-blog-117639872.pc_relevant_antiscanv3&utm_relevant_index=5)\n\n# OpenCV中的实现\n代码实现：\n```\n\"\"\"\nCanny边缘检测的概念 - OpenCV函数: cv.Canny()\nCanny算法\n\"\"\"\n\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\people.jpg', 0)\n'''\nCanny(image, threshold1, threshold2, edges=None, apertureSize=None, L2gradient=None):\n.   @param image 8-bit input image.\n.   @param edges output edge map; single channels 8-bit image, which has the same size as image.\n.   @param threshold1 first threshold for the hysteresis procedure.(minVal)\n.   @param threshold2 second threshold for the hysteresis procedure.(maxVal, >maxVal ---> 255)\n.   @param apertureSize aperture size for the Sobel operator.\n.   @param L2gradient a flag, indicating whether a more accurate \\f$L_2\\f$ norm\\f$=\\sqrt{(dI/dx)^2 + (dI/dy)^2}\\f$\n    should be used to calculate the image gradient magnitude (L2gradient=true ), \n    or whether the default \\f$L_1\\f$ norm \\f$=|dI/dx|+|dI/dy|\\f$ is enough (L2gradient=false ).\n'''\nedges = cv.Canny(img, 50, 60)\nplt.subplot(121), plt.imshow(img, cmap='gray')\nplt.title('Original Image'), plt.xticks([]), plt.yticks([])\nplt.subplot(122), plt.imshow(edges, cmap='gray')\nplt.title('Edge Image'), plt.xticks([]), plt.yticks([])\nplt.show()\n\n```\n## Soble算子计算梯度\nsobel算子主要用于获得数字图像的一阶梯度，常见的应用和物理意义是边缘检测。\n原理：\n算子使用两个3*3的矩阵（图1）算子使用两个3*3的矩阵（图1）去和原始图片作卷积，分别得到横向Ｇ（ｘ）和纵向Ｇ（ｙ）的梯度值，如果梯度值大于某一个阈值，则认为该点为边缘点\n\nGx方向的相关模板：\n![图1](https://img-blog.csdn.net/20171117094349330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\nGy方向的相关模板：\n![图2](https://img-blog.csdn.net/20171117094551248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)","source":"_posts/OpenCV/Canny边缘检测/OpenCV-Canny边缘检测.md","raw":"---\ntitle: Canny边缘检测算法\n---\n# Canny边缘检测算法基本原理\n<!--more-->\n1. 图像灰度化\n2. 高斯滤波\n3. 用一阶偏导的有限差分来计算梯度的幅值和方向\n4. 对梯度幅值进行非极大值抑制\n5. 用双阈值算法检测和连接边缘\n\n参考：\n[参考文档](https://blog.csdn.net/likezhaobin/article/details/6892176?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2-6892176-blog-117639872.pc_relevant_antiscanv3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2-6892176-blog-117639872.pc_relevant_antiscanv3&utm_relevant_index=5)\n\n# OpenCV中的实现\n代码实现：\n```\n\"\"\"\nCanny边缘检测的概念 - OpenCV函数: cv.Canny()\nCanny算法\n\"\"\"\n\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\people.jpg', 0)\n'''\nCanny(image, threshold1, threshold2, edges=None, apertureSize=None, L2gradient=None):\n.   @param image 8-bit input image.\n.   @param edges output edge map; single channels 8-bit image, which has the same size as image.\n.   @param threshold1 first threshold for the hysteresis procedure.(minVal)\n.   @param threshold2 second threshold for the hysteresis procedure.(maxVal, >maxVal ---> 255)\n.   @param apertureSize aperture size for the Sobel operator.\n.   @param L2gradient a flag, indicating whether a more accurate \\f$L_2\\f$ norm\\f$=\\sqrt{(dI/dx)^2 + (dI/dy)^2}\\f$\n    should be used to calculate the image gradient magnitude (L2gradient=true ), \n    or whether the default \\f$L_1\\f$ norm \\f$=|dI/dx|+|dI/dy|\\f$ is enough (L2gradient=false ).\n'''\nedges = cv.Canny(img, 50, 60)\nplt.subplot(121), plt.imshow(img, cmap='gray')\nplt.title('Original Image'), plt.xticks([]), plt.yticks([])\nplt.subplot(122), plt.imshow(edges, cmap='gray')\nplt.title('Edge Image'), plt.xticks([]), plt.yticks([])\nplt.show()\n\n```\n## Soble算子计算梯度\nsobel算子主要用于获得数字图像的一阶梯度，常见的应用和物理意义是边缘检测。\n原理：\n算子使用两个3*3的矩阵（图1）算子使用两个3*3的矩阵（图1）去和原始图片作卷积，分别得到横向Ｇ（ｘ）和纵向Ｇ（ｙ）的梯度值，如果梯度值大于某一个阈值，则认为该点为边缘点\n\nGx方向的相关模板：\n![图1](https://img-blog.csdn.net/20171117094349330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\nGy方向的相关模板：\n![图2](https://img-blog.csdn.net/20171117094551248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)","slug":"OpenCV/Canny边缘检测/OpenCV-Canny边缘检测","published":1,"date":"2022-05-26T02:47:40.305Z","updated":"2022-05-26T03:12:06.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepk001368urdksc3ztr","content":"<h1 id=\"Canny边缘检测算法基本原理\"><a href=\"#Canny边缘检测算法基本原理\" class=\"headerlink\" title=\"Canny边缘检测算法基本原理\"></a>Canny边缘检测算法基本原理</h1><span id=\"more\"></span>\n<ol>\n<li>图像灰度化</li>\n<li>高斯滤波</li>\n<li>用一阶偏导的有限差分来计算梯度的幅值和方向</li>\n<li>对梯度幅值进行非极大值抑制</li>\n<li>用双阈值算法检测和连接边缘</li>\n</ol>\n<p>参考：<br><a href=\"https://blog.csdn.net/likezhaobin/article/details/6892176?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-6892176-blog-117639872.pc_relevant_antiscanv3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-6892176-blog-117639872.pc_relevant_antiscanv3&utm_relevant_index=5\">参考文档</a></p>\n<h1 id=\"OpenCV中的实现\"><a href=\"#OpenCV中的实现\" class=\"headerlink\" title=\"OpenCV中的实现\"></a>OpenCV中的实现</h1><p>代码实现：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">Canny边缘检测的概念 - OpenCV函数: cv.Canny()</span><br><span class=\"line\">Canny算法</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\people.jpg&#x27;, 0)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">Canny(image, threshold1, threshold2, edges=None, apertureSize=None, L2gradient=None):</span><br><span class=\"line\">.   @param image 8-bit input image.</span><br><span class=\"line\">.   @param edges output edge map; single channels 8-bit image, which has the same size as image.</span><br><span class=\"line\">.   @param threshold1 first threshold for the hysteresis procedure.(minVal)</span><br><span class=\"line\">.   @param threshold2 second threshold for the hysteresis procedure.(maxVal, &gt;maxVal ---&gt; 255)</span><br><span class=\"line\">.   @param apertureSize aperture size for the Sobel operator.</span><br><span class=\"line\">.   @param L2gradient a flag, indicating whether a more accurate \\f$L_2\\f$ norm\\f$=\\sqrt&#123;(dI/dx)^2 + (dI/dy)^2&#125;\\f$</span><br><span class=\"line\">    should be used to calculate the image gradient magnitude (L2gradient=true ), </span><br><span class=\"line\">    or whether the default \\f$L_1\\f$ norm \\f$=|dI/dx|+|dI/dy|\\f$ is enough (L2gradient=false ).</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">edges = cv.Canny(img, 50, 60)</span><br><span class=\"line\">plt.subplot(121), plt.imshow(img, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Original Image&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.subplot(122), plt.imshow(edges, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Edge Image&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"Soble算子计算梯度\"><a href=\"#Soble算子计算梯度\" class=\"headerlink\" title=\"Soble算子计算梯度\"></a>Soble算子计算梯度</h2><p>sobel算子主要用于获得数字图像的一阶梯度，常见的应用和物理意义是边缘检测。<br>原理：<br>算子使用两个3<em>3的矩阵（图1）算子使用两个3</em>3的矩阵（图1）去和原始图片作卷积，分别得到横向Ｇ（ｘ）和纵向Ｇ（ｙ）的梯度值，如果梯度值大于某一个阈值，则认为该点为边缘点</p>\n<p>Gx方向的相关模板：<br><img src=\"https://img-blog.csdn.net/20171117094349330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"图1\"></p>\n<p>Gy方向的相关模板：<br><img src=\"https://img-blog.csdn.net/20171117094551248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"图2\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Canny边缘检测算法基本原理\"><a href=\"#Canny边缘检测算法基本原理\" class=\"headerlink\" title=\"Canny边缘检测算法基本原理\"></a>Canny边缘检测算法基本原理</h1>","more":"<ol>\n<li>图像灰度化</li>\n<li>高斯滤波</li>\n<li>用一阶偏导的有限差分来计算梯度的幅值和方向</li>\n<li>对梯度幅值进行非极大值抑制</li>\n<li>用双阈值算法检测和连接边缘</li>\n</ol>\n<p>参考：<br><a href=\"https://blog.csdn.net/likezhaobin/article/details/6892176?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-6892176-blog-117639872.pc_relevant_antiscanv3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-2-6892176-blog-117639872.pc_relevant_antiscanv3&utm_relevant_index=5\">参考文档</a></p>\n<h1 id=\"OpenCV中的实现\"><a href=\"#OpenCV中的实现\" class=\"headerlink\" title=\"OpenCV中的实现\"></a>OpenCV中的实现</h1><p>代码实现：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">Canny边缘检测的概念 - OpenCV函数: cv.Canny()</span><br><span class=\"line\">Canny算法</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\people.jpg&#x27;, 0)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">Canny(image, threshold1, threshold2, edges=None, apertureSize=None, L2gradient=None):</span><br><span class=\"line\">.   @param image 8-bit input image.</span><br><span class=\"line\">.   @param edges output edge map; single channels 8-bit image, which has the same size as image.</span><br><span class=\"line\">.   @param threshold1 first threshold for the hysteresis procedure.(minVal)</span><br><span class=\"line\">.   @param threshold2 second threshold for the hysteresis procedure.(maxVal, &gt;maxVal ---&gt; 255)</span><br><span class=\"line\">.   @param apertureSize aperture size for the Sobel operator.</span><br><span class=\"line\">.   @param L2gradient a flag, indicating whether a more accurate \\f$L_2\\f$ norm\\f$=\\sqrt&#123;(dI/dx)^2 + (dI/dy)^2&#125;\\f$</span><br><span class=\"line\">    should be used to calculate the image gradient magnitude (L2gradient=true ), </span><br><span class=\"line\">    or whether the default \\f$L_1\\f$ norm \\f$=|dI/dx|+|dI/dy|\\f$ is enough (L2gradient=false ).</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">edges = cv.Canny(img, 50, 60)</span><br><span class=\"line\">plt.subplot(121), plt.imshow(img, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Original Image&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.subplot(122), plt.imshow(edges, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Edge Image&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"Soble算子计算梯度\"><a href=\"#Soble算子计算梯度\" class=\"headerlink\" title=\"Soble算子计算梯度\"></a>Soble算子计算梯度</h2><p>sobel算子主要用于获得数字图像的一阶梯度，常见的应用和物理意义是边缘检测。<br>原理：<br>算子使用两个3<em>3的矩阵（图1）算子使用两个3</em>3的矩阵（图1）去和原始图片作卷积，分别得到横向Ｇ（ｘ）和纵向Ｇ（ｙ）的梯度值，如果梯度值大于某一个阈值，则认为该点为边缘点</p>\n<p>Gx方向的相关模板：<br><img src=\"https://img-blog.csdn.net/20171117094349330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"图1\"></p>\n<p>Gy方向的相关模板：<br><img src=\"https://img-blog.csdn.net/20171117094551248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"图2\"></p>"},{"title":"图像梯度算子推导（laplacian算子）","_content":"# 图像梯度理解\n<!--more-->\n参考链接：\n[图像梯度理解1](https://blog.csdn.net/qq_36622009/article/details/102900447)\n[图像梯度理解2](https://blog.csdn.net/saltriver/article/details/78987096)\n[图像梯度理解3](https://blog.csdn.net/u011754972/article/details/121783295?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-121783295-blog-77775029.pc_relevant_default&spm=1001.2101.3001.4242.4&utm_relevant_index=8)\n\n# 数学推理\n一阶导数定义：\n![一阶导数](https://s3.bmp.ovh/imgs/2022/06/02/20066692cad13396.jpg)\n\n二阶导数定义：\n![二阶导数](https://s3.bmp.ovh/imgs/2022/06/02/c33ba615e88030e9.jpg)\n\n在数字图像处理中，像素点是离散的，并且最小的间距为1，也就是相邻像素之间距离为1，所以Δx最趋近于0的取值是1，即Δx = 1\n所以推出：\n![一阶导1](https://s3.bmp.ovh/imgs/2022/06/02/645338e2d28015d4.jpg)\n![二阶导1](https://s3.bmp.ovh/imgs/2022/06/02/fa5e5e987d69b1c6.jpg)\n由(1)(2)和(4)(5)得出：\n![](https://s3.bmp.ovh/imgs/2022/06/02/7bc33b621e053118.jpg)\n![](https://i.niupic.com/images/2022/06/02/a0fu.jpg)\n\n将 x=x+1 、x=x-1 分别代入(1)然后再代入二阶导的公式得出：\n![](https://i.niupic.com/images/2022/06/02/a0fy.jpg)\n![](https://i.niupic.com/images/2022/06/02/a0fz.jpg)\n\n我们看到(9)和(10)都是二阶导，但是他们相差2倍的关系。我们的目的是找到边缘，边缘就是该像素位置的一阶导(方向导数)最大或者说梯度(因为方向导数模最大的方向就是梯度方向)，要使得一阶导最大(即取极值)，就要求二阶导等于0时，所以，这个系数并不影响。而二阶导为0，就是公式(10)等于0。\n二阶导为0时，是极值，既可以极大值，也可以极小值，极小值就是像素值为0了。如果一张图的非细节部分的像素全为100的话，那么非细节部分像素的二阶导也为0。\n\n\n\n\n[参考链接](https://blog.csdn.net/u011754972/article/details/121783295?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-121783295-blog-77775029.pc_relevant_default&spm=1001.2101.3001.4242.4&utm_relevant_index=8)","source":"_posts/OpenCV/Canny边缘检测/OpenCV-边缘检测数学推导.md","raw":"---\ntitle: 图像梯度算子推导（laplacian算子）\n---\n# 图像梯度理解\n<!--more-->\n参考链接：\n[图像梯度理解1](https://blog.csdn.net/qq_36622009/article/details/102900447)\n[图像梯度理解2](https://blog.csdn.net/saltriver/article/details/78987096)\n[图像梯度理解3](https://blog.csdn.net/u011754972/article/details/121783295?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-121783295-blog-77775029.pc_relevant_default&spm=1001.2101.3001.4242.4&utm_relevant_index=8)\n\n# 数学推理\n一阶导数定义：\n![一阶导数](https://s3.bmp.ovh/imgs/2022/06/02/20066692cad13396.jpg)\n\n二阶导数定义：\n![二阶导数](https://s3.bmp.ovh/imgs/2022/06/02/c33ba615e88030e9.jpg)\n\n在数字图像处理中，像素点是离散的，并且最小的间距为1，也就是相邻像素之间距离为1，所以Δx最趋近于0的取值是1，即Δx = 1\n所以推出：\n![一阶导1](https://s3.bmp.ovh/imgs/2022/06/02/645338e2d28015d4.jpg)\n![二阶导1](https://s3.bmp.ovh/imgs/2022/06/02/fa5e5e987d69b1c6.jpg)\n由(1)(2)和(4)(5)得出：\n![](https://s3.bmp.ovh/imgs/2022/06/02/7bc33b621e053118.jpg)\n![](https://i.niupic.com/images/2022/06/02/a0fu.jpg)\n\n将 x=x+1 、x=x-1 分别代入(1)然后再代入二阶导的公式得出：\n![](https://i.niupic.com/images/2022/06/02/a0fy.jpg)\n![](https://i.niupic.com/images/2022/06/02/a0fz.jpg)\n\n我们看到(9)和(10)都是二阶导，但是他们相差2倍的关系。我们的目的是找到边缘，边缘就是该像素位置的一阶导(方向导数)最大或者说梯度(因为方向导数模最大的方向就是梯度方向)，要使得一阶导最大(即取极值)，就要求二阶导等于0时，所以，这个系数并不影响。而二阶导为0，就是公式(10)等于0。\n二阶导为0时，是极值，既可以极大值，也可以极小值，极小值就是像素值为0了。如果一张图的非细节部分的像素全为100的话，那么非细节部分像素的二阶导也为0。\n\n\n\n\n[参考链接](https://blog.csdn.net/u011754972/article/details/121783295?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-121783295-blog-77775029.pc_relevant_default&spm=1001.2101.3001.4242.4&utm_relevant_index=8)","slug":"OpenCV/Canny边缘检测/OpenCV-边缘检测数学推导","published":1,"date":"2022-06-02T06:02:39.190Z","updated":"2022-06-02T09:16:21.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepl001468urhmnn1uby","content":"<h1 id=\"图像梯度理解\"><a href=\"#图像梯度理解\" class=\"headerlink\" title=\"图像梯度理解\"></a>图像梯度理解</h1><span id=\"more\"></span>\n<p>参考链接：<br><a href=\"https://blog.csdn.net/qq_36622009/article/details/102900447\">图像梯度理解1</a><br><a href=\"https://blog.csdn.net/saltriver/article/details/78987096\">图像梯度理解2</a><br><a href=\"https://blog.csdn.net/u011754972/article/details/121783295?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-121783295-blog-77775029.pc_relevant_default&spm=1001.2101.3001.4242.4&utm_relevant_index=8\">图像梯度理解3</a></p>\n<h1 id=\"数学推理\"><a href=\"#数学推理\" class=\"headerlink\" title=\"数学推理\"></a>数学推理</h1><p>一阶导数定义：<br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/20066692cad13396.jpg\" alt=\"一阶导数\"></p>\n<p>二阶导数定义：<br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/c33ba615e88030e9.jpg\" alt=\"二阶导数\"></p>\n<p>在数字图像处理中，像素点是离散的，并且最小的间距为1，也就是相邻像素之间距离为1，所以Δx最趋近于0的取值是1，即Δx = 1<br>所以推出：<br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/645338e2d28015d4.jpg\" alt=\"一阶导1\"><br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/fa5e5e987d69b1c6.jpg\" alt=\"二阶导1\"><br>由(1)(2)和(4)(5)得出：<br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/7bc33b621e053118.jpg\"><br><img src=\"https://i.niupic.com/images/2022/06/02/a0fu.jpg\"></p>\n<p>将 x=x+1 、x=x-1 分别代入(1)然后再代入二阶导的公式得出：<br><img src=\"https://i.niupic.com/images/2022/06/02/a0fy.jpg\"><br><img src=\"https://i.niupic.com/images/2022/06/02/a0fz.jpg\"></p>\n<p>我们看到(9)和(10)都是二阶导，但是他们相差2倍的关系。我们的目的是找到边缘，边缘就是该像素位置的一阶导(方向导数)最大或者说梯度(因为方向导数模最大的方向就是梯度方向)，要使得一阶导最大(即取极值)，就要求二阶导等于0时，所以，这个系数并不影响。而二阶导为0，就是公式(10)等于0。<br>二阶导为0时，是极值，既可以极大值，也可以极小值，极小值就是像素值为0了。如果一张图的非细节部分的像素全为100的话，那么非细节部分像素的二阶导也为0。</p>\n<p><a href=\"https://blog.csdn.net/u011754972/article/details/121783295?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-121783295-blog-77775029.pc_relevant_default&spm=1001.2101.3001.4242.4&utm_relevant_index=8\">参考链接</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"图像梯度理解\"><a href=\"#图像梯度理解\" class=\"headerlink\" title=\"图像梯度理解\"></a>图像梯度理解</h1>","more":"<p>参考链接：<br><a href=\"https://blog.csdn.net/qq_36622009/article/details/102900447\">图像梯度理解1</a><br><a href=\"https://blog.csdn.net/saltriver/article/details/78987096\">图像梯度理解2</a><br><a href=\"https://blog.csdn.net/u011754972/article/details/121783295?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-121783295-blog-77775029.pc_relevant_default&spm=1001.2101.3001.4242.4&utm_relevant_index=8\">图像梯度理解3</a></p>\n<h1 id=\"数学推理\"><a href=\"#数学推理\" class=\"headerlink\" title=\"数学推理\"></a>数学推理</h1><p>一阶导数定义：<br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/20066692cad13396.jpg\" alt=\"一阶导数\"></p>\n<p>二阶导数定义：<br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/c33ba615e88030e9.jpg\" alt=\"二阶导数\"></p>\n<p>在数字图像处理中，像素点是离散的，并且最小的间距为1，也就是相邻像素之间距离为1，所以Δx最趋近于0的取值是1，即Δx = 1<br>所以推出：<br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/645338e2d28015d4.jpg\" alt=\"一阶导1\"><br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/fa5e5e987d69b1c6.jpg\" alt=\"二阶导1\"><br>由(1)(2)和(4)(5)得出：<br><img src=\"https://s3.bmp.ovh/imgs/2022/06/02/7bc33b621e053118.jpg\"><br><img src=\"https://i.niupic.com/images/2022/06/02/a0fu.jpg\"></p>\n<p>将 x=x+1 、x=x-1 分别代入(1)然后再代入二阶导的公式得出：<br><img src=\"https://i.niupic.com/images/2022/06/02/a0fy.jpg\"><br><img src=\"https://i.niupic.com/images/2022/06/02/a0fz.jpg\"></p>\n<p>我们看到(9)和(10)都是二阶导，但是他们相差2倍的关系。我们的目的是找到边缘，边缘就是该像素位置的一阶导(方向导数)最大或者说梯度(因为方向导数模最大的方向就是梯度方向)，要使得一阶导最大(即取极值)，就要求二阶导等于0时，所以，这个系数并不影响。而二阶导为0，就是公式(10)等于0。<br>二阶导为0时，是极值，既可以极大值，也可以极小值，极小值就是像素值为0了。如果一张图的非细节部分的像素全为100的话，那么非细节部分像素的二阶导也为0。</p>\n<p><a href=\"https://blog.csdn.net/u011754972/article/details/121783295?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-5-121783295-blog-77775029.pc_relevant_default&spm=1001.2101.3001.4242.4&utm_relevant_index=8\">参考链接</a></p>"},{"title":"基于OpenCV+mediapipe实现简单的手势识别","_content":"# 基于OpenCV+mediapipe实现简单的手势识别\n一开始学习OpenCV就是想做一个手势识别和人脸识别小程序，结果谷歌已经有开源的mediapipe库了，今天看到就去了解了一下，并根据这个库找到了一个大佬写的手势识别小程序，记录下来学习学习。\n大佬代码如下:\n<!--more-->\n```\nimport cv2\nimport mediapipe as mp\nimport time\n\n# 打开计算机自带摄像头\ncap = cv2.VideoCapture(0)\n\nmpHands = mp.solutions.hands\nhands = mpHands.Hands()  # 设置参数，详见 hands.py 中的 __init__\nmpDraw = mp.solutions.drawing_utils  # 将检测出的手上的标记点连接起来\n\n# 定义时间用于后边的fps计算\npTime = 0\ncTime = 0\n\nwhile True:\n    success, img = cap.read()\n    img = cv2.flip(img, 1)  # 图像翻转\n    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # 将BGR格式图像转换为RGB\n    results = hands.process(imgRGB)  # 对输入图像进行处理，探索图像中是否有手\n    # print(results.multi_hand_landmarks)  # 如果有手，输出手所有0~20个标记点的比例坐标，如果没有，输出None\n    if results.multi_hand_landmarks:\n        for handLms in results.multi_hand_landmarks:  # 捕捉画面中的每一只手\n            for id, lm in enumerate(handLms.landmark):\n                # print(id, lm)\n                h, w, c = img.shape\n                cx, cy = int(lm.x * w), int(lm.y * h)  # 根据比例还原出每一个标记点的像素坐标\n                print(id, cx, cy)  # 根据手上标记点的id打印出其相应所在图像中中的像素位置\n                if id == 4:  # 可以根据手上标记点的id获得任意id对应的标记点的信息\n                    cv2.circle(img, (cx, cy), 10, (255, 0, 255), cv2.FILLED)  # 这里加粗强调了大拇指上的一个标记点\n\n            mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)  # 给画面中的每一只手进行标点、连线的操作\n\n    # 得到fps\n    cTime = time.time()\n    fps = 1/(cTime - pTime)\n    pTime = cTime\n    # 在画面上显示fps\n    cv2.putText(img, 'FPS:' + str(int(fps)), (10, 70), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)\n    cv2.imshow(\"Image\", img)\n    key = cv2.waitKey(1)    # 自动刷新\n    if key == 27:\n        break\ncv2.destroyAllWindows()\n\n```\n[大佬链接](https://blog.csdn.net/weixin_40247876/article/details/117032959?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-117032959-blog-116183404.pc_relevant_default&spm=1001.2101.3001.4242.2&utm_relevant_index=4)","source":"_posts/OpenCV/OpenCV小项目/OpenCV+mediapipe实现简单手势识别.md","raw":"---\ntitle: 基于OpenCV+mediapipe实现简单的手势识别\n---\n# 基于OpenCV+mediapipe实现简单的手势识别\n一开始学习OpenCV就是想做一个手势识别和人脸识别小程序，结果谷歌已经有开源的mediapipe库了，今天看到就去了解了一下，并根据这个库找到了一个大佬写的手势识别小程序，记录下来学习学习。\n大佬代码如下:\n<!--more-->\n```\nimport cv2\nimport mediapipe as mp\nimport time\n\n# 打开计算机自带摄像头\ncap = cv2.VideoCapture(0)\n\nmpHands = mp.solutions.hands\nhands = mpHands.Hands()  # 设置参数，详见 hands.py 中的 __init__\nmpDraw = mp.solutions.drawing_utils  # 将检测出的手上的标记点连接起来\n\n# 定义时间用于后边的fps计算\npTime = 0\ncTime = 0\n\nwhile True:\n    success, img = cap.read()\n    img = cv2.flip(img, 1)  # 图像翻转\n    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # 将BGR格式图像转换为RGB\n    results = hands.process(imgRGB)  # 对输入图像进行处理，探索图像中是否有手\n    # print(results.multi_hand_landmarks)  # 如果有手，输出手所有0~20个标记点的比例坐标，如果没有，输出None\n    if results.multi_hand_landmarks:\n        for handLms in results.multi_hand_landmarks:  # 捕捉画面中的每一只手\n            for id, lm in enumerate(handLms.landmark):\n                # print(id, lm)\n                h, w, c = img.shape\n                cx, cy = int(lm.x * w), int(lm.y * h)  # 根据比例还原出每一个标记点的像素坐标\n                print(id, cx, cy)  # 根据手上标记点的id打印出其相应所在图像中中的像素位置\n                if id == 4:  # 可以根据手上标记点的id获得任意id对应的标记点的信息\n                    cv2.circle(img, (cx, cy), 10, (255, 0, 255), cv2.FILLED)  # 这里加粗强调了大拇指上的一个标记点\n\n            mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)  # 给画面中的每一只手进行标点、连线的操作\n\n    # 得到fps\n    cTime = time.time()\n    fps = 1/(cTime - pTime)\n    pTime = cTime\n    # 在画面上显示fps\n    cv2.putText(img, 'FPS:' + str(int(fps)), (10, 70), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)\n    cv2.imshow(\"Image\", img)\n    key = cv2.waitKey(1)    # 自动刷新\n    if key == 27:\n        break\ncv2.destroyAllWindows()\n\n```\n[大佬链接](https://blog.csdn.net/weixin_40247876/article/details/117032959?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-117032959-blog-116183404.pc_relevant_default&spm=1001.2101.3001.4242.2&utm_relevant_index=4)","slug":"OpenCV/OpenCV小项目/OpenCV+mediapipe实现简单手势识别","published":1,"date":"2022-05-25T10:06:34.602Z","updated":"2022-05-12T08:43:30.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepm001568urhjs60ud9","content":"<h1 id=\"基于OpenCV-mediapipe实现简单的手势识别\"><a href=\"#基于OpenCV-mediapipe实现简单的手势识别\" class=\"headerlink\" title=\"基于OpenCV+mediapipe实现简单的手势识别\"></a>基于OpenCV+mediapipe实现简单的手势识别</h1><p>一开始学习OpenCV就是想做一个手势识别和人脸识别小程序，结果谷歌已经有开源的mediapipe库了，今天看到就去了解了一下，并根据这个库找到了一个大佬写的手势识别小程序，记录下来学习学习。<br>大佬代码如下:</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2</span><br><span class=\"line\">import mediapipe as mp</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"># 打开计算机自带摄像头</span><br><span class=\"line\">cap = cv2.VideoCapture(0)</span><br><span class=\"line\"></span><br><span class=\"line\">mpHands = mp.solutions.hands</span><br><span class=\"line\">hands = mpHands.Hands()  # 设置参数，详见 hands.py 中的 __init__</span><br><span class=\"line\">mpDraw = mp.solutions.drawing_utils  # 将检测出的手上的标记点连接起来</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义时间用于后边的fps计算</span><br><span class=\"line\">pTime = 0</span><br><span class=\"line\">cTime = 0</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">    success, img = cap.read()</span><br><span class=\"line\">    img = cv2.flip(img, 1)  # 图像翻转</span><br><span class=\"line\">    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # 将BGR格式图像转换为RGB</span><br><span class=\"line\">    results = hands.process(imgRGB)  # 对输入图像进行处理，探索图像中是否有手</span><br><span class=\"line\">    # print(results.multi_hand_landmarks)  # 如果有手，输出手所有0~20个标记点的比例坐标，如果没有，输出None</span><br><span class=\"line\">    if results.multi_hand_landmarks:</span><br><span class=\"line\">        for handLms in results.multi_hand_landmarks:  # 捕捉画面中的每一只手</span><br><span class=\"line\">            for id, lm in enumerate(handLms.landmark):</span><br><span class=\"line\">                # print(id, lm)</span><br><span class=\"line\">                h, w, c = img.shape</span><br><span class=\"line\">                cx, cy = int(lm.x * w), int(lm.y * h)  # 根据比例还原出每一个标记点的像素坐标</span><br><span class=\"line\">                print(id, cx, cy)  # 根据手上标记点的id打印出其相应所在图像中中的像素位置</span><br><span class=\"line\">                if id == 4:  # 可以根据手上标记点的id获得任意id对应的标记点的信息</span><br><span class=\"line\">                    cv2.circle(img, (cx, cy), 10, (255, 0, 255), cv2.FILLED)  # 这里加粗强调了大拇指上的一个标记点</span><br><span class=\"line\"></span><br><span class=\"line\">            mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)  # 给画面中的每一只手进行标点、连线的操作</span><br><span class=\"line\"></span><br><span class=\"line\">    # 得到fps</span><br><span class=\"line\">    cTime = time.time()</span><br><span class=\"line\">    fps = 1/(cTime - pTime)</span><br><span class=\"line\">    pTime = cTime</span><br><span class=\"line\">    # 在画面上显示fps</span><br><span class=\"line\">    cv2.putText(img, &#x27;FPS:&#x27; + str(int(fps)), (10, 70), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)</span><br><span class=\"line\">    cv2.imshow(&quot;Image&quot;, img)</span><br><span class=\"line\">    key = cv2.waitKey(1)    # 自动刷新</span><br><span class=\"line\">    if key == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/weixin_40247876/article/details/117032959?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-117032959-blog-116183404.pc_relevant_default&spm=1001.2101.3001.4242.2&utm_relevant_index=4\">大佬链接</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"基于OpenCV-mediapipe实现简单的手势识别\"><a href=\"#基于OpenCV-mediapipe实现简单的手势识别\" class=\"headerlink\" title=\"基于OpenCV+mediapipe实现简单的手势识别\"></a>基于OpenCV+mediapipe实现简单的手势识别</h1><p>一开始学习OpenCV就是想做一个手势识别和人脸识别小程序，结果谷歌已经有开源的mediapipe库了，今天看到就去了解了一下，并根据这个库找到了一个大佬写的手势识别小程序，记录下来学习学习。<br>大佬代码如下:</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2</span><br><span class=\"line\">import mediapipe as mp</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"># 打开计算机自带摄像头</span><br><span class=\"line\">cap = cv2.VideoCapture(0)</span><br><span class=\"line\"></span><br><span class=\"line\">mpHands = mp.solutions.hands</span><br><span class=\"line\">hands = mpHands.Hands()  # 设置参数，详见 hands.py 中的 __init__</span><br><span class=\"line\">mpDraw = mp.solutions.drawing_utils  # 将检测出的手上的标记点连接起来</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义时间用于后边的fps计算</span><br><span class=\"line\">pTime = 0</span><br><span class=\"line\">cTime = 0</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">    success, img = cap.read()</span><br><span class=\"line\">    img = cv2.flip(img, 1)  # 图像翻转</span><br><span class=\"line\">    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # 将BGR格式图像转换为RGB</span><br><span class=\"line\">    results = hands.process(imgRGB)  # 对输入图像进行处理，探索图像中是否有手</span><br><span class=\"line\">    # print(results.multi_hand_landmarks)  # 如果有手，输出手所有0~20个标记点的比例坐标，如果没有，输出None</span><br><span class=\"line\">    if results.multi_hand_landmarks:</span><br><span class=\"line\">        for handLms in results.multi_hand_landmarks:  # 捕捉画面中的每一只手</span><br><span class=\"line\">            for id, lm in enumerate(handLms.landmark):</span><br><span class=\"line\">                # print(id, lm)</span><br><span class=\"line\">                h, w, c = img.shape</span><br><span class=\"line\">                cx, cy = int(lm.x * w), int(lm.y * h)  # 根据比例还原出每一个标记点的像素坐标</span><br><span class=\"line\">                print(id, cx, cy)  # 根据手上标记点的id打印出其相应所在图像中中的像素位置</span><br><span class=\"line\">                if id == 4:  # 可以根据手上标记点的id获得任意id对应的标记点的信息</span><br><span class=\"line\">                    cv2.circle(img, (cx, cy), 10, (255, 0, 255), cv2.FILLED)  # 这里加粗强调了大拇指上的一个标记点</span><br><span class=\"line\"></span><br><span class=\"line\">            mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)  # 给画面中的每一只手进行标点、连线的操作</span><br><span class=\"line\"></span><br><span class=\"line\">    # 得到fps</span><br><span class=\"line\">    cTime = time.time()</span><br><span class=\"line\">    fps = 1/(cTime - pTime)</span><br><span class=\"line\">    pTime = cTime</span><br><span class=\"line\">    # 在画面上显示fps</span><br><span class=\"line\">    cv2.putText(img, &#x27;FPS:&#x27; + str(int(fps)), (10, 70), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)</span><br><span class=\"line\">    cv2.imshow(&quot;Image&quot;, img)</span><br><span class=\"line\">    key = cv2.waitKey(1)    # 自动刷新</span><br><span class=\"line\">    if key == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/weixin_40247876/article/details/117032959?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-117032959-blog-116183404.pc_relevant_default&spm=1001.2101.3001.4242.2&utm_relevant_index=4\">大佬链接</a></p>"},{"title":"OpenCV-ORC手写数字识别","_content":"# OpenCV-ORC手写数字识别\n## 前言\n<!--more-->\nOCR（optical character recognition）文字识别是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，\n然后用字符识别方法将形状翻译成计算机文字的过程；即，对文本资料进行扫描，然后对图像文件进行分析处理，获取文字及版面信息的过程。\n如何除错或利用辅助信息提高识别正确率，是OCR最重要的课题。\n衡量一个OCR系统性能好坏的主要指标有：拒识率、误识率、识别速度、用户界面的友好性，产品的稳定性，易用性及可行性等。\n————百度百科\n## 代码实现\n\n```\nimport numpy as np\nimport cv2 as cv\n\nimg = cv.imread(r'E:\\opencv-4.5.5\\opencv-4.5.5\\samples\\data\\digits.png')\ngray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\n# print(gray.shape)       # shape(1000, 2000), size = 2000000\n# 现在我们将图像分割为5000个单元格，每个单元格为20x20\n'''\nnp.hsplit(row, 100)--->沿垂直方向拆分row矩阵，拆分为100个\nnp.vsplit(gray, 50)--->沿水平方向拆分gray矩阵，拆分成50个\n'''\ncells = [np.hsplit(row, 100) for row in np.vsplit(gray, 50)]\n# 使其成为一个Numpy数组。它的大小将是（50,100,20,20）三维\nx = np.array(cells)\n# 现在我们准备train_data和test_data。\n'''\nx[:, 0:50]--->取x矩阵中的前50列的元素-->size(50, 50, 20 , 20)\nreshape(-1, 400)--->将矩阵转化为400个元素一列的矩阵---->2500*400\ntest同理\n'''\ntrain = x[:, 0:50].reshape(-1, 400).astype(np.float32)  # Size = (2500,400)\ntest = x[:, 50:100].reshape(-1, 400).astype(np.float32)  # Size = (2500,400)\n# 为训练和测试数据创建标签\nk = np.arange(10)\ntrain_labels = np.repeat(k, 250)[:, np.newaxis]\ntest_labels = train_labels.copy()\n# 初始化kNN，训练数据，然后使用k = 1的测试数据对其进行测试\nknn = cv.ml.KNearest_create()\nknn.train(train, cv.ml.ROW_SAMPLE, train_labels)\nret, result, neighbours, dist = knn.findNearest(test, k=5)\n# 现在，我们检查分类的准确性\n# 为此，将结果与test_labels进行比较，并检查哪个错误\n# print(test[0, :])\n# print(test[0, :].shape)\n# print(\"result:  {}\\n\".format(result))\n# print(\"neighbours:  {}\\n\".format(neighbours))\n# print(\"distance:  {}\\n\".format(dist))\nmatches = result == test_labels\ncorrect = np.count_nonzero(matches)\naccuracy = correct * 100.0 / result.size\nprint(accuracy)\n\n# 保存数据\nnp.savez('knn_data.npz', train=train, train_labels=train_labels)\n# 读取保存数据\nwith np.load('knn_data.npz') as data:\n    print(data.files)\n    train = data['train']\n    # print(train)\n    train_labels = data['train_labels']\n    # print(train_labels)\n\n```\n结果：\n![图例](https://s3.bmp.ovh/imgs/2022/05/26/e37dbc2b41f7d03d.jpg)","source":"_posts/OpenCV/OpenCV小项目/OpenCV-ORC手写数字识别.md","raw":"---\ntitle: OpenCV-ORC手写数字识别\n---\n# OpenCV-ORC手写数字识别\n## 前言\n<!--more-->\nOCR（optical character recognition）文字识别是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，\n然后用字符识别方法将形状翻译成计算机文字的过程；即，对文本资料进行扫描，然后对图像文件进行分析处理，获取文字及版面信息的过程。\n如何除错或利用辅助信息提高识别正确率，是OCR最重要的课题。\n衡量一个OCR系统性能好坏的主要指标有：拒识率、误识率、识别速度、用户界面的友好性，产品的稳定性，易用性及可行性等。\n————百度百科\n## 代码实现\n\n```\nimport numpy as np\nimport cv2 as cv\n\nimg = cv.imread(r'E:\\opencv-4.5.5\\opencv-4.5.5\\samples\\data\\digits.png')\ngray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\n# print(gray.shape)       # shape(1000, 2000), size = 2000000\n# 现在我们将图像分割为5000个单元格，每个单元格为20x20\n'''\nnp.hsplit(row, 100)--->沿垂直方向拆分row矩阵，拆分为100个\nnp.vsplit(gray, 50)--->沿水平方向拆分gray矩阵，拆分成50个\n'''\ncells = [np.hsplit(row, 100) for row in np.vsplit(gray, 50)]\n# 使其成为一个Numpy数组。它的大小将是（50,100,20,20）三维\nx = np.array(cells)\n# 现在我们准备train_data和test_data。\n'''\nx[:, 0:50]--->取x矩阵中的前50列的元素-->size(50, 50, 20 , 20)\nreshape(-1, 400)--->将矩阵转化为400个元素一列的矩阵---->2500*400\ntest同理\n'''\ntrain = x[:, 0:50].reshape(-1, 400).astype(np.float32)  # Size = (2500,400)\ntest = x[:, 50:100].reshape(-1, 400).astype(np.float32)  # Size = (2500,400)\n# 为训练和测试数据创建标签\nk = np.arange(10)\ntrain_labels = np.repeat(k, 250)[:, np.newaxis]\ntest_labels = train_labels.copy()\n# 初始化kNN，训练数据，然后使用k = 1的测试数据对其进行测试\nknn = cv.ml.KNearest_create()\nknn.train(train, cv.ml.ROW_SAMPLE, train_labels)\nret, result, neighbours, dist = knn.findNearest(test, k=5)\n# 现在，我们检查分类的准确性\n# 为此，将结果与test_labels进行比较，并检查哪个错误\n# print(test[0, :])\n# print(test[0, :].shape)\n# print(\"result:  {}\\n\".format(result))\n# print(\"neighbours:  {}\\n\".format(neighbours))\n# print(\"distance:  {}\\n\".format(dist))\nmatches = result == test_labels\ncorrect = np.count_nonzero(matches)\naccuracy = correct * 100.0 / result.size\nprint(accuracy)\n\n# 保存数据\nnp.savez('knn_data.npz', train=train, train_labels=train_labels)\n# 读取保存数据\nwith np.load('knn_data.npz') as data:\n    print(data.files)\n    train = data['train']\n    # print(train)\n    train_labels = data['train_labels']\n    # print(train_labels)\n\n```\n结果：\n![图例](https://s3.bmp.ovh/imgs/2022/05/26/e37dbc2b41f7d03d.jpg)","slug":"OpenCV/OpenCV小项目/OpenCV-ORC手写数字识别","published":1,"date":"2022-05-26T09:40:28.384Z","updated":"2022-05-26T10:07:15.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepn001668ur1cti8vla","content":"<h1 id=\"OpenCV-ORC手写数字识别\"><a href=\"#OpenCV-ORC手写数字识别\" class=\"headerlink\" title=\"OpenCV-ORC手写数字识别\"></a>OpenCV-ORC手写数字识别</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><span id=\"more\"></span>\n<p>OCR（optical character recognition）文字识别是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，<br>然后用字符识别方法将形状翻译成计算机文字的过程；即，对文本资料进行扫描，然后对图像文件进行分析处理，获取文字及版面信息的过程。<br>如何除错或利用辅助信息提高识别正确率，是OCR最重要的课题。<br>衡量一个OCR系统性能好坏的主要指标有：拒识率、误识率、识别速度、用户界面的友好性，产品的稳定性，易用性及可行性等。<br>————百度百科</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;E:\\opencv-4.5.5\\opencv-4.5.5\\samples\\data\\digits.png&#x27;)</span><br><span class=\"line\">gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class=\"line\"># print(gray.shape)       # shape(1000, 2000), size = 2000000</span><br><span class=\"line\"># 现在我们将图像分割为5000个单元格，每个单元格为20x20</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">np.hsplit(row, 100)---&gt;沿垂直方向拆分row矩阵，拆分为100个</span><br><span class=\"line\">np.vsplit(gray, 50)---&gt;沿水平方向拆分gray矩阵，拆分成50个</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cells = [np.hsplit(row, 100) for row in np.vsplit(gray, 50)]</span><br><span class=\"line\"># 使其成为一个Numpy数组。它的大小将是（50,100,20,20）三维</span><br><span class=\"line\">x = np.array(cells)</span><br><span class=\"line\"># 现在我们准备train_data和test_data。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">x[:, 0:50]---&gt;取x矩阵中的前50列的元素--&gt;size(50, 50, 20 , 20)</span><br><span class=\"line\">reshape(-1, 400)---&gt;将矩阵转化为400个元素一列的矩阵----&gt;2500*400</span><br><span class=\"line\">test同理</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">train = x[:, 0:50].reshape(-1, 400).astype(np.float32)  # Size = (2500,400)</span><br><span class=\"line\">test = x[:, 50:100].reshape(-1, 400).astype(np.float32)  # Size = (2500,400)</span><br><span class=\"line\"># 为训练和测试数据创建标签</span><br><span class=\"line\">k = np.arange(10)</span><br><span class=\"line\">train_labels = np.repeat(k, 250)[:, np.newaxis]</span><br><span class=\"line\">test_labels = train_labels.copy()</span><br><span class=\"line\"># 初始化kNN，训练数据，然后使用k = 1的测试数据对其进行测试</span><br><span class=\"line\">knn = cv.ml.KNearest_create()</span><br><span class=\"line\">knn.train(train, cv.ml.ROW_SAMPLE, train_labels)</span><br><span class=\"line\">ret, result, neighbours, dist = knn.findNearest(test, k=5)</span><br><span class=\"line\"># 现在，我们检查分类的准确性</span><br><span class=\"line\"># 为此，将结果与test_labels进行比较，并检查哪个错误</span><br><span class=\"line\"># print(test[0, :])</span><br><span class=\"line\"># print(test[0, :].shape)</span><br><span class=\"line\"># print(&quot;result:  &#123;&#125;\\n&quot;.format(result))</span><br><span class=\"line\"># print(&quot;neighbours:  &#123;&#125;\\n&quot;.format(neighbours))</span><br><span class=\"line\"># print(&quot;distance:  &#123;&#125;\\n&quot;.format(dist))</span><br><span class=\"line\">matches = result == test_labels</span><br><span class=\"line\">correct = np.count_nonzero(matches)</span><br><span class=\"line\">accuracy = correct * 100.0 / result.size</span><br><span class=\"line\">print(accuracy)</span><br><span class=\"line\"></span><br><span class=\"line\"># 保存数据</span><br><span class=\"line\">np.savez(&#x27;knn_data.npz&#x27;, train=train, train_labels=train_labels)</span><br><span class=\"line\"># 读取保存数据</span><br><span class=\"line\">with np.load(&#x27;knn_data.npz&#x27;) as data:</span><br><span class=\"line\">    print(data.files)</span><br><span class=\"line\">    train = data[&#x27;train&#x27;]</span><br><span class=\"line\">    # print(train)</span><br><span class=\"line\">    train_labels = data[&#x27;train_labels&#x27;]</span><br><span class=\"line\">    # print(train_labels)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>结果：<br><img src=\"https://s3.bmp.ovh/imgs/2022/05/26/e37dbc2b41f7d03d.jpg\" alt=\"图例\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-ORC手写数字识别\"><a href=\"#OpenCV-ORC手写数字识别\" class=\"headerlink\" title=\"OpenCV-ORC手写数字识别\"></a>OpenCV-ORC手写数字识别</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2>","more":"<p>OCR（optical character recognition）文字识别是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，<br>然后用字符识别方法将形状翻译成计算机文字的过程；即，对文本资料进行扫描，然后对图像文件进行分析处理，获取文字及版面信息的过程。<br>如何除错或利用辅助信息提高识别正确率，是OCR最重要的课题。<br>衡量一个OCR系统性能好坏的主要指标有：拒识率、误识率、识别速度、用户界面的友好性，产品的稳定性，易用性及可行性等。<br>————百度百科</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;E:\\opencv-4.5.5\\opencv-4.5.5\\samples\\data\\digits.png&#x27;)</span><br><span class=\"line\">gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class=\"line\"># print(gray.shape)       # shape(1000, 2000), size = 2000000</span><br><span class=\"line\"># 现在我们将图像分割为5000个单元格，每个单元格为20x20</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">np.hsplit(row, 100)---&gt;沿垂直方向拆分row矩阵，拆分为100个</span><br><span class=\"line\">np.vsplit(gray, 50)---&gt;沿水平方向拆分gray矩阵，拆分成50个</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cells = [np.hsplit(row, 100) for row in np.vsplit(gray, 50)]</span><br><span class=\"line\"># 使其成为一个Numpy数组。它的大小将是（50,100,20,20）三维</span><br><span class=\"line\">x = np.array(cells)</span><br><span class=\"line\"># 现在我们准备train_data和test_data。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">x[:, 0:50]---&gt;取x矩阵中的前50列的元素--&gt;size(50, 50, 20 , 20)</span><br><span class=\"line\">reshape(-1, 400)---&gt;将矩阵转化为400个元素一列的矩阵----&gt;2500*400</span><br><span class=\"line\">test同理</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">train = x[:, 0:50].reshape(-1, 400).astype(np.float32)  # Size = (2500,400)</span><br><span class=\"line\">test = x[:, 50:100].reshape(-1, 400).astype(np.float32)  # Size = (2500,400)</span><br><span class=\"line\"># 为训练和测试数据创建标签</span><br><span class=\"line\">k = np.arange(10)</span><br><span class=\"line\">train_labels = np.repeat(k, 250)[:, np.newaxis]</span><br><span class=\"line\">test_labels = train_labels.copy()</span><br><span class=\"line\"># 初始化kNN，训练数据，然后使用k = 1的测试数据对其进行测试</span><br><span class=\"line\">knn = cv.ml.KNearest_create()</span><br><span class=\"line\">knn.train(train, cv.ml.ROW_SAMPLE, train_labels)</span><br><span class=\"line\">ret, result, neighbours, dist = knn.findNearest(test, k=5)</span><br><span class=\"line\"># 现在，我们检查分类的准确性</span><br><span class=\"line\"># 为此，将结果与test_labels进行比较，并检查哪个错误</span><br><span class=\"line\"># print(test[0, :])</span><br><span class=\"line\"># print(test[0, :].shape)</span><br><span class=\"line\"># print(&quot;result:  &#123;&#125;\\n&quot;.format(result))</span><br><span class=\"line\"># print(&quot;neighbours:  &#123;&#125;\\n&quot;.format(neighbours))</span><br><span class=\"line\"># print(&quot;distance:  &#123;&#125;\\n&quot;.format(dist))</span><br><span class=\"line\">matches = result == test_labels</span><br><span class=\"line\">correct = np.count_nonzero(matches)</span><br><span class=\"line\">accuracy = correct * 100.0 / result.size</span><br><span class=\"line\">print(accuracy)</span><br><span class=\"line\"></span><br><span class=\"line\"># 保存数据</span><br><span class=\"line\">np.savez(&#x27;knn_data.npz&#x27;, train=train, train_labels=train_labels)</span><br><span class=\"line\"># 读取保存数据</span><br><span class=\"line\">with np.load(&#x27;knn_data.npz&#x27;) as data:</span><br><span class=\"line\">    print(data.files)</span><br><span class=\"line\">    train = data[&#x27;train&#x27;]</span><br><span class=\"line\">    # print(train)</span><br><span class=\"line\">    train_labels = data[&#x27;train_labels&#x27;]</span><br><span class=\"line\">    # print(train_labels)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>结果：<br><img src=\"https://s3.bmp.ovh/imgs/2022/05/26/e37dbc2b41f7d03d.jpg\" alt=\"图例\"></p>"},{"title":"OpenCV-手势控制电脑音量","_content":"# OpenCV-手势控制电脑音量\n代码来源：恩培大佬\n[https://gitcode.net/mirrors/enpeizhao/cvprojects?utm_source=csdn_github_accelerator](https://gitcode.net/mirrors/enpeizhao/cvprojects?utm_source=csdn_github_accelerator)\n<!--more-->\n代码实现：\n依赖库自己装\n```\n\"\"\"\nAuthor：enpei\nDate: 2021-11-16\n功能：手势操作电脑音量\n1、使用OpenCV读取摄像头视频流；\n2、识别手掌关键点像素坐标；\n3、根据拇指和食指指尖的坐标，利用勾股定理计算距离；\n4、将距离等比例转为音量大小，控制电脑音量\n\"\"\"\n\n# 导入OpenCV\nimport mailcap\n\nimport cv2\n# 导入mediapipe\nimport mediapipe as mp\n# 导入电脑音量控制模块\nfrom ctypes import cast, POINTER\nfrom comtypes import CLSCTX_ALL\nfrom pycaw.pycaw import AudioUtilities, IAudioEndpointVolume\n\n# 导入其他依赖包\nimport time\nimport math\nimport numpy as np\n\n\nclass HandControlVolume:\n    def __init__(self):\n        # 初始化medialpipe\n        self.mp_drawing = mp.solutions.drawing_utils\n        self.mp_drawing_styles = mp.solutions.drawing_styles\n        self.mp_hands = mp.solutions.hands\n\n        # 获取电脑音量范围\n        devices = AudioUtilities.GetSpeakers()\n        interface = devices.Activate(\n            IAudioEndpointVolume._iid_, CLSCTX_ALL, None)\n        self.volume = cast(interface, POINTER(IAudioEndpointVolume))\n        self.volume.SetMute(0, None)\n        self.volume_range = self.volume.GetVolumeRange()\n\n    # 主函数\n    def recognize(self):\n        # 计算刷新率\n        fpsTime = time.time()\n\n        # OpenCV读取视频流\n        cap = cv2.VideoCapture(0)\n        # 视频分辨率\n        resize_w = 640\n        resize_h = 480\n\n        # 画面显示初始化参数\n        rect_height = 0\n        rect_percent_text = 0\n\n        with self.mp_hands.Hands(min_detection_confidence=0.7,\n                                 min_tracking_confidence=0.5,\n                                 max_num_hands=2) as hands:\n            while cap.isOpened():\n                success, image = cap.read()\n                image = cv2.resize(image, (resize_w, resize_h))\n\n                if not success:\n                    print(\"空帧.\")\n                    continue\n\n                # 提高性能\n                image.flags.writeable = False\n                # 转为RGB\n                image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n                # 镜像\n                image = cv2.flip(image, 1)\n                # mediapipe模型处理\n                results = hands.process(image)\n\n                image.flags.writeable = True\n                image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)\n                # 判断是否有手掌\n                if results.multi_hand_landmarks:\n                    # 遍历每个手掌\n                    for hand_landmarks in results.multi_hand_landmarks:\n                        # 在画面标注手指\n                        self.mp_drawing.draw_landmarks(\n                            image,\n                            hand_landmarks,\n                            self.mp_hands.HAND_CONNECTIONS,\n                            self.mp_drawing_styles.get_default_hand_landmarks_style(),\n                            self.mp_drawing_styles.get_default_hand_connections_style())\n\n                        # 解析手指，存入各个手指坐标\n                        landmark_list = []\n                        for landmark_id, finger_axis in enumerate(\n                                hand_landmarks.landmark):\n                            landmark_list.append([\n                                landmark_id, finger_axis.x, finger_axis.y,\n                                finger_axis.z\n                            ])\n                        if landmark_list:\n                            # 获取大拇指指尖坐标\n                            thumb_finger_tip = landmark_list[4]\n                            thumb_finger_tip_x = math.ceil(thumb_finger_tip[1] * resize_w)\n                            thumb_finger_tip_y = math.ceil(thumb_finger_tip[2] * resize_h)\n                            # 获取食指指尖坐标\n                            index_finger_tip = landmark_list[8]\n                            index_finger_tip_x = math.ceil(index_finger_tip[1] * resize_w)\n                            index_finger_tip_y = math.ceil(index_finger_tip[2] * resize_h)\n                            # 中间点\n                            finger_middle_point = (thumb_finger_tip_x + index_finger_tip_x) // 2, (\n                                    thumb_finger_tip_y + index_finger_tip_y) // 2\n                            # print(thumb_finger_tip_x)\n                            thumb_finger_point = (thumb_finger_tip_x, thumb_finger_tip_y)\n                            index_finger_point = (index_finger_tip_x, index_finger_tip_y)\n                            # 画指尖2点\n                            image = cv2.circle(image, thumb_finger_point, 10, (255, 0, 255), -1)\n                            image = cv2.circle(image, index_finger_point, 10, (255, 0, 255), -1)\n                            image = cv2.circle(image, finger_middle_point, 10, (255, 0, 255), -1)\n                            # 画2点连线\n                            image = cv2.line(image, thumb_finger_point, index_finger_point, (255, 0, 255), 5)\n                            # 勾股定理计算长度\n                            line_len = math.hypot((index_finger_tip_x - thumb_finger_tip_x),\n                                                  (index_finger_tip_y - thumb_finger_tip_y))\n\n                            # 获取电脑最大最小音量\n                            min_volume = self.volume_range[0]\n                            max_volume = self.volume_range[1]\n                            # 将指尖长度映射到音量上\n                            vol = np.interp(line_len, [30, 190], [min_volume, max_volume])      # 根据自己实际修改代码\n                            # 将指尖长度映射到矩形显示上\n                            rect_height = np.interp(line_len, [30, 190], [0, 200])              # 根据自己实际修改代码\n                            rect_percent_text = np.interp(line_len, [30, 190], [0, 100])        # 根据自己实际修改代码\n\n                            # 设置电脑音量\n                            self.volume.SetMasterVolumeLevel(vol, None)\n\n                # 显示矩形\n                cv2.putText(image, str(math.ceil(rect_percent_text)) + \"%\", (10, 350),\n                            cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 0), 3)\n                image = cv2.rectangle(image, (30, 100), (70, 300), (255, 0, 0), 3)\n                image = cv2.rectangle(image, (30, math.ceil(300 - rect_height)), (70, 300), (255, 0, 0), -1)\n\n                # 显示刷新率FPS\n                cTime = time.time()\n                fps_text = 1 / (cTime - fpsTime)\n                fpsTime = cTime\n                cv2.putText(image, \"FPS: \" + str(int(fps_text)), (10, 70),\n                            cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 0), 3)\n                # 显示画面\n                cv2.imshow('MediaPipe Hands', image)\n                if cv2.waitKey(5) & 0xFF == 27 or cv2.getWindowProperty('MediaPipe Hands', cv2.WND_PROP_VISIBLE) < 1:\n                    break\n            cap.release()\n            cv2.destroyAllWindows()\n\n\n# 开始程序\ncontrol = HandControlVolume()\ncontrol.recognize()\n\n```","source":"_posts/OpenCV/OpenCV小项目/OpenCV-手势控制电脑音量.md","raw":"---\ntitle: OpenCV-手势控制电脑音量\n---\n# OpenCV-手势控制电脑音量\n代码来源：恩培大佬\n[https://gitcode.net/mirrors/enpeizhao/cvprojects?utm_source=csdn_github_accelerator](https://gitcode.net/mirrors/enpeizhao/cvprojects?utm_source=csdn_github_accelerator)\n<!--more-->\n代码实现：\n依赖库自己装\n```\n\"\"\"\nAuthor：enpei\nDate: 2021-11-16\n功能：手势操作电脑音量\n1、使用OpenCV读取摄像头视频流；\n2、识别手掌关键点像素坐标；\n3、根据拇指和食指指尖的坐标，利用勾股定理计算距离；\n4、将距离等比例转为音量大小，控制电脑音量\n\"\"\"\n\n# 导入OpenCV\nimport mailcap\n\nimport cv2\n# 导入mediapipe\nimport mediapipe as mp\n# 导入电脑音量控制模块\nfrom ctypes import cast, POINTER\nfrom comtypes import CLSCTX_ALL\nfrom pycaw.pycaw import AudioUtilities, IAudioEndpointVolume\n\n# 导入其他依赖包\nimport time\nimport math\nimport numpy as np\n\n\nclass HandControlVolume:\n    def __init__(self):\n        # 初始化medialpipe\n        self.mp_drawing = mp.solutions.drawing_utils\n        self.mp_drawing_styles = mp.solutions.drawing_styles\n        self.mp_hands = mp.solutions.hands\n\n        # 获取电脑音量范围\n        devices = AudioUtilities.GetSpeakers()\n        interface = devices.Activate(\n            IAudioEndpointVolume._iid_, CLSCTX_ALL, None)\n        self.volume = cast(interface, POINTER(IAudioEndpointVolume))\n        self.volume.SetMute(0, None)\n        self.volume_range = self.volume.GetVolumeRange()\n\n    # 主函数\n    def recognize(self):\n        # 计算刷新率\n        fpsTime = time.time()\n\n        # OpenCV读取视频流\n        cap = cv2.VideoCapture(0)\n        # 视频分辨率\n        resize_w = 640\n        resize_h = 480\n\n        # 画面显示初始化参数\n        rect_height = 0\n        rect_percent_text = 0\n\n        with self.mp_hands.Hands(min_detection_confidence=0.7,\n                                 min_tracking_confidence=0.5,\n                                 max_num_hands=2) as hands:\n            while cap.isOpened():\n                success, image = cap.read()\n                image = cv2.resize(image, (resize_w, resize_h))\n\n                if not success:\n                    print(\"空帧.\")\n                    continue\n\n                # 提高性能\n                image.flags.writeable = False\n                # 转为RGB\n                image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n                # 镜像\n                image = cv2.flip(image, 1)\n                # mediapipe模型处理\n                results = hands.process(image)\n\n                image.flags.writeable = True\n                image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)\n                # 判断是否有手掌\n                if results.multi_hand_landmarks:\n                    # 遍历每个手掌\n                    for hand_landmarks in results.multi_hand_landmarks:\n                        # 在画面标注手指\n                        self.mp_drawing.draw_landmarks(\n                            image,\n                            hand_landmarks,\n                            self.mp_hands.HAND_CONNECTIONS,\n                            self.mp_drawing_styles.get_default_hand_landmarks_style(),\n                            self.mp_drawing_styles.get_default_hand_connections_style())\n\n                        # 解析手指，存入各个手指坐标\n                        landmark_list = []\n                        for landmark_id, finger_axis in enumerate(\n                                hand_landmarks.landmark):\n                            landmark_list.append([\n                                landmark_id, finger_axis.x, finger_axis.y,\n                                finger_axis.z\n                            ])\n                        if landmark_list:\n                            # 获取大拇指指尖坐标\n                            thumb_finger_tip = landmark_list[4]\n                            thumb_finger_tip_x = math.ceil(thumb_finger_tip[1] * resize_w)\n                            thumb_finger_tip_y = math.ceil(thumb_finger_tip[2] * resize_h)\n                            # 获取食指指尖坐标\n                            index_finger_tip = landmark_list[8]\n                            index_finger_tip_x = math.ceil(index_finger_tip[1] * resize_w)\n                            index_finger_tip_y = math.ceil(index_finger_tip[2] * resize_h)\n                            # 中间点\n                            finger_middle_point = (thumb_finger_tip_x + index_finger_tip_x) // 2, (\n                                    thumb_finger_tip_y + index_finger_tip_y) // 2\n                            # print(thumb_finger_tip_x)\n                            thumb_finger_point = (thumb_finger_tip_x, thumb_finger_tip_y)\n                            index_finger_point = (index_finger_tip_x, index_finger_tip_y)\n                            # 画指尖2点\n                            image = cv2.circle(image, thumb_finger_point, 10, (255, 0, 255), -1)\n                            image = cv2.circle(image, index_finger_point, 10, (255, 0, 255), -1)\n                            image = cv2.circle(image, finger_middle_point, 10, (255, 0, 255), -1)\n                            # 画2点连线\n                            image = cv2.line(image, thumb_finger_point, index_finger_point, (255, 0, 255), 5)\n                            # 勾股定理计算长度\n                            line_len = math.hypot((index_finger_tip_x - thumb_finger_tip_x),\n                                                  (index_finger_tip_y - thumb_finger_tip_y))\n\n                            # 获取电脑最大最小音量\n                            min_volume = self.volume_range[0]\n                            max_volume = self.volume_range[1]\n                            # 将指尖长度映射到音量上\n                            vol = np.interp(line_len, [30, 190], [min_volume, max_volume])      # 根据自己实际修改代码\n                            # 将指尖长度映射到矩形显示上\n                            rect_height = np.interp(line_len, [30, 190], [0, 200])              # 根据自己实际修改代码\n                            rect_percent_text = np.interp(line_len, [30, 190], [0, 100])        # 根据自己实际修改代码\n\n                            # 设置电脑音量\n                            self.volume.SetMasterVolumeLevel(vol, None)\n\n                # 显示矩形\n                cv2.putText(image, str(math.ceil(rect_percent_text)) + \"%\", (10, 350),\n                            cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 0), 3)\n                image = cv2.rectangle(image, (30, 100), (70, 300), (255, 0, 0), 3)\n                image = cv2.rectangle(image, (30, math.ceil(300 - rect_height)), (70, 300), (255, 0, 0), -1)\n\n                # 显示刷新率FPS\n                cTime = time.time()\n                fps_text = 1 / (cTime - fpsTime)\n                fpsTime = cTime\n                cv2.putText(image, \"FPS: \" + str(int(fps_text)), (10, 70),\n                            cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 0), 3)\n                # 显示画面\n                cv2.imshow('MediaPipe Hands', image)\n                if cv2.waitKey(5) & 0xFF == 27 or cv2.getWindowProperty('MediaPipe Hands', cv2.WND_PROP_VISIBLE) < 1:\n                    break\n            cap.release()\n            cv2.destroyAllWindows()\n\n\n# 开始程序\ncontrol = HandControlVolume()\ncontrol.recognize()\n\n```","slug":"OpenCV/OpenCV小项目/OpenCV-手势控制电脑音量","published":1,"date":"2022-05-25T10:06:34.772Z","updated":"2022-05-16T07:33:34.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepo001768ur83r69fd9","content":"<h1 id=\"OpenCV-手势控制电脑音量\"><a href=\"#OpenCV-手势控制电脑音量\" class=\"headerlink\" title=\"OpenCV-手势控制电脑音量\"></a>OpenCV-手势控制电脑音量</h1><p>代码来源：恩培大佬<br><a href=\"https://gitcode.net/mirrors/enpeizhao/cvprojects?utm_source=csdn_github_accelerator\">https://gitcode.net/mirrors/enpeizhao/cvprojects?utm_source=csdn_github_accelerator</a></p>\n<span id=\"more\"></span>\n<p>代码实现：<br>依赖库自己装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">Author：enpei</span><br><span class=\"line\">Date: 2021-11-16</span><br><span class=\"line\">功能：手势操作电脑音量</span><br><span class=\"line\">1、使用OpenCV读取摄像头视频流；</span><br><span class=\"line\">2、识别手掌关键点像素坐标；</span><br><span class=\"line\">3、根据拇指和食指指尖的坐标，利用勾股定理计算距离；</span><br><span class=\"line\">4、将距离等比例转为音量大小，控制电脑音量</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 导入OpenCV</span><br><span class=\"line\">import mailcap</span><br><span class=\"line\"></span><br><span class=\"line\">import cv2</span><br><span class=\"line\"># 导入mediapipe</span><br><span class=\"line\">import mediapipe as mp</span><br><span class=\"line\"># 导入电脑音量控制模块</span><br><span class=\"line\">from ctypes import cast, POINTER</span><br><span class=\"line\">from comtypes import CLSCTX_ALL</span><br><span class=\"line\">from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume</span><br><span class=\"line\"></span><br><span class=\"line\"># 导入其他依赖包</span><br><span class=\"line\">import time</span><br><span class=\"line\">import math</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class HandControlVolume:</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        # 初始化medialpipe</span><br><span class=\"line\">        self.mp_drawing = mp.solutions.drawing_utils</span><br><span class=\"line\">        self.mp_drawing_styles = mp.solutions.drawing_styles</span><br><span class=\"line\">        self.mp_hands = mp.solutions.hands</span><br><span class=\"line\"></span><br><span class=\"line\">        # 获取电脑音量范围</span><br><span class=\"line\">        devices = AudioUtilities.GetSpeakers()</span><br><span class=\"line\">        interface = devices.Activate(</span><br><span class=\"line\">            IAudioEndpointVolume._iid_, CLSCTX_ALL, None)</span><br><span class=\"line\">        self.volume = cast(interface, POINTER(IAudioEndpointVolume))</span><br><span class=\"line\">        self.volume.SetMute(0, None)</span><br><span class=\"line\">        self.volume_range = self.volume.GetVolumeRange()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 主函数</span><br><span class=\"line\">    def recognize(self):</span><br><span class=\"line\">        # 计算刷新率</span><br><span class=\"line\">        fpsTime = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">        # OpenCV读取视频流</span><br><span class=\"line\">        cap = cv2.VideoCapture(0)</span><br><span class=\"line\">        # 视频分辨率</span><br><span class=\"line\">        resize_w = 640</span><br><span class=\"line\">        resize_h = 480</span><br><span class=\"line\"></span><br><span class=\"line\">        # 画面显示初始化参数</span><br><span class=\"line\">        rect_height = 0</span><br><span class=\"line\">        rect_percent_text = 0</span><br><span class=\"line\"></span><br><span class=\"line\">        with self.mp_hands.Hands(min_detection_confidence=0.7,</span><br><span class=\"line\">                                 min_tracking_confidence=0.5,</span><br><span class=\"line\">                                 max_num_hands=2) as hands:</span><br><span class=\"line\">            while cap.isOpened():</span><br><span class=\"line\">                success, image = cap.read()</span><br><span class=\"line\">                image = cv2.resize(image, (resize_w, resize_h))</span><br><span class=\"line\"></span><br><span class=\"line\">                if not success:</span><br><span class=\"line\">                    print(&quot;空帧.&quot;)</span><br><span class=\"line\">                    continue</span><br><span class=\"line\"></span><br><span class=\"line\">                # 提高性能</span><br><span class=\"line\">                image.flags.writeable = False</span><br><span class=\"line\">                # 转为RGB</span><br><span class=\"line\">                image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)</span><br><span class=\"line\">                # 镜像</span><br><span class=\"line\">                image = cv2.flip(image, 1)</span><br><span class=\"line\">                # mediapipe模型处理</span><br><span class=\"line\">                results = hands.process(image)</span><br><span class=\"line\"></span><br><span class=\"line\">                image.flags.writeable = True</span><br><span class=\"line\">                image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)</span><br><span class=\"line\">                # 判断是否有手掌</span><br><span class=\"line\">                if results.multi_hand_landmarks:</span><br><span class=\"line\">                    # 遍历每个手掌</span><br><span class=\"line\">                    for hand_landmarks in results.multi_hand_landmarks:</span><br><span class=\"line\">                        # 在画面标注手指</span><br><span class=\"line\">                        self.mp_drawing.draw_landmarks(</span><br><span class=\"line\">                            image,</span><br><span class=\"line\">                            hand_landmarks,</span><br><span class=\"line\">                            self.mp_hands.HAND_CONNECTIONS,</span><br><span class=\"line\">                            self.mp_drawing_styles.get_default_hand_landmarks_style(),</span><br><span class=\"line\">                            self.mp_drawing_styles.get_default_hand_connections_style())</span><br><span class=\"line\"></span><br><span class=\"line\">                        # 解析手指，存入各个手指坐标</span><br><span class=\"line\">                        landmark_list = []</span><br><span class=\"line\">                        for landmark_id, finger_axis in enumerate(</span><br><span class=\"line\">                                hand_landmarks.landmark):</span><br><span class=\"line\">                            landmark_list.append([</span><br><span class=\"line\">                                landmark_id, finger_axis.x, finger_axis.y,</span><br><span class=\"line\">                                finger_axis.z</span><br><span class=\"line\">                            ])</span><br><span class=\"line\">                        if landmark_list:</span><br><span class=\"line\">                            # 获取大拇指指尖坐标</span><br><span class=\"line\">                            thumb_finger_tip = landmark_list[4]</span><br><span class=\"line\">                            thumb_finger_tip_x = math.ceil(thumb_finger_tip[1] * resize_w)</span><br><span class=\"line\">                            thumb_finger_tip_y = math.ceil(thumb_finger_tip[2] * resize_h)</span><br><span class=\"line\">                            # 获取食指指尖坐标</span><br><span class=\"line\">                            index_finger_tip = landmark_list[8]</span><br><span class=\"line\">                            index_finger_tip_x = math.ceil(index_finger_tip[1] * resize_w)</span><br><span class=\"line\">                            index_finger_tip_y = math.ceil(index_finger_tip[2] * resize_h)</span><br><span class=\"line\">                            # 中间点</span><br><span class=\"line\">                            finger_middle_point = (thumb_finger_tip_x + index_finger_tip_x) // 2, (</span><br><span class=\"line\">                                    thumb_finger_tip_y + index_finger_tip_y) // 2</span><br><span class=\"line\">                            # print(thumb_finger_tip_x)</span><br><span class=\"line\">                            thumb_finger_point = (thumb_finger_tip_x, thumb_finger_tip_y)</span><br><span class=\"line\">                            index_finger_point = (index_finger_tip_x, index_finger_tip_y)</span><br><span class=\"line\">                            # 画指尖2点</span><br><span class=\"line\">                            image = cv2.circle(image, thumb_finger_point, 10, (255, 0, 255), -1)</span><br><span class=\"line\">                            image = cv2.circle(image, index_finger_point, 10, (255, 0, 255), -1)</span><br><span class=\"line\">                            image = cv2.circle(image, finger_middle_point, 10, (255, 0, 255), -1)</span><br><span class=\"line\">                            # 画2点连线</span><br><span class=\"line\">                            image = cv2.line(image, thumb_finger_point, index_finger_point, (255, 0, 255), 5)</span><br><span class=\"line\">                            # 勾股定理计算长度</span><br><span class=\"line\">                            line_len = math.hypot((index_finger_tip_x - thumb_finger_tip_x),</span><br><span class=\"line\">                                                  (index_finger_tip_y - thumb_finger_tip_y))</span><br><span class=\"line\"></span><br><span class=\"line\">                            # 获取电脑最大最小音量</span><br><span class=\"line\">                            min_volume = self.volume_range[0]</span><br><span class=\"line\">                            max_volume = self.volume_range[1]</span><br><span class=\"line\">                            # 将指尖长度映射到音量上</span><br><span class=\"line\">                            vol = np.interp(line_len, [30, 190], [min_volume, max_volume])      # 根据自己实际修改代码</span><br><span class=\"line\">                            # 将指尖长度映射到矩形显示上</span><br><span class=\"line\">                            rect_height = np.interp(line_len, [30, 190], [0, 200])              # 根据自己实际修改代码</span><br><span class=\"line\">                            rect_percent_text = np.interp(line_len, [30, 190], [0, 100])        # 根据自己实际修改代码</span><br><span class=\"line\"></span><br><span class=\"line\">                            # 设置电脑音量</span><br><span class=\"line\">                            self.volume.SetMasterVolumeLevel(vol, None)</span><br><span class=\"line\"></span><br><span class=\"line\">                # 显示矩形</span><br><span class=\"line\">                cv2.putText(image, str(math.ceil(rect_percent_text)) + &quot;%&quot;, (10, 350),</span><br><span class=\"line\">                            cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 0), 3)</span><br><span class=\"line\">                image = cv2.rectangle(image, (30, 100), (70, 300), (255, 0, 0), 3)</span><br><span class=\"line\">                image = cv2.rectangle(image, (30, math.ceil(300 - rect_height)), (70, 300), (255, 0, 0), -1)</span><br><span class=\"line\"></span><br><span class=\"line\">                # 显示刷新率FPS</span><br><span class=\"line\">                cTime = time.time()</span><br><span class=\"line\">                fps_text = 1 / (cTime - fpsTime)</span><br><span class=\"line\">                fpsTime = cTime</span><br><span class=\"line\">                cv2.putText(image, &quot;FPS: &quot; + str(int(fps_text)), (10, 70),</span><br><span class=\"line\">                            cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 0), 3)</span><br><span class=\"line\">                # 显示画面</span><br><span class=\"line\">                cv2.imshow(&#x27;MediaPipe Hands&#x27;, image)</span><br><span class=\"line\">                if cv2.waitKey(5) &amp; 0xFF == 27 or cv2.getWindowProperty(&#x27;MediaPipe Hands&#x27;, cv2.WND_PROP_VISIBLE) &lt; 1:</span><br><span class=\"line\">                    break</span><br><span class=\"line\">            cap.release()</span><br><span class=\"line\">            cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 开始程序</span><br><span class=\"line\">control = HandControlVolume()</span><br><span class=\"line\">control.recognize()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-手势控制电脑音量\"><a href=\"#OpenCV-手势控制电脑音量\" class=\"headerlink\" title=\"OpenCV-手势控制电脑音量\"></a>OpenCV-手势控制电脑音量</h1><p>代码来源：恩培大佬<br><a href=\"https://gitcode.net/mirrors/enpeizhao/cvprojects?utm_source=csdn_github_accelerator\">https://gitcode.net/mirrors/enpeizhao/cvprojects?utm_source=csdn_github_accelerator</a></p>","more":"<p>代码实现：<br>依赖库自己装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">Author：enpei</span><br><span class=\"line\">Date: 2021-11-16</span><br><span class=\"line\">功能：手势操作电脑音量</span><br><span class=\"line\">1、使用OpenCV读取摄像头视频流；</span><br><span class=\"line\">2、识别手掌关键点像素坐标；</span><br><span class=\"line\">3、根据拇指和食指指尖的坐标，利用勾股定理计算距离；</span><br><span class=\"line\">4、将距离等比例转为音量大小，控制电脑音量</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># 导入OpenCV</span><br><span class=\"line\">import mailcap</span><br><span class=\"line\"></span><br><span class=\"line\">import cv2</span><br><span class=\"line\"># 导入mediapipe</span><br><span class=\"line\">import mediapipe as mp</span><br><span class=\"line\"># 导入电脑音量控制模块</span><br><span class=\"line\">from ctypes import cast, POINTER</span><br><span class=\"line\">from comtypes import CLSCTX_ALL</span><br><span class=\"line\">from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume</span><br><span class=\"line\"></span><br><span class=\"line\"># 导入其他依赖包</span><br><span class=\"line\">import time</span><br><span class=\"line\">import math</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class HandControlVolume:</span><br><span class=\"line\">    def __init__(self):</span><br><span class=\"line\">        # 初始化medialpipe</span><br><span class=\"line\">        self.mp_drawing = mp.solutions.drawing_utils</span><br><span class=\"line\">        self.mp_drawing_styles = mp.solutions.drawing_styles</span><br><span class=\"line\">        self.mp_hands = mp.solutions.hands</span><br><span class=\"line\"></span><br><span class=\"line\">        # 获取电脑音量范围</span><br><span class=\"line\">        devices = AudioUtilities.GetSpeakers()</span><br><span class=\"line\">        interface = devices.Activate(</span><br><span class=\"line\">            IAudioEndpointVolume._iid_, CLSCTX_ALL, None)</span><br><span class=\"line\">        self.volume = cast(interface, POINTER(IAudioEndpointVolume))</span><br><span class=\"line\">        self.volume.SetMute(0, None)</span><br><span class=\"line\">        self.volume_range = self.volume.GetVolumeRange()</span><br><span class=\"line\"></span><br><span class=\"line\">    # 主函数</span><br><span class=\"line\">    def recognize(self):</span><br><span class=\"line\">        # 计算刷新率</span><br><span class=\"line\">        fpsTime = time.time()</span><br><span class=\"line\"></span><br><span class=\"line\">        # OpenCV读取视频流</span><br><span class=\"line\">        cap = cv2.VideoCapture(0)</span><br><span class=\"line\">        # 视频分辨率</span><br><span class=\"line\">        resize_w = 640</span><br><span class=\"line\">        resize_h = 480</span><br><span class=\"line\"></span><br><span class=\"line\">        # 画面显示初始化参数</span><br><span class=\"line\">        rect_height = 0</span><br><span class=\"line\">        rect_percent_text = 0</span><br><span class=\"line\"></span><br><span class=\"line\">        with self.mp_hands.Hands(min_detection_confidence=0.7,</span><br><span class=\"line\">                                 min_tracking_confidence=0.5,</span><br><span class=\"line\">                                 max_num_hands=2) as hands:</span><br><span class=\"line\">            while cap.isOpened():</span><br><span class=\"line\">                success, image = cap.read()</span><br><span class=\"line\">                image = cv2.resize(image, (resize_w, resize_h))</span><br><span class=\"line\"></span><br><span class=\"line\">                if not success:</span><br><span class=\"line\">                    print(&quot;空帧.&quot;)</span><br><span class=\"line\">                    continue</span><br><span class=\"line\"></span><br><span class=\"line\">                # 提高性能</span><br><span class=\"line\">                image.flags.writeable = False</span><br><span class=\"line\">                # 转为RGB</span><br><span class=\"line\">                image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)</span><br><span class=\"line\">                # 镜像</span><br><span class=\"line\">                image = cv2.flip(image, 1)</span><br><span class=\"line\">                # mediapipe模型处理</span><br><span class=\"line\">                results = hands.process(image)</span><br><span class=\"line\"></span><br><span class=\"line\">                image.flags.writeable = True</span><br><span class=\"line\">                image = cv2.cvtColor(image, cv2.COLOR_RGB2BGR)</span><br><span class=\"line\">                # 判断是否有手掌</span><br><span class=\"line\">                if results.multi_hand_landmarks:</span><br><span class=\"line\">                    # 遍历每个手掌</span><br><span class=\"line\">                    for hand_landmarks in results.multi_hand_landmarks:</span><br><span class=\"line\">                        # 在画面标注手指</span><br><span class=\"line\">                        self.mp_drawing.draw_landmarks(</span><br><span class=\"line\">                            image,</span><br><span class=\"line\">                            hand_landmarks,</span><br><span class=\"line\">                            self.mp_hands.HAND_CONNECTIONS,</span><br><span class=\"line\">                            self.mp_drawing_styles.get_default_hand_landmarks_style(),</span><br><span class=\"line\">                            self.mp_drawing_styles.get_default_hand_connections_style())</span><br><span class=\"line\"></span><br><span class=\"line\">                        # 解析手指，存入各个手指坐标</span><br><span class=\"line\">                        landmark_list = []</span><br><span class=\"line\">                        for landmark_id, finger_axis in enumerate(</span><br><span class=\"line\">                                hand_landmarks.landmark):</span><br><span class=\"line\">                            landmark_list.append([</span><br><span class=\"line\">                                landmark_id, finger_axis.x, finger_axis.y,</span><br><span class=\"line\">                                finger_axis.z</span><br><span class=\"line\">                            ])</span><br><span class=\"line\">                        if landmark_list:</span><br><span class=\"line\">                            # 获取大拇指指尖坐标</span><br><span class=\"line\">                            thumb_finger_tip = landmark_list[4]</span><br><span class=\"line\">                            thumb_finger_tip_x = math.ceil(thumb_finger_tip[1] * resize_w)</span><br><span class=\"line\">                            thumb_finger_tip_y = math.ceil(thumb_finger_tip[2] * resize_h)</span><br><span class=\"line\">                            # 获取食指指尖坐标</span><br><span class=\"line\">                            index_finger_tip = landmark_list[8]</span><br><span class=\"line\">                            index_finger_tip_x = math.ceil(index_finger_tip[1] * resize_w)</span><br><span class=\"line\">                            index_finger_tip_y = math.ceil(index_finger_tip[2] * resize_h)</span><br><span class=\"line\">                            # 中间点</span><br><span class=\"line\">                            finger_middle_point = (thumb_finger_tip_x + index_finger_tip_x) // 2, (</span><br><span class=\"line\">                                    thumb_finger_tip_y + index_finger_tip_y) // 2</span><br><span class=\"line\">                            # print(thumb_finger_tip_x)</span><br><span class=\"line\">                            thumb_finger_point = (thumb_finger_tip_x, thumb_finger_tip_y)</span><br><span class=\"line\">                            index_finger_point = (index_finger_tip_x, index_finger_tip_y)</span><br><span class=\"line\">                            # 画指尖2点</span><br><span class=\"line\">                            image = cv2.circle(image, thumb_finger_point, 10, (255, 0, 255), -1)</span><br><span class=\"line\">                            image = cv2.circle(image, index_finger_point, 10, (255, 0, 255), -1)</span><br><span class=\"line\">                            image = cv2.circle(image, finger_middle_point, 10, (255, 0, 255), -1)</span><br><span class=\"line\">                            # 画2点连线</span><br><span class=\"line\">                            image = cv2.line(image, thumb_finger_point, index_finger_point, (255, 0, 255), 5)</span><br><span class=\"line\">                            # 勾股定理计算长度</span><br><span class=\"line\">                            line_len = math.hypot((index_finger_tip_x - thumb_finger_tip_x),</span><br><span class=\"line\">                                                  (index_finger_tip_y - thumb_finger_tip_y))</span><br><span class=\"line\"></span><br><span class=\"line\">                            # 获取电脑最大最小音量</span><br><span class=\"line\">                            min_volume = self.volume_range[0]</span><br><span class=\"line\">                            max_volume = self.volume_range[1]</span><br><span class=\"line\">                            # 将指尖长度映射到音量上</span><br><span class=\"line\">                            vol = np.interp(line_len, [30, 190], [min_volume, max_volume])      # 根据自己实际修改代码</span><br><span class=\"line\">                            # 将指尖长度映射到矩形显示上</span><br><span class=\"line\">                            rect_height = np.interp(line_len, [30, 190], [0, 200])              # 根据自己实际修改代码</span><br><span class=\"line\">                            rect_percent_text = np.interp(line_len, [30, 190], [0, 100])        # 根据自己实际修改代码</span><br><span class=\"line\"></span><br><span class=\"line\">                            # 设置电脑音量</span><br><span class=\"line\">                            self.volume.SetMasterVolumeLevel(vol, None)</span><br><span class=\"line\"></span><br><span class=\"line\">                # 显示矩形</span><br><span class=\"line\">                cv2.putText(image, str(math.ceil(rect_percent_text)) + &quot;%&quot;, (10, 350),</span><br><span class=\"line\">                            cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 0), 3)</span><br><span class=\"line\">                image = cv2.rectangle(image, (30, 100), (70, 300), (255, 0, 0), 3)</span><br><span class=\"line\">                image = cv2.rectangle(image, (30, math.ceil(300 - rect_height)), (70, 300), (255, 0, 0), -1)</span><br><span class=\"line\"></span><br><span class=\"line\">                # 显示刷新率FPS</span><br><span class=\"line\">                cTime = time.time()</span><br><span class=\"line\">                fps_text = 1 / (cTime - fpsTime)</span><br><span class=\"line\">                fpsTime = cTime</span><br><span class=\"line\">                cv2.putText(image, &quot;FPS: &quot; + str(int(fps_text)), (10, 70),</span><br><span class=\"line\">                            cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 0), 3)</span><br><span class=\"line\">                # 显示画面</span><br><span class=\"line\">                cv2.imshow(&#x27;MediaPipe Hands&#x27;, image)</span><br><span class=\"line\">                if cv2.waitKey(5) &amp; 0xFF == 27 or cv2.getWindowProperty(&#x27;MediaPipe Hands&#x27;, cv2.WND_PROP_VISIBLE) &lt; 1:</span><br><span class=\"line\">                    break</span><br><span class=\"line\">            cap.release()</span><br><span class=\"line\">            cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 开始程序</span><br><span class=\"line\">control = HandControlVolume()</span><br><span class=\"line\">control.recognize()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-手势调节音量基础实现","_content":"# OpenCV-手势调节音量基础实现\n## 前言\n接触谷歌开源库mediapipe结合之前学的OpenCV，做出的小程序\n开源库yyds，拿来就可以用\n<!--more-->\n## 代码实现\n```\nimport math\n\nimport cv2\nimport mediapipe as mp\nimport time\n\n# 打开计算机自带摄像头\nimport numpy as np\n\ncap = cv2.VideoCapture(0)\n\nmpHands = mp.solutions.hands\nhands = mpHands.Hands()  # 设置参数，详见 hands.py 中的 __init__\nmpDraw = mp.solutions.drawing_utils  # 将检测出的手上的标记点连接起来\n\n# 定义时间用于后边的fps计算\npTime = 0\ncTime = 0\ntemp1 = np.zeros(2)\ntemp2 = np.zeros(2)\n\nwhile True:\n    success, img = cap.read()\n    img = cv2.flip(img, 1)  # 图像翻转\n    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # 将BGR格式图像转换为RGB\n    results = hands.process(imgRGB)  # 对输入图像进行处理，探索图像中是否有手\n    # print(results.multi_hand_landmarks)  # 如果有手，输出手所有0~20个标记点的比例坐标，如果没有，输出None\n    if results.multi_hand_landmarks:\n        for handLms in results.multi_hand_landmarks:  # 捕捉画面中的每一只手\n            for id, lm in enumerate(handLms.landmark):\n                # print(id, lm)\n                h, w, c = img.shape\n                cx, cy = int(lm.x * w), int(lm.y * h)  # 根据比例还原出每一个标记点的像素坐标\n                # print(id, cx, cy)  # 根据手上标记点的id打印出其相应所在图像中中的像素位置\n                if id == 4:  # 可以根据手上标记点的id获得任意id对应的标记点的信息\n                    cv2.circle(img, (cx, cy), 10, (255, 0, 255), cv2.FILLED)  # 这里加粗强调了大拇指上的一个标记点\n                    temp1[0] = cx  # 拇指顶点坐标\n                    temp1[1] = cy\n                if id == 8:  # 可以根据手上标记点的id获得任意id对应的标记点的信息\n                    temp2[0] = cx  # 食指顶点坐标\n                    temp2[1] = cy\n            mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)  # 给画面中的每一只手进行标点、连线的操作\n\n    # 得到fps\n    cTime = time.time()\n    fps = 1 / (cTime - pTime)\n    pTime = cTime\n    # 计算食指和拇指的距离\n    l = math.sqrt(math.pow((temp1[0] - temp2[0]), 2) + math.pow((temp1[1] - temp2[1]), 2))\n    l = int(l)\n    print(l)\n    # 长度转换音量\n    if (l >= 30) and (l <= 190):\n        volume = 0.626 * l - 18.75\n    else:\n        volume = 0\n    print(volume)\n    # 画面上显示音量\n    cv2.putText(img, 'volume:' + str(int(volume)), (10, 150), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)\n    # 在画面上显示fps\n    cv2.putText(img, 'FPS:' + str(int(fps)), (10, 70), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)\n    cv2.imshow(\"Image\", img)\n    key = cv2.waitKey(1)  # 自动刷新\n    if key == 27:\n        break\ncv2.destroyAllWindows()\n\n```","source":"_posts/OpenCV/OpenCV小项目/OpenCV-手势调节音量基础实现.md","raw":"---\ntitle: OpenCV-手势调节音量基础实现\n---\n# OpenCV-手势调节音量基础实现\n## 前言\n接触谷歌开源库mediapipe结合之前学的OpenCV，做出的小程序\n开源库yyds，拿来就可以用\n<!--more-->\n## 代码实现\n```\nimport math\n\nimport cv2\nimport mediapipe as mp\nimport time\n\n# 打开计算机自带摄像头\nimport numpy as np\n\ncap = cv2.VideoCapture(0)\n\nmpHands = mp.solutions.hands\nhands = mpHands.Hands()  # 设置参数，详见 hands.py 中的 __init__\nmpDraw = mp.solutions.drawing_utils  # 将检测出的手上的标记点连接起来\n\n# 定义时间用于后边的fps计算\npTime = 0\ncTime = 0\ntemp1 = np.zeros(2)\ntemp2 = np.zeros(2)\n\nwhile True:\n    success, img = cap.read()\n    img = cv2.flip(img, 1)  # 图像翻转\n    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # 将BGR格式图像转换为RGB\n    results = hands.process(imgRGB)  # 对输入图像进行处理，探索图像中是否有手\n    # print(results.multi_hand_landmarks)  # 如果有手，输出手所有0~20个标记点的比例坐标，如果没有，输出None\n    if results.multi_hand_landmarks:\n        for handLms in results.multi_hand_landmarks:  # 捕捉画面中的每一只手\n            for id, lm in enumerate(handLms.landmark):\n                # print(id, lm)\n                h, w, c = img.shape\n                cx, cy = int(lm.x * w), int(lm.y * h)  # 根据比例还原出每一个标记点的像素坐标\n                # print(id, cx, cy)  # 根据手上标记点的id打印出其相应所在图像中中的像素位置\n                if id == 4:  # 可以根据手上标记点的id获得任意id对应的标记点的信息\n                    cv2.circle(img, (cx, cy), 10, (255, 0, 255), cv2.FILLED)  # 这里加粗强调了大拇指上的一个标记点\n                    temp1[0] = cx  # 拇指顶点坐标\n                    temp1[1] = cy\n                if id == 8:  # 可以根据手上标记点的id获得任意id对应的标记点的信息\n                    temp2[0] = cx  # 食指顶点坐标\n                    temp2[1] = cy\n            mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)  # 给画面中的每一只手进行标点、连线的操作\n\n    # 得到fps\n    cTime = time.time()\n    fps = 1 / (cTime - pTime)\n    pTime = cTime\n    # 计算食指和拇指的距离\n    l = math.sqrt(math.pow((temp1[0] - temp2[0]), 2) + math.pow((temp1[1] - temp2[1]), 2))\n    l = int(l)\n    print(l)\n    # 长度转换音量\n    if (l >= 30) and (l <= 190):\n        volume = 0.626 * l - 18.75\n    else:\n        volume = 0\n    print(volume)\n    # 画面上显示音量\n    cv2.putText(img, 'volume:' + str(int(volume)), (10, 150), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)\n    # 在画面上显示fps\n    cv2.putText(img, 'FPS:' + str(int(fps)), (10, 70), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)\n    cv2.imshow(\"Image\", img)\n    key = cv2.waitKey(1)  # 自动刷新\n    if key == 27:\n        break\ncv2.destroyAllWindows()\n\n```","slug":"OpenCV/OpenCV小项目/OpenCV-手势调节音量基础实现","published":1,"date":"2022-05-25T10:06:34.782Z","updated":"2022-05-16T03:33:50.938Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepp001868urds17dvi2","content":"<h1 id=\"OpenCV-手势调节音量基础实现\"><a href=\"#OpenCV-手势调节音量基础实现\" class=\"headerlink\" title=\"OpenCV-手势调节音量基础实现\"></a>OpenCV-手势调节音量基础实现</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>接触谷歌开源库mediapipe结合之前学的OpenCV，做出的小程序<br>开源库yyds，拿来就可以用</p>\n<span id=\"more\"></span>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import math</span><br><span class=\"line\"></span><br><span class=\"line\">import cv2</span><br><span class=\"line\">import mediapipe as mp</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"># 打开计算机自带摄像头</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">cap = cv2.VideoCapture(0)</span><br><span class=\"line\"></span><br><span class=\"line\">mpHands = mp.solutions.hands</span><br><span class=\"line\">hands = mpHands.Hands()  # 设置参数，详见 hands.py 中的 __init__</span><br><span class=\"line\">mpDraw = mp.solutions.drawing_utils  # 将检测出的手上的标记点连接起来</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义时间用于后边的fps计算</span><br><span class=\"line\">pTime = 0</span><br><span class=\"line\">cTime = 0</span><br><span class=\"line\">temp1 = np.zeros(2)</span><br><span class=\"line\">temp2 = np.zeros(2)</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">    success, img = cap.read()</span><br><span class=\"line\">    img = cv2.flip(img, 1)  # 图像翻转</span><br><span class=\"line\">    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # 将BGR格式图像转换为RGB</span><br><span class=\"line\">    results = hands.process(imgRGB)  # 对输入图像进行处理，探索图像中是否有手</span><br><span class=\"line\">    # print(results.multi_hand_landmarks)  # 如果有手，输出手所有0~20个标记点的比例坐标，如果没有，输出None</span><br><span class=\"line\">    if results.multi_hand_landmarks:</span><br><span class=\"line\">        for handLms in results.multi_hand_landmarks:  # 捕捉画面中的每一只手</span><br><span class=\"line\">            for id, lm in enumerate(handLms.landmark):</span><br><span class=\"line\">                # print(id, lm)</span><br><span class=\"line\">                h, w, c = img.shape</span><br><span class=\"line\">                cx, cy = int(lm.x * w), int(lm.y * h)  # 根据比例还原出每一个标记点的像素坐标</span><br><span class=\"line\">                # print(id, cx, cy)  # 根据手上标记点的id打印出其相应所在图像中中的像素位置</span><br><span class=\"line\">                if id == 4:  # 可以根据手上标记点的id获得任意id对应的标记点的信息</span><br><span class=\"line\">                    cv2.circle(img, (cx, cy), 10, (255, 0, 255), cv2.FILLED)  # 这里加粗强调了大拇指上的一个标记点</span><br><span class=\"line\">                    temp1[0] = cx  # 拇指顶点坐标</span><br><span class=\"line\">                    temp1[1] = cy</span><br><span class=\"line\">                if id == 8:  # 可以根据手上标记点的id获得任意id对应的标记点的信息</span><br><span class=\"line\">                    temp2[0] = cx  # 食指顶点坐标</span><br><span class=\"line\">                    temp2[1] = cy</span><br><span class=\"line\">            mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)  # 给画面中的每一只手进行标点、连线的操作</span><br><span class=\"line\"></span><br><span class=\"line\">    # 得到fps</span><br><span class=\"line\">    cTime = time.time()</span><br><span class=\"line\">    fps = 1 / (cTime - pTime)</span><br><span class=\"line\">    pTime = cTime</span><br><span class=\"line\">    # 计算食指和拇指的距离</span><br><span class=\"line\">    l = math.sqrt(math.pow((temp1[0] - temp2[0]), 2) + math.pow((temp1[1] - temp2[1]), 2))</span><br><span class=\"line\">    l = int(l)</span><br><span class=\"line\">    print(l)</span><br><span class=\"line\">    # 长度转换音量</span><br><span class=\"line\">    if (l &gt;= 30) and (l &lt;= 190):</span><br><span class=\"line\">        volume = 0.626 * l - 18.75</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        volume = 0</span><br><span class=\"line\">    print(volume)</span><br><span class=\"line\">    # 画面上显示音量</span><br><span class=\"line\">    cv2.putText(img, &#x27;volume:&#x27; + str(int(volume)), (10, 150), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)</span><br><span class=\"line\">    # 在画面上显示fps</span><br><span class=\"line\">    cv2.putText(img, &#x27;FPS:&#x27; + str(int(fps)), (10, 70), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)</span><br><span class=\"line\">    cv2.imshow(&quot;Image&quot;, img)</span><br><span class=\"line\">    key = cv2.waitKey(1)  # 自动刷新</span><br><span class=\"line\">    if key == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-手势调节音量基础实现\"><a href=\"#OpenCV-手势调节音量基础实现\" class=\"headerlink\" title=\"OpenCV-手势调节音量基础实现\"></a>OpenCV-手势调节音量基础实现</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>接触谷歌开源库mediapipe结合之前学的OpenCV，做出的小程序<br>开源库yyds，拿来就可以用</p>","more":"<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import math</span><br><span class=\"line\"></span><br><span class=\"line\">import cv2</span><br><span class=\"line\">import mediapipe as mp</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\"># 打开计算机自带摄像头</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">cap = cv2.VideoCapture(0)</span><br><span class=\"line\"></span><br><span class=\"line\">mpHands = mp.solutions.hands</span><br><span class=\"line\">hands = mpHands.Hands()  # 设置参数，详见 hands.py 中的 __init__</span><br><span class=\"line\">mpDraw = mp.solutions.drawing_utils  # 将检测出的手上的标记点连接起来</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义时间用于后边的fps计算</span><br><span class=\"line\">pTime = 0</span><br><span class=\"line\">cTime = 0</span><br><span class=\"line\">temp1 = np.zeros(2)</span><br><span class=\"line\">temp2 = np.zeros(2)</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">    success, img = cap.read()</span><br><span class=\"line\">    img = cv2.flip(img, 1)  # 图像翻转</span><br><span class=\"line\">    imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)  # 将BGR格式图像转换为RGB</span><br><span class=\"line\">    results = hands.process(imgRGB)  # 对输入图像进行处理，探索图像中是否有手</span><br><span class=\"line\">    # print(results.multi_hand_landmarks)  # 如果有手，输出手所有0~20个标记点的比例坐标，如果没有，输出None</span><br><span class=\"line\">    if results.multi_hand_landmarks:</span><br><span class=\"line\">        for handLms in results.multi_hand_landmarks:  # 捕捉画面中的每一只手</span><br><span class=\"line\">            for id, lm in enumerate(handLms.landmark):</span><br><span class=\"line\">                # print(id, lm)</span><br><span class=\"line\">                h, w, c = img.shape</span><br><span class=\"line\">                cx, cy = int(lm.x * w), int(lm.y * h)  # 根据比例还原出每一个标记点的像素坐标</span><br><span class=\"line\">                # print(id, cx, cy)  # 根据手上标记点的id打印出其相应所在图像中中的像素位置</span><br><span class=\"line\">                if id == 4:  # 可以根据手上标记点的id获得任意id对应的标记点的信息</span><br><span class=\"line\">                    cv2.circle(img, (cx, cy), 10, (255, 0, 255), cv2.FILLED)  # 这里加粗强调了大拇指上的一个标记点</span><br><span class=\"line\">                    temp1[0] = cx  # 拇指顶点坐标</span><br><span class=\"line\">                    temp1[1] = cy</span><br><span class=\"line\">                if id == 8:  # 可以根据手上标记点的id获得任意id对应的标记点的信息</span><br><span class=\"line\">                    temp2[0] = cx  # 食指顶点坐标</span><br><span class=\"line\">                    temp2[1] = cy</span><br><span class=\"line\">            mpDraw.draw_landmarks(img, handLms, mpHands.HAND_CONNECTIONS)  # 给画面中的每一只手进行标点、连线的操作</span><br><span class=\"line\"></span><br><span class=\"line\">    # 得到fps</span><br><span class=\"line\">    cTime = time.time()</span><br><span class=\"line\">    fps = 1 / (cTime - pTime)</span><br><span class=\"line\">    pTime = cTime</span><br><span class=\"line\">    # 计算食指和拇指的距离</span><br><span class=\"line\">    l = math.sqrt(math.pow((temp1[0] - temp2[0]), 2) + math.pow((temp1[1] - temp2[1]), 2))</span><br><span class=\"line\">    l = int(l)</span><br><span class=\"line\">    print(l)</span><br><span class=\"line\">    # 长度转换音量</span><br><span class=\"line\">    if (l &gt;= 30) and (l &lt;= 190):</span><br><span class=\"line\">        volume = 0.626 * l - 18.75</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        volume = 0</span><br><span class=\"line\">    print(volume)</span><br><span class=\"line\">    # 画面上显示音量</span><br><span class=\"line\">    cv2.putText(img, &#x27;volume:&#x27; + str(int(volume)), (10, 150), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)</span><br><span class=\"line\">    # 在画面上显示fps</span><br><span class=\"line\">    cv2.putText(img, &#x27;FPS:&#x27; + str(int(fps)), (10, 70), cv2.FONT_ITALIC, 1, (0, 0, 255), 3)</span><br><span class=\"line\">    cv2.imshow(&quot;Image&quot;, img)</span><br><span class=\"line\">    key = cv2.waitKey(1)  # 自动刷新</span><br><span class=\"line\">    if key == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-远程控制手机拍照发邮件","_content":"# OpenCV-远程控制手机拍照发邮件\n在初步学习OpenCV后在网上找的一个小项目作为学习练习\n<!--more-->\n学习代码如下：\n大家根据自己的实际需求就可以复现\n```\n\"\"\"\nPython控制自己的手机摄像头拍照，并把照片自动发送到邮箱\n这是一个大佬的项目，本着学习的心态对其进行学习\n大佬链接：https://blog.csdn.net/m0_48405781/article/details/124171923?spm=1001.2100.3001.7377&utm_medium=distribute.pc_feed_blog.none-task-blog-personrec_tag-2.nonecase&depth_1-utm_source=distribute.pc_feed_blog.none-task-blog-personrec_tag-2.nonecase\n目标：控制自己的摄像头拍照，并且把拍下来的照片，通过邮件发到自己的邮箱里。\n思路：\n通过opencv调用摄像头拍照保存图像本地\n用email库构造邮件内容,保存的图像以附件形式插入邮件内容\n用smtplib库发送邮件到指定邮箱\n\"\"\"\nimport time\nimport cv2 as cv  # pip install opencv-python -i 镜像源网址\nfrom email.mime.image import MIMEImage  # 用来构造邮件内容的库\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nimport smtplib  # 发送邮件\n\n\ndef GetPicture():\n    \"\"\"\n    拍照保存图像\n    \"\"\"\n    # 创建一个窗口\n    # cv.namedWindow('camera', 1)\n    '''\n    拍照是用手机的摄像头，软件用的是：IP摄像头（安卓），\n    因为在同一个局域网内，打开APP，里面出现的网址就是摄像头的地址\n    我这里直接用的电脑的摄像头\n    '''\n    # 调用摄像头   IP摄像头APP\n    # video = \"\"  # 摄像头地址\n    cap = cv.VideoCapture(0)\n    while True:\n        ret, frame = cap.read()\n        frame = cv.flip(frame, 1)\n        cv.imshow(\"camera\", frame)\n        # 按键处理\n        key = cv.waitKey(10)\n        if key == 27:\n            # 保存\n            cv.imwrite(r'E:\\SavePicture-camera\\001.jpg', frame)\n            break\n\n    # 释放摄像头\n    cap.release()\n    # 关闭窗口\n    cv.destroyWindow(\"camera\")\n\n\n# 授权码\npwd = \" \"  # 最好写自己的\n\n# 服务器接口\nhost = 'smtp.qq.com'    # 根据自己发送邮箱的实际进行填写，例如网易就是  'smtp.163.com'\nport = 25\n\nsender = ' '  # 最好写自己的\nreceiver = ' '  # 最好写自己的\n\n\ndef SetMsg():\n    \"\"\"\n    邮件格式设置\n    :return:\n    \"\"\"\n\n    msg = MIMEMultipart('mixed')\n    # 标题\n    msg['Subject'] = '小姐姐照片'\n    msg['From'] = sender  # 发送方邮箱\n    msg['To'] = receiver  # 接收方邮箱\n\n    # 邮件正文\n    text = '你要的小姐姐照片到了,请接收'\n    text_plain = MIMEText(text, 'plain', 'utf-8')  # 正文转码\n    msg.attach(text_plain)\n\n    # 图片附件\n    SendImageFile = open('E:/SavePicture-camera/001.jpg', 'rb').read()  # 这里放你保存图片的地址\n    image = MIMEImage(SendImageFile)\n\n    # 将收件人看见的附件照片名称改为people.png.\n    image['Content-Disposition'] = 'attachment; filename = \"people.png\"'\n    msg.attach(image)\n    return msg.as_string()\n\n\ndef SendEmail(msg):\n    \"\"\"\n    发送邮件\n    :param msg:邮件内容\n    :return:\n    \"\"\"\n    smtp = smtplib.SMTP()\n    smtp.connect(host, port=25)\n    smtp.login(sender, pwd)\n    smtp.sendmail(sender, receiver, msg)\n    time.sleep(2)\n    smtp.quit()\n\n\nif __name__ == '__main__':\n    # 1.拍照保存\n    GetPicture()\n    # 2.设置邮件格式\n    msg = SetMsg()\n    # 3.发送邮件\n    SendEmail(msg)\n\n```\n","source":"_posts/OpenCV/OpenCV小项目/OpenCV-远程控制手机拍照发邮件.md","raw":"---\ntitle: OpenCV-远程控制手机拍照发邮件\n---\n# OpenCV-远程控制手机拍照发邮件\n在初步学习OpenCV后在网上找的一个小项目作为学习练习\n<!--more-->\n学习代码如下：\n大家根据自己的实际需求就可以复现\n```\n\"\"\"\nPython控制自己的手机摄像头拍照，并把照片自动发送到邮箱\n这是一个大佬的项目，本着学习的心态对其进行学习\n大佬链接：https://blog.csdn.net/m0_48405781/article/details/124171923?spm=1001.2100.3001.7377&utm_medium=distribute.pc_feed_blog.none-task-blog-personrec_tag-2.nonecase&depth_1-utm_source=distribute.pc_feed_blog.none-task-blog-personrec_tag-2.nonecase\n目标：控制自己的摄像头拍照，并且把拍下来的照片，通过邮件发到自己的邮箱里。\n思路：\n通过opencv调用摄像头拍照保存图像本地\n用email库构造邮件内容,保存的图像以附件形式插入邮件内容\n用smtplib库发送邮件到指定邮箱\n\"\"\"\nimport time\nimport cv2 as cv  # pip install opencv-python -i 镜像源网址\nfrom email.mime.image import MIMEImage  # 用来构造邮件内容的库\nfrom email.mime.text import MIMEText\nfrom email.mime.multipart import MIMEMultipart\nimport smtplib  # 发送邮件\n\n\ndef GetPicture():\n    \"\"\"\n    拍照保存图像\n    \"\"\"\n    # 创建一个窗口\n    # cv.namedWindow('camera', 1)\n    '''\n    拍照是用手机的摄像头，软件用的是：IP摄像头（安卓），\n    因为在同一个局域网内，打开APP，里面出现的网址就是摄像头的地址\n    我这里直接用的电脑的摄像头\n    '''\n    # 调用摄像头   IP摄像头APP\n    # video = \"\"  # 摄像头地址\n    cap = cv.VideoCapture(0)\n    while True:\n        ret, frame = cap.read()\n        frame = cv.flip(frame, 1)\n        cv.imshow(\"camera\", frame)\n        # 按键处理\n        key = cv.waitKey(10)\n        if key == 27:\n            # 保存\n            cv.imwrite(r'E:\\SavePicture-camera\\001.jpg', frame)\n            break\n\n    # 释放摄像头\n    cap.release()\n    # 关闭窗口\n    cv.destroyWindow(\"camera\")\n\n\n# 授权码\npwd = \" \"  # 最好写自己的\n\n# 服务器接口\nhost = 'smtp.qq.com'    # 根据自己发送邮箱的实际进行填写，例如网易就是  'smtp.163.com'\nport = 25\n\nsender = ' '  # 最好写自己的\nreceiver = ' '  # 最好写自己的\n\n\ndef SetMsg():\n    \"\"\"\n    邮件格式设置\n    :return:\n    \"\"\"\n\n    msg = MIMEMultipart('mixed')\n    # 标题\n    msg['Subject'] = '小姐姐照片'\n    msg['From'] = sender  # 发送方邮箱\n    msg['To'] = receiver  # 接收方邮箱\n\n    # 邮件正文\n    text = '你要的小姐姐照片到了,请接收'\n    text_plain = MIMEText(text, 'plain', 'utf-8')  # 正文转码\n    msg.attach(text_plain)\n\n    # 图片附件\n    SendImageFile = open('E:/SavePicture-camera/001.jpg', 'rb').read()  # 这里放你保存图片的地址\n    image = MIMEImage(SendImageFile)\n\n    # 将收件人看见的附件照片名称改为people.png.\n    image['Content-Disposition'] = 'attachment; filename = \"people.png\"'\n    msg.attach(image)\n    return msg.as_string()\n\n\ndef SendEmail(msg):\n    \"\"\"\n    发送邮件\n    :param msg:邮件内容\n    :return:\n    \"\"\"\n    smtp = smtplib.SMTP()\n    smtp.connect(host, port=25)\n    smtp.login(sender, pwd)\n    smtp.sendmail(sender, receiver, msg)\n    time.sleep(2)\n    smtp.quit()\n\n\nif __name__ == '__main__':\n    # 1.拍照保存\n    GetPicture()\n    # 2.设置邮件格式\n    msg = SetMsg()\n    # 3.发送邮件\n    SendEmail(msg)\n\n```\n","slug":"OpenCV/OpenCV小项目/OpenCV-远程控制手机拍照发邮件","published":1,"date":"2022-05-25T10:06:34.827Z","updated":"2022-05-07T09:56:09.987Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepq001968ur3ukwelwh","content":"<h1 id=\"OpenCV-远程控制手机拍照发邮件\"><a href=\"#OpenCV-远程控制手机拍照发邮件\" class=\"headerlink\" title=\"OpenCV-远程控制手机拍照发邮件\"></a>OpenCV-远程控制手机拍照发邮件</h1><p>在初步学习OpenCV后在网上找的一个小项目作为学习练习</p>\n<span id=\"more\"></span>\n<p>学习代码如下：<br>大家根据自己的实际需求就可以复现</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">Python控制自己的手机摄像头拍照，并把照片自动发送到邮箱</span><br><span class=\"line\">这是一个大佬的项目，本着学习的心态对其进行学习</span><br><span class=\"line\">大佬链接：https://blog.csdn.net/m0_48405781/article/details/124171923?spm=1001.2100.3001.7377&amp;utm_medium=distribute.pc_feed_blog.none-task-blog-personrec_tag-2.nonecase&amp;depth_1-utm_source=distribute.pc_feed_blog.none-task-blog-personrec_tag-2.nonecase</span><br><span class=\"line\">目标：控制自己的摄像头拍照，并且把拍下来的照片，通过邮件发到自己的邮箱里。</span><br><span class=\"line\">思路：</span><br><span class=\"line\">通过opencv调用摄像头拍照保存图像本地</span><br><span class=\"line\">用email库构造邮件内容,保存的图像以附件形式插入邮件内容</span><br><span class=\"line\">用smtplib库发送邮件到指定邮箱</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import time</span><br><span class=\"line\">import cv2 as cv  # pip install opencv-python -i 镜像源网址</span><br><span class=\"line\">from email.mime.image import MIMEImage  # 用来构造邮件内容的库</span><br><span class=\"line\">from email.mime.text import MIMEText</span><br><span class=\"line\">from email.mime.multipart import MIMEMultipart</span><br><span class=\"line\">import smtplib  # 发送邮件</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def GetPicture():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    拍照保存图像</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    # 创建一个窗口</span><br><span class=\"line\">    # cv.namedWindow(&#x27;camera&#x27;, 1)</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    拍照是用手机的摄像头，软件用的是：IP摄像头（安卓），</span><br><span class=\"line\">    因为在同一个局域网内，打开APP，里面出现的网址就是摄像头的地址</span><br><span class=\"line\">    我这里直接用的电脑的摄像头</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 调用摄像头   IP摄像头APP</span><br><span class=\"line\">    # video = &quot;&quot;  # 摄像头地址</span><br><span class=\"line\">    cap = cv.VideoCapture(0)</span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        ret, frame = cap.read()</span><br><span class=\"line\">        frame = cv.flip(frame, 1)</span><br><span class=\"line\">        cv.imshow(&quot;camera&quot;, frame)</span><br><span class=\"line\">        # 按键处理</span><br><span class=\"line\">        key = cv.waitKey(10)</span><br><span class=\"line\">        if key == 27:</span><br><span class=\"line\">            # 保存</span><br><span class=\"line\">            cv.imwrite(r&#x27;E:\\SavePicture-camera\\001.jpg&#x27;, frame)</span><br><span class=\"line\">            break</span><br><span class=\"line\"></span><br><span class=\"line\">    # 释放摄像头</span><br><span class=\"line\">    cap.release()</span><br><span class=\"line\">    # 关闭窗口</span><br><span class=\"line\">    cv.destroyWindow(&quot;camera&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 授权码</span><br><span class=\"line\">pwd = &quot; &quot;  # 最好写自己的</span><br><span class=\"line\"></span><br><span class=\"line\"># 服务器接口</span><br><span class=\"line\">host = &#x27;smtp.qq.com&#x27;    # 根据自己发送邮箱的实际进行填写，例如网易就是  &#x27;smtp.163.com&#x27;</span><br><span class=\"line\">port = 25</span><br><span class=\"line\"></span><br><span class=\"line\">sender = &#x27; &#x27;  # 最好写自己的</span><br><span class=\"line\">receiver = &#x27; &#x27;  # 最好写自己的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def SetMsg():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    邮件格式设置</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = MIMEMultipart(&#x27;mixed&#x27;)</span><br><span class=\"line\">    # 标题</span><br><span class=\"line\">    msg[&#x27;Subject&#x27;] = &#x27;小姐姐照片&#x27;</span><br><span class=\"line\">    msg[&#x27;From&#x27;] = sender  # 发送方邮箱</span><br><span class=\"line\">    msg[&#x27;To&#x27;] = receiver  # 接收方邮箱</span><br><span class=\"line\"></span><br><span class=\"line\">    # 邮件正文</span><br><span class=\"line\">    text = &#x27;你要的小姐姐照片到了,请接收&#x27;</span><br><span class=\"line\">    text_plain = MIMEText(text, &#x27;plain&#x27;, &#x27;utf-8&#x27;)  # 正文转码</span><br><span class=\"line\">    msg.attach(text_plain)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 图片附件</span><br><span class=\"line\">    SendImageFile = open(&#x27;E:/SavePicture-camera/001.jpg&#x27;, &#x27;rb&#x27;).read()  # 这里放你保存图片的地址</span><br><span class=\"line\">    image = MIMEImage(SendImageFile)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 将收件人看见的附件照片名称改为people.png.</span><br><span class=\"line\">    image[&#x27;Content-Disposition&#x27;] = &#x27;attachment; filename = &quot;people.png&quot;&#x27;</span><br><span class=\"line\">    msg.attach(image)</span><br><span class=\"line\">    return msg.as_string()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def SendEmail(msg):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    发送邮件</span><br><span class=\"line\">    :param msg:邮件内容</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    smtp = smtplib.SMTP()</span><br><span class=\"line\">    smtp.connect(host, port=25)</span><br><span class=\"line\">    smtp.login(sender, pwd)</span><br><span class=\"line\">    smtp.sendmail(sender, receiver, msg)</span><br><span class=\"line\">    time.sleep(2)</span><br><span class=\"line\">    smtp.quit()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    # 1.拍照保存</span><br><span class=\"line\">    GetPicture()</span><br><span class=\"line\">    # 2.设置邮件格式</span><br><span class=\"line\">    msg = SetMsg()</span><br><span class=\"line\">    # 3.发送邮件</span><br><span class=\"line\">    SendEmail(msg)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-远程控制手机拍照发邮件\"><a href=\"#OpenCV-远程控制手机拍照发邮件\" class=\"headerlink\" title=\"OpenCV-远程控制手机拍照发邮件\"></a>OpenCV-远程控制手机拍照发邮件</h1><p>在初步学习OpenCV后在网上找的一个小项目作为学习练习</p>","more":"<p>学习代码如下：<br>大家根据自己的实际需求就可以复现</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">Python控制自己的手机摄像头拍照，并把照片自动发送到邮箱</span><br><span class=\"line\">这是一个大佬的项目，本着学习的心态对其进行学习</span><br><span class=\"line\">大佬链接：https://blog.csdn.net/m0_48405781/article/details/124171923?spm=1001.2100.3001.7377&amp;utm_medium=distribute.pc_feed_blog.none-task-blog-personrec_tag-2.nonecase&amp;depth_1-utm_source=distribute.pc_feed_blog.none-task-blog-personrec_tag-2.nonecase</span><br><span class=\"line\">目标：控制自己的摄像头拍照，并且把拍下来的照片，通过邮件发到自己的邮箱里。</span><br><span class=\"line\">思路：</span><br><span class=\"line\">通过opencv调用摄像头拍照保存图像本地</span><br><span class=\"line\">用email库构造邮件内容,保存的图像以附件形式插入邮件内容</span><br><span class=\"line\">用smtplib库发送邮件到指定邮箱</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import time</span><br><span class=\"line\">import cv2 as cv  # pip install opencv-python -i 镜像源网址</span><br><span class=\"line\">from email.mime.image import MIMEImage  # 用来构造邮件内容的库</span><br><span class=\"line\">from email.mime.text import MIMEText</span><br><span class=\"line\">from email.mime.multipart import MIMEMultipart</span><br><span class=\"line\">import smtplib  # 发送邮件</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def GetPicture():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    拍照保存图像</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    # 创建一个窗口</span><br><span class=\"line\">    # cv.namedWindow(&#x27;camera&#x27;, 1)</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    拍照是用手机的摄像头，软件用的是：IP摄像头（安卓），</span><br><span class=\"line\">    因为在同一个局域网内，打开APP，里面出现的网址就是摄像头的地址</span><br><span class=\"line\">    我这里直接用的电脑的摄像头</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 调用摄像头   IP摄像头APP</span><br><span class=\"line\">    # video = &quot;&quot;  # 摄像头地址</span><br><span class=\"line\">    cap = cv.VideoCapture(0)</span><br><span class=\"line\">    while True:</span><br><span class=\"line\">        ret, frame = cap.read()</span><br><span class=\"line\">        frame = cv.flip(frame, 1)</span><br><span class=\"line\">        cv.imshow(&quot;camera&quot;, frame)</span><br><span class=\"line\">        # 按键处理</span><br><span class=\"line\">        key = cv.waitKey(10)</span><br><span class=\"line\">        if key == 27:</span><br><span class=\"line\">            # 保存</span><br><span class=\"line\">            cv.imwrite(r&#x27;E:\\SavePicture-camera\\001.jpg&#x27;, frame)</span><br><span class=\"line\">            break</span><br><span class=\"line\"></span><br><span class=\"line\">    # 释放摄像头</span><br><span class=\"line\">    cap.release()</span><br><span class=\"line\">    # 关闭窗口</span><br><span class=\"line\">    cv.destroyWindow(&quot;camera&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 授权码</span><br><span class=\"line\">pwd = &quot; &quot;  # 最好写自己的</span><br><span class=\"line\"></span><br><span class=\"line\"># 服务器接口</span><br><span class=\"line\">host = &#x27;smtp.qq.com&#x27;    # 根据自己发送邮箱的实际进行填写，例如网易就是  &#x27;smtp.163.com&#x27;</span><br><span class=\"line\">port = 25</span><br><span class=\"line\"></span><br><span class=\"line\">sender = &#x27; &#x27;  # 最好写自己的</span><br><span class=\"line\">receiver = &#x27; &#x27;  # 最好写自己的</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def SetMsg():</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    邮件格式设置</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">    msg = MIMEMultipart(&#x27;mixed&#x27;)</span><br><span class=\"line\">    # 标题</span><br><span class=\"line\">    msg[&#x27;Subject&#x27;] = &#x27;小姐姐照片&#x27;</span><br><span class=\"line\">    msg[&#x27;From&#x27;] = sender  # 发送方邮箱</span><br><span class=\"line\">    msg[&#x27;To&#x27;] = receiver  # 接收方邮箱</span><br><span class=\"line\"></span><br><span class=\"line\">    # 邮件正文</span><br><span class=\"line\">    text = &#x27;你要的小姐姐照片到了,请接收&#x27;</span><br><span class=\"line\">    text_plain = MIMEText(text, &#x27;plain&#x27;, &#x27;utf-8&#x27;)  # 正文转码</span><br><span class=\"line\">    msg.attach(text_plain)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 图片附件</span><br><span class=\"line\">    SendImageFile = open(&#x27;E:/SavePicture-camera/001.jpg&#x27;, &#x27;rb&#x27;).read()  # 这里放你保存图片的地址</span><br><span class=\"line\">    image = MIMEImage(SendImageFile)</span><br><span class=\"line\"></span><br><span class=\"line\">    # 将收件人看见的附件照片名称改为people.png.</span><br><span class=\"line\">    image[&#x27;Content-Disposition&#x27;] = &#x27;attachment; filename = &quot;people.png&quot;&#x27;</span><br><span class=\"line\">    msg.attach(image)</span><br><span class=\"line\">    return msg.as_string()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def SendEmail(msg):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    发送邮件</span><br><span class=\"line\">    :param msg:邮件内容</span><br><span class=\"line\">    :return:</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    smtp = smtplib.SMTP()</span><br><span class=\"line\">    smtp.connect(host, port=25)</span><br><span class=\"line\">    smtp.login(sender, pwd)</span><br><span class=\"line\">    smtp.sendmail(sender, receiver, msg)</span><br><span class=\"line\">    time.sleep(2)</span><br><span class=\"line\">    smtp.quit()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    # 1.拍照保存</span><br><span class=\"line\">    GetPicture()</span><br><span class=\"line\">    # 2.设置邮件格式</span><br><span class=\"line\">    msg = SetMsg()</span><br><span class=\"line\">    # 3.发送邮件</span><br><span class=\"line\">    SendEmail(msg)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Opencv 入门篇学习记录（其他基础）","_content":"# Opencv 入门篇学习记录(其他基础)\n<!--more-->\n## 鼠标绘制基本操作\n\n代码如下：\n```\nimport numpy as np\nimport cv2 as cv\n\n\n# 鼠标回调函数\ndef draw_circle(event, x, y, flags, param):\n    if event == cv.EVENT_LBUTTONDBLCLK:\n        cv.circle(img, (x, y), 100, (255, 0, 0), -1)\n\n\n# 创建一个黑色的图像，一个窗口，并绑定到窗口的功能\n'''\ndst=np.zeros((height,width,3),np.uint8)\n这个里面的3是三个通道的意思\n创建黑色图像\n'''\nimg = np.zeros((512, 512, 3), np.uint8)\n# 创建一个窗口\ncv.namedWindow('image')\n'''\nsetMouseCallback(windowName, onMouse [, param]) -> None\nwindowName: 窗口名称\nonMouse: 鼠标动作函数\n'''\ncv.setMouseCallback('image', draw_circle)\nwhile 1:\n    cv.imshow('image', img)\n    if cv.waitKey(20) & 0xFF == 27:\n        break\ncv.destroyAllWindows()\n\n```\n\n## 举例，鼠标绘制矩形\n```\nimport numpy as np\nimport cv2 as cv\n\ndrawing = False  # 如果按下鼠标，则为真\nmode = True  # 如果为真，绘制矩形。按 m 键可以切换到曲线\nix, iy = -1, -1\n\n\n# 鼠标回调函数\ndef draw_circle(event, x, y, flags, param):\n    global ix, iy, drawing, mode\n    if event == cv.EVENT_LBUTTONDOWN:\n        drawing = True\n        ix, iy = x, y\n    elif event == cv.EVENT_MOUSEMOVE:\n        if drawing == True:\n            if mode == True:\n                cv.rectangle(img, (ix, iy), (x, y), (222, 100, 66), -1)\n            else:\n                cv.circle(img, (x, y), 5, (0, 0, 255), -1)\n    elif event == cv.EVENT_LBUTTONUP:\n        drawing = False\n        if mode == True:\n            # 绘制最后鼠标左键释放是的坐标点位置\n            cv.rectangle(img, (ix, iy), (x, y), (0, 0, 255), 2)\n        else:\n            cv.circle(img, (x, y), 5, (0, 0, 255), -1)\n\n\n# 创建黑色图像和窗口，绑定鼠标动作函数\nimg = np.zeros((512, 512, 3), np.uint8)\ncv.namedWindow('image')\ncv.setMouseCallback('image', draw_circle)\nwhile 1:\n    cv.imshow('image', img)\n    if cv.waitKey(1) == 27:\n        break\n\ncv.destroyAllWindows()\n\n```\n\n## 轨迹栏作为调色盘\n```\nimport numpy as np\nimport cv2 as cv\n\n\ndef nothing(x):\n    pass\n\n\n#  创建一个黑色的图像，一个窗口\n'''\ndst=np.zeros((height,width,3),np.uint8)\n这个里面的3是三个通道的意思\n'''\nimg = np.zeros((300, 512, 3), np.uint8)\ncv.namedWindow('image')\n\n'''\ndef createTrackbar(trackbarName, windowName, value, count, onChange): \n对于cv.getTrackbarPos()函数\n第一个参数是轨迹栏名称\n第二个参数是它附加到的窗口名称\n第三个参数是默认值，第四个参数是最大值\n第五个是执行的回调函数每次跟踪栏值更改\n回调函数始终具有默认参数，即轨迹栏位置\n'''\n# 创建颜色变化的轨迹栏\ncv.createTrackbar('R', 'image', 0, 255, nothing)\ncv.createTrackbar('G', 'image', 0, 255, nothing)\ncv.createTrackbar('B', 'image', 0, 255, nothing)\n# 为 ON/OFF 功能创建开关\nswitch = '0 : OFF \\n1 : ON'\ncv.createTrackbar(switch, 'image', 0, 1, nothing)\nwhile 1:\n    cv.imshow('image', img)\n    k = cv.waitKey(1) & 0xFF\n    if k == 27:\n        break\n    # 得到四条轨迹的当前位置\n    r = cv.getTrackbarPos('R', 'image')\n    g = cv.getTrackbarPos('G', 'image')\n    b = cv.getTrackbarPos('B', 'image')\n    s = cv.getTrackbarPos(switch, 'image')\n    if s == 0:\n        img[:] = 0\n    else:\n        img[:] = [b, g, r]\ncv.destroyAllWindows()\n\n```","source":"_posts/OpenCV/图像入门/OpenCV-Otherbase.md","raw":"---\ntitle: Opencv 入门篇学习记录（其他基础）\n---\n# Opencv 入门篇学习记录(其他基础)\n<!--more-->\n## 鼠标绘制基本操作\n\n代码如下：\n```\nimport numpy as np\nimport cv2 as cv\n\n\n# 鼠标回调函数\ndef draw_circle(event, x, y, flags, param):\n    if event == cv.EVENT_LBUTTONDBLCLK:\n        cv.circle(img, (x, y), 100, (255, 0, 0), -1)\n\n\n# 创建一个黑色的图像，一个窗口，并绑定到窗口的功能\n'''\ndst=np.zeros((height,width,3),np.uint8)\n这个里面的3是三个通道的意思\n创建黑色图像\n'''\nimg = np.zeros((512, 512, 3), np.uint8)\n# 创建一个窗口\ncv.namedWindow('image')\n'''\nsetMouseCallback(windowName, onMouse [, param]) -> None\nwindowName: 窗口名称\nonMouse: 鼠标动作函数\n'''\ncv.setMouseCallback('image', draw_circle)\nwhile 1:\n    cv.imshow('image', img)\n    if cv.waitKey(20) & 0xFF == 27:\n        break\ncv.destroyAllWindows()\n\n```\n\n## 举例，鼠标绘制矩形\n```\nimport numpy as np\nimport cv2 as cv\n\ndrawing = False  # 如果按下鼠标，则为真\nmode = True  # 如果为真，绘制矩形。按 m 键可以切换到曲线\nix, iy = -1, -1\n\n\n# 鼠标回调函数\ndef draw_circle(event, x, y, flags, param):\n    global ix, iy, drawing, mode\n    if event == cv.EVENT_LBUTTONDOWN:\n        drawing = True\n        ix, iy = x, y\n    elif event == cv.EVENT_MOUSEMOVE:\n        if drawing == True:\n            if mode == True:\n                cv.rectangle(img, (ix, iy), (x, y), (222, 100, 66), -1)\n            else:\n                cv.circle(img, (x, y), 5, (0, 0, 255), -1)\n    elif event == cv.EVENT_LBUTTONUP:\n        drawing = False\n        if mode == True:\n            # 绘制最后鼠标左键释放是的坐标点位置\n            cv.rectangle(img, (ix, iy), (x, y), (0, 0, 255), 2)\n        else:\n            cv.circle(img, (x, y), 5, (0, 0, 255), -1)\n\n\n# 创建黑色图像和窗口，绑定鼠标动作函数\nimg = np.zeros((512, 512, 3), np.uint8)\ncv.namedWindow('image')\ncv.setMouseCallback('image', draw_circle)\nwhile 1:\n    cv.imshow('image', img)\n    if cv.waitKey(1) == 27:\n        break\n\ncv.destroyAllWindows()\n\n```\n\n## 轨迹栏作为调色盘\n```\nimport numpy as np\nimport cv2 as cv\n\n\ndef nothing(x):\n    pass\n\n\n#  创建一个黑色的图像，一个窗口\n'''\ndst=np.zeros((height,width,3),np.uint8)\n这个里面的3是三个通道的意思\n'''\nimg = np.zeros((300, 512, 3), np.uint8)\ncv.namedWindow('image')\n\n'''\ndef createTrackbar(trackbarName, windowName, value, count, onChange): \n对于cv.getTrackbarPos()函数\n第一个参数是轨迹栏名称\n第二个参数是它附加到的窗口名称\n第三个参数是默认值，第四个参数是最大值\n第五个是执行的回调函数每次跟踪栏值更改\n回调函数始终具有默认参数，即轨迹栏位置\n'''\n# 创建颜色变化的轨迹栏\ncv.createTrackbar('R', 'image', 0, 255, nothing)\ncv.createTrackbar('G', 'image', 0, 255, nothing)\ncv.createTrackbar('B', 'image', 0, 255, nothing)\n# 为 ON/OFF 功能创建开关\nswitch = '0 : OFF \\n1 : ON'\ncv.createTrackbar(switch, 'image', 0, 1, nothing)\nwhile 1:\n    cv.imshow('image', img)\n    k = cv.waitKey(1) & 0xFF\n    if k == 27:\n        break\n    # 得到四条轨迹的当前位置\n    r = cv.getTrackbarPos('R', 'image')\n    g = cv.getTrackbarPos('G', 'image')\n    b = cv.getTrackbarPos('B', 'image')\n    s = cv.getTrackbarPos(switch, 'image')\n    if s == 0:\n        img[:] = 0\n    else:\n        img[:] = [b, g, r]\ncv.destroyAllWindows()\n\n```","slug":"OpenCV/图像入门/OpenCV-Otherbase","published":1,"date":"2022-05-25T10:06:34.622Z","updated":"2022-04-11T10:09:28.488Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeps001a68urac7o452y","content":"<h1 id=\"Opencv-入门篇学习记录-其他基础\"><a href=\"#Opencv-入门篇学习记录-其他基础\" class=\"headerlink\" title=\"Opencv 入门篇学习记录(其他基础)\"></a>Opencv 入门篇学习记录(其他基础)</h1><span id=\"more\"></span>\n<h2 id=\"鼠标绘制基本操作\"><a href=\"#鼠标绘制基本操作\" class=\"headerlink\" title=\"鼠标绘制基本操作\"></a>鼠标绘制基本操作</h2><p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 鼠标回调函数</span><br><span class=\"line\">def draw_circle(event, x, y, flags, param):</span><br><span class=\"line\">    if event == cv.EVENT_LBUTTONDBLCLK:</span><br><span class=\"line\">        cv.circle(img, (x, y), 100, (255, 0, 0), -1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 创建一个黑色的图像，一个窗口，并绑定到窗口的功能</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">dst=np.zeros((height,width,3),np.uint8)</span><br><span class=\"line\">这个里面的3是三个通道的意思</span><br><span class=\"line\">创建黑色图像</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img = np.zeros((512, 512, 3), np.uint8)</span><br><span class=\"line\"># 创建一个窗口</span><br><span class=\"line\">cv.namedWindow(&#x27;image&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">setMouseCallback(windowName, onMouse [, param]) -&gt; None</span><br><span class=\"line\">windowName: 窗口名称</span><br><span class=\"line\">onMouse: 鼠标动作函数</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.setMouseCallback(&#x27;image&#x27;, draw_circle)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    cv.imshow(&#x27;image&#x27;, img)</span><br><span class=\"line\">    if cv.waitKey(20) &amp; 0xFF == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"举例，鼠标绘制矩形\"><a href=\"#举例，鼠标绘制矩形\" class=\"headerlink\" title=\"举例，鼠标绘制矩形\"></a>举例，鼠标绘制矩形</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">drawing = False  # 如果按下鼠标，则为真</span><br><span class=\"line\">mode = True  # 如果为真，绘制矩形。按 m 键可以切换到曲线</span><br><span class=\"line\">ix, iy = -1, -1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 鼠标回调函数</span><br><span class=\"line\">def draw_circle(event, x, y, flags, param):</span><br><span class=\"line\">    global ix, iy, drawing, mode</span><br><span class=\"line\">    if event == cv.EVENT_LBUTTONDOWN:</span><br><span class=\"line\">        drawing = True</span><br><span class=\"line\">        ix, iy = x, y</span><br><span class=\"line\">    elif event == cv.EVENT_MOUSEMOVE:</span><br><span class=\"line\">        if drawing == True:</span><br><span class=\"line\">            if mode == True:</span><br><span class=\"line\">                cv.rectangle(img, (ix, iy), (x, y), (222, 100, 66), -1)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                cv.circle(img, (x, y), 5, (0, 0, 255), -1)</span><br><span class=\"line\">    elif event == cv.EVENT_LBUTTONUP:</span><br><span class=\"line\">        drawing = False</span><br><span class=\"line\">        if mode == True:</span><br><span class=\"line\">            # 绘制最后鼠标左键释放是的坐标点位置</span><br><span class=\"line\">            cv.rectangle(img, (ix, iy), (x, y), (0, 0, 255), 2)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            cv.circle(img, (x, y), 5, (0, 0, 255), -1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 创建黑色图像和窗口，绑定鼠标动作函数</span><br><span class=\"line\">img = np.zeros((512, 512, 3), np.uint8)</span><br><span class=\"line\">cv.namedWindow(&#x27;image&#x27;)</span><br><span class=\"line\">cv.setMouseCallback(&#x27;image&#x27;, draw_circle)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    cv.imshow(&#x27;image&#x27;, img)</span><br><span class=\"line\">    if cv.waitKey(1) == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\"></span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"轨迹栏作为调色盘\"><a href=\"#轨迹栏作为调色盘\" class=\"headerlink\" title=\"轨迹栏作为调色盘\"></a>轨迹栏作为调色盘</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def nothing(x):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#  创建一个黑色的图像，一个窗口</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">dst=np.zeros((height,width,3),np.uint8)</span><br><span class=\"line\">这个里面的3是三个通道的意思</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img = np.zeros((300, 512, 3), np.uint8)</span><br><span class=\"line\">cv.namedWindow(&#x27;image&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def createTrackbar(trackbarName, windowName, value, count, onChange): </span><br><span class=\"line\">对于cv.getTrackbarPos()函数</span><br><span class=\"line\">第一个参数是轨迹栏名称</span><br><span class=\"line\">第二个参数是它附加到的窗口名称</span><br><span class=\"line\">第三个参数是默认值，第四个参数是最大值</span><br><span class=\"line\">第五个是执行的回调函数每次跟踪栏值更改</span><br><span class=\"line\">回调函数始终具有默认参数，即轨迹栏位置</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 创建颜色变化的轨迹栏</span><br><span class=\"line\">cv.createTrackbar(&#x27;R&#x27;, &#x27;image&#x27;, 0, 255, nothing)</span><br><span class=\"line\">cv.createTrackbar(&#x27;G&#x27;, &#x27;image&#x27;, 0, 255, nothing)</span><br><span class=\"line\">cv.createTrackbar(&#x27;B&#x27;, &#x27;image&#x27;, 0, 255, nothing)</span><br><span class=\"line\"># 为 ON/OFF 功能创建开关</span><br><span class=\"line\">switch = &#x27;0 : OFF \\n1 : ON&#x27;</span><br><span class=\"line\">cv.createTrackbar(switch, &#x27;image&#x27;, 0, 1, nothing)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    cv.imshow(&#x27;image&#x27;, img)</span><br><span class=\"line\">    k = cv.waitKey(1) &amp; 0xFF</span><br><span class=\"line\">    if k == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">    # 得到四条轨迹的当前位置</span><br><span class=\"line\">    r = cv.getTrackbarPos(&#x27;R&#x27;, &#x27;image&#x27;)</span><br><span class=\"line\">    g = cv.getTrackbarPos(&#x27;G&#x27;, &#x27;image&#x27;)</span><br><span class=\"line\">    b = cv.getTrackbarPos(&#x27;B&#x27;, &#x27;image&#x27;)</span><br><span class=\"line\">    s = cv.getTrackbarPos(switch, &#x27;image&#x27;)</span><br><span class=\"line\">    if s == 0:</span><br><span class=\"line\">        img[:] = 0</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        img[:] = [b, g, r]</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"Opencv-入门篇学习记录-其他基础\"><a href=\"#Opencv-入门篇学习记录-其他基础\" class=\"headerlink\" title=\"Opencv 入门篇学习记录(其他基础)\"></a>Opencv 入门篇学习记录(其他基础)</h1>","more":"<h2 id=\"鼠标绘制基本操作\"><a href=\"#鼠标绘制基本操作\" class=\"headerlink\" title=\"鼠标绘制基本操作\"></a>鼠标绘制基本操作</h2><p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 鼠标回调函数</span><br><span class=\"line\">def draw_circle(event, x, y, flags, param):</span><br><span class=\"line\">    if event == cv.EVENT_LBUTTONDBLCLK:</span><br><span class=\"line\">        cv.circle(img, (x, y), 100, (255, 0, 0), -1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 创建一个黑色的图像，一个窗口，并绑定到窗口的功能</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">dst=np.zeros((height,width,3),np.uint8)</span><br><span class=\"line\">这个里面的3是三个通道的意思</span><br><span class=\"line\">创建黑色图像</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img = np.zeros((512, 512, 3), np.uint8)</span><br><span class=\"line\"># 创建一个窗口</span><br><span class=\"line\">cv.namedWindow(&#x27;image&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">setMouseCallback(windowName, onMouse [, param]) -&gt; None</span><br><span class=\"line\">windowName: 窗口名称</span><br><span class=\"line\">onMouse: 鼠标动作函数</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.setMouseCallback(&#x27;image&#x27;, draw_circle)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    cv.imshow(&#x27;image&#x27;, img)</span><br><span class=\"line\">    if cv.waitKey(20) &amp; 0xFF == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"举例，鼠标绘制矩形\"><a href=\"#举例，鼠标绘制矩形\" class=\"headerlink\" title=\"举例，鼠标绘制矩形\"></a>举例，鼠标绘制矩形</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">drawing = False  # 如果按下鼠标，则为真</span><br><span class=\"line\">mode = True  # 如果为真，绘制矩形。按 m 键可以切换到曲线</span><br><span class=\"line\">ix, iy = -1, -1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 鼠标回调函数</span><br><span class=\"line\">def draw_circle(event, x, y, flags, param):</span><br><span class=\"line\">    global ix, iy, drawing, mode</span><br><span class=\"line\">    if event == cv.EVENT_LBUTTONDOWN:</span><br><span class=\"line\">        drawing = True</span><br><span class=\"line\">        ix, iy = x, y</span><br><span class=\"line\">    elif event == cv.EVENT_MOUSEMOVE:</span><br><span class=\"line\">        if drawing == True:</span><br><span class=\"line\">            if mode == True:</span><br><span class=\"line\">                cv.rectangle(img, (ix, iy), (x, y), (222, 100, 66), -1)</span><br><span class=\"line\">            else:</span><br><span class=\"line\">                cv.circle(img, (x, y), 5, (0, 0, 255), -1)</span><br><span class=\"line\">    elif event == cv.EVENT_LBUTTONUP:</span><br><span class=\"line\">        drawing = False</span><br><span class=\"line\">        if mode == True:</span><br><span class=\"line\">            # 绘制最后鼠标左键释放是的坐标点位置</span><br><span class=\"line\">            cv.rectangle(img, (ix, iy), (x, y), (0, 0, 255), 2)</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            cv.circle(img, (x, y), 5, (0, 0, 255), -1)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 创建黑色图像和窗口，绑定鼠标动作函数</span><br><span class=\"line\">img = np.zeros((512, 512, 3), np.uint8)</span><br><span class=\"line\">cv.namedWindow(&#x27;image&#x27;)</span><br><span class=\"line\">cv.setMouseCallback(&#x27;image&#x27;, draw_circle)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    cv.imshow(&#x27;image&#x27;, img)</span><br><span class=\"line\">    if cv.waitKey(1) == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\"></span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"轨迹栏作为调色盘\"><a href=\"#轨迹栏作为调色盘\" class=\"headerlink\" title=\"轨迹栏作为调色盘\"></a>轨迹栏作为调色盘</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def nothing(x):</span><br><span class=\"line\">    pass</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#  创建一个黑色的图像，一个窗口</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">dst=np.zeros((height,width,3),np.uint8)</span><br><span class=\"line\">这个里面的3是三个通道的意思</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img = np.zeros((300, 512, 3), np.uint8)</span><br><span class=\"line\">cv.namedWindow(&#x27;image&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def createTrackbar(trackbarName, windowName, value, count, onChange): </span><br><span class=\"line\">对于cv.getTrackbarPos()函数</span><br><span class=\"line\">第一个参数是轨迹栏名称</span><br><span class=\"line\">第二个参数是它附加到的窗口名称</span><br><span class=\"line\">第三个参数是默认值，第四个参数是最大值</span><br><span class=\"line\">第五个是执行的回调函数每次跟踪栏值更改</span><br><span class=\"line\">回调函数始终具有默认参数，即轨迹栏位置</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 创建颜色变化的轨迹栏</span><br><span class=\"line\">cv.createTrackbar(&#x27;R&#x27;, &#x27;image&#x27;, 0, 255, nothing)</span><br><span class=\"line\">cv.createTrackbar(&#x27;G&#x27;, &#x27;image&#x27;, 0, 255, nothing)</span><br><span class=\"line\">cv.createTrackbar(&#x27;B&#x27;, &#x27;image&#x27;, 0, 255, nothing)</span><br><span class=\"line\"># 为 ON/OFF 功能创建开关</span><br><span class=\"line\">switch = &#x27;0 : OFF \\n1 : ON&#x27;</span><br><span class=\"line\">cv.createTrackbar(switch, &#x27;image&#x27;, 0, 1, nothing)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    cv.imshow(&#x27;image&#x27;, img)</span><br><span class=\"line\">    k = cv.waitKey(1) &amp; 0xFF</span><br><span class=\"line\">    if k == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">    # 得到四条轨迹的当前位置</span><br><span class=\"line\">    r = cv.getTrackbarPos(&#x27;R&#x27;, &#x27;image&#x27;)</span><br><span class=\"line\">    g = cv.getTrackbarPos(&#x27;G&#x27;, &#x27;image&#x27;)</span><br><span class=\"line\">    b = cv.getTrackbarPos(&#x27;B&#x27;, &#x27;image&#x27;)</span><br><span class=\"line\">    s = cv.getTrackbarPos(switch, &#x27;image&#x27;)</span><br><span class=\"line\">    if s == 0:</span><br><span class=\"line\">        img[:] = 0</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        img[:] = [b, g, r]</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"Opencv 入门篇学习记录（视频）","_content":"# Opencv 入门篇学习记录(视频)\n<!--more-->\n## 读取视频和实时处理\n代码如下：\n\n```\nimport numpy as np\nimport cv2\n\n# 开启摄像头，创建VideoCapture对象，打开摄像头\ncap = cv2.VideoCapture(0)\n# cap.isOpened(),判断摄像头是否开启\nif not cap.isOpened():\n    print(\"Cannot open camera\")\n    exit()\nwhile True:\n    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理\n    ret, frame = cap.read()\n    # 如果正确读取帧，ret为True\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    '''\n    对获取到的图像进行处理\n    '''\n    # 转换图像为灰度图像\n    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n    # 图像翻转         图像文件 翻转控制代码\n    # frame = cv2.flip(frame, 0)  # 0：垂直翻转\n    frame = cv2.flip(frame, 1)  # >0：水平翻转\n    # frame = cv2.flip(frame, -1)   # <0: 垂直和水平同时翻转\n\n    # 在图像中画出矩形\n    cv2.rectangle(frame, (0, 0), (100, 100), (255, 0, 0), 2)\n    # 显示结果帧\n    cv2.imshow('frame', frame)\n    # 按ESC退出\n    if cv2.waitKey(1) == 27:\n        break\n\n# 释放缓存\ncap.release()\n# 关闭所有窗口\ncv2.destroyAllWindows()\n\n```\n\n## 视频保存\n代码如下：\n\n```\nimport numpy as np\nimport cv2 as cv\ncap = cv.VideoCapture(0)\n# 定义编解码器并创建VideoWriter对象\nfourcc = cv.VideoWriter_fourcc(*'XVID')\n# 保存视频文件\n'''\nout = cv2.VideoWriter(filename,fourcc, fps, frameSize)\n参数：\nfilename：视频保存的位置\nfourcc：指定视频编解码器的4字节代码\nfps：帧率\nframeSize：帧大小\n'''\nout = cv.VideoWriter('output.avi', fourcc, 20.0, (640,  480))\nwhile cap.isOpened():\n    ret, frame = cap.read()\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    frame = cv.flip(frame, 1)\n    # 写翻转的框架\n    out.write(frame)\n    cv.imshow('frame', frame)\n    if cv.waitKey(1) == ord('q'):\n        break\n# 完成工作后释放所有内容\ncap.release()\nout.release()\ncv.destroyAllWindows()\n```","source":"_posts/OpenCV/图像入门/OpenCV-Videobase.md","raw":"---\ntitle: Opencv 入门篇学习记录（视频）\n---\n# Opencv 入门篇学习记录(视频)\n<!--more-->\n## 读取视频和实时处理\n代码如下：\n\n```\nimport numpy as np\nimport cv2\n\n# 开启摄像头，创建VideoCapture对象，打开摄像头\ncap = cv2.VideoCapture(0)\n# cap.isOpened(),判断摄像头是否开启\nif not cap.isOpened():\n    print(\"Cannot open camera\")\n    exit()\nwhile True:\n    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理\n    ret, frame = cap.read()\n    # 如果正确读取帧，ret为True\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    '''\n    对获取到的图像进行处理\n    '''\n    # 转换图像为灰度图像\n    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n    # 图像翻转         图像文件 翻转控制代码\n    # frame = cv2.flip(frame, 0)  # 0：垂直翻转\n    frame = cv2.flip(frame, 1)  # >0：水平翻转\n    # frame = cv2.flip(frame, -1)   # <0: 垂直和水平同时翻转\n\n    # 在图像中画出矩形\n    cv2.rectangle(frame, (0, 0), (100, 100), (255, 0, 0), 2)\n    # 显示结果帧\n    cv2.imshow('frame', frame)\n    # 按ESC退出\n    if cv2.waitKey(1) == 27:\n        break\n\n# 释放缓存\ncap.release()\n# 关闭所有窗口\ncv2.destroyAllWindows()\n\n```\n\n## 视频保存\n代码如下：\n\n```\nimport numpy as np\nimport cv2 as cv\ncap = cv.VideoCapture(0)\n# 定义编解码器并创建VideoWriter对象\nfourcc = cv.VideoWriter_fourcc(*'XVID')\n# 保存视频文件\n'''\nout = cv2.VideoWriter(filename,fourcc, fps, frameSize)\n参数：\nfilename：视频保存的位置\nfourcc：指定视频编解码器的4字节代码\nfps：帧率\nframeSize：帧大小\n'''\nout = cv.VideoWriter('output.avi', fourcc, 20.0, (640,  480))\nwhile cap.isOpened():\n    ret, frame = cap.read()\n    if not ret:\n        print(\"Can't receive frame (stream end?). Exiting ...\")\n        break\n    frame = cv.flip(frame, 1)\n    # 写翻转的框架\n    out.write(frame)\n    cv.imshow('frame', frame)\n    if cv.waitKey(1) == ord('q'):\n        break\n# 完成工作后释放所有内容\ncap.release()\nout.release()\ncv.destroyAllWindows()\n```","slug":"OpenCV/图像入门/OpenCV-Videobase","published":1,"date":"2022-05-25T10:06:34.661Z","updated":"2022-04-12T08:20:52.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceept001b68ur4ns8484x","content":"<h1 id=\"Opencv-入门篇学习记录-视频\"><a href=\"#Opencv-入门篇学习记录-视频\" class=\"headerlink\" title=\"Opencv 入门篇学习记录(视频)\"></a>Opencv 入门篇学习记录(视频)</h1><span id=\"more\"></span>\n<h2 id=\"读取视频和实时处理\"><a href=\"#读取视频和实时处理\" class=\"headerlink\" title=\"读取视频和实时处理\"></a>读取视频和实时处理</h2><p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2</span><br><span class=\"line\"></span><br><span class=\"line\"># 开启摄像头，创建VideoCapture对象，打开摄像头</span><br><span class=\"line\">cap = cv2.VideoCapture(0)</span><br><span class=\"line\"># cap.isOpened(),判断摄像头是否开启</span><br><span class=\"line\">if not cap.isOpened():</span><br><span class=\"line\">    print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">    exit()</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    # 如果正确读取帧，ret为True</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    对获取到的图像进行处理</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 转换图像为灰度图像</span><br><span class=\"line\">    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">    # 图像翻转         图像文件 翻转控制代码</span><br><span class=\"line\">    # frame = cv2.flip(frame, 0)  # 0：垂直翻转</span><br><span class=\"line\">    frame = cv2.flip(frame, 1)  # &gt;0：水平翻转</span><br><span class=\"line\">    # frame = cv2.flip(frame, -1)   # &lt;0: 垂直和水平同时翻转</span><br><span class=\"line\"></span><br><span class=\"line\">    # 在图像中画出矩形</span><br><span class=\"line\">    cv2.rectangle(frame, (0, 0), (100, 100), (255, 0, 0), 2)</span><br><span class=\"line\">    # 显示结果帧</span><br><span class=\"line\">    cv2.imshow(&#x27;frame&#x27;, frame)</span><br><span class=\"line\">    # 按ESC退出</span><br><span class=\"line\">    if cv2.waitKey(1) == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\"></span><br><span class=\"line\"># 释放缓存</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\"># 关闭所有窗口</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"视频保存\"><a href=\"#视频保存\" class=\"headerlink\" title=\"视频保存\"></a>视频保存</h2><p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">cap = cv.VideoCapture(0)</span><br><span class=\"line\"># 定义编解码器并创建VideoWriter对象</span><br><span class=\"line\">fourcc = cv.VideoWriter_fourcc(*&#x27;XVID&#x27;)</span><br><span class=\"line\"># 保存视频文件</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">out = cv2.VideoWriter(filename,fourcc, fps, frameSize)</span><br><span class=\"line\">参数：</span><br><span class=\"line\">filename：视频保存的位置</span><br><span class=\"line\">fourcc：指定视频编解码器的4字节代码</span><br><span class=\"line\">fps：帧率</span><br><span class=\"line\">frameSize：帧大小</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">out = cv.VideoWriter(&#x27;output.avi&#x27;, fourcc, 20.0, (640,  480))</span><br><span class=\"line\">while cap.isOpened():</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    frame = cv.flip(frame, 1)</span><br><span class=\"line\">    # 写翻转的框架</span><br><span class=\"line\">    out.write(frame)</span><br><span class=\"line\">    cv.imshow(&#x27;frame&#x27;, frame)</span><br><span class=\"line\">    if cv.waitKey(1) == ord(&#x27;q&#x27;):</span><br><span class=\"line\">        break</span><br><span class=\"line\"># 完成工作后释放所有内容</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">out.release()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"Opencv-入门篇学习记录-视频\"><a href=\"#Opencv-入门篇学习记录-视频\" class=\"headerlink\" title=\"Opencv 入门篇学习记录(视频)\"></a>Opencv 入门篇学习记录(视频)</h1>","more":"<h2 id=\"读取视频和实时处理\"><a href=\"#读取视频和实时处理\" class=\"headerlink\" title=\"读取视频和实时处理\"></a>读取视频和实时处理</h2><p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2</span><br><span class=\"line\"></span><br><span class=\"line\"># 开启摄像头，创建VideoCapture对象，打开摄像头</span><br><span class=\"line\">cap = cv2.VideoCapture(0)</span><br><span class=\"line\"># cap.isOpened(),判断摄像头是否开启</span><br><span class=\"line\">if not cap.isOpened():</span><br><span class=\"line\">    print(&quot;Cannot open camera&quot;)</span><br><span class=\"line\">    exit()</span><br><span class=\"line\">while True:</span><br><span class=\"line\">    # 逐帧捕获，这里获取到得图像是镜像的，后续需要对其进行处理</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    # 如果正确读取帧，ret为True</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    对获取到的图像进行处理</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 转换图像为灰度图像</span><br><span class=\"line\">    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\">    # 图像翻转         图像文件 翻转控制代码</span><br><span class=\"line\">    # frame = cv2.flip(frame, 0)  # 0：垂直翻转</span><br><span class=\"line\">    frame = cv2.flip(frame, 1)  # &gt;0：水平翻转</span><br><span class=\"line\">    # frame = cv2.flip(frame, -1)   # &lt;0: 垂直和水平同时翻转</span><br><span class=\"line\"></span><br><span class=\"line\">    # 在图像中画出矩形</span><br><span class=\"line\">    cv2.rectangle(frame, (0, 0), (100, 100), (255, 0, 0), 2)</span><br><span class=\"line\">    # 显示结果帧</span><br><span class=\"line\">    cv2.imshow(&#x27;frame&#x27;, frame)</span><br><span class=\"line\">    # 按ESC退出</span><br><span class=\"line\">    if cv2.waitKey(1) == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\"></span><br><span class=\"line\"># 释放缓存</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\"># 关闭所有窗口</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"视频保存\"><a href=\"#视频保存\" class=\"headerlink\" title=\"视频保存\"></a>视频保存</h2><p>代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">cap = cv.VideoCapture(0)</span><br><span class=\"line\"># 定义编解码器并创建VideoWriter对象</span><br><span class=\"line\">fourcc = cv.VideoWriter_fourcc(*&#x27;XVID&#x27;)</span><br><span class=\"line\"># 保存视频文件</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">out = cv2.VideoWriter(filename,fourcc, fps, frameSize)</span><br><span class=\"line\">参数：</span><br><span class=\"line\">filename：视频保存的位置</span><br><span class=\"line\">fourcc：指定视频编解码器的4字节代码</span><br><span class=\"line\">fps：帧率</span><br><span class=\"line\">frameSize：帧大小</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">out = cv.VideoWriter(&#x27;output.avi&#x27;, fourcc, 20.0, (640,  480))</span><br><span class=\"line\">while cap.isOpened():</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    if not ret:</span><br><span class=\"line\">        print(&quot;Can&#x27;t receive frame (stream end?). Exiting ...&quot;)</span><br><span class=\"line\">        break</span><br><span class=\"line\">    frame = cv.flip(frame, 1)</span><br><span class=\"line\">    # 写翻转的框架</span><br><span class=\"line\">    out.write(frame)</span><br><span class=\"line\">    cv.imshow(&#x27;frame&#x27;, frame)</span><br><span class=\"line\">    if cv.waitKey(1) == ord(&#x27;q&#x27;):</span><br><span class=\"line\">        break</span><br><span class=\"line\"># 完成工作后释放所有内容</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">out.release()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br></pre></td></tr></table></figure>"},{"title":"Opencv 入门篇学习记录（图片）","_content":"# Opencv 入门篇学习记录(图片)\n<!--more-->\n## 前言\n很早以前就接触Python了，大学的时候还自学了一段时间去做了课设，写了一些最速梯度下降法、黄金分割法、步长优化什么的。现在已经忘得差不多了。。。\n最近自学接触了OpenCV图像处理这个库，把自己的python学习过程记录一下。\n相关内容我都写到代码里了，直接贴代码，也方便复现\n## 图像入门基本函数：\n\n```\n# coding:utf-8\n\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n\n# 加载图片\n'''\nimread(img_path,flag) 读取图片，返回图片对象\n    img_path: 图片的路径，即使路径错误也不会报错，但打印返回的图片对象为None,路径前记得加r\n    flag：cv2.IMREAD_COLOR，读取彩色图片，图片透明性会被忽略，为默认参数，也可以传入1\n          cv2.IMREAD_GRAYSCALE,按灰度模式读取图像，也可以传入0\n          cv2.IMREAD_UNCHANGED,读取图像，包括其alpha通道，也可以传入-1\n'''\nimg = cv2.imread(r\"C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg\")\n\n'''\ncvtColor()函数，用于在图像中不同的色彩空间进行转换，用于后续处理\n'''\nimg_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n'''\n图像的二值化，就是将图像上的像素点的灰度值设置为0或255，也就是将整个图像呈现出明显的只有黑和白的视觉效果。\ncv2.threshold(img, threshold, maxval,type)\nthreshold是设定的阈值\nmaxval是当灰度值大于（或小于）阈值时将该灰度值赋成的值\ntype规定的是当前二值化的方式\n'''\nret, img_threshold = cv2.threshold(img_gray, 127, 255, cv2.THRESH_BINARY)\n\n'''\nimshow(window_name,img)：显示图片，窗口自适应图片大小\n    window_name: 指定窗口的名字\n    img：显示的图片对象\n    可以指定多个窗口名称，显示多个图片\n'''\ncv2.imshow(\"img\", img)\ncv2.imshow(\"thre\", img_threshold)\n\n'''\nwaitKey(millseconds)  键盘绑定事件，阻塞监听键盘按键，返回一个数字（不同按键对应的数字不同）\n    millseconds: 传入时间毫秒数，在该时间内等待键盘事件；传入0时，会一直等待键盘事件\n    \ndestroyAllWindows(window_name) \n    window_name: 需要关闭的窗口名字，不传入时关闭所有窗口\n'''\nkey = cv2.waitKey(0)\nif key == 27:  # 按esc键时，关闭所有窗口\n    print(key)\n    cv2.destroyAllWindows()\n'''\nimwrite(img_path_name,img)\n    img_path_name:保存的文件名,路径前记得加r\n    img：文件对象\n'''\ncv2.imwrite(r\"C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg\", img)\ncv2.imwrite(r\"C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg\", img_threshold)\n\n```\n\n## OpenCV画图方法\n```\nimport numpy as np\nimport cv2 as cv\n\n'''\nopencv常用画图方法\n'''\n\n# 创建黑色的图像\nimg = np.zeros((512, 512, 3), np.uint8)\n# 绘制一条厚度为5的蓝色对角线\n#       窗口图像名 起点坐标   终点坐标   RGB颜色（蓝色）线宽\ncv.line(img, (0, 0), (511, 511), (255, 0, 0), 5)\n#           窗口图像名   起点       终点        RGB颜色（绿色） 线宽\ncv.rectangle(img, (384, 0), (510, 128), (0, 255, 0), 3)  # 画法为左上往右下的对角线所形成的矩形\n#               圆心       半径   RGB       是否填充\ncv.circle(img, (447, 63), 63, (0, 0, 255), 2)  # -1：填充，其他值不填充，作为线宽参数，默认线宽为1\n# 绘制多边形\npts = np.array([[10, 5], [20, 30], [70, 20], [50, 10]], np.int32)\n# pts = pts.reshape((-1, 1, 2))\n# ture:为封闭图形 False:为多段折线，首尾那段不连接\ncv.polylines(img, [pts], True, (0, 255, 255))\n# 绘制文字\n# 字体设置\nfont = cv.FONT_HERSHEY_SIMPLEX\n# 绘制函数 绘制窗口名 绘制内容  起始位置 字体设置 字体大小比例  RGB 绘制线条粗细程度 线性  图像数据原点True为左下角，否则左上角(默认)\ncv.putText(img, 'OpenCV', (10, 500), font, 4, (255, 255, 255), 2, cv.LINE_AA)\n\n# 查看图像\ncv.imshow('image', img)\nk = cv.waitKey(0)\nif k == 27:  # 等待ESC退出\n    cv.destroyAllWindows()\nelif k == ord('s'):  # 等待关键字，保存和退出\n    cv.imwrite(r\"C:\\Users\\Admin\\Desktop\\opencv\\draw-001.jpg\", img)\n    cv.destroyAllWindows()\n\n```\n\n","source":"_posts/OpenCV/图像入门/OpenCV-picturebase.md","raw":"---\ntitle: Opencv 入门篇学习记录（图片）\n---\n# Opencv 入门篇学习记录(图片)\n<!--more-->\n## 前言\n很早以前就接触Python了，大学的时候还自学了一段时间去做了课设，写了一些最速梯度下降法、黄金分割法、步长优化什么的。现在已经忘得差不多了。。。\n最近自学接触了OpenCV图像处理这个库，把自己的python学习过程记录一下。\n相关内容我都写到代码里了，直接贴代码，也方便复现\n## 图像入门基本函数：\n\n```\n# coding:utf-8\n\nimport numpy as np\nimport cv2\nimport matplotlib.pyplot as plt\n\n# 加载图片\n'''\nimread(img_path,flag) 读取图片，返回图片对象\n    img_path: 图片的路径，即使路径错误也不会报错，但打印返回的图片对象为None,路径前记得加r\n    flag：cv2.IMREAD_COLOR，读取彩色图片，图片透明性会被忽略，为默认参数，也可以传入1\n          cv2.IMREAD_GRAYSCALE,按灰度模式读取图像，也可以传入0\n          cv2.IMREAD_UNCHANGED,读取图像，包括其alpha通道，也可以传入-1\n'''\nimg = cv2.imread(r\"C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg\")\n\n'''\ncvtColor()函数，用于在图像中不同的色彩空间进行转换，用于后续处理\n'''\nimg_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n'''\n图像的二值化，就是将图像上的像素点的灰度值设置为0或255，也就是将整个图像呈现出明显的只有黑和白的视觉效果。\ncv2.threshold(img, threshold, maxval,type)\nthreshold是设定的阈值\nmaxval是当灰度值大于（或小于）阈值时将该灰度值赋成的值\ntype规定的是当前二值化的方式\n'''\nret, img_threshold = cv2.threshold(img_gray, 127, 255, cv2.THRESH_BINARY)\n\n'''\nimshow(window_name,img)：显示图片，窗口自适应图片大小\n    window_name: 指定窗口的名字\n    img：显示的图片对象\n    可以指定多个窗口名称，显示多个图片\n'''\ncv2.imshow(\"img\", img)\ncv2.imshow(\"thre\", img_threshold)\n\n'''\nwaitKey(millseconds)  键盘绑定事件，阻塞监听键盘按键，返回一个数字（不同按键对应的数字不同）\n    millseconds: 传入时间毫秒数，在该时间内等待键盘事件；传入0时，会一直等待键盘事件\n    \ndestroyAllWindows(window_name) \n    window_name: 需要关闭的窗口名字，不传入时关闭所有窗口\n'''\nkey = cv2.waitKey(0)\nif key == 27:  # 按esc键时，关闭所有窗口\n    print(key)\n    cv2.destroyAllWindows()\n'''\nimwrite(img_path_name,img)\n    img_path_name:保存的文件名,路径前记得加r\n    img：文件对象\n'''\ncv2.imwrite(r\"C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg\", img)\ncv2.imwrite(r\"C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg\", img_threshold)\n\n```\n\n## OpenCV画图方法\n```\nimport numpy as np\nimport cv2 as cv\n\n'''\nopencv常用画图方法\n'''\n\n# 创建黑色的图像\nimg = np.zeros((512, 512, 3), np.uint8)\n# 绘制一条厚度为5的蓝色对角线\n#       窗口图像名 起点坐标   终点坐标   RGB颜色（蓝色）线宽\ncv.line(img, (0, 0), (511, 511), (255, 0, 0), 5)\n#           窗口图像名   起点       终点        RGB颜色（绿色） 线宽\ncv.rectangle(img, (384, 0), (510, 128), (0, 255, 0), 3)  # 画法为左上往右下的对角线所形成的矩形\n#               圆心       半径   RGB       是否填充\ncv.circle(img, (447, 63), 63, (0, 0, 255), 2)  # -1：填充，其他值不填充，作为线宽参数，默认线宽为1\n# 绘制多边形\npts = np.array([[10, 5], [20, 30], [70, 20], [50, 10]], np.int32)\n# pts = pts.reshape((-1, 1, 2))\n# ture:为封闭图形 False:为多段折线，首尾那段不连接\ncv.polylines(img, [pts], True, (0, 255, 255))\n# 绘制文字\n# 字体设置\nfont = cv.FONT_HERSHEY_SIMPLEX\n# 绘制函数 绘制窗口名 绘制内容  起始位置 字体设置 字体大小比例  RGB 绘制线条粗细程度 线性  图像数据原点True为左下角，否则左上角(默认)\ncv.putText(img, 'OpenCV', (10, 500), font, 4, (255, 255, 255), 2, cv.LINE_AA)\n\n# 查看图像\ncv.imshow('image', img)\nk = cv.waitKey(0)\nif k == 27:  # 等待ESC退出\n    cv.destroyAllWindows()\nelif k == ord('s'):  # 等待关键字，保存和退出\n    cv.imwrite(r\"C:\\Users\\Admin\\Desktop\\opencv\\draw-001.jpg\", img)\n    cv.destroyAllWindows()\n\n```\n\n","slug":"OpenCV/图像入门/OpenCV-picturebase","published":1,"date":"2022-05-25T10:06:34.639Z","updated":"2022-04-11T09:55:52.261Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepu001c68urethd8iin","content":"<h1 id=\"Opencv-入门篇学习记录-图片\"><a href=\"#Opencv-入门篇学习记录-图片\" class=\"headerlink\" title=\"Opencv 入门篇学习记录(图片)\"></a>Opencv 入门篇学习记录(图片)</h1><span id=\"more\"></span>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>很早以前就接触Python了，大学的时候还自学了一段时间去做了课设，写了一些最速梯度下降法、黄金分割法、步长优化什么的。现在已经忘得差不多了。。。<br>最近自学接触了OpenCV图像处理这个库，把自己的python学习过程记录一下。<br>相关内容我都写到代码里了，直接贴代码，也方便复现</p>\n<h2 id=\"图像入门基本函数：\"><a href=\"#图像入门基本函数：\" class=\"headerlink\" title=\"图像入门基本函数：\"></a>图像入门基本函数：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># coding:utf-8</span><br><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\"># 加载图片</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">imread(img_path,flag) 读取图片，返回图片对象</span><br><span class=\"line\">    img_path: 图片的路径，即使路径错误也不会报错，但打印返回的图片对象为None,路径前记得加r</span><br><span class=\"line\">    flag：cv2.IMREAD_COLOR，读取彩色图片，图片透明性会被忽略，为默认参数，也可以传入1</span><br><span class=\"line\">          cv2.IMREAD_GRAYSCALE,按灰度模式读取图像，也可以传入0</span><br><span class=\"line\">          cv2.IMREAD_UNCHANGED,读取图像，包括其alpha通道，也可以传入-1</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img = cv2.imread(r&quot;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cvtColor()函数，用于在图像中不同的色彩空间进行转换，用于后续处理</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像的二值化，就是将图像上的像素点的灰度值设置为0或255，也就是将整个图像呈现出明显的只有黑和白的视觉效果。</span><br><span class=\"line\">cv2.threshold(img, threshold, maxval,type)</span><br><span class=\"line\">threshold是设定的阈值</span><br><span class=\"line\">maxval是当灰度值大于（或小于）阈值时将该灰度值赋成的值</span><br><span class=\"line\">type规定的是当前二值化的方式</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">ret, img_threshold = cv2.threshold(img_gray, 127, 255, cv2.THRESH_BINARY)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">imshow(window_name,img)：显示图片，窗口自适应图片大小</span><br><span class=\"line\">    window_name: 指定窗口的名字</span><br><span class=\"line\">    img：显示的图片对象</span><br><span class=\"line\">    可以指定多个窗口名称，显示多个图片</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv2.imshow(&quot;img&quot;, img)</span><br><span class=\"line\">cv2.imshow(&quot;thre&quot;, img_threshold)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">waitKey(millseconds)  键盘绑定事件，阻塞监听键盘按键，返回一个数字（不同按键对应的数字不同）</span><br><span class=\"line\">    millseconds: 传入时间毫秒数，在该时间内等待键盘事件；传入0时，会一直等待键盘事件</span><br><span class=\"line\">    </span><br><span class=\"line\">destroyAllWindows(window_name) </span><br><span class=\"line\">    window_name: 需要关闭的窗口名字，不传入时关闭所有窗口</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">key = cv2.waitKey(0)</span><br><span class=\"line\">if key == 27:  # 按esc键时，关闭所有窗口</span><br><span class=\"line\">    print(key)</span><br><span class=\"line\">    cv2.destroyAllWindows()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">imwrite(img_path_name,img)</span><br><span class=\"line\">    img_path_name:保存的文件名,路径前记得加r</span><br><span class=\"line\">    img：文件对象</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv2.imwrite(r&quot;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&quot;, img)</span><br><span class=\"line\">cv2.imwrite(r&quot;C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg&quot;, img_threshold)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"OpenCV画图方法\"><a href=\"#OpenCV画图方法\" class=\"headerlink\" title=\"OpenCV画图方法\"></a>OpenCV画图方法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">opencv常用画图方法</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建黑色的图像</span><br><span class=\"line\">img = np.zeros((512, 512, 3), np.uint8)</span><br><span class=\"line\"># 绘制一条厚度为5的蓝色对角线</span><br><span class=\"line\">#       窗口图像名 起点坐标   终点坐标   RGB颜色（蓝色）线宽</span><br><span class=\"line\">cv.line(img, (0, 0), (511, 511), (255, 0, 0), 5)</span><br><span class=\"line\">#           窗口图像名   起点       终点        RGB颜色（绿色） 线宽</span><br><span class=\"line\">cv.rectangle(img, (384, 0), (510, 128), (0, 255, 0), 3)  # 画法为左上往右下的对角线所形成的矩形</span><br><span class=\"line\">#               圆心       半径   RGB       是否填充</span><br><span class=\"line\">cv.circle(img, (447, 63), 63, (0, 0, 255), 2)  # -1：填充，其他值不填充，作为线宽参数，默认线宽为1</span><br><span class=\"line\"># 绘制多边形</span><br><span class=\"line\">pts = np.array([[10, 5], [20, 30], [70, 20], [50, 10]], np.int32)</span><br><span class=\"line\"># pts = pts.reshape((-1, 1, 2))</span><br><span class=\"line\"># ture:为封闭图形 False:为多段折线，首尾那段不连接</span><br><span class=\"line\">cv.polylines(img, [pts], True, (0, 255, 255))</span><br><span class=\"line\"># 绘制文字</span><br><span class=\"line\"># 字体设置</span><br><span class=\"line\">font = cv.FONT_HERSHEY_SIMPLEX</span><br><span class=\"line\"># 绘制函数 绘制窗口名 绘制内容  起始位置 字体设置 字体大小比例  RGB 绘制线条粗细程度 线性  图像数据原点True为左下角，否则左上角(默认)</span><br><span class=\"line\">cv.putText(img, &#x27;OpenCV&#x27;, (10, 500), font, 4, (255, 255, 255), 2, cv.LINE_AA)</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看图像</span><br><span class=\"line\">cv.imshow(&#x27;image&#x27;, img)</span><br><span class=\"line\">k = cv.waitKey(0)</span><br><span class=\"line\">if k == 27:  # 等待ESC退出</span><br><span class=\"line\">    cv.destroyAllWindows()</span><br><span class=\"line\">elif k == ord(&#x27;s&#x27;):  # 等待关键字，保存和退出</span><br><span class=\"line\">    cv.imwrite(r&quot;C:\\Users\\Admin\\Desktop\\opencv\\draw-001.jpg&quot;, img)</span><br><span class=\"line\">    cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h1 id=\"Opencv-入门篇学习记录-图片\"><a href=\"#Opencv-入门篇学习记录-图片\" class=\"headerlink\" title=\"Opencv 入门篇学习记录(图片)\"></a>Opencv 入门篇学习记录(图片)</h1>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>很早以前就接触Python了，大学的时候还自学了一段时间去做了课设，写了一些最速梯度下降法、黄金分割法、步长优化什么的。现在已经忘得差不多了。。。<br>最近自学接触了OpenCV图像处理这个库，把自己的python学习过程记录一下。<br>相关内容我都写到代码里了，直接贴代码，也方便复现</p>\n<h2 id=\"图像入门基本函数：\"><a href=\"#图像入门基本函数：\" class=\"headerlink\" title=\"图像入门基本函数：\"></a>图像入门基本函数：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># coding:utf-8</span><br><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\"># 加载图片</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">imread(img_path,flag) 读取图片，返回图片对象</span><br><span class=\"line\">    img_path: 图片的路径，即使路径错误也不会报错，但打印返回的图片对象为None,路径前记得加r</span><br><span class=\"line\">    flag：cv2.IMREAD_COLOR，读取彩色图片，图片透明性会被忽略，为默认参数，也可以传入1</span><br><span class=\"line\">          cv2.IMREAD_GRAYSCALE,按灰度模式读取图像，也可以传入0</span><br><span class=\"line\">          cv2.IMREAD_UNCHANGED,读取图像，包括其alpha通道，也可以传入-1</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img = cv2.imread(r&quot;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cvtColor()函数，用于在图像中不同的色彩空间进行转换，用于后续处理</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像的二值化，就是将图像上的像素点的灰度值设置为0或255，也就是将整个图像呈现出明显的只有黑和白的视觉效果。</span><br><span class=\"line\">cv2.threshold(img, threshold, maxval,type)</span><br><span class=\"line\">threshold是设定的阈值</span><br><span class=\"line\">maxval是当灰度值大于（或小于）阈值时将该灰度值赋成的值</span><br><span class=\"line\">type规定的是当前二值化的方式</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">ret, img_threshold = cv2.threshold(img_gray, 127, 255, cv2.THRESH_BINARY)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">imshow(window_name,img)：显示图片，窗口自适应图片大小</span><br><span class=\"line\">    window_name: 指定窗口的名字</span><br><span class=\"line\">    img：显示的图片对象</span><br><span class=\"line\">    可以指定多个窗口名称，显示多个图片</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv2.imshow(&quot;img&quot;, img)</span><br><span class=\"line\">cv2.imshow(&quot;thre&quot;, img_threshold)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">waitKey(millseconds)  键盘绑定事件，阻塞监听键盘按键，返回一个数字（不同按键对应的数字不同）</span><br><span class=\"line\">    millseconds: 传入时间毫秒数，在该时间内等待键盘事件；传入0时，会一直等待键盘事件</span><br><span class=\"line\">    </span><br><span class=\"line\">destroyAllWindows(window_name) </span><br><span class=\"line\">    window_name: 需要关闭的窗口名字，不传入时关闭所有窗口</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">key = cv2.waitKey(0)</span><br><span class=\"line\">if key == 27:  # 按esc键时，关闭所有窗口</span><br><span class=\"line\">    print(key)</span><br><span class=\"line\">    cv2.destroyAllWindows()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">imwrite(img_path_name,img)</span><br><span class=\"line\">    img_path_name:保存的文件名,路径前记得加r</span><br><span class=\"line\">    img：文件对象</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv2.imwrite(r&quot;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&quot;, img)</span><br><span class=\"line\">cv2.imwrite(r&quot;C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg&quot;, img_threshold)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"OpenCV画图方法\"><a href=\"#OpenCV画图方法\" class=\"headerlink\" title=\"OpenCV画图方法\"></a>OpenCV画图方法</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">opencv常用画图方法</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建黑色的图像</span><br><span class=\"line\">img = np.zeros((512, 512, 3), np.uint8)</span><br><span class=\"line\"># 绘制一条厚度为5的蓝色对角线</span><br><span class=\"line\">#       窗口图像名 起点坐标   终点坐标   RGB颜色（蓝色）线宽</span><br><span class=\"line\">cv.line(img, (0, 0), (511, 511), (255, 0, 0), 5)</span><br><span class=\"line\">#           窗口图像名   起点       终点        RGB颜色（绿色） 线宽</span><br><span class=\"line\">cv.rectangle(img, (384, 0), (510, 128), (0, 255, 0), 3)  # 画法为左上往右下的对角线所形成的矩形</span><br><span class=\"line\">#               圆心       半径   RGB       是否填充</span><br><span class=\"line\">cv.circle(img, (447, 63), 63, (0, 0, 255), 2)  # -1：填充，其他值不填充，作为线宽参数，默认线宽为1</span><br><span class=\"line\"># 绘制多边形</span><br><span class=\"line\">pts = np.array([[10, 5], [20, 30], [70, 20], [50, 10]], np.int32)</span><br><span class=\"line\"># pts = pts.reshape((-1, 1, 2))</span><br><span class=\"line\"># ture:为封闭图形 False:为多段折线，首尾那段不连接</span><br><span class=\"line\">cv.polylines(img, [pts], True, (0, 255, 255))</span><br><span class=\"line\"># 绘制文字</span><br><span class=\"line\"># 字体设置</span><br><span class=\"line\">font = cv.FONT_HERSHEY_SIMPLEX</span><br><span class=\"line\"># 绘制函数 绘制窗口名 绘制内容  起始位置 字体设置 字体大小比例  RGB 绘制线条粗细程度 线性  图像数据原点True为左下角，否则左上角(默认)</span><br><span class=\"line\">cv.putText(img, &#x27;OpenCV&#x27;, (10, 500), font, 4, (255, 255, 255), 2, cv.LINE_AA)</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看图像</span><br><span class=\"line\">cv.imshow(&#x27;image&#x27;, img)</span><br><span class=\"line\">k = cv.waitKey(0)</span><br><span class=\"line\">if k == 27:  # 等待ESC退出</span><br><span class=\"line\">    cv.destroyAllWindows()</span><br><span class=\"line\">elif k == ord(&#x27;s&#x27;):  # 等待关键字，保存和退出</span><br><span class=\"line\">    cv.imwrite(r&quot;C:\\Users\\Admin\\Desktop\\opencv\\draw-001.jpg&quot;, img)</span><br><span class=\"line\">    cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV 基于Numpy对图像进行基础操作","_content":"# OpenCV 基于Numpy对图像进行基础操作\n学习代码如下（可直接复制使用）：\n<!--more-->\n```\nimport numpy as np\nimport cv2 as cv\n\nimage = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\n'''\n访问和修改像素值:\n\n你可以通过行和列坐标来访问像素值。\n对于 BGR 图像，它返回一个由蓝色、绿色和红色值组成的数组。\n对于灰度图像，只返回相应的灰度。\npx = image[x, y]  -> 获取图像中x行，y列的像素值，BGR返回（blue, green, red），grad返回灰度值\npx = image[x, y, number]\nx: 行坐标\ny: 列坐标\nnumber: 取值范围0~2，既对应通道的返回值\n        0：blue, 1: green, 2: red\n'''\npx = image[100, 100]\nprint(px)\n# 仅访问蓝色像素\nblue = image[100, 100, 0]\nprint(blue)\nprint(image.item(100, 100, 0))\n'''\n使用numpy修改图像像素值,此方法用于修改一整行或者一整列的像素值\n不适合单个像素值修改！\nNumpy是用于快速数组计算的优化库。\n因此，简单地访问每个像素值并对其进行修改将非常缓慢，因此不建议使用\n'''\nimage[100] = [255, 255, 255]    # 第100行的BGR值设置为255\nprint(image[100, 100])\nprint(image[90, 100])\n'''\n注意 上面的方法通常用于选择数组的区域，例如前5行和后3列。\n对于单个像素访问，Numpy数组方法array.item()和array.itemset())被认为更好，但是它们始终返回标量。\n如果要访问所有B，G，R值，则需要分别调用所有的array.item()\n'''\n# 访问 RED 值\nimage.item(10, 10, 2)\n# 修改 RED 值\nimage.itemset((10, 10, 2), 100)\nimage.item(10, 10, 2)\n'''\n访问图像属性\n图像属性包括行数，列数和通道数，图像数据类型，像素数等。\n'''\n# image.shape,它返回行，列和通道数的元组（如果图像是彩色的）\nprint(image.shape)\n# 像素总数访问 image.size\nprint(image.size)\n# 图像数据类型 image.dtype\nprint(image.dtype)\n'''\n图像感兴趣区域ROI\n'''\n#          左上坐标   右下坐标\neye = image[140:60, 175:85]\nimage[10:10, 50:50] = eye\ncv.imshow('image', image)\n'''\n拆分和合并图像通道\ncv.split()是一项耗时的操作（就时间而言）。\n因此，仅在必要时才这样做。否则请进行Numpy索引\n'''\nb, g, r = cv.split(image)   # 拆分为blue，green，red\nimage = cv.merge((b, g, r))     # 合\n# 或者\nb = image[:, :, 0]  # 拆出blue通道，其他通道类似\n\n```","source":"_posts/OpenCV/图像入门/OpenCV-picturebyNumpy.md","raw":"---\ntitle: OpenCV 基于Numpy对图像进行基础操作\n---\n# OpenCV 基于Numpy对图像进行基础操作\n学习代码如下（可直接复制使用）：\n<!--more-->\n```\nimport numpy as np\nimport cv2 as cv\n\nimage = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\n'''\n访问和修改像素值:\n\n你可以通过行和列坐标来访问像素值。\n对于 BGR 图像，它返回一个由蓝色、绿色和红色值组成的数组。\n对于灰度图像，只返回相应的灰度。\npx = image[x, y]  -> 获取图像中x行，y列的像素值，BGR返回（blue, green, red），grad返回灰度值\npx = image[x, y, number]\nx: 行坐标\ny: 列坐标\nnumber: 取值范围0~2，既对应通道的返回值\n        0：blue, 1: green, 2: red\n'''\npx = image[100, 100]\nprint(px)\n# 仅访问蓝色像素\nblue = image[100, 100, 0]\nprint(blue)\nprint(image.item(100, 100, 0))\n'''\n使用numpy修改图像像素值,此方法用于修改一整行或者一整列的像素值\n不适合单个像素值修改！\nNumpy是用于快速数组计算的优化库。\n因此，简单地访问每个像素值并对其进行修改将非常缓慢，因此不建议使用\n'''\nimage[100] = [255, 255, 255]    # 第100行的BGR值设置为255\nprint(image[100, 100])\nprint(image[90, 100])\n'''\n注意 上面的方法通常用于选择数组的区域，例如前5行和后3列。\n对于单个像素访问，Numpy数组方法array.item()和array.itemset())被认为更好，但是它们始终返回标量。\n如果要访问所有B，G，R值，则需要分别调用所有的array.item()\n'''\n# 访问 RED 值\nimage.item(10, 10, 2)\n# 修改 RED 值\nimage.itemset((10, 10, 2), 100)\nimage.item(10, 10, 2)\n'''\n访问图像属性\n图像属性包括行数，列数和通道数，图像数据类型，像素数等。\n'''\n# image.shape,它返回行，列和通道数的元组（如果图像是彩色的）\nprint(image.shape)\n# 像素总数访问 image.size\nprint(image.size)\n# 图像数据类型 image.dtype\nprint(image.dtype)\n'''\n图像感兴趣区域ROI\n'''\n#          左上坐标   右下坐标\neye = image[140:60, 175:85]\nimage[10:10, 50:50] = eye\ncv.imshow('image', image)\n'''\n拆分和合并图像通道\ncv.split()是一项耗时的操作（就时间而言）。\n因此，仅在必要时才这样做。否则请进行Numpy索引\n'''\nb, g, r = cv.split(image)   # 拆分为blue，green，red\nimage = cv.merge((b, g, r))     # 合\n# 或者\nb = image[:, :, 0]  # 拆出blue通道，其他通道类似\n\n```","slug":"OpenCV/图像入门/OpenCV-picturebyNumpy","published":1,"date":"2022-05-25T10:06:34.652Z","updated":"2022-04-13T03:21:28.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepy001d68ur5psm7hnj","content":"<h1 id=\"OpenCV-基于Numpy对图像进行基础操作\"><a href=\"#OpenCV-基于Numpy对图像进行基础操作\" class=\"headerlink\" title=\"OpenCV 基于Numpy对图像进行基础操作\"></a>OpenCV 基于Numpy对图像进行基础操作</h1><p>学习代码如下（可直接复制使用）：</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">image = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">访问和修改像素值:</span><br><span class=\"line\"></span><br><span class=\"line\">你可以通过行和列坐标来访问像素值。</span><br><span class=\"line\">对于 BGR 图像，它返回一个由蓝色、绿色和红色值组成的数组。</span><br><span class=\"line\">对于灰度图像，只返回相应的灰度。</span><br><span class=\"line\">px = image[x, y]  -&gt; 获取图像中x行，y列的像素值，BGR返回（blue, green, red），grad返回灰度值</span><br><span class=\"line\">px = image[x, y, number]</span><br><span class=\"line\">x: 行坐标</span><br><span class=\"line\">y: 列坐标</span><br><span class=\"line\">number: 取值范围0~2，既对应通道的返回值</span><br><span class=\"line\">        0：blue, 1: green, 2: red</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">px = image[100, 100]</span><br><span class=\"line\">print(px)</span><br><span class=\"line\"># 仅访问蓝色像素</span><br><span class=\"line\">blue = image[100, 100, 0]</span><br><span class=\"line\">print(blue)</span><br><span class=\"line\">print(image.item(100, 100, 0))</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">使用numpy修改图像像素值,此方法用于修改一整行或者一整列的像素值</span><br><span class=\"line\">不适合单个像素值修改！</span><br><span class=\"line\">Numpy是用于快速数组计算的优化库。</span><br><span class=\"line\">因此，简单地访问每个像素值并对其进行修改将非常缓慢，因此不建议使用</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">image[100] = [255, 255, 255]    # 第100行的BGR值设置为255</span><br><span class=\"line\">print(image[100, 100])</span><br><span class=\"line\">print(image[90, 100])</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">注意 上面的方法通常用于选择数组的区域，例如前5行和后3列。</span><br><span class=\"line\">对于单个像素访问，Numpy数组方法array.item()和array.itemset())被认为更好，但是它们始终返回标量。</span><br><span class=\"line\">如果要访问所有B，G，R值，则需要分别调用所有的array.item()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 访问 RED 值</span><br><span class=\"line\">image.item(10, 10, 2)</span><br><span class=\"line\"># 修改 RED 值</span><br><span class=\"line\">image.itemset((10, 10, 2), 100)</span><br><span class=\"line\">image.item(10, 10, 2)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">访问图像属性</span><br><span class=\"line\">图像属性包括行数，列数和通道数，图像数据类型，像素数等。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># image.shape,它返回行，列和通道数的元组（如果图像是彩色的）</span><br><span class=\"line\">print(image.shape)</span><br><span class=\"line\"># 像素总数访问 image.size</span><br><span class=\"line\">print(image.size)</span><br><span class=\"line\"># 图像数据类型 image.dtype</span><br><span class=\"line\">print(image.dtype)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像感兴趣区域ROI</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">#          左上坐标   右下坐标</span><br><span class=\"line\">eye = image[140:60, 175:85]</span><br><span class=\"line\">image[10:10, 50:50] = eye</span><br><span class=\"line\">cv.imshow(&#x27;image&#x27;, image)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">拆分和合并图像通道</span><br><span class=\"line\">cv.split()是一项耗时的操作（就时间而言）。</span><br><span class=\"line\">因此，仅在必要时才这样做。否则请进行Numpy索引</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">b, g, r = cv.split(image)   # 拆分为blue，green，red</span><br><span class=\"line\">image = cv.merge((b, g, r))     # 合</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">b = image[:, :, 0]  # 拆出blue通道，其他通道类似</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-基于Numpy对图像进行基础操作\"><a href=\"#OpenCV-基于Numpy对图像进行基础操作\" class=\"headerlink\" title=\"OpenCV 基于Numpy对图像进行基础操作\"></a>OpenCV 基于Numpy对图像进行基础操作</h1><p>学习代码如下（可直接复制使用）：</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">image = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">访问和修改像素值:</span><br><span class=\"line\"></span><br><span class=\"line\">你可以通过行和列坐标来访问像素值。</span><br><span class=\"line\">对于 BGR 图像，它返回一个由蓝色、绿色和红色值组成的数组。</span><br><span class=\"line\">对于灰度图像，只返回相应的灰度。</span><br><span class=\"line\">px = image[x, y]  -&gt; 获取图像中x行，y列的像素值，BGR返回（blue, green, red），grad返回灰度值</span><br><span class=\"line\">px = image[x, y, number]</span><br><span class=\"line\">x: 行坐标</span><br><span class=\"line\">y: 列坐标</span><br><span class=\"line\">number: 取值范围0~2，既对应通道的返回值</span><br><span class=\"line\">        0：blue, 1: green, 2: red</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">px = image[100, 100]</span><br><span class=\"line\">print(px)</span><br><span class=\"line\"># 仅访问蓝色像素</span><br><span class=\"line\">blue = image[100, 100, 0]</span><br><span class=\"line\">print(blue)</span><br><span class=\"line\">print(image.item(100, 100, 0))</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">使用numpy修改图像像素值,此方法用于修改一整行或者一整列的像素值</span><br><span class=\"line\">不适合单个像素值修改！</span><br><span class=\"line\">Numpy是用于快速数组计算的优化库。</span><br><span class=\"line\">因此，简单地访问每个像素值并对其进行修改将非常缓慢，因此不建议使用</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">image[100] = [255, 255, 255]    # 第100行的BGR值设置为255</span><br><span class=\"line\">print(image[100, 100])</span><br><span class=\"line\">print(image[90, 100])</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">注意 上面的方法通常用于选择数组的区域，例如前5行和后3列。</span><br><span class=\"line\">对于单个像素访问，Numpy数组方法array.item()和array.itemset())被认为更好，但是它们始终返回标量。</span><br><span class=\"line\">如果要访问所有B，G，R值，则需要分别调用所有的array.item()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 访问 RED 值</span><br><span class=\"line\">image.item(10, 10, 2)</span><br><span class=\"line\"># 修改 RED 值</span><br><span class=\"line\">image.itemset((10, 10, 2), 100)</span><br><span class=\"line\">image.item(10, 10, 2)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">访问图像属性</span><br><span class=\"line\">图像属性包括行数，列数和通道数，图像数据类型，像素数等。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># image.shape,它返回行，列和通道数的元组（如果图像是彩色的）</span><br><span class=\"line\">print(image.shape)</span><br><span class=\"line\"># 像素总数访问 image.size</span><br><span class=\"line\">print(image.size)</span><br><span class=\"line\"># 图像数据类型 image.dtype</span><br><span class=\"line\">print(image.dtype)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像感兴趣区域ROI</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">#          左上坐标   右下坐标</span><br><span class=\"line\">eye = image[140:60, 175:85]</span><br><span class=\"line\">image[10:10, 50:50] = eye</span><br><span class=\"line\">cv.imshow(&#x27;image&#x27;, image)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">拆分和合并图像通道</span><br><span class=\"line\">cv.split()是一项耗时的操作（就时间而言）。</span><br><span class=\"line\">因此，仅在必要时才这样做。否则请进行Numpy索引</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">b, g, r = cv.split(image)   # 拆分为blue，green，red</span><br><span class=\"line\">image = cv.merge((b, g, r))     # 合</span><br><span class=\"line\"># 或者</span><br><span class=\"line\">b = image[:, :, 0]  # 拆出blue通道，其他通道类似</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-为图像设置边框（填充）","_content":"# OpenCV-为图像设置边框（填充）\n**学习代码如下：**\n<!--more-->\n```\n\"\"\"\n为图像设置边框（填充）\n如果要在图像周围创建边框（如相框），则可以使用cv.copyMakeBorder()。\n但是它在卷积运算，零填充等方面有更多应用。此函数采用以下参数：\ncv2.copyMakeBorder()\n    参数：\n        img:图像对象\n        top,bottom,left,right: 上下左右边界宽度，单位为像素值\n        borderType:\n            cv2.BORDER_CONSTANT, 带颜色的边界，需要传入另外一个颜色值\n            cv2.BORDER_REFLECT, 边缘元素的镜像反射做为边界\n            cv2.BORDER_REFLECT_101/cv2.BORDER_DEFAULT\n            cv2.BORDER_REPLICATE, 边缘元素的复制做为边界\n            CV2.BORDER_WRAP\n        value: borderType为cv2.BORDER_CONSTANT时，传入的边界颜色值，如[0,255,0]\n\"\"\"\nimport cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nimg1 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\nimg = cv.cvtColor(img1, cv.COLOR_BGR2RGB)   # matplotlib的图像是RGB格式\nreplicate = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REPLICATE)\nreflect = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REFLECT)\nreflect101 = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REFLECT_101)\nwrap = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_WRAP)\nconstant = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_CONSTANT, value=[255, 0, 0])\nplt.subplot(231), plt.imshow(img), plt.title('ORIGINAL')\nplt.subplot(232), plt.imshow(replicate), plt.title('REPLICATE')\nplt.subplot(233), plt.imshow(reflect), plt.title('REFLECT')\nplt.subplot(234), plt.imshow(reflect101), plt.title('REFLECT_101')\nplt.subplot(235), plt.imshow(wrap), plt.title('WRAP')\nplt.subplot(236), plt.imshow(constant), plt.title('CONSTANT')\nplt.show()\n'''\n它的调用是这样子的：\nsubplot(numbRow ， numbCol ，plotNum ) or  \nsubplot(numbRow numbCol plotNum)，\n解释一下这是啥玩意：\nnumbRow是plot图的行数；\nnumbCol是plot图的列数；\nplotNum是指第几行第几列的第几幅图 ；\n举个例子，如果是subplot (2 ，2 ，1)，那么这个figure就是个2*2的矩阵图，也就是总共有4个图，\n1就代表了第一幅图\n'''\n```","source":"_posts/OpenCV/图像入门/OpenCV-为图像设置边框（填充）.md","raw":"---\ntitle: OpenCV-为图像设置边框（填充）\n---\n# OpenCV-为图像设置边框（填充）\n**学习代码如下：**\n<!--more-->\n```\n\"\"\"\n为图像设置边框（填充）\n如果要在图像周围创建边框（如相框），则可以使用cv.copyMakeBorder()。\n但是它在卷积运算，零填充等方面有更多应用。此函数采用以下参数：\ncv2.copyMakeBorder()\n    参数：\n        img:图像对象\n        top,bottom,left,right: 上下左右边界宽度，单位为像素值\n        borderType:\n            cv2.BORDER_CONSTANT, 带颜色的边界，需要传入另外一个颜色值\n            cv2.BORDER_REFLECT, 边缘元素的镜像反射做为边界\n            cv2.BORDER_REFLECT_101/cv2.BORDER_DEFAULT\n            cv2.BORDER_REPLICATE, 边缘元素的复制做为边界\n            CV2.BORDER_WRAP\n        value: borderType为cv2.BORDER_CONSTANT时，传入的边界颜色值，如[0,255,0]\n\"\"\"\nimport cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nimg1 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\nimg = cv.cvtColor(img1, cv.COLOR_BGR2RGB)   # matplotlib的图像是RGB格式\nreplicate = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REPLICATE)\nreflect = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REFLECT)\nreflect101 = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REFLECT_101)\nwrap = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_WRAP)\nconstant = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_CONSTANT, value=[255, 0, 0])\nplt.subplot(231), plt.imshow(img), plt.title('ORIGINAL')\nplt.subplot(232), plt.imshow(replicate), plt.title('REPLICATE')\nplt.subplot(233), plt.imshow(reflect), plt.title('REFLECT')\nplt.subplot(234), plt.imshow(reflect101), plt.title('REFLECT_101')\nplt.subplot(235), plt.imshow(wrap), plt.title('WRAP')\nplt.subplot(236), plt.imshow(constant), plt.title('CONSTANT')\nplt.show()\n'''\n它的调用是这样子的：\nsubplot(numbRow ， numbCol ，plotNum ) or  \nsubplot(numbRow numbCol plotNum)，\n解释一下这是啥玩意：\nnumbRow是plot图的行数；\nnumbCol是plot图的列数；\nplotNum是指第几行第几列的第几幅图 ；\n举个例子，如果是subplot (2 ，2 ，1)，那么这个figure就是个2*2的矩阵图，也就是总共有4个图，\n1就代表了第一幅图\n'''\n```","slug":"OpenCV/图像入门/OpenCV-为图像设置边框（填充）","published":1,"date":"2022-05-25T10:06:34.661Z","updated":"2022-04-12T08:22:48.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceepz001e68urextffaeq","content":"<h1 id=\"OpenCV-为图像设置边框（填充）\"><a href=\"#OpenCV-为图像设置边框（填充）\" class=\"headerlink\" title=\"OpenCV-为图像设置边框（填充）\"></a>OpenCV-为图像设置边框（填充）</h1><p><strong>学习代码如下：</strong></p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">为图像设置边框（填充）</span><br><span class=\"line\">如果要在图像周围创建边框（如相框），则可以使用cv.copyMakeBorder()。</span><br><span class=\"line\">但是它在卷积运算，零填充等方面有更多应用。此函数采用以下参数：</span><br><span class=\"line\">cv2.copyMakeBorder()</span><br><span class=\"line\">    参数：</span><br><span class=\"line\">        img:图像对象</span><br><span class=\"line\">        top,bottom,left,right: 上下左右边界宽度，单位为像素值</span><br><span class=\"line\">        borderType:</span><br><span class=\"line\">            cv2.BORDER_CONSTANT, 带颜色的边界，需要传入另外一个颜色值</span><br><span class=\"line\">            cv2.BORDER_REFLECT, 边缘元素的镜像反射做为边界</span><br><span class=\"line\">            cv2.BORDER_REFLECT_101/cv2.BORDER_DEFAULT</span><br><span class=\"line\">            cv2.BORDER_REPLICATE, 边缘元素的复制做为边界</span><br><span class=\"line\">            CV2.BORDER_WRAP</span><br><span class=\"line\">        value: borderType为cv2.BORDER_CONSTANT时，传入的边界颜色值，如[0,255,0]</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img1 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#x27;)</span><br><span class=\"line\">img = cv.cvtColor(img1, cv.COLOR_BGR2RGB)   # matplotlib的图像是RGB格式</span><br><span class=\"line\">replicate = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REPLICATE)</span><br><span class=\"line\">reflect = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REFLECT)</span><br><span class=\"line\">reflect101 = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REFLECT_101)</span><br><span class=\"line\">wrap = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_WRAP)</span><br><span class=\"line\">constant = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_CONSTANT, value=[255, 0, 0])</span><br><span class=\"line\">plt.subplot(231), plt.imshow(img), plt.title(&#x27;ORIGINAL&#x27;)</span><br><span class=\"line\">plt.subplot(232), plt.imshow(replicate), plt.title(&#x27;REPLICATE&#x27;)</span><br><span class=\"line\">plt.subplot(233), plt.imshow(reflect), plt.title(&#x27;REFLECT&#x27;)</span><br><span class=\"line\">plt.subplot(234), plt.imshow(reflect101), plt.title(&#x27;REFLECT_101&#x27;)</span><br><span class=\"line\">plt.subplot(235), plt.imshow(wrap), plt.title(&#x27;WRAP&#x27;)</span><br><span class=\"line\">plt.subplot(236), plt.imshow(constant), plt.title(&#x27;CONSTANT&#x27;)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">它的调用是这样子的：</span><br><span class=\"line\">subplot(numbRow ， numbCol ，plotNum ) or  </span><br><span class=\"line\">subplot(numbRow numbCol plotNum)，</span><br><span class=\"line\">解释一下这是啥玩意：</span><br><span class=\"line\">numbRow是plot图的行数；</span><br><span class=\"line\">numbCol是plot图的列数；</span><br><span class=\"line\">plotNum是指第几行第几列的第几幅图 ；</span><br><span class=\"line\">举个例子，如果是subplot (2 ，2 ，1)，那么这个figure就是个2*2的矩阵图，也就是总共有4个图，</span><br><span class=\"line\">1就代表了第一幅图</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-为图像设置边框（填充）\"><a href=\"#OpenCV-为图像设置边框（填充）\" class=\"headerlink\" title=\"OpenCV-为图像设置边框（填充）\"></a>OpenCV-为图像设置边框（填充）</h1><p><strong>学习代码如下：</strong></p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">为图像设置边框（填充）</span><br><span class=\"line\">如果要在图像周围创建边框（如相框），则可以使用cv.copyMakeBorder()。</span><br><span class=\"line\">但是它在卷积运算，零填充等方面有更多应用。此函数采用以下参数：</span><br><span class=\"line\">cv2.copyMakeBorder()</span><br><span class=\"line\">    参数：</span><br><span class=\"line\">        img:图像对象</span><br><span class=\"line\">        top,bottom,left,right: 上下左右边界宽度，单位为像素值</span><br><span class=\"line\">        borderType:</span><br><span class=\"line\">            cv2.BORDER_CONSTANT, 带颜色的边界，需要传入另外一个颜色值</span><br><span class=\"line\">            cv2.BORDER_REFLECT, 边缘元素的镜像反射做为边界</span><br><span class=\"line\">            cv2.BORDER_REFLECT_101/cv2.BORDER_DEFAULT</span><br><span class=\"line\">            cv2.BORDER_REPLICATE, 边缘元素的复制做为边界</span><br><span class=\"line\">            CV2.BORDER_WRAP</span><br><span class=\"line\">        value: borderType为cv2.BORDER_CONSTANT时，传入的边界颜色值，如[0,255,0]</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img1 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#x27;)</span><br><span class=\"line\">img = cv.cvtColor(img1, cv.COLOR_BGR2RGB)   # matplotlib的图像是RGB格式</span><br><span class=\"line\">replicate = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REPLICATE)</span><br><span class=\"line\">reflect = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REFLECT)</span><br><span class=\"line\">reflect101 = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_REFLECT_101)</span><br><span class=\"line\">wrap = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_WRAP)</span><br><span class=\"line\">constant = cv.copyMakeBorder(img, 10, 10, 10, 10, cv.BORDER_CONSTANT, value=[255, 0, 0])</span><br><span class=\"line\">plt.subplot(231), plt.imshow(img), plt.title(&#x27;ORIGINAL&#x27;)</span><br><span class=\"line\">plt.subplot(232), plt.imshow(replicate), plt.title(&#x27;REPLICATE&#x27;)</span><br><span class=\"line\">plt.subplot(233), plt.imshow(reflect), plt.title(&#x27;REFLECT&#x27;)</span><br><span class=\"line\">plt.subplot(234), plt.imshow(reflect101), plt.title(&#x27;REFLECT_101&#x27;)</span><br><span class=\"line\">plt.subplot(235), plt.imshow(wrap), plt.title(&#x27;WRAP&#x27;)</span><br><span class=\"line\">plt.subplot(236), plt.imshow(constant), plt.title(&#x27;CONSTANT&#x27;)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">它的调用是这样子的：</span><br><span class=\"line\">subplot(numbRow ， numbCol ，plotNum ) or  </span><br><span class=\"line\">subplot(numbRow numbCol plotNum)，</span><br><span class=\"line\">解释一下这是啥玩意：</span><br><span class=\"line\">numbRow是plot图的行数；</span><br><span class=\"line\">numbCol是plot图的列数；</span><br><span class=\"line\">plotNum是指第几行第几列的第几幅图 ；</span><br><span class=\"line\">举个例子，如果是subplot (2 ，2 ，1)，那么这个figure就是个2*2的矩阵图，也就是总共有4个图，</span><br><span class=\"line\">1就代表了第一幅图</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-图像上的运算","_content":"# OpenCV-图像上的运算学习记录\n相关代码解析：\n1. cv.addWeighted()\n2. bitwise_and()     bitwise_or()    bitwise_not()   bitwise_xor()\n3. cv.threshold()\n学习代码如下：\n<!--more-->\n```\nimport numpy as np\nimport cv2 as cv\n\n'''\n处理图像运算\nOpenCV加法和Numpy加法之间有区别：\nOpenCV加法是饱和运算，而Numpy加法是模运算。\n'''\nx = np.uint8([250])\ny = np.uint8([10])\nprint(cv.add(x, y))  # 250 + 10 = 260 -> 255, np像素数组溢出自动变成255（满像素）\nprint(x + y)  # 250 + 10 = 260 % 256 = 4\n'''\n图像融合\n这也是图像加法，但是对图像赋予不同的权重，以使其具有融合或透明的感觉。\n根据以下等式添加图像:\nG(x) = (1−α) * f0(x) + α * f1(x)\n通过从 α 从 0→1更改，您可以在一个图像到另一个图像之间执行很酷的过渡。\n********** PS: 融合的两幅图片分辨率大小和通道需要相同 ************\n在这里，我拍摄了两个图像，将它们融合在一起。第一幅图像的权重为0.7，第二幅图像的权重为0.3。\ncv.addWeighted()在图像上应用以下公式:\ndst = α * img1 + β * img2 + γ\n在这里，γ 被视为零。\n'''\n# 图像融合例子\nimg1 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg')\nimg2 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\ndst = cv.addWeighted(img1, 0.2, img2, 0.8, 0)\ncv.imshow('dst', dst)\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n'''\n按位运算\n这包括按位 AND、 OR、NOT 和 XOR 操作。\nbitwise_and bitwise_or  bitwise_not bitwise_xor\n它们在提取图像的任何部分(我们将在后面的章节中看到)、定义和处理非矩形 ROI 等方面非常有用。\n'''\n# 加载两张图片\nimage1 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg')\nimage2 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\nprint(image2.shape)\nprint(image2)           # 最外围矩阵[]表示图像像素矩阵，[[]]:内层矩阵表示第几行，[[[]]]:最内层矩阵表示RGB值和第几列\nprint(image2[0, 0])     # [31 36 37]\nprint(image2[1, 0])     # [34 39 40]\nprint(image2[0, 279])   # [20 21 17]\nprint(image2[185, 279])  # [67 99 128]\nprint(image2[0, 0, 0])      # 读取图像第0行第0列像素点BGR中的Blue值：31\nprint(image2.item(0, 0, 0))     # 读取图像第0行第0列像素点BGR中的Blue值：31\n# 我想把image2放在左上角，所以我创建了ROI\nrows, cols, channels = image2.shape\nroi = image1[0:rows, 0:cols]\n# 现在创建image2的掩膜（mask），并同时创建其相反掩膜（mask）\nimage2gray = cv.cvtColor(image2, cv.COLOR_BGR2GRAY)\n'''\n图像二值化：\n定义：图像的二值化，就是将图像上的像素点的灰度值设置为0或255，\n也就是将整个图像呈现出明显的只有黑和白的视觉效果。\n灰度值0：黑  灰度值255：白\n一幅图像包括目标物体、背景还有噪声，要想从多值的数字图像中直接提取出目标物体，\n常用的方法就是设定一个阈值T，用T将图像的数据分成两部分：\n大于T的像素群和小于T的像素群。\n这是研究灰度变换的最特殊的方法，称为图像的二值化（Binarization）。\n\nretval, dst = cv.threshold( src, thresh, maxval, type[, dst] ) \n参数说明：\nsrc：原图像。\ndst：结果图像。\nthresh：当前阈值。\nmaxVal：最大阈值，一般为255.\nthresholdType:阈值类型，主要有下面几种：\nenum ThresholdTypes {\n    THRESH_BINARY     = 0,  大于阈值的部分被置为255，小于部分被置为0\n    THRESH_BINARY_INV = 1,  大于阈值部分被置为0，小于部分被置为255\n    THRESH_TRUNC      = 2,  大于阈值部分被置为threshold，小于部分保持原样\n    THRESH_TOZERO     = 3,  小于阈值部分被置为0，大于部分保持不变\n    THRESH_TOZERO_INV = 4,  大于阈值部分被置为0，小于部分保持不变 \n    THRESH_MASK       = 7,\n    THRESH_OTSU       = 8,\n    THRESH_TRIANGLE   = 16\n};\n返回值:\nretval： 与参数thresh一致\ndst： 结果图像\n使用了THRESH_OTSU和THRESH_TRIANGLE两个标志时，输入图像必须为单通道。\n'''\nret, mask = cv.threshold(image2gray, 150, 255, cv.THRESH_BINARY)\ncv.imshow('mask', mask)\nmask_inv = cv.bitwise_not(mask)\ncv.imshow('mask_inv', mask_inv)\n# 现在将ROI中logo的区域涂黑\nimage1_bg = cv.bitwise_and(roi, roi, mask=mask_inv)\ncv.imshow('image1_bg', image1_bg)\n# 仅从logo图像中提取logo区域\nimage2_fg = cv.bitwise_and(image2, image2, mask=mask)\ncv.imshow('image2_fg', image2_fg)\n# 将logo放入ROI并修改主图像\ndst = cv.add(image1_bg, image2_fg)\ncv.imshow('dst', dst)\nimage1[0:rows, 0:cols] = dst\ncv.imshow('res', image1)\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n```","source":"_posts/OpenCV/图像入门/OpenCV-图像上的运算.md","raw":"---\ntitle: OpenCV-图像上的运算\n---\n# OpenCV-图像上的运算学习记录\n相关代码解析：\n1. cv.addWeighted()\n2. bitwise_and()     bitwise_or()    bitwise_not()   bitwise_xor()\n3. cv.threshold()\n学习代码如下：\n<!--more-->\n```\nimport numpy as np\nimport cv2 as cv\n\n'''\n处理图像运算\nOpenCV加法和Numpy加法之间有区别：\nOpenCV加法是饱和运算，而Numpy加法是模运算。\n'''\nx = np.uint8([250])\ny = np.uint8([10])\nprint(cv.add(x, y))  # 250 + 10 = 260 -> 255, np像素数组溢出自动变成255（满像素）\nprint(x + y)  # 250 + 10 = 260 % 256 = 4\n'''\n图像融合\n这也是图像加法，但是对图像赋予不同的权重，以使其具有融合或透明的感觉。\n根据以下等式添加图像:\nG(x) = (1−α) * f0(x) + α * f1(x)\n通过从 α 从 0→1更改，您可以在一个图像到另一个图像之间执行很酷的过渡。\n********** PS: 融合的两幅图片分辨率大小和通道需要相同 ************\n在这里，我拍摄了两个图像，将它们融合在一起。第一幅图像的权重为0.7，第二幅图像的权重为0.3。\ncv.addWeighted()在图像上应用以下公式:\ndst = α * img1 + β * img2 + γ\n在这里，γ 被视为零。\n'''\n# 图像融合例子\nimg1 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg')\nimg2 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\ndst = cv.addWeighted(img1, 0.2, img2, 0.8, 0)\ncv.imshow('dst', dst)\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n'''\n按位运算\n这包括按位 AND、 OR、NOT 和 XOR 操作。\nbitwise_and bitwise_or  bitwise_not bitwise_xor\n它们在提取图像的任何部分(我们将在后面的章节中看到)、定义和处理非矩形 ROI 等方面非常有用。\n'''\n# 加载两张图片\nimage1 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg')\nimage2 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\nprint(image2.shape)\nprint(image2)           # 最外围矩阵[]表示图像像素矩阵，[[]]:内层矩阵表示第几行，[[[]]]:最内层矩阵表示RGB值和第几列\nprint(image2[0, 0])     # [31 36 37]\nprint(image2[1, 0])     # [34 39 40]\nprint(image2[0, 279])   # [20 21 17]\nprint(image2[185, 279])  # [67 99 128]\nprint(image2[0, 0, 0])      # 读取图像第0行第0列像素点BGR中的Blue值：31\nprint(image2.item(0, 0, 0))     # 读取图像第0行第0列像素点BGR中的Blue值：31\n# 我想把image2放在左上角，所以我创建了ROI\nrows, cols, channels = image2.shape\nroi = image1[0:rows, 0:cols]\n# 现在创建image2的掩膜（mask），并同时创建其相反掩膜（mask）\nimage2gray = cv.cvtColor(image2, cv.COLOR_BGR2GRAY)\n'''\n图像二值化：\n定义：图像的二值化，就是将图像上的像素点的灰度值设置为0或255，\n也就是将整个图像呈现出明显的只有黑和白的视觉效果。\n灰度值0：黑  灰度值255：白\n一幅图像包括目标物体、背景还有噪声，要想从多值的数字图像中直接提取出目标物体，\n常用的方法就是设定一个阈值T，用T将图像的数据分成两部分：\n大于T的像素群和小于T的像素群。\n这是研究灰度变换的最特殊的方法，称为图像的二值化（Binarization）。\n\nretval, dst = cv.threshold( src, thresh, maxval, type[, dst] ) \n参数说明：\nsrc：原图像。\ndst：结果图像。\nthresh：当前阈值。\nmaxVal：最大阈值，一般为255.\nthresholdType:阈值类型，主要有下面几种：\nenum ThresholdTypes {\n    THRESH_BINARY     = 0,  大于阈值的部分被置为255，小于部分被置为0\n    THRESH_BINARY_INV = 1,  大于阈值部分被置为0，小于部分被置为255\n    THRESH_TRUNC      = 2,  大于阈值部分被置为threshold，小于部分保持原样\n    THRESH_TOZERO     = 3,  小于阈值部分被置为0，大于部分保持不变\n    THRESH_TOZERO_INV = 4,  大于阈值部分被置为0，小于部分保持不变 \n    THRESH_MASK       = 7,\n    THRESH_OTSU       = 8,\n    THRESH_TRIANGLE   = 16\n};\n返回值:\nretval： 与参数thresh一致\ndst： 结果图像\n使用了THRESH_OTSU和THRESH_TRIANGLE两个标志时，输入图像必须为单通道。\n'''\nret, mask = cv.threshold(image2gray, 150, 255, cv.THRESH_BINARY)\ncv.imshow('mask', mask)\nmask_inv = cv.bitwise_not(mask)\ncv.imshow('mask_inv', mask_inv)\n# 现在将ROI中logo的区域涂黑\nimage1_bg = cv.bitwise_and(roi, roi, mask=mask_inv)\ncv.imshow('image1_bg', image1_bg)\n# 仅从logo图像中提取logo区域\nimage2_fg = cv.bitwise_and(image2, image2, mask=mask)\ncv.imshow('image2_fg', image2_fg)\n# 将logo放入ROI并修改主图像\ndst = cv.add(image1_bg, image2_fg)\ncv.imshow('dst', dst)\nimage1[0:rows, 0:cols] = dst\ncv.imshow('res', image1)\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n```","slug":"OpenCV/图像入门/OpenCV-图像上的运算","published":1,"date":"2022-05-25T10:06:34.685Z","updated":"2022-05-07T10:09:33.148Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeq0001f68urbca6fzlz","content":"<h1 id=\"OpenCV-图像上的运算学习记录\"><a href=\"#OpenCV-图像上的运算学习记录\" class=\"headerlink\" title=\"OpenCV-图像上的运算学习记录\"></a>OpenCV-图像上的运算学习记录</h1><p>相关代码解析：</p>\n<ol>\n<li>cv.addWeighted()</li>\n<li>bitwise_and()     bitwise_or()    bitwise_not()   bitwise_xor()</li>\n<li>cv.threshold()<br>学习代码如下：<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">处理图像运算</span><br><span class=\"line\">OpenCV加法和Numpy加法之间有区别：</span><br><span class=\"line\">OpenCV加法是饱和运算，而Numpy加法是模运算。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">x = np.uint8([250])</span><br><span class=\"line\">y = np.uint8([10])</span><br><span class=\"line\">print(cv.add(x, y))  # 250 + 10 = 260 -&gt; 255, np像素数组溢出自动变成255（满像素）</span><br><span class=\"line\">print(x + y)  # 250 + 10 = 260 % 256 = 4</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像融合</span><br><span class=\"line\">这也是图像加法，但是对图像赋予不同的权重，以使其具有融合或透明的感觉。</span><br><span class=\"line\">根据以下等式添加图像:</span><br><span class=\"line\">G(x) = (1−α) * f0(x) + α * f1(x)</span><br><span class=\"line\">通过从 α 从 0→1更改，您可以在一个图像到另一个图像之间执行很酷的过渡。</span><br><span class=\"line\">********** PS: 融合的两幅图片分辨率大小和通道需要相同 ************</span><br><span class=\"line\">在这里，我拍摄了两个图像，将它们融合在一起。第一幅图像的权重为0.7，第二幅图像的权重为0.3。</span><br><span class=\"line\">cv.addWeighted()在图像上应用以下公式:</span><br><span class=\"line\">dst = α * img1 + β * img2 + γ</span><br><span class=\"line\">在这里，γ 被视为零。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 图像融合例子</span><br><span class=\"line\">img1 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg&#x27;)</span><br><span class=\"line\">img2 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#x27;)</span><br><span class=\"line\">dst = cv.addWeighted(img1, 0.2, img2, 0.8, 0)</span><br><span class=\"line\">cv.imshow(&#x27;dst&#x27;, dst)</span><br><span class=\"line\">cv.waitKey(0)</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">按位运算</span><br><span class=\"line\">这包括按位 AND、 OR、NOT 和 XOR 操作。</span><br><span class=\"line\">bitwise_and bitwise_or  bitwise_not bitwise_xor</span><br><span class=\"line\">它们在提取图像的任何部分(我们将在后面的章节中看到)、定义和处理非矩形 ROI 等方面非常有用。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 加载两张图片</span><br><span class=\"line\">image1 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg&#x27;)</span><br><span class=\"line\">image2 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#x27;)</span><br><span class=\"line\">print(image2.shape)</span><br><span class=\"line\">print(image2)           # 最外围矩阵[]表示图像像素矩阵，[[]]:内层矩阵表示第几行，[[[]]]:最内层矩阵表示RGB值和第几列</span><br><span class=\"line\">print(image2[0, 0])     # [31 36 37]</span><br><span class=\"line\">print(image2[1, 0])     # [34 39 40]</span><br><span class=\"line\">print(image2[0, 279])   # [20 21 17]</span><br><span class=\"line\">print(image2[185, 279])  # [67 99 128]</span><br><span class=\"line\">print(image2[0, 0, 0])      # 读取图像第0行第0列像素点BGR中的Blue值：31</span><br><span class=\"line\">print(image2.item(0, 0, 0))     # 读取图像第0行第0列像素点BGR中的Blue值：31</span><br><span class=\"line\"># 我想把image2放在左上角，所以我创建了ROI</span><br><span class=\"line\">rows, cols, channels = image2.shape</span><br><span class=\"line\">roi = image1[0:rows, 0:cols]</span><br><span class=\"line\"># 现在创建image2的掩膜（mask），并同时创建其相反掩膜（mask）</span><br><span class=\"line\">image2gray = cv.cvtColor(image2, cv.COLOR_BGR2GRAY)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像二值化：</span><br><span class=\"line\">定义：图像的二值化，就是将图像上的像素点的灰度值设置为0或255，</span><br><span class=\"line\">也就是将整个图像呈现出明显的只有黑和白的视觉效果。</span><br><span class=\"line\">灰度值0：黑  灰度值255：白</span><br><span class=\"line\">一幅图像包括目标物体、背景还有噪声，要想从多值的数字图像中直接提取出目标物体，</span><br><span class=\"line\">常用的方法就是设定一个阈值T，用T将图像的数据分成两部分：</span><br><span class=\"line\">大于T的像素群和小于T的像素群。</span><br><span class=\"line\">这是研究灰度变换的最特殊的方法，称为图像的二值化（Binarization）。</span><br><span class=\"line\"></span><br><span class=\"line\">retval, dst = cv.threshold( src, thresh, maxval, type[, dst] ) </span><br><span class=\"line\">参数说明：</span><br><span class=\"line\">src：原图像。</span><br><span class=\"line\">dst：结果图像。</span><br><span class=\"line\">thresh：当前阈值。</span><br><span class=\"line\">maxVal：最大阈值，一般为255.</span><br><span class=\"line\">thresholdType:阈值类型，主要有下面几种：</span><br><span class=\"line\">enum ThresholdTypes &#123;</span><br><span class=\"line\">    THRESH_BINARY     = 0,  大于阈值的部分被置为255，小于部分被置为0</span><br><span class=\"line\">    THRESH_BINARY_INV = 1,  大于阈值部分被置为0，小于部分被置为255</span><br><span class=\"line\">    THRESH_TRUNC      = 2,  大于阈值部分被置为threshold，小于部分保持原样</span><br><span class=\"line\">    THRESH_TOZERO     = 3,  小于阈值部分被置为0，大于部分保持不变</span><br><span class=\"line\">    THRESH_TOZERO_INV = 4,  大于阈值部分被置为0，小于部分保持不变 </span><br><span class=\"line\">    THRESH_MASK       = 7,</span><br><span class=\"line\">    THRESH_OTSU       = 8,</span><br><span class=\"line\">    THRESH_TRIANGLE   = 16</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">返回值:</span><br><span class=\"line\">retval： 与参数thresh一致</span><br><span class=\"line\">dst： 结果图像</span><br><span class=\"line\">使用了THRESH_OTSU和THRESH_TRIANGLE两个标志时，输入图像必须为单通道。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">ret, mask = cv.threshold(image2gray, 150, 255, cv.THRESH_BINARY)</span><br><span class=\"line\">cv.imshow(&#x27;mask&#x27;, mask)</span><br><span class=\"line\">mask_inv = cv.bitwise_not(mask)</span><br><span class=\"line\">cv.imshow(&#x27;mask_inv&#x27;, mask_inv)</span><br><span class=\"line\"># 现在将ROI中logo的区域涂黑</span><br><span class=\"line\">image1_bg = cv.bitwise_and(roi, roi, mask=mask_inv)</span><br><span class=\"line\">cv.imshow(&#x27;image1_bg&#x27;, image1_bg)</span><br><span class=\"line\"># 仅从logo图像中提取logo区域</span><br><span class=\"line\">image2_fg = cv.bitwise_and(image2, image2, mask=mask)</span><br><span class=\"line\">cv.imshow(&#x27;image2_fg&#x27;, image2_fg)</span><br><span class=\"line\"># 将logo放入ROI并修改主图像</span><br><span class=\"line\">dst = cv.add(image1_bg, image2_fg)</span><br><span class=\"line\">cv.imshow(&#x27;dst&#x27;, dst)</span><br><span class=\"line\">image1[0:rows, 0:cols] = dst</span><br><span class=\"line\">cv.imshow(&#x27;res&#x27;, image1)</span><br><span class=\"line\">cv.waitKey(0)</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-图像上的运算学习记录\"><a href=\"#OpenCV-图像上的运算学习记录\" class=\"headerlink\" title=\"OpenCV-图像上的运算学习记录\"></a>OpenCV-图像上的运算学习记录</h1><p>相关代码解析：</p>\n<ol>\n<li>cv.addWeighted()</li>\n<li>bitwise_and()     bitwise_or()    bitwise_not()   bitwise_xor()</li>\n<li>cv.threshold()<br>学习代码如下：","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">处理图像运算</span><br><span class=\"line\">OpenCV加法和Numpy加法之间有区别：</span><br><span class=\"line\">OpenCV加法是饱和运算，而Numpy加法是模运算。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">x = np.uint8([250])</span><br><span class=\"line\">y = np.uint8([10])</span><br><span class=\"line\">print(cv.add(x, y))  # 250 + 10 = 260 -&gt; 255, np像素数组溢出自动变成255（满像素）</span><br><span class=\"line\">print(x + y)  # 250 + 10 = 260 % 256 = 4</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像融合</span><br><span class=\"line\">这也是图像加法，但是对图像赋予不同的权重，以使其具有融合或透明的感觉。</span><br><span class=\"line\">根据以下等式添加图像:</span><br><span class=\"line\">G(x) = (1−α) * f0(x) + α * f1(x)</span><br><span class=\"line\">通过从 α 从 0→1更改，您可以在一个图像到另一个图像之间执行很酷的过渡。</span><br><span class=\"line\">********** PS: 融合的两幅图片分辨率大小和通道需要相同 ************</span><br><span class=\"line\">在这里，我拍摄了两个图像，将它们融合在一起。第一幅图像的权重为0.7，第二幅图像的权重为0.3。</span><br><span class=\"line\">cv.addWeighted()在图像上应用以下公式:</span><br><span class=\"line\">dst = α * img1 + β * img2 + γ</span><br><span class=\"line\">在这里，γ 被视为零。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 图像融合例子</span><br><span class=\"line\">img1 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg&#x27;)</span><br><span class=\"line\">img2 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#x27;)</span><br><span class=\"line\">dst = cv.addWeighted(img1, 0.2, img2, 0.8, 0)</span><br><span class=\"line\">cv.imshow(&#x27;dst&#x27;, dst)</span><br><span class=\"line\">cv.waitKey(0)</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">按位运算</span><br><span class=\"line\">这包括按位 AND、 OR、NOT 和 XOR 操作。</span><br><span class=\"line\">bitwise_and bitwise_or  bitwise_not bitwise_xor</span><br><span class=\"line\">它们在提取图像的任何部分(我们将在后面的章节中看到)、定义和处理非矩形 ROI 等方面非常有用。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 加载两张图片</span><br><span class=\"line\">image1 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg&#x27;)</span><br><span class=\"line\">image2 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#x27;)</span><br><span class=\"line\">print(image2.shape)</span><br><span class=\"line\">print(image2)           # 最外围矩阵[]表示图像像素矩阵，[[]]:内层矩阵表示第几行，[[[]]]:最内层矩阵表示RGB值和第几列</span><br><span class=\"line\">print(image2[0, 0])     # [31 36 37]</span><br><span class=\"line\">print(image2[1, 0])     # [34 39 40]</span><br><span class=\"line\">print(image2[0, 279])   # [20 21 17]</span><br><span class=\"line\">print(image2[185, 279])  # [67 99 128]</span><br><span class=\"line\">print(image2[0, 0, 0])      # 读取图像第0行第0列像素点BGR中的Blue值：31</span><br><span class=\"line\">print(image2.item(0, 0, 0))     # 读取图像第0行第0列像素点BGR中的Blue值：31</span><br><span class=\"line\"># 我想把image2放在左上角，所以我创建了ROI</span><br><span class=\"line\">rows, cols, channels = image2.shape</span><br><span class=\"line\">roi = image1[0:rows, 0:cols]</span><br><span class=\"line\"># 现在创建image2的掩膜（mask），并同时创建其相反掩膜（mask）</span><br><span class=\"line\">image2gray = cv.cvtColor(image2, cv.COLOR_BGR2GRAY)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像二值化：</span><br><span class=\"line\">定义：图像的二值化，就是将图像上的像素点的灰度值设置为0或255，</span><br><span class=\"line\">也就是将整个图像呈现出明显的只有黑和白的视觉效果。</span><br><span class=\"line\">灰度值0：黑  灰度值255：白</span><br><span class=\"line\">一幅图像包括目标物体、背景还有噪声，要想从多值的数字图像中直接提取出目标物体，</span><br><span class=\"line\">常用的方法就是设定一个阈值T，用T将图像的数据分成两部分：</span><br><span class=\"line\">大于T的像素群和小于T的像素群。</span><br><span class=\"line\">这是研究灰度变换的最特殊的方法，称为图像的二值化（Binarization）。</span><br><span class=\"line\"></span><br><span class=\"line\">retval, dst = cv.threshold( src, thresh, maxval, type[, dst] ) </span><br><span class=\"line\">参数说明：</span><br><span class=\"line\">src：原图像。</span><br><span class=\"line\">dst：结果图像。</span><br><span class=\"line\">thresh：当前阈值。</span><br><span class=\"line\">maxVal：最大阈值，一般为255.</span><br><span class=\"line\">thresholdType:阈值类型，主要有下面几种：</span><br><span class=\"line\">enum ThresholdTypes &#123;</span><br><span class=\"line\">    THRESH_BINARY     = 0,  大于阈值的部分被置为255，小于部分被置为0</span><br><span class=\"line\">    THRESH_BINARY_INV = 1,  大于阈值部分被置为0，小于部分被置为255</span><br><span class=\"line\">    THRESH_TRUNC      = 2,  大于阈值部分被置为threshold，小于部分保持原样</span><br><span class=\"line\">    THRESH_TOZERO     = 3,  小于阈值部分被置为0，大于部分保持不变</span><br><span class=\"line\">    THRESH_TOZERO_INV = 4,  大于阈值部分被置为0，小于部分保持不变 </span><br><span class=\"line\">    THRESH_MASK       = 7,</span><br><span class=\"line\">    THRESH_OTSU       = 8,</span><br><span class=\"line\">    THRESH_TRIANGLE   = 16</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">返回值:</span><br><span class=\"line\">retval： 与参数thresh一致</span><br><span class=\"line\">dst： 结果图像</span><br><span class=\"line\">使用了THRESH_OTSU和THRESH_TRIANGLE两个标志时，输入图像必须为单通道。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">ret, mask = cv.threshold(image2gray, 150, 255, cv.THRESH_BINARY)</span><br><span class=\"line\">cv.imshow(&#x27;mask&#x27;, mask)</span><br><span class=\"line\">mask_inv = cv.bitwise_not(mask)</span><br><span class=\"line\">cv.imshow(&#x27;mask_inv&#x27;, mask_inv)</span><br><span class=\"line\"># 现在将ROI中logo的区域涂黑</span><br><span class=\"line\">image1_bg = cv.bitwise_and(roi, roi, mask=mask_inv)</span><br><span class=\"line\">cv.imshow(&#x27;image1_bg&#x27;, image1_bg)</span><br><span class=\"line\"># 仅从logo图像中提取logo区域</span><br><span class=\"line\">image2_fg = cv.bitwise_and(image2, image2, mask=mask)</span><br><span class=\"line\">cv.imshow(&#x27;image2_fg&#x27;, image2_fg)</span><br><span class=\"line\"># 将logo放入ROI并修改主图像</span><br><span class=\"line\">dst = cv.add(image1_bg, image2_fg)</span><br><span class=\"line\">cv.imshow(&#x27;dst&#x27;, dst)</span><br><span class=\"line\">image1[0:rows, 0:cols] = dst</span><br><span class=\"line\">cv.imshow(&#x27;res&#x27;, image1)</span><br><span class=\"line\">cv.waitKey(0)</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"OpenCV-图像几何变换","_content":"# OpenCV-图像几何变换\n涉及函数：\n1. cv.warpAffine\n2. cv.warpPerspective\n3. cv.getPerspectiveTransform\n4. cv.warpPerspective\n<!--more-->\n学习代码如下：\n```\n\n```\"\"\"\n学习将不同的几何变换应用到图像上，如平移、旋转、仿射变换等。\n函数: cv.getPerspectiveTransform\n变换\nOpenCV提供了两个转换函数**cv.warpAffine**和**cv.warpPerspective**，您可以使用它们进行各种转换。\n**cv.warpAffine**采用2x3转换矩阵，而**cv.warpPerspective**采用3x3转换矩阵作为输入。\n\"\"\"\nimport cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n'''\n缩放\n缩放只是调整图像的大小。为此，OpenCV带有一个函数**cv.resize()。\n图像的大小可以手动指定，也可以指定缩放比例。也可使用不同的插值方法。\n首选的插值方法是**cv.INTER_AREA**用于缩小，**cv.INTER_CUBIC（慢）和**cv.INTER_LINEAR**用于缩放。\n默认情况下，出于所有调整大小的目的，使用的插值方法为**cv.INTER_LINEAR**。\nresize(src, dsize, dst=None, fx=None, fy=None, interpolation=None):\nsrc: 原图\ndsize: 修改尺寸\ndst: 修改后的图，缺省\nfx: x轴方向缩放因子，缺省\nfy: y轴方向缩放因子，缺省\ninterpolation: 插值方法建议为cv.INTER_LINEAR\n'''\nimg = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\nres1 = cv.resize(img, None, fx=2, fy=2, interpolation=cv.INTER_CUBIC)\ncv.imshow('res1', res1)\n# 或者\nheight, width = img.shape[:2]  # 取img.shape返回参数中前两个\nprint(img.shape[:3])  # 取img.shape返回参数中的前3个\nprint(img.shape[:4])  # 取img.shape返回参数中的前4个,但只有3个返回参数因此只取3个\nres2 = cv.resize(img, (2 * width, 2 * height), interpolation=cv.INTER_CUBIC)\ncv.imshow('res2', res2)\n'''\n平移\n在平移时要先把图像转换为灰度值\n平移是物体位置的移动。如果您知道在(x,y)方向上的位移，则将其设为(tx,ty)，你可以创建转换矩阵M，如下所示：\nM=[[1 0 tx][0 1 ty]]\n您可以将其放入**np.float32**类型的Numpy数组中，并将其传递给**cv.warpAffine**函数。\n\nwarpAffine(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None): \nsrc: 输入\nM: 变换矩阵\ndisize: 输出图片尺寸\n**cv.warpAffine**函数的第三个参数是输出图像的大小，其形式应为(width，height)。\nwidth =列数，height =行数\n'''\ngray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\nrows, cols = img.shape[:2]  # 只取前两个参数，不取通道值\nprint(rows, cols)\nM1 = np.float32([[1, 0, 100], [0, 1, 50]])\ndst1 = cv.warpAffine(img, M1, (cols, rows))\ncv.imshow('dst1', dst1)\n'''\n旋转\n图像旋转角度为θ是通过以下形式的变换矩阵实现的：\nM=[cosθ−sinθsinθcosθ]\n但是OpenCV提供了可缩放的旋转以及可调整的旋转中心，因此您可以在自己喜欢的任何位置旋转。修改后的变换矩阵为\n[[α β (1−α)*center*x−β*center*y][−β α β*center*x+(1−α)*center*y]]\n其中：\nα=scale*cosθ, β=scale*sinθ\n为了找到此转换矩阵，OpenCV提供了一个函数**cv.getRotationMatrix2D**。\ngetRotationMatrix2D(center, angle, scale):\ncenter: 旋转中心\nangle: 角度\nscale: 比例因子\n请检查以下示例，该示例将图像相对于中心旋转90度而没有任何缩放比例。\n'''\nM2 = cv.getRotationMatrix2D(((cols - 1) / 2.0, (rows - 1) / 2.0), 90, 1)\ndst2 = cv.warpAffine(img, M2, (cols, rows))\ncv.imshow('dst2', dst2)\n'''\n透视变换\n对于透视变换，您需要3x3变换矩阵。\n即使在转换后，直线也将保持直线。要找到此变换矩阵，您需要在输入图像上有4个点，在输出图像上需要相应的点。\n在这四个点中，其中三个不应共线。\n然后可以通过函数**cv.getPerspectiveTransform**找到变换矩阵。\ngetPerspectiveTransform(src, dst, solveMethod=None):\n功能: 计算从四对对应点的透视变换的矩阵\nsrc: 源图像中四边形顶点的坐标。\ndst: 目标图像中相应四边形顶点的坐标。\n然后将**cv.warpPerspective**应用于此3x3转换矩阵。\nwarpPerspective(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None):\n\n'''\npts1 = np.float32([[50, 50], [250, 50], [150, 50], [150, 250]])\npts2 = np.float32([[0, 0], [300, 0], [0, 300], [300, 300]])\nM = cv.getPerspectiveTransform(pts1, pts2)\ndst = cv.warpPerspective(img, M, (300, 300))\nplt.subplot(121), plt.imshow(img), plt.title('Input')\nplt.subplot(122), plt.imshow(dst), plt.title('Output')\nplt.show()\n\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n","source":"_posts/OpenCV/图像入门/OpenCV-图像几何变换.md","raw":"---\ntitle: OpenCV-图像几何变换\n---\n# OpenCV-图像几何变换\n涉及函数：\n1. cv.warpAffine\n2. cv.warpPerspective\n3. cv.getPerspectiveTransform\n4. cv.warpPerspective\n<!--more-->\n学习代码如下：\n```\n\n```\"\"\"\n学习将不同的几何变换应用到图像上，如平移、旋转、仿射变换等。\n函数: cv.getPerspectiveTransform\n变换\nOpenCV提供了两个转换函数**cv.warpAffine**和**cv.warpPerspective**，您可以使用它们进行各种转换。\n**cv.warpAffine**采用2x3转换矩阵，而**cv.warpPerspective**采用3x3转换矩阵作为输入。\n\"\"\"\nimport cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n'''\n缩放\n缩放只是调整图像的大小。为此，OpenCV带有一个函数**cv.resize()。\n图像的大小可以手动指定，也可以指定缩放比例。也可使用不同的插值方法。\n首选的插值方法是**cv.INTER_AREA**用于缩小，**cv.INTER_CUBIC（慢）和**cv.INTER_LINEAR**用于缩放。\n默认情况下，出于所有调整大小的目的，使用的插值方法为**cv.INTER_LINEAR**。\nresize(src, dsize, dst=None, fx=None, fy=None, interpolation=None):\nsrc: 原图\ndsize: 修改尺寸\ndst: 修改后的图，缺省\nfx: x轴方向缩放因子，缺省\nfy: y轴方向缩放因子，缺省\ninterpolation: 插值方法建议为cv.INTER_LINEAR\n'''\nimg = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg')\nres1 = cv.resize(img, None, fx=2, fy=2, interpolation=cv.INTER_CUBIC)\ncv.imshow('res1', res1)\n# 或者\nheight, width = img.shape[:2]  # 取img.shape返回参数中前两个\nprint(img.shape[:3])  # 取img.shape返回参数中的前3个\nprint(img.shape[:4])  # 取img.shape返回参数中的前4个,但只有3个返回参数因此只取3个\nres2 = cv.resize(img, (2 * width, 2 * height), interpolation=cv.INTER_CUBIC)\ncv.imshow('res2', res2)\n'''\n平移\n在平移时要先把图像转换为灰度值\n平移是物体位置的移动。如果您知道在(x,y)方向上的位移，则将其设为(tx,ty)，你可以创建转换矩阵M，如下所示：\nM=[[1 0 tx][0 1 ty]]\n您可以将其放入**np.float32**类型的Numpy数组中，并将其传递给**cv.warpAffine**函数。\n\nwarpAffine(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None): \nsrc: 输入\nM: 变换矩阵\ndisize: 输出图片尺寸\n**cv.warpAffine**函数的第三个参数是输出图像的大小，其形式应为(width，height)。\nwidth =列数，height =行数\n'''\ngray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\nrows, cols = img.shape[:2]  # 只取前两个参数，不取通道值\nprint(rows, cols)\nM1 = np.float32([[1, 0, 100], [0, 1, 50]])\ndst1 = cv.warpAffine(img, M1, (cols, rows))\ncv.imshow('dst1', dst1)\n'''\n旋转\n图像旋转角度为θ是通过以下形式的变换矩阵实现的：\nM=[cosθ−sinθsinθcosθ]\n但是OpenCV提供了可缩放的旋转以及可调整的旋转中心，因此您可以在自己喜欢的任何位置旋转。修改后的变换矩阵为\n[[α β (1−α)*center*x−β*center*y][−β α β*center*x+(1−α)*center*y]]\n其中：\nα=scale*cosθ, β=scale*sinθ\n为了找到此转换矩阵，OpenCV提供了一个函数**cv.getRotationMatrix2D**。\ngetRotationMatrix2D(center, angle, scale):\ncenter: 旋转中心\nangle: 角度\nscale: 比例因子\n请检查以下示例，该示例将图像相对于中心旋转90度而没有任何缩放比例。\n'''\nM2 = cv.getRotationMatrix2D(((cols - 1) / 2.0, (rows - 1) / 2.0), 90, 1)\ndst2 = cv.warpAffine(img, M2, (cols, rows))\ncv.imshow('dst2', dst2)\n'''\n透视变换\n对于透视变换，您需要3x3变换矩阵。\n即使在转换后，直线也将保持直线。要找到此变换矩阵，您需要在输入图像上有4个点，在输出图像上需要相应的点。\n在这四个点中，其中三个不应共线。\n然后可以通过函数**cv.getPerspectiveTransform**找到变换矩阵。\ngetPerspectiveTransform(src, dst, solveMethod=None):\n功能: 计算从四对对应点的透视变换的矩阵\nsrc: 源图像中四边形顶点的坐标。\ndst: 目标图像中相应四边形顶点的坐标。\n然后将**cv.warpPerspective**应用于此3x3转换矩阵。\nwarpPerspective(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None):\n\n'''\npts1 = np.float32([[50, 50], [250, 50], [150, 50], [150, 250]])\npts2 = np.float32([[0, 0], [300, 0], [0, 300], [300, 300]])\nM = cv.getPerspectiveTransform(pts1, pts2)\ndst = cv.warpPerspective(img, M, (300, 300))\nplt.subplot(121), plt.imshow(img), plt.title('Input')\nplt.subplot(122), plt.imshow(dst), plt.title('Output')\nplt.show()\n\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n","slug":"OpenCV/图像入门/OpenCV-图像几何变换","published":1,"date":"2022-05-25T10:06:34.702Z","updated":"2022-05-07T09:55:23.900Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeq1001g68urgxu6gubv","content":"<h1 id=\"OpenCV-图像几何变换\"><a href=\"#OpenCV-图像几何变换\" class=\"headerlink\" title=\"OpenCV-图像几何变换\"></a>OpenCV-图像几何变换</h1><p>涉及函数：</p>\n<ol>\n<li>cv.warpAffine</li>\n<li>cv.warpPerspective</li>\n<li>cv.getPerspectiveTransform</li>\n<li>cv.warpPerspective<span id=\"more\"></span>\n学习代码如下：<br>```</li>\n</ol>\n<pre><code class=\"&quot;&quot;&quot;\">学习将不同的几何变换应用到图像上，如平移、旋转、仿射变换等。\n函数: cv.getPerspectiveTransform\n变换\nOpenCV提供了两个转换函数**cv.warpAffine**和**cv.warpPerspective**，您可以使用它们进行各种转换。\n**cv.warpAffine**采用2x3转换矩阵，而**cv.warpPerspective**采用3x3转换矩阵作为输入。\n&quot;&quot;&quot;\nimport cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n&#39;&#39;&#39;\n缩放\n缩放只是调整图像的大小。为此，OpenCV带有一个函数**cv.resize()。\n图像的大小可以手动指定，也可以指定缩放比例。也可使用不同的插值方法。\n首选的插值方法是**cv.INTER_AREA**用于缩小，**cv.INTER_CUBIC（慢）和**cv.INTER_LINEAR**用于缩放。\n默认情况下，出于所有调整大小的目的，使用的插值方法为**cv.INTER_LINEAR**。\nresize(src, dsize, dst=None, fx=None, fy=None, interpolation=None):\nsrc: 原图\ndsize: 修改尺寸\ndst: 修改后的图，缺省\nfx: x轴方向缩放因子，缺省\nfy: y轴方向缩放因子，缺省\ninterpolation: 插值方法建议为cv.INTER_LINEAR\n&#39;&#39;&#39;\nimg = cv.imread(r&#39;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#39;)\nres1 = cv.resize(img, None, fx=2, fy=2, interpolation=cv.INTER_CUBIC)\ncv.imshow(&#39;res1&#39;, res1)\n# 或者\nheight, width = img.shape[:2]  # 取img.shape返回参数中前两个\nprint(img.shape[:3])  # 取img.shape返回参数中的前3个\nprint(img.shape[:4])  # 取img.shape返回参数中的前4个,但只有3个返回参数因此只取3个\nres2 = cv.resize(img, (2 * width, 2 * height), interpolation=cv.INTER_CUBIC)\ncv.imshow(&#39;res2&#39;, res2)\n&#39;&#39;&#39;\n平移\n在平移时要先把图像转换为灰度值\n平移是物体位置的移动。如果您知道在(x,y)方向上的位移，则将其设为(tx,ty)，你可以创建转换矩阵M，如下所示：\nM=[[1 0 tx][0 1 ty]]\n您可以将其放入**np.float32**类型的Numpy数组中，并将其传递给**cv.warpAffine**函数。\n\nwarpAffine(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None): \nsrc: 输入\nM: 变换矩阵\ndisize: 输出图片尺寸\n**cv.warpAffine**函数的第三个参数是输出图像的大小，其形式应为(width，height)。\nwidth =列数，height =行数\n&#39;&#39;&#39;\ngray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\nrows, cols = img.shape[:2]  # 只取前两个参数，不取通道值\nprint(rows, cols)\nM1 = np.float32([[1, 0, 100], [0, 1, 50]])\ndst1 = cv.warpAffine(img, M1, (cols, rows))\ncv.imshow(&#39;dst1&#39;, dst1)\n&#39;&#39;&#39;\n旋转\n图像旋转角度为θ是通过以下形式的变换矩阵实现的：\nM=[cosθ−sinθsinθcosθ]\n但是OpenCV提供了可缩放的旋转以及可调整的旋转中心，因此您可以在自己喜欢的任何位置旋转。修改后的变换矩阵为\n[[α β (1−α)*center*x−β*center*y][−β α β*center*x+(1−α)*center*y]]\n其中：\nα=scale*cosθ, β=scale*sinθ\n为了找到此转换矩阵，OpenCV提供了一个函数**cv.getRotationMatrix2D**。\ngetRotationMatrix2D(center, angle, scale):\ncenter: 旋转中心\nangle: 角度\nscale: 比例因子\n请检查以下示例，该示例将图像相对于中心旋转90度而没有任何缩放比例。\n&#39;&#39;&#39;\nM2 = cv.getRotationMatrix2D(((cols - 1) / 2.0, (rows - 1) / 2.0), 90, 1)\ndst2 = cv.warpAffine(img, M2, (cols, rows))\ncv.imshow(&#39;dst2&#39;, dst2)\n&#39;&#39;&#39;\n透视变换\n对于透视变换，您需要3x3变换矩阵。\n即使在转换后，直线也将保持直线。要找到此变换矩阵，您需要在输入图像上有4个点，在输出图像上需要相应的点。\n在这四个点中，其中三个不应共线。\n然后可以通过函数**cv.getPerspectiveTransform**找到变换矩阵。\ngetPerspectiveTransform(src, dst, solveMethod=None):\n功能: 计算从四对对应点的透视变换的矩阵\nsrc: 源图像中四边形顶点的坐标。\ndst: 目标图像中相应四边形顶点的坐标。\n然后将**cv.warpPerspective**应用于此3x3转换矩阵。\nwarpPerspective(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None):\n\n&#39;&#39;&#39;\npts1 = np.float32([[50, 50], [250, 50], [150, 50], [150, 250]])\npts2 = np.float32([[0, 0], [300, 0], [0, 300], [300, 300]])\nM = cv.getPerspectiveTransform(pts1, pts2)\ndst = cv.warpPerspective(img, M, (300, 300))\nplt.subplot(121), plt.imshow(img), plt.title(&#39;Input&#39;)\nplt.subplot(122), plt.imshow(dst), plt.title(&#39;Output&#39;)\nplt.show()\n\ncv.waitKey(0)\ncv.destroyAllWindows()\n</code></pre>\n","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-图像几何变换\"><a href=\"#OpenCV-图像几何变换\" class=\"headerlink\" title=\"OpenCV-图像几何变换\"></a>OpenCV-图像几何变换</h1><p>涉及函数：</p>\n<ol>\n<li>cv.warpAffine</li>\n<li>cv.warpPerspective</li>\n<li>cv.getPerspectiveTransform</li>\n<li>cv.warpPerspective","more":"学习代码如下：<br>```</li>\n</ol>\n<pre><code class=\"&quot;&quot;&quot;\">学习将不同的几何变换应用到图像上，如平移、旋转、仿射变换等。\n函数: cv.getPerspectiveTransform\n变换\nOpenCV提供了两个转换函数**cv.warpAffine**和**cv.warpPerspective**，您可以使用它们进行各种转换。\n**cv.warpAffine**采用2x3转换矩阵，而**cv.warpPerspective**采用3x3转换矩阵作为输入。\n&quot;&quot;&quot;\nimport cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\n&#39;&#39;&#39;\n缩放\n缩放只是调整图像的大小。为此，OpenCV带有一个函数**cv.resize()。\n图像的大小可以手动指定，也可以指定缩放比例。也可使用不同的插值方法。\n首选的插值方法是**cv.INTER_AREA**用于缩小，**cv.INTER_CUBIC（慢）和**cv.INTER_LINEAR**用于缩放。\n默认情况下，出于所有调整大小的目的，使用的插值方法为**cv.INTER_LINEAR**。\nresize(src, dsize, dst=None, fx=None, fy=None, interpolation=None):\nsrc: 原图\ndsize: 修改尺寸\ndst: 修改后的图，缺省\nfx: x轴方向缩放因子，缺省\nfy: y轴方向缩放因子，缺省\ninterpolation: 插值方法建议为cv.INTER_LINEAR\n&#39;&#39;&#39;\nimg = cv.imread(r&#39;C:\\Users\\Admin\\Desktop\\opencv\\jumao-001.jpg&#39;)\nres1 = cv.resize(img, None, fx=2, fy=2, interpolation=cv.INTER_CUBIC)\ncv.imshow(&#39;res1&#39;, res1)\n# 或者\nheight, width = img.shape[:2]  # 取img.shape返回参数中前两个\nprint(img.shape[:3])  # 取img.shape返回参数中的前3个\nprint(img.shape[:4])  # 取img.shape返回参数中的前4个,但只有3个返回参数因此只取3个\nres2 = cv.resize(img, (2 * width, 2 * height), interpolation=cv.INTER_CUBIC)\ncv.imshow(&#39;res2&#39;, res2)\n&#39;&#39;&#39;\n平移\n在平移时要先把图像转换为灰度值\n平移是物体位置的移动。如果您知道在(x,y)方向上的位移，则将其设为(tx,ty)，你可以创建转换矩阵M，如下所示：\nM=[[1 0 tx][0 1 ty]]\n您可以将其放入**np.float32**类型的Numpy数组中，并将其传递给**cv.warpAffine**函数。\n\nwarpAffine(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None): \nsrc: 输入\nM: 变换矩阵\ndisize: 输出图片尺寸\n**cv.warpAffine**函数的第三个参数是输出图像的大小，其形式应为(width，height)。\nwidth =列数，height =行数\n&#39;&#39;&#39;\ngray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\nrows, cols = img.shape[:2]  # 只取前两个参数，不取通道值\nprint(rows, cols)\nM1 = np.float32([[1, 0, 100], [0, 1, 50]])\ndst1 = cv.warpAffine(img, M1, (cols, rows))\ncv.imshow(&#39;dst1&#39;, dst1)\n&#39;&#39;&#39;\n旋转\n图像旋转角度为θ是通过以下形式的变换矩阵实现的：\nM=[cosθ−sinθsinθcosθ]\n但是OpenCV提供了可缩放的旋转以及可调整的旋转中心，因此您可以在自己喜欢的任何位置旋转。修改后的变换矩阵为\n[[α β (1−α)*center*x−β*center*y][−β α β*center*x+(1−α)*center*y]]\n其中：\nα=scale*cosθ, β=scale*sinθ\n为了找到此转换矩阵，OpenCV提供了一个函数**cv.getRotationMatrix2D**。\ngetRotationMatrix2D(center, angle, scale):\ncenter: 旋转中心\nangle: 角度\nscale: 比例因子\n请检查以下示例，该示例将图像相对于中心旋转90度而没有任何缩放比例。\n&#39;&#39;&#39;\nM2 = cv.getRotationMatrix2D(((cols - 1) / 2.0, (rows - 1) / 2.0), 90, 1)\ndst2 = cv.warpAffine(img, M2, (cols, rows))\ncv.imshow(&#39;dst2&#39;, dst2)\n&#39;&#39;&#39;\n透视变换\n对于透视变换，您需要3x3变换矩阵。\n即使在转换后，直线也将保持直线。要找到此变换矩阵，您需要在输入图像上有4个点，在输出图像上需要相应的点。\n在这四个点中，其中三个不应共线。\n然后可以通过函数**cv.getPerspectiveTransform**找到变换矩阵。\ngetPerspectiveTransform(src, dst, solveMethod=None):\n功能: 计算从四对对应点的透视变换的矩阵\nsrc: 源图像中四边形顶点的坐标。\ndst: 目标图像中相应四边形顶点的坐标。\n然后将**cv.warpPerspective**应用于此3x3转换矩阵。\nwarpPerspective(src, M, dsize, dst=None, flags=None, borderMode=None, borderValue=None):\n\n&#39;&#39;&#39;\npts1 = np.float32([[50, 50], [250, 50], [150, 50], [150, 250]])\npts2 = np.float32([[0, 0], [300, 0], [0, 300], [300, 300]])\nM = cv.getPerspectiveTransform(pts1, pts2)\ndst = cv.warpPerspective(img, M, (300, 300))\nplt.subplot(121), plt.imshow(img), plt.title(&#39;Input&#39;)\nplt.subplot(122), plt.imshow(dst), plt.title(&#39;Output&#39;)\nplt.show()\n\ncv.waitKey(0)\ncv.destroyAllWindows()\n</code></pre>"},{"title":"OpenCV-性能衡量和技术提升","_content":"# OpenCV-性能衡量和技术提升学习记录\n内容包括：\n**openCV中代码运算计时和Python内置time库计算代码运行速度**\n学习代码如下：\n<!--more-->\n```\n\"\"\"\n使用OpenCV衡量性能\n代码计时函数:\n**cv.getTickCount**函数返回从参考事件（如打开机器的那一刻）到调用此函数那一刻之间的时钟周期数。\n因此，如果在函数执行之前和之后调用它，则会获得用于执行函数的时钟周期数。\n**cv.getTickFrequency**函数返回时钟周期的频率或每秒的时钟周期数。\n因此，要找到执行时间（以秒为单位）\n\"\"\"\nimport numpy as np\nimport cv2 as cv\nimport time\n\n'''\ncv.getTickCount()使用框架如下：\ne1 = cv.getTickCount()\n# 你的执行代码\ne2 = cv.getTickCount()\ntime = (e2 - e1) / cv.getTickFrequency()\n'''\n# cv.getTickCount()使用举例\nimg1 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\changepictuer-project\\001.jpg')\ne1 = cv.getTickCount()\nfor i in range(5, 49, 2):\n    img1 = cv.medianBlur(img1, i)\ne2 = cv.getTickCount()\nt1 = (e2 - e1) / cv.getTickFrequency()\nprint(t1)  # 0.6523605\n\n\n'''\n使time.time()对比\n使用框架：\nstar = time.time()\n# 你的执行代码\nend = time.time()\n'''\nstart = time.time()\nfor i in range(5, 49, 2):\n    img1 = cv.medianBlur(img1, i)\nend = time.time()\nt2 = end - start\nprint(t2)    # 0.6238031387329102\n\n```","source":"_posts/OpenCV/图像入门/OpenCV-性能衡量和提升技术.md","raw":"---\ntitle: OpenCV-性能衡量和技术提升\n---\n# OpenCV-性能衡量和技术提升学习记录\n内容包括：\n**openCV中代码运算计时和Python内置time库计算代码运行速度**\n学习代码如下：\n<!--more-->\n```\n\"\"\"\n使用OpenCV衡量性能\n代码计时函数:\n**cv.getTickCount**函数返回从参考事件（如打开机器的那一刻）到调用此函数那一刻之间的时钟周期数。\n因此，如果在函数执行之前和之后调用它，则会获得用于执行函数的时钟周期数。\n**cv.getTickFrequency**函数返回时钟周期的频率或每秒的时钟周期数。\n因此，要找到执行时间（以秒为单位）\n\"\"\"\nimport numpy as np\nimport cv2 as cv\nimport time\n\n'''\ncv.getTickCount()使用框架如下：\ne1 = cv.getTickCount()\n# 你的执行代码\ne2 = cv.getTickCount()\ntime = (e2 - e1) / cv.getTickFrequency()\n'''\n# cv.getTickCount()使用举例\nimg1 = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\changepictuer-project\\001.jpg')\ne1 = cv.getTickCount()\nfor i in range(5, 49, 2):\n    img1 = cv.medianBlur(img1, i)\ne2 = cv.getTickCount()\nt1 = (e2 - e1) / cv.getTickFrequency()\nprint(t1)  # 0.6523605\n\n\n'''\n使time.time()对比\n使用框架：\nstar = time.time()\n# 你的执行代码\nend = time.time()\n'''\nstart = time.time()\nfor i in range(5, 49, 2):\n    img1 = cv.medianBlur(img1, i)\nend = time.time()\nt2 = end - start\nprint(t2)    # 0.6238031387329102\n\n```","slug":"OpenCV/图像入门/OpenCV-性能衡量和提升技术","published":1,"date":"2022-05-25T10:06:34.767Z","updated":"2022-04-14T01:17:51.961Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeq2001h68uregvc9edl","content":"<h1 id=\"OpenCV-性能衡量和技术提升学习记录\"><a href=\"#OpenCV-性能衡量和技术提升学习记录\" class=\"headerlink\" title=\"OpenCV-性能衡量和技术提升学习记录\"></a>OpenCV-性能衡量和技术提升学习记录</h1><p>内容包括：<br><strong>openCV中代码运算计时和Python内置time库计算代码运行速度</strong><br>学习代码如下：</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">使用OpenCV衡量性能</span><br><span class=\"line\">代码计时函数:</span><br><span class=\"line\">**cv.getTickCount**函数返回从参考事件（如打开机器的那一刻）到调用此函数那一刻之间的时钟周期数。</span><br><span class=\"line\">因此，如果在函数执行之前和之后调用它，则会获得用于执行函数的时钟周期数。</span><br><span class=\"line\">**cv.getTickFrequency**函数返回时钟周期的频率或每秒的时钟周期数。</span><br><span class=\"line\">因此，要找到执行时间（以秒为单位）</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.getTickCount()使用框架如下：</span><br><span class=\"line\">e1 = cv.getTickCount()</span><br><span class=\"line\"># 你的执行代码</span><br><span class=\"line\">e2 = cv.getTickCount()</span><br><span class=\"line\">time = (e2 - e1) / cv.getTickFrequency()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># cv.getTickCount()使用举例</span><br><span class=\"line\">img1 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\changepictuer-project\\001.jpg&#x27;)</span><br><span class=\"line\">e1 = cv.getTickCount()</span><br><span class=\"line\">for i in range(5, 49, 2):</span><br><span class=\"line\">    img1 = cv.medianBlur(img1, i)</span><br><span class=\"line\">e2 = cv.getTickCount()</span><br><span class=\"line\">t1 = (e2 - e1) / cv.getTickFrequency()</span><br><span class=\"line\">print(t1)  # 0.6523605</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">使time.time()对比</span><br><span class=\"line\">使用框架：</span><br><span class=\"line\">star = time.time()</span><br><span class=\"line\"># 你的执行代码</span><br><span class=\"line\">end = time.time()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">start = time.time()</span><br><span class=\"line\">for i in range(5, 49, 2):</span><br><span class=\"line\">    img1 = cv.medianBlur(img1, i)</span><br><span class=\"line\">end = time.time()</span><br><span class=\"line\">t2 = end - start</span><br><span class=\"line\">print(t2)    # 0.6238031387329102</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-性能衡量和技术提升学习记录\"><a href=\"#OpenCV-性能衡量和技术提升学习记录\" class=\"headerlink\" title=\"OpenCV-性能衡量和技术提升学习记录\"></a>OpenCV-性能衡量和技术提升学习记录</h1><p>内容包括：<br><strong>openCV中代码运算计时和Python内置time库计算代码运行速度</strong><br>学习代码如下：</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">使用OpenCV衡量性能</span><br><span class=\"line\">代码计时函数:</span><br><span class=\"line\">**cv.getTickCount**函数返回从参考事件（如打开机器的那一刻）到调用此函数那一刻之间的时钟周期数。</span><br><span class=\"line\">因此，如果在函数执行之前和之后调用它，则会获得用于执行函数的时钟周期数。</span><br><span class=\"line\">**cv.getTickFrequency**函数返回时钟周期的频率或每秒的时钟周期数。</span><br><span class=\"line\">因此，要找到执行时间（以秒为单位）</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.getTickCount()使用框架如下：</span><br><span class=\"line\">e1 = cv.getTickCount()</span><br><span class=\"line\"># 你的执行代码</span><br><span class=\"line\">e2 = cv.getTickCount()</span><br><span class=\"line\">time = (e2 - e1) / cv.getTickFrequency()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># cv.getTickCount()使用举例</span><br><span class=\"line\">img1 = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\changepictuer-project\\001.jpg&#x27;)</span><br><span class=\"line\">e1 = cv.getTickCount()</span><br><span class=\"line\">for i in range(5, 49, 2):</span><br><span class=\"line\">    img1 = cv.medianBlur(img1, i)</span><br><span class=\"line\">e2 = cv.getTickCount()</span><br><span class=\"line\">t1 = (e2 - e1) / cv.getTickFrequency()</span><br><span class=\"line\">print(t1)  # 0.6523605</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">使time.time()对比</span><br><span class=\"line\">使用框架：</span><br><span class=\"line\">star = time.time()</span><br><span class=\"line\"># 你的执行代码</span><br><span class=\"line\">end = time.time()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">start = time.time()</span><br><span class=\"line\">for i in range(5, 49, 2):</span><br><span class=\"line\">    img1 = cv.medianBlur(img1, i)</span><br><span class=\"line\">end = time.time()</span><br><span class=\"line\">t2 = end - start</span><br><span class=\"line\">print(t2)    # 0.6238031387329102</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-改变颜色空间","_content":"# OpenCV-改变颜色空间学习记录\n涉及函数：\n1. cap.read()\n2. cv.cvtColor(src, code, dst=None, dstCn=None)\n3. cv.inRange(src, lowerb, upperb, dst=None)\n\n学习代码如下：\n<!--more-->\n```\n\"\"\"\n学习如何将图像从一个色彩空间转换到另一个，像BGR↔灰色，BGR↔HSV等\n学习以下功能：cv.cvtColor，**cv.inRange**等。\nOpenCV中有超过150种颜色空间转换方法。只有两个最广泛使用的,BGR↔灰色和BGR↔HSV。\n对于颜色转换，我们使用cv函数。cvtColor(input_image, flag)，其中flag决定转换的类型。\n对于BGR→灰度转换，我们使用标志cv.COLOR_BGR2GRAY。类似地，对于BGR→HSV，\n我们使用标志cv.COLOR_BGR2HSV。要获取其他标记，只需在Python终端中运行以下命令:\nimport cv2 as cv\nflags = [i for i in dir(cv) if i.startswith('COLOR_')]\nprint( flags )\nps: HSV的色相范围为[0,179]，饱和度范围为[0,255]，亮度值范围为[0,255]。\n不同的软件使用不同的规模。因此，如果你要将OpenCV值和它们比较，你需要将这些范围标准化。\n\"\"\"\n# 举例从摄像头获取人脸区域，图像识别基础\nimport cv2 as cv\nimport numpy as np\n\ncap = cv.VideoCapture(0)\nwhile 1:\n    '''\n    获取摄像头读取帧\n    ret: frame = cap.read()\n    ret: 为True 或者False,代表有没有读取到图片\n    frame: 表示截取到一帧的图片\n    '''\n    # 读取帧\n    ret, frame = cap.read()\n    # 翻转图像\n    frame = cv.flip(frame, 1)\n    '''\n    图像颜色转换函数：\n    cvtColor(src, code, dst=None, dstCn=None)\n    src: 输入图像\n    code: 颜色空间转换，例如：cv.COLOR_BGR2HSV 表示：BGE -> HSV\n    dst: 输出图像，为缺省参数\n    dstCn: 输出图像的通道数，缺省参数\n    '''\n    # 转换颜色空间 BGR 到 HSV\n    hsv = cv.cvtColor(frame, cv.COLOR_BGR2HSV)\n    cv.imshow('hsv', hsv)\n    # 定义HSV中肤色的范围\n    lower_skin = np.array([0, 28, 70], dtype=np.uint8)\n    upper_skin = np.array([20, 255, 255], dtype=np.uint8)\n    '''\n    检查数组元素是否位于其他两个数组的元素之间\n    OpenCV中的inRange()函数可实现二值化功能（这点类似threshold()函数），更关键的是可以同时针对多通道进行操作，使用起来非常方便！\n    主要是将在两个阈值内的像素值设置为白色（255），而不在阈值区间内的像素值设置为黑色（0），该功能类似于之间所讲的双阈值化操作。\n    inRange(src, lowerb, upperb, dst=None)\n    scr: 输入\n    lowerb: 下界数组\n    upperb: 上界数组\n    dst: 输出，缺省参数\n    '''\n    # 设置HSV的阈值使得只取肤色\n    mask = cv.inRange(hsv, lower_skin, upper_skin)\n    # 将掩膜和图像逐像素做与运算\n    res = cv.bitwise_and(frame, frame, mask=mask)\n    cv.imshow('frame', frame)\n    cv.imshow('mask', mask)\n    cv.imshow('res', res)\n    k = cv.waitKey(5) & 0xFF\n    if k == 27:\n        break\ncv.destroyAllWindows()\n\n```","source":"_posts/OpenCV/图像入门/OpenCV-改变颜色空间.md","raw":"---\ntitle: OpenCV-改变颜色空间\n---\n# OpenCV-改变颜色空间学习记录\n涉及函数：\n1. cap.read()\n2. cv.cvtColor(src, code, dst=None, dstCn=None)\n3. cv.inRange(src, lowerb, upperb, dst=None)\n\n学习代码如下：\n<!--more-->\n```\n\"\"\"\n学习如何将图像从一个色彩空间转换到另一个，像BGR↔灰色，BGR↔HSV等\n学习以下功能：cv.cvtColor，**cv.inRange**等。\nOpenCV中有超过150种颜色空间转换方法。只有两个最广泛使用的,BGR↔灰色和BGR↔HSV。\n对于颜色转换，我们使用cv函数。cvtColor(input_image, flag)，其中flag决定转换的类型。\n对于BGR→灰度转换，我们使用标志cv.COLOR_BGR2GRAY。类似地，对于BGR→HSV，\n我们使用标志cv.COLOR_BGR2HSV。要获取其他标记，只需在Python终端中运行以下命令:\nimport cv2 as cv\nflags = [i for i in dir(cv) if i.startswith('COLOR_')]\nprint( flags )\nps: HSV的色相范围为[0,179]，饱和度范围为[0,255]，亮度值范围为[0,255]。\n不同的软件使用不同的规模。因此，如果你要将OpenCV值和它们比较，你需要将这些范围标准化。\n\"\"\"\n# 举例从摄像头获取人脸区域，图像识别基础\nimport cv2 as cv\nimport numpy as np\n\ncap = cv.VideoCapture(0)\nwhile 1:\n    '''\n    获取摄像头读取帧\n    ret: frame = cap.read()\n    ret: 为True 或者False,代表有没有读取到图片\n    frame: 表示截取到一帧的图片\n    '''\n    # 读取帧\n    ret, frame = cap.read()\n    # 翻转图像\n    frame = cv.flip(frame, 1)\n    '''\n    图像颜色转换函数：\n    cvtColor(src, code, dst=None, dstCn=None)\n    src: 输入图像\n    code: 颜色空间转换，例如：cv.COLOR_BGR2HSV 表示：BGE -> HSV\n    dst: 输出图像，为缺省参数\n    dstCn: 输出图像的通道数，缺省参数\n    '''\n    # 转换颜色空间 BGR 到 HSV\n    hsv = cv.cvtColor(frame, cv.COLOR_BGR2HSV)\n    cv.imshow('hsv', hsv)\n    # 定义HSV中肤色的范围\n    lower_skin = np.array([0, 28, 70], dtype=np.uint8)\n    upper_skin = np.array([20, 255, 255], dtype=np.uint8)\n    '''\n    检查数组元素是否位于其他两个数组的元素之间\n    OpenCV中的inRange()函数可实现二值化功能（这点类似threshold()函数），更关键的是可以同时针对多通道进行操作，使用起来非常方便！\n    主要是将在两个阈值内的像素值设置为白色（255），而不在阈值区间内的像素值设置为黑色（0），该功能类似于之间所讲的双阈值化操作。\n    inRange(src, lowerb, upperb, dst=None)\n    scr: 输入\n    lowerb: 下界数组\n    upperb: 上界数组\n    dst: 输出，缺省参数\n    '''\n    # 设置HSV的阈值使得只取肤色\n    mask = cv.inRange(hsv, lower_skin, upper_skin)\n    # 将掩膜和图像逐像素做与运算\n    res = cv.bitwise_and(frame, frame, mask=mask)\n    cv.imshow('frame', frame)\n    cv.imshow('mask', mask)\n    cv.imshow('res', res)\n    k = cv.waitKey(5) & 0xFF\n    if k == 27:\n        break\ncv.destroyAllWindows()\n\n```","slug":"OpenCV/图像入门/OpenCV-改变颜色空间","published":1,"date":"2022-05-25T10:06:34.792Z","updated":"2022-05-07T09:57:16.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeq3001i68ur9fry154l","content":"<h1 id=\"OpenCV-改变颜色空间学习记录\"><a href=\"#OpenCV-改变颜色空间学习记录\" class=\"headerlink\" title=\"OpenCV-改变颜色空间学习记录\"></a>OpenCV-改变颜色空间学习记录</h1><p>涉及函数：</p>\n<ol>\n<li>cap.read()</li>\n<li>cv.cvtColor(src, code, dst=None, dstCn=None)</li>\n<li>cv.inRange(src, lowerb, upperb, dst=None)</li>\n</ol>\n<p>学习代码如下：</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">学习如何将图像从一个色彩空间转换到另一个，像BGR↔灰色，BGR↔HSV等</span><br><span class=\"line\">学习以下功能：cv.cvtColor，**cv.inRange**等。</span><br><span class=\"line\">OpenCV中有超过150种颜色空间转换方法。只有两个最广泛使用的,BGR↔灰色和BGR↔HSV。</span><br><span class=\"line\">对于颜色转换，我们使用cv函数。cvtColor(input_image, flag)，其中flag决定转换的类型。</span><br><span class=\"line\">对于BGR→灰度转换，我们使用标志cv.COLOR_BGR2GRAY。类似地，对于BGR→HSV，</span><br><span class=\"line\">我们使用标志cv.COLOR_BGR2HSV。要获取其他标记，只需在Python终端中运行以下命令:</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">flags = [i for i in dir(cv) if i.startswith(&#x27;COLOR_&#x27;)]</span><br><span class=\"line\">print( flags )</span><br><span class=\"line\">ps: HSV的色相范围为[0,179]，饱和度范围为[0,255]，亮度值范围为[0,255]。</span><br><span class=\"line\">不同的软件使用不同的规模。因此，如果你要将OpenCV值和它们比较，你需要将这些范围标准化。</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># 举例从摄像头获取人脸区域，图像识别基础</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">cap = cv.VideoCapture(0)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    获取摄像头读取帧</span><br><span class=\"line\">    ret: frame = cap.read()</span><br><span class=\"line\">    ret: 为True 或者False,代表有没有读取到图片</span><br><span class=\"line\">    frame: 表示截取到一帧的图片</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 读取帧</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    # 翻转图像</span><br><span class=\"line\">    frame = cv.flip(frame, 1)</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    图像颜色转换函数：</span><br><span class=\"line\">    cvtColor(src, code, dst=None, dstCn=None)</span><br><span class=\"line\">    src: 输入图像</span><br><span class=\"line\">    code: 颜色空间转换，例如：cv.COLOR_BGR2HSV 表示：BGE -&gt; HSV</span><br><span class=\"line\">    dst: 输出图像，为缺省参数</span><br><span class=\"line\">    dstCn: 输出图像的通道数，缺省参数</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 转换颜色空间 BGR 到 HSV</span><br><span class=\"line\">    hsv = cv.cvtColor(frame, cv.COLOR_BGR2HSV)</span><br><span class=\"line\">    cv.imshow(&#x27;hsv&#x27;, hsv)</span><br><span class=\"line\">    # 定义HSV中肤色的范围</span><br><span class=\"line\">    lower_skin = np.array([0, 28, 70], dtype=np.uint8)</span><br><span class=\"line\">    upper_skin = np.array([20, 255, 255], dtype=np.uint8)</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    检查数组元素是否位于其他两个数组的元素之间</span><br><span class=\"line\">    OpenCV中的inRange()函数可实现二值化功能（这点类似threshold()函数），更关键的是可以同时针对多通道进行操作，使用起来非常方便！</span><br><span class=\"line\">    主要是将在两个阈值内的像素值设置为白色（255），而不在阈值区间内的像素值设置为黑色（0），该功能类似于之间所讲的双阈值化操作。</span><br><span class=\"line\">    inRange(src, lowerb, upperb, dst=None)</span><br><span class=\"line\">    scr: 输入</span><br><span class=\"line\">    lowerb: 下界数组</span><br><span class=\"line\">    upperb: 上界数组</span><br><span class=\"line\">    dst: 输出，缺省参数</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 设置HSV的阈值使得只取肤色</span><br><span class=\"line\">    mask = cv.inRange(hsv, lower_skin, upper_skin)</span><br><span class=\"line\">    # 将掩膜和图像逐像素做与运算</span><br><span class=\"line\">    res = cv.bitwise_and(frame, frame, mask=mask)</span><br><span class=\"line\">    cv.imshow(&#x27;frame&#x27;, frame)</span><br><span class=\"line\">    cv.imshow(&#x27;mask&#x27;, mask)</span><br><span class=\"line\">    cv.imshow(&#x27;res&#x27;, res)</span><br><span class=\"line\">    k = cv.waitKey(5) &amp; 0xFF</span><br><span class=\"line\">    if k == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-改变颜色空间学习记录\"><a href=\"#OpenCV-改变颜色空间学习记录\" class=\"headerlink\" title=\"OpenCV-改变颜色空间学习记录\"></a>OpenCV-改变颜色空间学习记录</h1><p>涉及函数：</p>\n<ol>\n<li>cap.read()</li>\n<li>cv.cvtColor(src, code, dst=None, dstCn=None)</li>\n<li>cv.inRange(src, lowerb, upperb, dst=None)</li>\n</ol>\n<p>学习代码如下：</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">学习如何将图像从一个色彩空间转换到另一个，像BGR↔灰色，BGR↔HSV等</span><br><span class=\"line\">学习以下功能：cv.cvtColor，**cv.inRange**等。</span><br><span class=\"line\">OpenCV中有超过150种颜色空间转换方法。只有两个最广泛使用的,BGR↔灰色和BGR↔HSV。</span><br><span class=\"line\">对于颜色转换，我们使用cv函数。cvtColor(input_image, flag)，其中flag决定转换的类型。</span><br><span class=\"line\">对于BGR→灰度转换，我们使用标志cv.COLOR_BGR2GRAY。类似地，对于BGR→HSV，</span><br><span class=\"line\">我们使用标志cv.COLOR_BGR2HSV。要获取其他标记，只需在Python终端中运行以下命令:</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">flags = [i for i in dir(cv) if i.startswith(&#x27;COLOR_&#x27;)]</span><br><span class=\"line\">print( flags )</span><br><span class=\"line\">ps: HSV的色相范围为[0,179]，饱和度范围为[0,255]，亮度值范围为[0,255]。</span><br><span class=\"line\">不同的软件使用不同的规模。因此，如果你要将OpenCV值和它们比较，你需要将这些范围标准化。</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"># 举例从摄像头获取人脸区域，图像识别基础</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">cap = cv.VideoCapture(0)</span><br><span class=\"line\">while 1:</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    获取摄像头读取帧</span><br><span class=\"line\">    ret: frame = cap.read()</span><br><span class=\"line\">    ret: 为True 或者False,代表有没有读取到图片</span><br><span class=\"line\">    frame: 表示截取到一帧的图片</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 读取帧</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    # 翻转图像</span><br><span class=\"line\">    frame = cv.flip(frame, 1)</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    图像颜色转换函数：</span><br><span class=\"line\">    cvtColor(src, code, dst=None, dstCn=None)</span><br><span class=\"line\">    src: 输入图像</span><br><span class=\"line\">    code: 颜色空间转换，例如：cv.COLOR_BGR2HSV 表示：BGE -&gt; HSV</span><br><span class=\"line\">    dst: 输出图像，为缺省参数</span><br><span class=\"line\">    dstCn: 输出图像的通道数，缺省参数</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 转换颜色空间 BGR 到 HSV</span><br><span class=\"line\">    hsv = cv.cvtColor(frame, cv.COLOR_BGR2HSV)</span><br><span class=\"line\">    cv.imshow(&#x27;hsv&#x27;, hsv)</span><br><span class=\"line\">    # 定义HSV中肤色的范围</span><br><span class=\"line\">    lower_skin = np.array([0, 28, 70], dtype=np.uint8)</span><br><span class=\"line\">    upper_skin = np.array([20, 255, 255], dtype=np.uint8)</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    检查数组元素是否位于其他两个数组的元素之间</span><br><span class=\"line\">    OpenCV中的inRange()函数可实现二值化功能（这点类似threshold()函数），更关键的是可以同时针对多通道进行操作，使用起来非常方便！</span><br><span class=\"line\">    主要是将在两个阈值内的像素值设置为白色（255），而不在阈值区间内的像素值设置为黑色（0），该功能类似于之间所讲的双阈值化操作。</span><br><span class=\"line\">    inRange(src, lowerb, upperb, dst=None)</span><br><span class=\"line\">    scr: 输入</span><br><span class=\"line\">    lowerb: 下界数组</span><br><span class=\"line\">    upperb: 上界数组</span><br><span class=\"line\">    dst: 输出，缺省参数</span><br><span class=\"line\">    &#x27;&#x27;&#x27;</span><br><span class=\"line\">    # 设置HSV的阈值使得只取肤色</span><br><span class=\"line\">    mask = cv.inRange(hsv, lower_skin, upper_skin)</span><br><span class=\"line\">    # 将掩膜和图像逐像素做与运算</span><br><span class=\"line\">    res = cv.bitwise_and(frame, frame, mask=mask)</span><br><span class=\"line\">    cv.imshow(&#x27;frame&#x27;, frame)</span><br><span class=\"line\">    cv.imshow(&#x27;mask&#x27;, mask)</span><br><span class=\"line\">    cv.imshow(&#x27;res&#x27;, res)</span><br><span class=\"line\">    k = cv.waitKey(5) &amp; 0xFF</span><br><span class=\"line\">    if k == 27:</span><br><span class=\"line\">        break</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-查找HSV对应的BGR值","_content":"# OpenCV-查找HSV对应的BGR值\n学习代码如下：\n<!--more-->\n```\n\"\"\"\n如何找到要追踪的HSV值？\n可以使用相同的函数**cv.cvtColor()**。\n你只需传递你想要的BGR值，而不是传递图像。\n例如，要查找绿色的HSV值，请在Python终端中尝试以下命令:\n\"\"\"\nimport cv2 as cv\nimport numpy as np\n\ngreen = np.uint8([[[0, 255, 0]]])\nred = np.uint8([[[0, 0, 255]]])\nblue = np.uint8([[[255, 0, 0]]])\nhsv_green = cv.cvtColor(green, cv.COLOR_BGR2HSV)\nhsv_red = cv.cvtColor(red, cv.COLOR_BGR2HSV)\nhsv_blue = cv.cvtColor(blue, cv.COLOR_BGR2HSV)\nprint(hsv_green)    # [[[60 255 255]]]\nprint(hsv_red)      # [[[  0 255 255]]]\nprint(hsv_blue)     # [[[120 255 255]]]\n\n```","source":"_posts/OpenCV/图像入门/OpenCV-查找HSV对应的BGR值.md","raw":"---\ntitle: OpenCV-查找HSV对应的BGR值\n---\n# OpenCV-查找HSV对应的BGR值\n学习代码如下：\n<!--more-->\n```\n\"\"\"\n如何找到要追踪的HSV值？\n可以使用相同的函数**cv.cvtColor()**。\n你只需传递你想要的BGR值，而不是传递图像。\n例如，要查找绿色的HSV值，请在Python终端中尝试以下命令:\n\"\"\"\nimport cv2 as cv\nimport numpy as np\n\ngreen = np.uint8([[[0, 255, 0]]])\nred = np.uint8([[[0, 0, 255]]])\nblue = np.uint8([[[255, 0, 0]]])\nhsv_green = cv.cvtColor(green, cv.COLOR_BGR2HSV)\nhsv_red = cv.cvtColor(red, cv.COLOR_BGR2HSV)\nhsv_blue = cv.cvtColor(blue, cv.COLOR_BGR2HSV)\nprint(hsv_green)    # [[[60 255 255]]]\nprint(hsv_red)      # [[[  0 255 255]]]\nprint(hsv_blue)     # [[[120 255 255]]]\n\n```","slug":"OpenCV/图像入门/OpenCV-查找HSV对应的BGR值","published":1,"date":"2022-05-25T10:06:34.807Z","updated":"2022-05-07T09:57:18.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeq4001j68ur7rg44itg","content":"<h1 id=\"OpenCV-查找HSV对应的BGR值\"><a href=\"#OpenCV-查找HSV对应的BGR值\" class=\"headerlink\" title=\"OpenCV-查找HSV对应的BGR值\"></a>OpenCV-查找HSV对应的BGR值</h1><p>学习代码如下：</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">如何找到要追踪的HSV值？</span><br><span class=\"line\">可以使用相同的函数**cv.cvtColor()**。</span><br><span class=\"line\">你只需传递你想要的BGR值，而不是传递图像。</span><br><span class=\"line\">例如，要查找绿色的HSV值，请在Python终端中尝试以下命令:</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">green = np.uint8([[[0, 255, 0]]])</span><br><span class=\"line\">red = np.uint8([[[0, 0, 255]]])</span><br><span class=\"line\">blue = np.uint8([[[255, 0, 0]]])</span><br><span class=\"line\">hsv_green = cv.cvtColor(green, cv.COLOR_BGR2HSV)</span><br><span class=\"line\">hsv_red = cv.cvtColor(red, cv.COLOR_BGR2HSV)</span><br><span class=\"line\">hsv_blue = cv.cvtColor(blue, cv.COLOR_BGR2HSV)</span><br><span class=\"line\">print(hsv_green)    # [[[60 255 255]]]</span><br><span class=\"line\">print(hsv_red)      # [[[  0 255 255]]]</span><br><span class=\"line\">print(hsv_blue)     # [[[120 255 255]]]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-查找HSV对应的BGR值\"><a href=\"#OpenCV-查找HSV对应的BGR值\" class=\"headerlink\" title=\"OpenCV-查找HSV对应的BGR值\"></a>OpenCV-查找HSV对应的BGR值</h1><p>学习代码如下：</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">如何找到要追踪的HSV值？</span><br><span class=\"line\">可以使用相同的函数**cv.cvtColor()**。</span><br><span class=\"line\">你只需传递你想要的BGR值，而不是传递图像。</span><br><span class=\"line\">例如，要查找绿色的HSV值，请在Python终端中尝试以下命令:</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\">green = np.uint8([[[0, 255, 0]]])</span><br><span class=\"line\">red = np.uint8([[[0, 0, 255]]])</span><br><span class=\"line\">blue = np.uint8([[[255, 0, 0]]])</span><br><span class=\"line\">hsv_green = cv.cvtColor(green, cv.COLOR_BGR2HSV)</span><br><span class=\"line\">hsv_red = cv.cvtColor(red, cv.COLOR_BGR2HSV)</span><br><span class=\"line\">hsv_blue = cv.cvtColor(blue, cv.COLOR_BGR2HSV)</span><br><span class=\"line\">print(hsv_green)    # [[[60 255 255]]]</span><br><span class=\"line\">print(hsv_red)      # [[[  0 255 255]]]</span><br><span class=\"line\">print(hsv_blue)     # [[[120 255 255]]]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-图像梯度","_content":"# 图像梯度学习，用于边缘检测\n<!--more-->\n\n学习： - 查找图像梯度，边缘等 - 我们将看到以下函数：cv.Sobel()，cv.Scharr()，cv.Laplacian()等\nOpenCV提供三种类型的梯度滤波器或高通滤波器，即Sobel，Scharr和Laplacian。\n\n1. Sobel 和 Scharr 算子\nSobel算子是高斯平滑加微分运算的联合运算，因此它更抗噪声。逆可以指定要采用的导数方向，垂直或水平（分别通过参数yorder和xorder）。\n逆还可以通过参数ksize指定内核的大小。如果ksize = -1，则使用3x3 Scharr滤波器，比3x3 Sobel滤波器具有更好的结果。\nSoble算子：\nGx方向的相关模板：\n![图1](https://img-blog.csdn.net/20171117094349330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\nGy方向的相关模板：\n![图2](https://img-blog.csdn.net/20171117094551248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n2. Laplacian 算子\n它计算了由关系\nΔsrc = ∂^2src / ∂x^2 + ∂^2src / ∂y^2\n给出的图像的拉普拉斯图,它是每一阶导数通过Sobel算子计算。如果ksize = 1,然后使用以下内核用于过滤:\n\nkernel=\n[ 0  1 0\n  1 −4 1\n  0  1 0 ]\n\n```\n\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\dave.jpg', 0)\n'''\nLaplacian(src, ddepth, dst=None, ksize=None, scale=None, delta=None, borderType=None): \n.   @param ddepth 目标映像的期望深度。\n.   @param ksize Aperture size used to compute the second-derivative filters. See #getDerivKernels for\n.   details. The size must be positive and odd.\n.   @param scale Optional scale factor for the computed Laplacian values. By default, no scaling is\n.   applied. See #getDerivKernels for details.\n.   @param delta Optional delta value that is added to the results prior to storing them in dst .\n.   @param borderType Pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.\n'''\nlaplacian = cv.Laplacian(img, cv.CV_64F)\n'''\nSobel(src, ddepth, dx, dy, dst=None, ksize=None, scale=None, delta=None, borderType=None):\n.   @param src input image.\n.   @param dst output image of the same size and the same number of channels as src .\n.   @param ddepth output image depth, see @ref filter_depths \"combinations\"; in the case of\n.       8-bit input images it will result in truncated derivatives.\n.   @param dx order of the derivative x.\n.   @param dy order of the derivative y.\n.   @param ksize size of the extended Sobel kernel; it must be 1, 3, 5, or 7.\n.   @param scale optional scale factor for the computed derivative values; by default, no scaling is\n.   applied (see #getDerivKernels for details).\n.   @param delta optional delta value that is added to the results prior to storing them in dst.\n.   @param borderType pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.\n.   @sa  Scharr, Laplacian, sepFilter2D, filter2D, GaussianBlur, cartToPolar\n'''\nsobelx = cv.Sobel(img, cv.CV_64F, 1, 0, ksize=5)\nsobely = cv.Sobel(img, cv.CV_64F, 0, 1, ksize=5)\nplt.subplot(2, 2, 1), plt.imshow(img, cmap='gray')\nplt.title('Original'), plt.xticks([]), plt.yticks([])\nplt.subplot(2, 2, 2), plt.imshow(laplacian, cmap='gray')\nplt.title('Laplacian'), plt.xticks([]), plt.yticks([])\nplt.subplot(2, 2, 3), plt.imshow(sobelx, cmap='gray')\nplt.title('Sobel X'), plt.xticks([]), plt.yticks([])\nplt.subplot(2, 2, 4), plt.imshow(sobely, cmap='gray')\nplt.title('Sobel Y'), plt.xticks([]), plt.yticks([])\nplt.show()\n\n```","source":"_posts/OpenCV/图像梯度/OpenCV-图像梯度.md","raw":"---\ntitle: OpenCV-图像梯度\n---\n# 图像梯度学习，用于边缘检测\n<!--more-->\n\n学习： - 查找图像梯度，边缘等 - 我们将看到以下函数：cv.Sobel()，cv.Scharr()，cv.Laplacian()等\nOpenCV提供三种类型的梯度滤波器或高通滤波器，即Sobel，Scharr和Laplacian。\n\n1. Sobel 和 Scharr 算子\nSobel算子是高斯平滑加微分运算的联合运算，因此它更抗噪声。逆可以指定要采用的导数方向，垂直或水平（分别通过参数yorder和xorder）。\n逆还可以通过参数ksize指定内核的大小。如果ksize = -1，则使用3x3 Scharr滤波器，比3x3 Sobel滤波器具有更好的结果。\nSoble算子：\nGx方向的相关模板：\n![图1](https://img-blog.csdn.net/20171117094349330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\nGy方向的相关模板：\n![图2](https://img-blog.csdn.net/20171117094551248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n2. Laplacian 算子\n它计算了由关系\nΔsrc = ∂^2src / ∂x^2 + ∂^2src / ∂y^2\n给出的图像的拉普拉斯图,它是每一阶导数通过Sobel算子计算。如果ksize = 1,然后使用以下内核用于过滤:\n\nkernel=\n[ 0  1 0\n  1 −4 1\n  0  1 0 ]\n\n```\n\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\dave.jpg', 0)\n'''\nLaplacian(src, ddepth, dst=None, ksize=None, scale=None, delta=None, borderType=None): \n.   @param ddepth 目标映像的期望深度。\n.   @param ksize Aperture size used to compute the second-derivative filters. See #getDerivKernels for\n.   details. The size must be positive and odd.\n.   @param scale Optional scale factor for the computed Laplacian values. By default, no scaling is\n.   applied. See #getDerivKernels for details.\n.   @param delta Optional delta value that is added to the results prior to storing them in dst .\n.   @param borderType Pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.\n'''\nlaplacian = cv.Laplacian(img, cv.CV_64F)\n'''\nSobel(src, ddepth, dx, dy, dst=None, ksize=None, scale=None, delta=None, borderType=None):\n.   @param src input image.\n.   @param dst output image of the same size and the same number of channels as src .\n.   @param ddepth output image depth, see @ref filter_depths \"combinations\"; in the case of\n.       8-bit input images it will result in truncated derivatives.\n.   @param dx order of the derivative x.\n.   @param dy order of the derivative y.\n.   @param ksize size of the extended Sobel kernel; it must be 1, 3, 5, or 7.\n.   @param scale optional scale factor for the computed derivative values; by default, no scaling is\n.   applied (see #getDerivKernels for details).\n.   @param delta optional delta value that is added to the results prior to storing them in dst.\n.   @param borderType pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.\n.   @sa  Scharr, Laplacian, sepFilter2D, filter2D, GaussianBlur, cartToPolar\n'''\nsobelx = cv.Sobel(img, cv.CV_64F, 1, 0, ksize=5)\nsobely = cv.Sobel(img, cv.CV_64F, 0, 1, ksize=5)\nplt.subplot(2, 2, 1), plt.imshow(img, cmap='gray')\nplt.title('Original'), plt.xticks([]), plt.yticks([])\nplt.subplot(2, 2, 2), plt.imshow(laplacian, cmap='gray')\nplt.title('Laplacian'), plt.xticks([]), plt.yticks([])\nplt.subplot(2, 2, 3), plt.imshow(sobelx, cmap='gray')\nplt.title('Sobel X'), plt.xticks([]), plt.yticks([])\nplt.subplot(2, 2, 4), plt.imshow(sobely, cmap='gray')\nplt.title('Sobel Y'), plt.xticks([]), plt.yticks([])\nplt.show()\n\n```","slug":"OpenCV/图像梯度/OpenCV-图像梯度","published":1,"date":"2022-05-25T10:13:46.434Z","updated":"2022-05-26T03:11:41.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeq8001k68ur7si7c06u","content":"<h1 id=\"图像梯度学习，用于边缘检测\"><a href=\"#图像梯度学习，用于边缘检测\" class=\"headerlink\" title=\"图像梯度学习，用于边缘检测\"></a>图像梯度学习，用于边缘检测</h1><span id=\"more\"></span>\n\n<p>学习： - 查找图像梯度，边缘等 - 我们将看到以下函数：cv.Sobel()，cv.Scharr()，cv.Laplacian()等<br>OpenCV提供三种类型的梯度滤波器或高通滤波器，即Sobel，Scharr和Laplacian。</p>\n<ol>\n<li><p>Sobel 和 Scharr 算子<br>Sobel算子是高斯平滑加微分运算的联合运算，因此它更抗噪声。逆可以指定要采用的导数方向，垂直或水平（分别通过参数yorder和xorder）。<br>逆还可以通过参数ksize指定内核的大小。如果ksize = -1，则使用3x3 Scharr滤波器，比3x3 Sobel滤波器具有更好的结果。<br>Soble算子：<br>Gx方向的相关模板：<br><img src=\"https://img-blog.csdn.net/20171117094349330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"图1\"><br>Gy方向的相关模板：<br><img src=\"https://img-blog.csdn.net/20171117094551248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"图2\"></p>\n</li>\n<li><p>Laplacian 算子<br>它计算了由关系<br>Δsrc = ∂^2src / ∂x^2 + ∂^2src / ∂y^2<br>给出的图像的拉普拉斯图,它是每一阶导数通过Sobel算子计算。如果ksize = 1,然后使用以下内核用于过滤:</p>\n</li>\n</ol>\n<p>kernel=<br>[ 0  1 0<br>  1 −4 1<br>  0  1 0 ]</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\dave.jpg&#x27;, 0)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">Laplacian(src, ddepth, dst=None, ksize=None, scale=None, delta=None, borderType=None): </span><br><span class=\"line\">.   @param ddepth 目标映像的期望深度。</span><br><span class=\"line\">.   @param ksize Aperture size used to compute the second-derivative filters. See #getDerivKernels for</span><br><span class=\"line\">.   details. The size must be positive and odd.</span><br><span class=\"line\">.   @param scale Optional scale factor for the computed Laplacian values. By default, no scaling is</span><br><span class=\"line\">.   applied. See #getDerivKernels for details.</span><br><span class=\"line\">.   @param delta Optional delta value that is added to the results prior to storing them in dst .</span><br><span class=\"line\">.   @param borderType Pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">laplacian = cv.Laplacian(img, cv.CV_64F)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">Sobel(src, ddepth, dx, dy, dst=None, ksize=None, scale=None, delta=None, borderType=None):</span><br><span class=\"line\">.   @param src input image.</span><br><span class=\"line\">.   @param dst output image of the same size and the same number of channels as src .</span><br><span class=\"line\">.   @param ddepth output image depth, see @ref filter_depths &quot;combinations&quot;; in the case of</span><br><span class=\"line\">.       8-bit input images it will result in truncated derivatives.</span><br><span class=\"line\">.   @param dx order of the derivative x.</span><br><span class=\"line\">.   @param dy order of the derivative y.</span><br><span class=\"line\">.   @param ksize size of the extended Sobel kernel; it must be 1, 3, 5, or 7.</span><br><span class=\"line\">.   @param scale optional scale factor for the computed derivative values; by default, no scaling is</span><br><span class=\"line\">.   applied (see #getDerivKernels for details).</span><br><span class=\"line\">.   @param delta optional delta value that is added to the results prior to storing them in dst.</span><br><span class=\"line\">.   @param borderType pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.</span><br><span class=\"line\">.   @sa  Scharr, Laplacian, sepFilter2D, filter2D, GaussianBlur, cartToPolar</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">sobelx = cv.Sobel(img, cv.CV_64F, 1, 0, ksize=5)</span><br><span class=\"line\">sobely = cv.Sobel(img, cv.CV_64F, 0, 1, ksize=5)</span><br><span class=\"line\">plt.subplot(2, 2, 1), plt.imshow(img, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Original&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.subplot(2, 2, 2), plt.imshow(laplacian, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Laplacian&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.subplot(2, 2, 3), plt.imshow(sobelx, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Sobel X&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.subplot(2, 2, 4), plt.imshow(sobely, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Sobel Y&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"图像梯度学习，用于边缘检测\"><a href=\"#图像梯度学习，用于边缘检测\" class=\"headerlink\" title=\"图像梯度学习，用于边缘检测\"></a>图像梯度学习，用于边缘检测</h1>","more":"<p>学习： - 查找图像梯度，边缘等 - 我们将看到以下函数：cv.Sobel()，cv.Scharr()，cv.Laplacian()等<br>OpenCV提供三种类型的梯度滤波器或高通滤波器，即Sobel，Scharr和Laplacian。</p>\n<ol>\n<li><p>Sobel 和 Scharr 算子<br>Sobel算子是高斯平滑加微分运算的联合运算，因此它更抗噪声。逆可以指定要采用的导数方向，垂直或水平（分别通过参数yorder和xorder）。<br>逆还可以通过参数ksize指定内核的大小。如果ksize = -1，则使用3x3 Scharr滤波器，比3x3 Sobel滤波器具有更好的结果。<br>Soble算子：<br>Gx方向的相关模板：<br><img src=\"https://img-blog.csdn.net/20171117094349330?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"图1\"><br>Gy方向的相关模板：<br><img src=\"https://img-blog.csdn.net/20171117094551248?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemh1bGluemh1bGlubGlu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" alt=\"图2\"></p>\n</li>\n<li><p>Laplacian 算子<br>它计算了由关系<br>Δsrc = ∂^2src / ∂x^2 + ∂^2src / ∂y^2<br>给出的图像的拉普拉斯图,它是每一阶导数通过Sobel算子计算。如果ksize = 1,然后使用以下内核用于过滤:</p>\n</li>\n</ol>\n<p>kernel=<br>[ 0  1 0<br>  1 −4 1<br>  0  1 0 ]</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\dave.jpg&#x27;, 0)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">Laplacian(src, ddepth, dst=None, ksize=None, scale=None, delta=None, borderType=None): </span><br><span class=\"line\">.   @param ddepth 目标映像的期望深度。</span><br><span class=\"line\">.   @param ksize Aperture size used to compute the second-derivative filters. See #getDerivKernels for</span><br><span class=\"line\">.   details. The size must be positive and odd.</span><br><span class=\"line\">.   @param scale Optional scale factor for the computed Laplacian values. By default, no scaling is</span><br><span class=\"line\">.   applied. See #getDerivKernels for details.</span><br><span class=\"line\">.   @param delta Optional delta value that is added to the results prior to storing them in dst .</span><br><span class=\"line\">.   @param borderType Pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">laplacian = cv.Laplacian(img, cv.CV_64F)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">Sobel(src, ddepth, dx, dy, dst=None, ksize=None, scale=None, delta=None, borderType=None):</span><br><span class=\"line\">.   @param src input image.</span><br><span class=\"line\">.   @param dst output image of the same size and the same number of channels as src .</span><br><span class=\"line\">.   @param ddepth output image depth, see @ref filter_depths &quot;combinations&quot;; in the case of</span><br><span class=\"line\">.       8-bit input images it will result in truncated derivatives.</span><br><span class=\"line\">.   @param dx order of the derivative x.</span><br><span class=\"line\">.   @param dy order of the derivative y.</span><br><span class=\"line\">.   @param ksize size of the extended Sobel kernel; it must be 1, 3, 5, or 7.</span><br><span class=\"line\">.   @param scale optional scale factor for the computed derivative values; by default, no scaling is</span><br><span class=\"line\">.   applied (see #getDerivKernels for details).</span><br><span class=\"line\">.   @param delta optional delta value that is added to the results prior to storing them in dst.</span><br><span class=\"line\">.   @param borderType pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.</span><br><span class=\"line\">.   @sa  Scharr, Laplacian, sepFilter2D, filter2D, GaussianBlur, cartToPolar</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">sobelx = cv.Sobel(img, cv.CV_64F, 1, 0, ksize=5)</span><br><span class=\"line\">sobely = cv.Sobel(img, cv.CV_64F, 0, 1, ksize=5)</span><br><span class=\"line\">plt.subplot(2, 2, 1), plt.imshow(img, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Original&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.subplot(2, 2, 2), plt.imshow(laplacian, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Laplacian&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.subplot(2, 2, 3), plt.imshow(sobelx, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Sobel X&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.subplot(2, 2, 4), plt.imshow(sobely, cmap=&#x27;gray&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Sobel Y&#x27;), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-图像模糊（图像平滑）","_content":"# OpenCV-图像模糊（图像平滑）\n学习如下：\n1. cv.bulr()\n2. cv.GaussianBlur\n3. cv.medianBlur\n4. cv.bilateralFilter\n<!--more-->\n```\n\"\"\"\n通过将图像与低通滤波器内核进行卷积来实现图像模糊。这对于消除噪音很有用。\n它实际上从图像中消除了高频部分（例如噪声，边缘）。\n因此，在此操作中边缘有些模糊。（有一些模糊技术也可以不模糊边缘）。\nOpenCV主要提供四种类型的模糊技术:\n1.平均 2.高斯模糊 3.中位模糊 4.双边滤波\n\"\"\"\nimport cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg')\n'''\n1.平均\n这是通过将图像与归一化框滤镜进行卷积来完成的。它仅获取内核区域下所有像素的平均值，并替换中心元素。\n这是通过功能**cv.blur()或**cv.boxFilter()完成的。\n检查文档以获取有关内核的更多详细信息。我们应该指定内核的宽度和高度。\n3x3归一化框式过滤器如下所示：\nK = 1/9[ [1 1 1\n          1 1 1\n          1 1 1] ]\n注意 如果您不想使用标准化的框式过滤器，请使用**cv.boxFilter()**。将参数normalize = False传递给函数。\n函数：blur(src, ksize, dst=None, anchor=None, borderType=None):\n\n.   @param ksize 模糊核大小\n.   @param anchor 锚点;默认值Point(-1，-1)表示锚点位于内核中心。\n.   @param borderType 边框模式用于推断图像外的像素，参见#BorderTypes。不支持#BORDER_WRAP。\n'''\nblur = cv.blur(img, (5, 5))                     # 平均滤波\n'''\n2.高斯模糊\n在这种情况下，代替盒式滤波器，使用了高斯核。\n这是通过功能**cv.GaussianBlur()** 完成的。\n我们应指定内核的宽度和高度，该宽度和高度应为正数和奇数。\n我们还应指定X和Y方向的标准偏差，分别为sigmaX和sigmaY。如果仅指定sigmaX，则将sigmaY与sigmaX相同。\n如果两个都为零，则根据内核大小进行计算。高斯模糊对于从图像中去除高斯噪声非常有效。\n如果需要，可以使用函数**cv.getGaussianKernel()** 创建高斯内核。\n函数： GaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None):\n\n.   @param ksize 高斯核的大小。核宽度和核高度可以不同，但都必须是正奇数。或者，它们可以是0。由计算得到。\n.   @param sigmaX X方向上的高斯核标准偏差。\n.   @param sigmaY Y方向高斯核标准差;如果sigmaY为零，则设为sigmaX，\n    如果两个都为零，则高斯核核高和核宽由计算得到，分别(详见#getGaussianKernel);\n    为了完全控制结果，而不考虑将来可能对所有这些语义进行的修改，建议指定所有的ksize、sigmaX和sigmaY。\n.   @param borderType pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.\n.   \n'''\nGaussianBlur = cv.GaussianBlur(img, (5, 5), 0)  # 高斯模糊函数\n'''\n3.中位模糊\n在这里，函数**cv.medianBlur()** 提取内核区域下所有像素的中值，并将中心元素替换为该中值。\n这对于消除图像中的椒盐噪声非常有效。有趣的是，在上述过滤器中，中心元素是新计算的值，该值可以是图像中的像素值或新值。\n但是在中值模糊中，中心元素总是被图像中的某些像素值代替。有效降低噪音。其内核大小应为正奇数整数。\n\n函数： medianBlur(src, ksize, dst=None):\n.   @param ksize 孔径线性尺寸;它必须是正奇数且大于1，例如:3,5,7…\n'''\nmedianBlur = cv.medianBlur(img, 5)                  # 中位模糊\n'''\ncv.bilateralFilter() 在去除噪声的同时保持边缘清晰锐利非常有效。但是，与其他过滤器相比，该操作速度较慢。\n我们已经看到，高斯滤波器采用像素周围的邻域并找到其高斯加权平均值。\n高斯滤波器仅是空间的函数，也就是说，滤波时会考虑附近的像素。\n它不考虑像素是否具有几乎相同的强度。它不考虑像素是否是边缘像素。因此它也模糊了边缘，这是我们不想做的。\n双边滤波器在空间中也采用高斯滤波器，但是又有一个高斯滤波器，它是像素差的函数。\n空间的高斯函数确保仅考虑附近像素的模糊，而强度差的高斯函数确保仅考虑强度与中心像素相似的那些像素的模糊。\n由于边缘的像素强度变化较大，因此可以保留边缘。\n\n函数：bilateralFilter(src, d, sigmaColor, sigmaSpace, dst=None, borderType=None):\n\n.   @param d 滤波期间使用的每个像素邻域的直径。如果非正，则从sigmspace计算。\n.   @param sigmaColor 在颜色空间中过滤sigma。该参数的值越大，意味着像素邻域(参见sigmspace)中更远的颜色将被混合在一起，\n    从而产生更大的半等色区域。\n.   @param sigmaSpace 在坐标空间中过滤。参数值越大，表示距离较远的像素将相互影响，只要它们的颜色足够接近(参见sigmaColor)。\n    当d\\>0时，它指定邻域大小而不考虑sigmspace。否则，d与sigmspace成比例。\n.   @param borderType 边框模式用于推断图像外的像素，参见#BorderTypes\n\n'''\nbilateralFilter = cv.bilateralFilter(img, 9, 75, 75)       # 双边滤波\n\ncv.imshow('img', img)\ncv.imshow('burl', blur)\ncv.imshow('GaussianBlur', GaussianBlur)\ncv.imshow('medianBlur', medianBlur)\ncv.imshow('bilateralFilter', bilateralFilter)\nkey = cv.waitKey()\n# 按任意键退出\ncv.destroyAllWindows()\n\n```","source":"_posts/OpenCV/图像过滤/OpenCV-图像模糊（图像平滑）.md","raw":"---\ntitle: OpenCV-图像模糊（图像平滑）\n---\n# OpenCV-图像模糊（图像平滑）\n学习如下：\n1. cv.bulr()\n2. cv.GaussianBlur\n3. cv.medianBlur\n4. cv.bilateralFilter\n<!--more-->\n```\n\"\"\"\n通过将图像与低通滤波器内核进行卷积来实现图像模糊。这对于消除噪音很有用。\n它实际上从图像中消除了高频部分（例如噪声，边缘）。\n因此，在此操作中边缘有些模糊。（有一些模糊技术也可以不模糊边缘）。\nOpenCV主要提供四种类型的模糊技术:\n1.平均 2.高斯模糊 3.中位模糊 4.双边滤波\n\"\"\"\nimport cv2 as cv\nimport numpy as np\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg')\n'''\n1.平均\n这是通过将图像与归一化框滤镜进行卷积来完成的。它仅获取内核区域下所有像素的平均值，并替换中心元素。\n这是通过功能**cv.blur()或**cv.boxFilter()完成的。\n检查文档以获取有关内核的更多详细信息。我们应该指定内核的宽度和高度。\n3x3归一化框式过滤器如下所示：\nK = 1/9[ [1 1 1\n          1 1 1\n          1 1 1] ]\n注意 如果您不想使用标准化的框式过滤器，请使用**cv.boxFilter()**。将参数normalize = False传递给函数。\n函数：blur(src, ksize, dst=None, anchor=None, borderType=None):\n\n.   @param ksize 模糊核大小\n.   @param anchor 锚点;默认值Point(-1，-1)表示锚点位于内核中心。\n.   @param borderType 边框模式用于推断图像外的像素，参见#BorderTypes。不支持#BORDER_WRAP。\n'''\nblur = cv.blur(img, (5, 5))                     # 平均滤波\n'''\n2.高斯模糊\n在这种情况下，代替盒式滤波器，使用了高斯核。\n这是通过功能**cv.GaussianBlur()** 完成的。\n我们应指定内核的宽度和高度，该宽度和高度应为正数和奇数。\n我们还应指定X和Y方向的标准偏差，分别为sigmaX和sigmaY。如果仅指定sigmaX，则将sigmaY与sigmaX相同。\n如果两个都为零，则根据内核大小进行计算。高斯模糊对于从图像中去除高斯噪声非常有效。\n如果需要，可以使用函数**cv.getGaussianKernel()** 创建高斯内核。\n函数： GaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None):\n\n.   @param ksize 高斯核的大小。核宽度和核高度可以不同，但都必须是正奇数。或者，它们可以是0。由计算得到。\n.   @param sigmaX X方向上的高斯核标准偏差。\n.   @param sigmaY Y方向高斯核标准差;如果sigmaY为零，则设为sigmaX，\n    如果两个都为零，则高斯核核高和核宽由计算得到，分别(详见#getGaussianKernel);\n    为了完全控制结果，而不考虑将来可能对所有这些语义进行的修改，建议指定所有的ksize、sigmaX和sigmaY。\n.   @param borderType pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.\n.   \n'''\nGaussianBlur = cv.GaussianBlur(img, (5, 5), 0)  # 高斯模糊函数\n'''\n3.中位模糊\n在这里，函数**cv.medianBlur()** 提取内核区域下所有像素的中值，并将中心元素替换为该中值。\n这对于消除图像中的椒盐噪声非常有效。有趣的是，在上述过滤器中，中心元素是新计算的值，该值可以是图像中的像素值或新值。\n但是在中值模糊中，中心元素总是被图像中的某些像素值代替。有效降低噪音。其内核大小应为正奇数整数。\n\n函数： medianBlur(src, ksize, dst=None):\n.   @param ksize 孔径线性尺寸;它必须是正奇数且大于1，例如:3,5,7…\n'''\nmedianBlur = cv.medianBlur(img, 5)                  # 中位模糊\n'''\ncv.bilateralFilter() 在去除噪声的同时保持边缘清晰锐利非常有效。但是，与其他过滤器相比，该操作速度较慢。\n我们已经看到，高斯滤波器采用像素周围的邻域并找到其高斯加权平均值。\n高斯滤波器仅是空间的函数，也就是说，滤波时会考虑附近的像素。\n它不考虑像素是否具有几乎相同的强度。它不考虑像素是否是边缘像素。因此它也模糊了边缘，这是我们不想做的。\n双边滤波器在空间中也采用高斯滤波器，但是又有一个高斯滤波器，它是像素差的函数。\n空间的高斯函数确保仅考虑附近像素的模糊，而强度差的高斯函数确保仅考虑强度与中心像素相似的那些像素的模糊。\n由于边缘的像素强度变化较大，因此可以保留边缘。\n\n函数：bilateralFilter(src, d, sigmaColor, sigmaSpace, dst=None, borderType=None):\n\n.   @param d 滤波期间使用的每个像素邻域的直径。如果非正，则从sigmspace计算。\n.   @param sigmaColor 在颜色空间中过滤sigma。该参数的值越大，意味着像素邻域(参见sigmspace)中更远的颜色将被混合在一起，\n    从而产生更大的半等色区域。\n.   @param sigmaSpace 在坐标空间中过滤。参数值越大，表示距离较远的像素将相互影响，只要它们的颜色足够接近(参见sigmaColor)。\n    当d\\>0时，它指定邻域大小而不考虑sigmspace。否则，d与sigmspace成比例。\n.   @param borderType 边框模式用于推断图像外的像素，参见#BorderTypes\n\n'''\nbilateralFilter = cv.bilateralFilter(img, 9, 75, 75)       # 双边滤波\n\ncv.imshow('img', img)\ncv.imshow('burl', blur)\ncv.imshow('GaussianBlur', GaussianBlur)\ncv.imshow('medianBlur', medianBlur)\ncv.imshow('bilateralFilter', bilateralFilter)\nkey = cv.waitKey()\n# 按任意键退出\ncv.destroyAllWindows()\n\n```","slug":"OpenCV/图像过滤/OpenCV-图像模糊（图像平滑）","published":1,"date":"2022-05-25T10:06:34.712Z","updated":"2022-05-07T09:56:21.826Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqa001l68urg4113wwj","content":"<h1 id=\"OpenCV-图像模糊（图像平滑）\"><a href=\"#OpenCV-图像模糊（图像平滑）\" class=\"headerlink\" title=\"OpenCV-图像模糊（图像平滑）\"></a>OpenCV-图像模糊（图像平滑）</h1><p>学习如下：</p>\n<ol>\n<li>cv.bulr()</li>\n<li>cv.GaussianBlur</li>\n<li>cv.medianBlur</li>\n<li>cv.bilateralFilter<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">通过将图像与低通滤波器内核进行卷积来实现图像模糊。这对于消除噪音很有用。</span><br><span class=\"line\">它实际上从图像中消除了高频部分（例如噪声，边缘）。</span><br><span class=\"line\">因此，在此操作中边缘有些模糊。（有一些模糊技术也可以不模糊边缘）。</span><br><span class=\"line\">OpenCV主要提供四种类型的模糊技术:</span><br><span class=\"line\">1.平均 2.高斯模糊 3.中位模糊 4.双边滤波</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">1.平均</span><br><span class=\"line\">这是通过将图像与归一化框滤镜进行卷积来完成的。它仅获取内核区域下所有像素的平均值，并替换中心元素。</span><br><span class=\"line\">这是通过功能**cv.blur()或**cv.boxFilter()完成的。</span><br><span class=\"line\">检查文档以获取有关内核的更多详细信息。我们应该指定内核的宽度和高度。</span><br><span class=\"line\">3x3归一化框式过滤器如下所示：</span><br><span class=\"line\">K = 1/9[ [1 1 1</span><br><span class=\"line\">          1 1 1</span><br><span class=\"line\">          1 1 1] ]</span><br><span class=\"line\">注意 如果您不想使用标准化的框式过滤器，请使用**cv.boxFilter()**。将参数normalize = False传递给函数。</span><br><span class=\"line\">函数：blur(src, ksize, dst=None, anchor=None, borderType=None):</span><br><span class=\"line\"></span><br><span class=\"line\">.   @param ksize 模糊核大小</span><br><span class=\"line\">.   @param anchor 锚点;默认值Point(-1，-1)表示锚点位于内核中心。</span><br><span class=\"line\">.   @param borderType 边框模式用于推断图像外的像素，参见#BorderTypes。不支持#BORDER_WRAP。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">blur = cv.blur(img, (5, 5))                     # 平均滤波</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">2.高斯模糊</span><br><span class=\"line\">在这种情况下，代替盒式滤波器，使用了高斯核。</span><br><span class=\"line\">这是通过功能**cv.GaussianBlur()** 完成的。</span><br><span class=\"line\">我们应指定内核的宽度和高度，该宽度和高度应为正数和奇数。</span><br><span class=\"line\">我们还应指定X和Y方向的标准偏差，分别为sigmaX和sigmaY。如果仅指定sigmaX，则将sigmaY与sigmaX相同。</span><br><span class=\"line\">如果两个都为零，则根据内核大小进行计算。高斯模糊对于从图像中去除高斯噪声非常有效。</span><br><span class=\"line\">如果需要，可以使用函数**cv.getGaussianKernel()** 创建高斯内核。</span><br><span class=\"line\">函数： GaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None):</span><br><span class=\"line\"></span><br><span class=\"line\">.   @param ksize 高斯核的大小。核宽度和核高度可以不同，但都必须是正奇数。或者，它们可以是0。由计算得到。</span><br><span class=\"line\">.   @param sigmaX X方向上的高斯核标准偏差。</span><br><span class=\"line\">.   @param sigmaY Y方向高斯核标准差;如果sigmaY为零，则设为sigmaX，</span><br><span class=\"line\">    如果两个都为零，则高斯核核高和核宽由计算得到，分别(详见#getGaussianKernel);</span><br><span class=\"line\">    为了完全控制结果，而不考虑将来可能对所有这些语义进行的修改，建议指定所有的ksize、sigmaX和sigmaY。</span><br><span class=\"line\">.   @param borderType pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.</span><br><span class=\"line\">.   </span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">GaussianBlur = cv.GaussianBlur(img, (5, 5), 0)  # 高斯模糊函数</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">3.中位模糊</span><br><span class=\"line\">在这里，函数**cv.medianBlur()** 提取内核区域下所有像素的中值，并将中心元素替换为该中值。</span><br><span class=\"line\">这对于消除图像中的椒盐噪声非常有效。有趣的是，在上述过滤器中，中心元素是新计算的值，该值可以是图像中的像素值或新值。</span><br><span class=\"line\">但是在中值模糊中，中心元素总是被图像中的某些像素值代替。有效降低噪音。其内核大小应为正奇数整数。</span><br><span class=\"line\"></span><br><span class=\"line\">函数： medianBlur(src, ksize, dst=None):</span><br><span class=\"line\">.   @param ksize 孔径线性尺寸;它必须是正奇数且大于1，例如:3,5,7…</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">medianBlur = cv.medianBlur(img, 5)                  # 中位模糊</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.bilateralFilter() 在去除噪声的同时保持边缘清晰锐利非常有效。但是，与其他过滤器相比，该操作速度较慢。</span><br><span class=\"line\">我们已经看到，高斯滤波器采用像素周围的邻域并找到其高斯加权平均值。</span><br><span class=\"line\">高斯滤波器仅是空间的函数，也就是说，滤波时会考虑附近的像素。</span><br><span class=\"line\">它不考虑像素是否具有几乎相同的强度。它不考虑像素是否是边缘像素。因此它也模糊了边缘，这是我们不想做的。</span><br><span class=\"line\">双边滤波器在空间中也采用高斯滤波器，但是又有一个高斯滤波器，它是像素差的函数。</span><br><span class=\"line\">空间的高斯函数确保仅考虑附近像素的模糊，而强度差的高斯函数确保仅考虑强度与中心像素相似的那些像素的模糊。</span><br><span class=\"line\">由于边缘的像素强度变化较大，因此可以保留边缘。</span><br><span class=\"line\"></span><br><span class=\"line\">函数：bilateralFilter(src, d, sigmaColor, sigmaSpace, dst=None, borderType=None):</span><br><span class=\"line\"></span><br><span class=\"line\">.   @param d 滤波期间使用的每个像素邻域的直径。如果非正，则从sigmspace计算。</span><br><span class=\"line\">.   @param sigmaColor 在颜色空间中过滤sigma。该参数的值越大，意味着像素邻域(参见sigmspace)中更远的颜色将被混合在一起，</span><br><span class=\"line\">    从而产生更大的半等色区域。</span><br><span class=\"line\">.   @param sigmaSpace 在坐标空间中过滤。参数值越大，表示距离较远的像素将相互影响，只要它们的颜色足够接近(参见sigmaColor)。</span><br><span class=\"line\">    当d\\&gt;0时，它指定邻域大小而不考虑sigmspace。否则，d与sigmspace成比例。</span><br><span class=\"line\">.   @param borderType 边框模式用于推断图像外的像素，参见#BorderTypes</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">bilateralFilter = cv.bilateralFilter(img, 9, 75, 75)       # 双边滤波</span><br><span class=\"line\"></span><br><span class=\"line\">cv.imshow(&#x27;img&#x27;, img)</span><br><span class=\"line\">cv.imshow(&#x27;burl&#x27;, blur)</span><br><span class=\"line\">cv.imshow(&#x27;GaussianBlur&#x27;, GaussianBlur)</span><br><span class=\"line\">cv.imshow(&#x27;medianBlur&#x27;, medianBlur)</span><br><span class=\"line\">cv.imshow(&#x27;bilateralFilter&#x27;, bilateralFilter)</span><br><span class=\"line\">key = cv.waitKey()</span><br><span class=\"line\"># 按任意键退出</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-图像模糊（图像平滑）\"><a href=\"#OpenCV-图像模糊（图像平滑）\" class=\"headerlink\" title=\"OpenCV-图像模糊（图像平滑）\"></a>OpenCV-图像模糊（图像平滑）</h1><p>学习如下：</p>\n<ol>\n<li>cv.bulr()</li>\n<li>cv.GaussianBlur</li>\n<li>cv.medianBlur</li>\n<li>cv.bilateralFilter","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">通过将图像与低通滤波器内核进行卷积来实现图像模糊。这对于消除噪音很有用。</span><br><span class=\"line\">它实际上从图像中消除了高频部分（例如噪声，边缘）。</span><br><span class=\"line\">因此，在此操作中边缘有些模糊。（有一些模糊技术也可以不模糊边缘）。</span><br><span class=\"line\">OpenCV主要提供四种类型的模糊技术:</span><br><span class=\"line\">1.平均 2.高斯模糊 3.中位模糊 4.双边滤波</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">1.平均</span><br><span class=\"line\">这是通过将图像与归一化框滤镜进行卷积来完成的。它仅获取内核区域下所有像素的平均值，并替换中心元素。</span><br><span class=\"line\">这是通过功能**cv.blur()或**cv.boxFilter()完成的。</span><br><span class=\"line\">检查文档以获取有关内核的更多详细信息。我们应该指定内核的宽度和高度。</span><br><span class=\"line\">3x3归一化框式过滤器如下所示：</span><br><span class=\"line\">K = 1/9[ [1 1 1</span><br><span class=\"line\">          1 1 1</span><br><span class=\"line\">          1 1 1] ]</span><br><span class=\"line\">注意 如果您不想使用标准化的框式过滤器，请使用**cv.boxFilter()**。将参数normalize = False传递给函数。</span><br><span class=\"line\">函数：blur(src, ksize, dst=None, anchor=None, borderType=None):</span><br><span class=\"line\"></span><br><span class=\"line\">.   @param ksize 模糊核大小</span><br><span class=\"line\">.   @param anchor 锚点;默认值Point(-1，-1)表示锚点位于内核中心。</span><br><span class=\"line\">.   @param borderType 边框模式用于推断图像外的像素，参见#BorderTypes。不支持#BORDER_WRAP。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">blur = cv.blur(img, (5, 5))                     # 平均滤波</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">2.高斯模糊</span><br><span class=\"line\">在这种情况下，代替盒式滤波器，使用了高斯核。</span><br><span class=\"line\">这是通过功能**cv.GaussianBlur()** 完成的。</span><br><span class=\"line\">我们应指定内核的宽度和高度，该宽度和高度应为正数和奇数。</span><br><span class=\"line\">我们还应指定X和Y方向的标准偏差，分别为sigmaX和sigmaY。如果仅指定sigmaX，则将sigmaY与sigmaX相同。</span><br><span class=\"line\">如果两个都为零，则根据内核大小进行计算。高斯模糊对于从图像中去除高斯噪声非常有效。</span><br><span class=\"line\">如果需要，可以使用函数**cv.getGaussianKernel()** 创建高斯内核。</span><br><span class=\"line\">函数： GaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None):</span><br><span class=\"line\"></span><br><span class=\"line\">.   @param ksize 高斯核的大小。核宽度和核高度可以不同，但都必须是正奇数。或者，它们可以是0。由计算得到。</span><br><span class=\"line\">.   @param sigmaX X方向上的高斯核标准偏差。</span><br><span class=\"line\">.   @param sigmaY Y方向高斯核标准差;如果sigmaY为零，则设为sigmaX，</span><br><span class=\"line\">    如果两个都为零，则高斯核核高和核宽由计算得到，分别(详见#getGaussianKernel);</span><br><span class=\"line\">    为了完全控制结果，而不考虑将来可能对所有这些语义进行的修改，建议指定所有的ksize、sigmaX和sigmaY。</span><br><span class=\"line\">.   @param borderType pixel extrapolation method, see #BorderTypes. #BORDER_WRAP is not supported.</span><br><span class=\"line\">.   </span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">GaussianBlur = cv.GaussianBlur(img, (5, 5), 0)  # 高斯模糊函数</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">3.中位模糊</span><br><span class=\"line\">在这里，函数**cv.medianBlur()** 提取内核区域下所有像素的中值，并将中心元素替换为该中值。</span><br><span class=\"line\">这对于消除图像中的椒盐噪声非常有效。有趣的是，在上述过滤器中，中心元素是新计算的值，该值可以是图像中的像素值或新值。</span><br><span class=\"line\">但是在中值模糊中，中心元素总是被图像中的某些像素值代替。有效降低噪音。其内核大小应为正奇数整数。</span><br><span class=\"line\"></span><br><span class=\"line\">函数： medianBlur(src, ksize, dst=None):</span><br><span class=\"line\">.   @param ksize 孔径线性尺寸;它必须是正奇数且大于1，例如:3,5,7…</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">medianBlur = cv.medianBlur(img, 5)                  # 中位模糊</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.bilateralFilter() 在去除噪声的同时保持边缘清晰锐利非常有效。但是，与其他过滤器相比，该操作速度较慢。</span><br><span class=\"line\">我们已经看到，高斯滤波器采用像素周围的邻域并找到其高斯加权平均值。</span><br><span class=\"line\">高斯滤波器仅是空间的函数，也就是说，滤波时会考虑附近的像素。</span><br><span class=\"line\">它不考虑像素是否具有几乎相同的强度。它不考虑像素是否是边缘像素。因此它也模糊了边缘，这是我们不想做的。</span><br><span class=\"line\">双边滤波器在空间中也采用高斯滤波器，但是又有一个高斯滤波器，它是像素差的函数。</span><br><span class=\"line\">空间的高斯函数确保仅考虑附近像素的模糊，而强度差的高斯函数确保仅考虑强度与中心像素相似的那些像素的模糊。</span><br><span class=\"line\">由于边缘的像素强度变化较大，因此可以保留边缘。</span><br><span class=\"line\"></span><br><span class=\"line\">函数：bilateralFilter(src, d, sigmaColor, sigmaSpace, dst=None, borderType=None):</span><br><span class=\"line\"></span><br><span class=\"line\">.   @param d 滤波期间使用的每个像素邻域的直径。如果非正，则从sigmspace计算。</span><br><span class=\"line\">.   @param sigmaColor 在颜色空间中过滤sigma。该参数的值越大，意味着像素邻域(参见sigmspace)中更远的颜色将被混合在一起，</span><br><span class=\"line\">    从而产生更大的半等色区域。</span><br><span class=\"line\">.   @param sigmaSpace 在坐标空间中过滤。参数值越大，表示距离较远的像素将相互影响，只要它们的颜色足够接近(参见sigmaColor)。</span><br><span class=\"line\">    当d\\&gt;0时，它指定邻域大小而不考虑sigmspace。否则，d与sigmspace成比例。</span><br><span class=\"line\">.   @param borderType 边框模式用于推断图像外的像素，参见#BorderTypes</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">bilateralFilter = cv.bilateralFilter(img, 9, 75, 75)       # 双边滤波</span><br><span class=\"line\"></span><br><span class=\"line\">cv.imshow(&#x27;img&#x27;, img)</span><br><span class=\"line\">cv.imshow(&#x27;burl&#x27;, blur)</span><br><span class=\"line\">cv.imshow(&#x27;GaussianBlur&#x27;, GaussianBlur)</span><br><span class=\"line\">cv.imshow(&#x27;medianBlur&#x27;, medianBlur)</span><br><span class=\"line\">cv.imshow(&#x27;bilateralFilter&#x27;, bilateralFilter)</span><br><span class=\"line\">key = cv.waitKey()</span><br><span class=\"line\"># 按任意键退出</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"OpenCV-图像过滤（2D卷积）","_content":"# OpenCV-图像过滤（2D卷积）\n学习代码如下：\n1. cv.filter2D\n<!--more-->\n```\n\"\"\"\n目标：使用各种低通滤镜模糊图像 - 将定制的滤镜应用于图像（2D卷积）\n与一维信号一样，还可以使用各种低通滤波器（LPF），高通滤波器（HPF）等对图像进行滤波。\nLPF有助于消除噪声，使图像模糊等。HPF滤波器有助于在图像中找到边缘。\nOpenCV提供了一个函数**cv.filter2D**来将内核与图像进行卷积。例如，我们将尝试对图像进行平均滤波。5x5平均滤波器内核。\n操作如下:保持这个内核在一个像素上，将所有低于这个内核的25个像素相加，取其平均值，然后用新的平均值替换中心像素。\n\"\"\"\n\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg')\n# img = cv.cvtColor(img, cv.COLOR_BGR2RGB)    # 改变图像通道\nkernel = np.ones((5, 5), np.float32) / 25   # 创建平均滤波矩阵\n'''\n函数名：filter2D(src, ddepth, kernel, dst=None, anchor=None, delta=None, borderType=None):\n.   @param ddepth 目标图像的期望深度，参见@ref filter_depth \"combination \"\n.   @param kernel 卷积核(或者更确切地说是相关核)，一个单通道浮点数矩阵\n.   @param anchor 核的锚点，它指示内部被过滤点的相对位置内核;锚点应该位于内核内;默认值(-1，-1)意味着锚点位于内核中心。\n.   @param delta 在将过滤后的像素存储到dst之前添加到它们的可选值。\n.   @param borderType 像素外推方法，参见#BorderTypes。不支持#BORDER_WRAP。\n'''\ndst = cv.filter2D(img, -1, kernel)\n# plt.subplot(121), plt.imshow(img), plt.title('Original')\n# plt.xticks([]), plt.yticks([])\n# plt.subplot(122), plt.imshow(dst), plt.title('Averaging')\n# plt.xticks([]), plt.yticks([])\n# plt.show()\ncv.imshow('Original', img)\ncv.imshow('Averaging', dst)\nkey = cv.waitKey(0)\n# 任意键退出\ncv.destroyAllWindows()\n\n\n```","source":"_posts/OpenCV/图像过滤/OpenCV-图像过滤（2D卷积）.md","raw":"---\ntitle:  OpenCV-图像过滤（2D卷积）\n---\n# OpenCV-图像过滤（2D卷积）\n学习代码如下：\n1. cv.filter2D\n<!--more-->\n```\n\"\"\"\n目标：使用各种低通滤镜模糊图像 - 将定制的滤镜应用于图像（2D卷积）\n与一维信号一样，还可以使用各种低通滤波器（LPF），高通滤波器（HPF）等对图像进行滤波。\nLPF有助于消除噪声，使图像模糊等。HPF滤波器有助于在图像中找到边缘。\nOpenCV提供了一个函数**cv.filter2D**来将内核与图像进行卷积。例如，我们将尝试对图像进行平均滤波。5x5平均滤波器内核。\n操作如下:保持这个内核在一个像素上，将所有低于这个内核的25个像素相加，取其平均值，然后用新的平均值替换中心像素。\n\"\"\"\n\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg')\n# img = cv.cvtColor(img, cv.COLOR_BGR2RGB)    # 改变图像通道\nkernel = np.ones((5, 5), np.float32) / 25   # 创建平均滤波矩阵\n'''\n函数名：filter2D(src, ddepth, kernel, dst=None, anchor=None, delta=None, borderType=None):\n.   @param ddepth 目标图像的期望深度，参见@ref filter_depth \"combination \"\n.   @param kernel 卷积核(或者更确切地说是相关核)，一个单通道浮点数矩阵\n.   @param anchor 核的锚点，它指示内部被过滤点的相对位置内核;锚点应该位于内核内;默认值(-1，-1)意味着锚点位于内核中心。\n.   @param delta 在将过滤后的像素存储到dst之前添加到它们的可选值。\n.   @param borderType 像素外推方法，参见#BorderTypes。不支持#BORDER_WRAP。\n'''\ndst = cv.filter2D(img, -1, kernel)\n# plt.subplot(121), plt.imshow(img), plt.title('Original')\n# plt.xticks([]), plt.yticks([])\n# plt.subplot(122), plt.imshow(dst), plt.title('Averaging')\n# plt.xticks([]), plt.yticks([])\n# plt.show()\ncv.imshow('Original', img)\ncv.imshow('Averaging', dst)\nkey = cv.waitKey(0)\n# 任意键退出\ncv.destroyAllWindows()\n\n\n```","slug":"OpenCV/图像过滤/OpenCV-图像过滤（2D卷积）","published":1,"date":"2022-05-25T10:06:34.730Z","updated":"2022-05-07T09:57:19.938Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqb001m68urd5gyfdse","content":"<h1 id=\"OpenCV-图像过滤（2D卷积）\"><a href=\"#OpenCV-图像过滤（2D卷积）\" class=\"headerlink\" title=\"OpenCV-图像过滤（2D卷积）\"></a>OpenCV-图像过滤（2D卷积）</h1><p>学习代码如下：</p>\n<ol>\n<li>cv.filter2D<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">目标：使用各种低通滤镜模糊图像 - 将定制的滤镜应用于图像（2D卷积）</span><br><span class=\"line\">与一维信号一样，还可以使用各种低通滤波器（LPF），高通滤波器（HPF）等对图像进行滤波。</span><br><span class=\"line\">LPF有助于消除噪声，使图像模糊等。HPF滤波器有助于在图像中找到边缘。</span><br><span class=\"line\">OpenCV提供了一个函数**cv.filter2D**来将内核与图像进行卷积。例如，我们将尝试对图像进行平均滤波。5x5平均滤波器内核。</span><br><span class=\"line\">操作如下:保持这个内核在一个像素上，将所有低于这个内核的25个像素相加，取其平均值，然后用新的平均值替换中心像素。</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg&#x27;)</span><br><span class=\"line\"># img = cv.cvtColor(img, cv.COLOR_BGR2RGB)    # 改变图像通道</span><br><span class=\"line\">kernel = np.ones((5, 5), np.float32) / 25   # 创建平均滤波矩阵</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">函数名：filter2D(src, ddepth, kernel, dst=None, anchor=None, delta=None, borderType=None):</span><br><span class=\"line\">.   @param ddepth 目标图像的期望深度，参见@ref filter_depth &quot;combination &quot;</span><br><span class=\"line\">.   @param kernel 卷积核(或者更确切地说是相关核)，一个单通道浮点数矩阵</span><br><span class=\"line\">.   @param anchor 核的锚点，它指示内部被过滤点的相对位置内核;锚点应该位于内核内;默认值(-1，-1)意味着锚点位于内核中心。</span><br><span class=\"line\">.   @param delta 在将过滤后的像素存储到dst之前添加到它们的可选值。</span><br><span class=\"line\">.   @param borderType 像素外推方法，参见#BorderTypes。不支持#BORDER_WRAP。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">dst = cv.filter2D(img, -1, kernel)</span><br><span class=\"line\"># plt.subplot(121), plt.imshow(img), plt.title(&#x27;Original&#x27;)</span><br><span class=\"line\"># plt.xticks([]), plt.yticks([])</span><br><span class=\"line\"># plt.subplot(122), plt.imshow(dst), plt.title(&#x27;Averaging&#x27;)</span><br><span class=\"line\"># plt.xticks([]), plt.yticks([])</span><br><span class=\"line\"># plt.show()</span><br><span class=\"line\">cv.imshow(&#x27;Original&#x27;, img)</span><br><span class=\"line\">cv.imshow(&#x27;Averaging&#x27;, dst)</span><br><span class=\"line\">key = cv.waitKey(0)</span><br><span class=\"line\"># 任意键退出</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-图像过滤（2D卷积）\"><a href=\"#OpenCV-图像过滤（2D卷积）\" class=\"headerlink\" title=\"OpenCV-图像过滤（2D卷积）\"></a>OpenCV-图像过滤（2D卷积）</h1><p>学习代码如下：</p>\n<ol>\n<li>cv.filter2D","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">目标：使用各种低通滤镜模糊图像 - 将定制的滤镜应用于图像（2D卷积）</span><br><span class=\"line\">与一维信号一样，还可以使用各种低通滤波器（LPF），高通滤波器（HPF）等对图像进行滤波。</span><br><span class=\"line\">LPF有助于消除噪声，使图像模糊等。HPF滤波器有助于在图像中找到边缘。</span><br><span class=\"line\">OpenCV提供了一个函数**cv.filter2D**来将内核与图像进行卷积。例如，我们将尝试对图像进行平均滤波。5x5平均滤波器内核。</span><br><span class=\"line\">操作如下:保持这个内核在一个像素上，将所有低于这个内核的25个像素相加，取其平均值，然后用新的平均值替换中心像素。</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\roi.jpg&#x27;)</span><br><span class=\"line\"># img = cv.cvtColor(img, cv.COLOR_BGR2RGB)    # 改变图像通道</span><br><span class=\"line\">kernel = np.ones((5, 5), np.float32) / 25   # 创建平均滤波矩阵</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">函数名：filter2D(src, ddepth, kernel, dst=None, anchor=None, delta=None, borderType=None):</span><br><span class=\"line\">.   @param ddepth 目标图像的期望深度，参见@ref filter_depth &quot;combination &quot;</span><br><span class=\"line\">.   @param kernel 卷积核(或者更确切地说是相关核)，一个单通道浮点数矩阵</span><br><span class=\"line\">.   @param anchor 核的锚点，它指示内部被过滤点的相对位置内核;锚点应该位于内核内;默认值(-1，-1)意味着锚点位于内核中心。</span><br><span class=\"line\">.   @param delta 在将过滤后的像素存储到dst之前添加到它们的可选值。</span><br><span class=\"line\">.   @param borderType 像素外推方法，参见#BorderTypes。不支持#BORDER_WRAP。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">dst = cv.filter2D(img, -1, kernel)</span><br><span class=\"line\"># plt.subplot(121), plt.imshow(img), plt.title(&#x27;Original&#x27;)</span><br><span class=\"line\"># plt.xticks([]), plt.yticks([])</span><br><span class=\"line\"># plt.subplot(122), plt.imshow(dst), plt.title(&#x27;Averaging&#x27;)</span><br><span class=\"line\"># plt.xticks([]), plt.yticks([])</span><br><span class=\"line\"># plt.show()</span><br><span class=\"line\">cv.imshow(&#x27;Original&#x27;, img)</span><br><span class=\"line\">cv.imshow(&#x27;Averaging&#x27;, dst)</span><br><span class=\"line\">key = cv.waitKey(0)</span><br><span class=\"line\"># 任意键退出</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n</ol>"},{"title":"图像金字塔实例运用","_content":"# 图像金字塔实例运用\n<!--more-->\n```\nimport cv2 as cv\nimport numpy as np, sys\n\nA = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\apple.jpg')\nB = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\orange.jpg')\n# 读取图像大小\nrows_a, cols_a, channels_a = A.shape\nrows_b, cols_b, channels_b = B.shape\n# 生成A的高斯金字塔\nG = A.copy()\ngpA = [G]\nfor i in range(6):\n    G = cv.pyrDown(G)\n    gpA.append(G)\n# 生成B的高斯金字塔\nG = B.copy()\ngpB = [G]\nfor i in range(6):\n    G = cv.pyrDown(G)\n    gpB.append(G)\n# 生成A的拉普拉斯金字塔\nlpA = [gpA[5]]\nfor i in range(5, 0, -1):\n    GE = cv.pyrUp(gpA[i])\n    L = cv.subtract(gpA[i - 1], GE)\n    lpA.append(L)\n# 生成B的拉普拉斯金字塔\nlpB = [gpB[5]]\nfor i in range(5, 0, -1):\n    GE = cv.pyrUp(gpB[i])\n    L = cv.subtract(gpB[i - 1], GE)\n    lpB.append(L)\n# 现在在每个级别中添加左右两半图像\nLS = []\nfor la, lb in zip(lpA, lpB):\n    rows, cols, dpt = la.shape\n    ls = np.hstack((la[:, 0:cols // 2], lb[:, cols // 2:]))\n    LS.append(ls)\n# 现在重建\nls_ = LS[0]\nfor i in range(1, 6):\n    ls_ = cv.pyrUp(ls_)\n    ls_ = cv.add(ls_, LS[i])\n# 图像与直接连接的每一半\nreal = np.hstack((A[:, :cols_a // 2], B[:, cols_b // 2:]))\ncv.imwrite('Pyramid_blending2.jpg', ls_)\ncv.imwrite('Direct_blending.jpg', real)\ncv.waitKey()\ncv.destroyAllWindows()\n\n```","source":"_posts/OpenCV/图像金字塔/s使用图像金字塔进行图像融合.md","raw":"---\ntitle: 图像金字塔实例运用\n---\n# 图像金字塔实例运用\n<!--more-->\n```\nimport cv2 as cv\nimport numpy as np, sys\n\nA = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\apple.jpg')\nB = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\orange.jpg')\n# 读取图像大小\nrows_a, cols_a, channels_a = A.shape\nrows_b, cols_b, channels_b = B.shape\n# 生成A的高斯金字塔\nG = A.copy()\ngpA = [G]\nfor i in range(6):\n    G = cv.pyrDown(G)\n    gpA.append(G)\n# 生成B的高斯金字塔\nG = B.copy()\ngpB = [G]\nfor i in range(6):\n    G = cv.pyrDown(G)\n    gpB.append(G)\n# 生成A的拉普拉斯金字塔\nlpA = [gpA[5]]\nfor i in range(5, 0, -1):\n    GE = cv.pyrUp(gpA[i])\n    L = cv.subtract(gpA[i - 1], GE)\n    lpA.append(L)\n# 生成B的拉普拉斯金字塔\nlpB = [gpB[5]]\nfor i in range(5, 0, -1):\n    GE = cv.pyrUp(gpB[i])\n    L = cv.subtract(gpB[i - 1], GE)\n    lpB.append(L)\n# 现在在每个级别中添加左右两半图像\nLS = []\nfor la, lb in zip(lpA, lpB):\n    rows, cols, dpt = la.shape\n    ls = np.hstack((la[:, 0:cols // 2], lb[:, cols // 2:]))\n    LS.append(ls)\n# 现在重建\nls_ = LS[0]\nfor i in range(1, 6):\n    ls_ = cv.pyrUp(ls_)\n    ls_ = cv.add(ls_, LS[i])\n# 图像与直接连接的每一半\nreal = np.hstack((A[:, :cols_a // 2], B[:, cols_b // 2:]))\ncv.imwrite('Pyramid_blending2.jpg', ls_)\ncv.imwrite('Direct_blending.jpg', real)\ncv.waitKey()\ncv.destroyAllWindows()\n\n```","slug":"OpenCV/图像金字塔/s使用图像金字塔进行图像融合","published":1,"date":"2022-06-13T06:57:24.567Z","updated":"2022-06-13T06:59:23.616Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqc001n68urhxsvh2fv","content":"<h1 id=\"图像金字塔实例运用\"><a href=\"#图像金字塔实例运用\" class=\"headerlink\" title=\"图像金字塔实例运用\"></a>图像金字塔实例运用</h1><span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np, sys</span><br><span class=\"line\"></span><br><span class=\"line\">A = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\apple.jpg&#x27;)</span><br><span class=\"line\">B = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\orange.jpg&#x27;)</span><br><span class=\"line\"># 读取图像大小</span><br><span class=\"line\">rows_a, cols_a, channels_a = A.shape</span><br><span class=\"line\">rows_b, cols_b, channels_b = B.shape</span><br><span class=\"line\"># 生成A的高斯金字塔</span><br><span class=\"line\">G = A.copy()</span><br><span class=\"line\">gpA = [G]</span><br><span class=\"line\">for i in range(6):</span><br><span class=\"line\">    G = cv.pyrDown(G)</span><br><span class=\"line\">    gpA.append(G)</span><br><span class=\"line\"># 生成B的高斯金字塔</span><br><span class=\"line\">G = B.copy()</span><br><span class=\"line\">gpB = [G]</span><br><span class=\"line\">for i in range(6):</span><br><span class=\"line\">    G = cv.pyrDown(G)</span><br><span class=\"line\">    gpB.append(G)</span><br><span class=\"line\"># 生成A的拉普拉斯金字塔</span><br><span class=\"line\">lpA = [gpA[5]]</span><br><span class=\"line\">for i in range(5, 0, -1):</span><br><span class=\"line\">    GE = cv.pyrUp(gpA[i])</span><br><span class=\"line\">    L = cv.subtract(gpA[i - 1], GE)</span><br><span class=\"line\">    lpA.append(L)</span><br><span class=\"line\"># 生成B的拉普拉斯金字塔</span><br><span class=\"line\">lpB = [gpB[5]]</span><br><span class=\"line\">for i in range(5, 0, -1):</span><br><span class=\"line\">    GE = cv.pyrUp(gpB[i])</span><br><span class=\"line\">    L = cv.subtract(gpB[i - 1], GE)</span><br><span class=\"line\">    lpB.append(L)</span><br><span class=\"line\"># 现在在每个级别中添加左右两半图像</span><br><span class=\"line\">LS = []</span><br><span class=\"line\">for la, lb in zip(lpA, lpB):</span><br><span class=\"line\">    rows, cols, dpt = la.shape</span><br><span class=\"line\">    ls = np.hstack((la[:, 0:cols // 2], lb[:, cols // 2:]))</span><br><span class=\"line\">    LS.append(ls)</span><br><span class=\"line\"># 现在重建</span><br><span class=\"line\">ls_ = LS[0]</span><br><span class=\"line\">for i in range(1, 6):</span><br><span class=\"line\">    ls_ = cv.pyrUp(ls_)</span><br><span class=\"line\">    ls_ = cv.add(ls_, LS[i])</span><br><span class=\"line\"># 图像与直接连接的每一半</span><br><span class=\"line\">real = np.hstack((A[:, :cols_a // 2], B[:, cols_b // 2:]))</span><br><span class=\"line\">cv.imwrite(&#x27;Pyramid_blending2.jpg&#x27;, ls_)</span><br><span class=\"line\">cv.imwrite(&#x27;Direct_blending.jpg&#x27;, real)</span><br><span class=\"line\">cv.waitKey()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"图像金字塔实例运用\"><a href=\"#图像金字塔实例运用\" class=\"headerlink\" title=\"图像金字塔实例运用\"></a>图像金字塔实例运用</h1>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">import numpy as np, sys</span><br><span class=\"line\"></span><br><span class=\"line\">A = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\apple.jpg&#x27;)</span><br><span class=\"line\">B = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\orange.jpg&#x27;)</span><br><span class=\"line\"># 读取图像大小</span><br><span class=\"line\">rows_a, cols_a, channels_a = A.shape</span><br><span class=\"line\">rows_b, cols_b, channels_b = B.shape</span><br><span class=\"line\"># 生成A的高斯金字塔</span><br><span class=\"line\">G = A.copy()</span><br><span class=\"line\">gpA = [G]</span><br><span class=\"line\">for i in range(6):</span><br><span class=\"line\">    G = cv.pyrDown(G)</span><br><span class=\"line\">    gpA.append(G)</span><br><span class=\"line\"># 生成B的高斯金字塔</span><br><span class=\"line\">G = B.copy()</span><br><span class=\"line\">gpB = [G]</span><br><span class=\"line\">for i in range(6):</span><br><span class=\"line\">    G = cv.pyrDown(G)</span><br><span class=\"line\">    gpB.append(G)</span><br><span class=\"line\"># 生成A的拉普拉斯金字塔</span><br><span class=\"line\">lpA = [gpA[5]]</span><br><span class=\"line\">for i in range(5, 0, -1):</span><br><span class=\"line\">    GE = cv.pyrUp(gpA[i])</span><br><span class=\"line\">    L = cv.subtract(gpA[i - 1], GE)</span><br><span class=\"line\">    lpA.append(L)</span><br><span class=\"line\"># 生成B的拉普拉斯金字塔</span><br><span class=\"line\">lpB = [gpB[5]]</span><br><span class=\"line\">for i in range(5, 0, -1):</span><br><span class=\"line\">    GE = cv.pyrUp(gpB[i])</span><br><span class=\"line\">    L = cv.subtract(gpB[i - 1], GE)</span><br><span class=\"line\">    lpB.append(L)</span><br><span class=\"line\"># 现在在每个级别中添加左右两半图像</span><br><span class=\"line\">LS = []</span><br><span class=\"line\">for la, lb in zip(lpA, lpB):</span><br><span class=\"line\">    rows, cols, dpt = la.shape</span><br><span class=\"line\">    ls = np.hstack((la[:, 0:cols // 2], lb[:, cols // 2:]))</span><br><span class=\"line\">    LS.append(ls)</span><br><span class=\"line\"># 现在重建</span><br><span class=\"line\">ls_ = LS[0]</span><br><span class=\"line\">for i in range(1, 6):</span><br><span class=\"line\">    ls_ = cv.pyrUp(ls_)</span><br><span class=\"line\">    ls_ = cv.add(ls_, LS[i])</span><br><span class=\"line\"># 图像与直接连接的每一半</span><br><span class=\"line\">real = np.hstack((A[:, :cols_a // 2], B[:, cols_b // 2:]))</span><br><span class=\"line\">cv.imwrite(&#x27;Pyramid_blending2.jpg&#x27;, ls_)</span><br><span class=\"line\">cv.imwrite(&#x27;Direct_blending.jpg&#x27;, real)</span><br><span class=\"line\">cv.waitKey()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"图像金字塔学习","_content":"# 图像金字塔学习\n<!--more-->\n```\n\"\"\"\n目标\n学习图像金字塔 - 我们将使用图像金字塔创建一个新的水果“Orapple” - 学习以下功能：cv.pyrUp()，cv.pyrDown()\n\n理论\n通常，我们过去使用的是恒定大小的图像。但是在某些情况下，我们需要使用不同分辨率的（相同）图像。\n例如，当在图像中搜索某些东西（例如人脸）时，我们不确定对象将以多大的尺寸显示在图像中。\n在这种情况下，我们将需要创建一组具有不同分辨率的相同图像，并在所有图像中搜索对象。\n这些具有不同分辨率的图像集称为“图像金字塔”（因为当它们堆叠在底部时，最高分辨率的图像位于顶部，最低分辨率的图像位于顶部时，看起来像金字塔）。\n有两种图像金字塔。1）高斯金字塔   2）拉普拉斯金字塔\n高斯金字塔中的较高级别（低分辨率）是通过删除较低级别（较高分辨率）图像中的连续行和列而形成的。\n然后，较高级别的每个像素由基础级别的5个像素的贡献与高斯权重形成。通过这样做，\nM×N图像变成M/2×N/2图像。\n因此面积减少到原始面积的四分之一。它称为Octave。\n当我们在金字塔中越靠上时（即分辨率下降），这种模式就会继续。\n同样，在扩展时，每个级别的面积变为4倍。我们可以使用**cv.pyrDown**()和**cv.pyrUp**()函数找到高斯金字塔。\n\n\"\"\"\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\messi5.jpg')\n'''\npyrDown(src, dst=None, dstsize=None, borderType=None):\n\n.   @param dstsize size of the output image.\n.   @param borderType 边缘处理, see #BorderTypes (#BORDER_CONSTANT isn't supported)\n'''\nlower_reso = cv.pyrDown(img)\nlower_reso2 = cv.pyrDown(lower_reso)\n'''\npyrUp(src, dst=None, dstsize=None, borderType=None):\n.   @param dstsize size of the output image.\n.   @param borderType Pixel extrapolation method, see #BorderTypes (only #BORDER_DEFAULT is supported)\n'''\nhigher_reso2 = cv.pyrUp(img)\n# # BGR-->RGB\n# img = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n# lower_reso = cv.cvtColor(lower_reso, cv.COLOR_BGR2RGB)\n# # 显示方式一\n# plt.subplot(1, 2, 1), plt.imshow(img), plt.title('Original')\n# plt.subplot(1, 2, 2), plt.imshow(lower_reso), plt.title('lower_reso')\nplt.show()\n# 显示方式二\ncv.imshow('img', img)\ncv.imshow('lower_reso', lower_reso)\ncv.imshow('lower_reso2', lower_reso2)\ncv.imshow('higher_reso2', higher_reso2)\ncv.waitKey()\ncv.destroyAllWindows()\n\n```","source":"_posts/OpenCV/图像金字塔/图像金字塔.md","raw":"---\ntitle: 图像金字塔学习\n---\n# 图像金字塔学习\n<!--more-->\n```\n\"\"\"\n目标\n学习图像金字塔 - 我们将使用图像金字塔创建一个新的水果“Orapple” - 学习以下功能：cv.pyrUp()，cv.pyrDown()\n\n理论\n通常，我们过去使用的是恒定大小的图像。但是在某些情况下，我们需要使用不同分辨率的（相同）图像。\n例如，当在图像中搜索某些东西（例如人脸）时，我们不确定对象将以多大的尺寸显示在图像中。\n在这种情况下，我们将需要创建一组具有不同分辨率的相同图像，并在所有图像中搜索对象。\n这些具有不同分辨率的图像集称为“图像金字塔”（因为当它们堆叠在底部时，最高分辨率的图像位于顶部，最低分辨率的图像位于顶部时，看起来像金字塔）。\n有两种图像金字塔。1）高斯金字塔   2）拉普拉斯金字塔\n高斯金字塔中的较高级别（低分辨率）是通过删除较低级别（较高分辨率）图像中的连续行和列而形成的。\n然后，较高级别的每个像素由基础级别的5个像素的贡献与高斯权重形成。通过这样做，\nM×N图像变成M/2×N/2图像。\n因此面积减少到原始面积的四分之一。它称为Octave。\n当我们在金字塔中越靠上时（即分辨率下降），这种模式就会继续。\n同样，在扩展时，每个级别的面积变为4倍。我们可以使用**cv.pyrDown**()和**cv.pyrUp**()函数找到高斯金字塔。\n\n\"\"\"\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\OpenCV\\messi5.jpg')\n'''\npyrDown(src, dst=None, dstsize=None, borderType=None):\n\n.   @param dstsize size of the output image.\n.   @param borderType 边缘处理, see #BorderTypes (#BORDER_CONSTANT isn't supported)\n'''\nlower_reso = cv.pyrDown(img)\nlower_reso2 = cv.pyrDown(lower_reso)\n'''\npyrUp(src, dst=None, dstsize=None, borderType=None):\n.   @param dstsize size of the output image.\n.   @param borderType Pixel extrapolation method, see #BorderTypes (only #BORDER_DEFAULT is supported)\n'''\nhigher_reso2 = cv.pyrUp(img)\n# # BGR-->RGB\n# img = cv.cvtColor(img, cv.COLOR_BGR2RGB)\n# lower_reso = cv.cvtColor(lower_reso, cv.COLOR_BGR2RGB)\n# # 显示方式一\n# plt.subplot(1, 2, 1), plt.imshow(img), plt.title('Original')\n# plt.subplot(1, 2, 2), plt.imshow(lower_reso), plt.title('lower_reso')\nplt.show()\n# 显示方式二\ncv.imshow('img', img)\ncv.imshow('lower_reso', lower_reso)\ncv.imshow('lower_reso2', lower_reso2)\ncv.imshow('higher_reso2', higher_reso2)\ncv.waitKey()\ncv.destroyAllWindows()\n\n```","slug":"OpenCV/图像金字塔/图像金字塔","published":1,"date":"2022-06-13T06:56:58.964Z","updated":"2022-06-13T06:59:48.797Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqd001o68ur4rwp15cy","content":"<h1 id=\"图像金字塔学习\"><a href=\"#图像金字塔学习\" class=\"headerlink\" title=\"图像金字塔学习\"></a>图像金字塔学习</h1><span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">目标</span><br><span class=\"line\">学习图像金字塔 - 我们将使用图像金字塔创建一个新的水果“Orapple” - 学习以下功能：cv.pyrUp()，cv.pyrDown()</span><br><span class=\"line\"></span><br><span class=\"line\">理论</span><br><span class=\"line\">通常，我们过去使用的是恒定大小的图像。但是在某些情况下，我们需要使用不同分辨率的（相同）图像。</span><br><span class=\"line\">例如，当在图像中搜索某些东西（例如人脸）时，我们不确定对象将以多大的尺寸显示在图像中。</span><br><span class=\"line\">在这种情况下，我们将需要创建一组具有不同分辨率的相同图像，并在所有图像中搜索对象。</span><br><span class=\"line\">这些具有不同分辨率的图像集称为“图像金字塔”（因为当它们堆叠在底部时，最高分辨率的图像位于顶部，最低分辨率的图像位于顶部时，看起来像金字塔）。</span><br><span class=\"line\">有两种图像金字塔。1）高斯金字塔   2）拉普拉斯金字塔</span><br><span class=\"line\">高斯金字塔中的较高级别（低分辨率）是通过删除较低级别（较高分辨率）图像中的连续行和列而形成的。</span><br><span class=\"line\">然后，较高级别的每个像素由基础级别的5个像素的贡献与高斯权重形成。通过这样做，</span><br><span class=\"line\">M×N图像变成M/2×N/2图像。</span><br><span class=\"line\">因此面积减少到原始面积的四分之一。它称为Octave。</span><br><span class=\"line\">当我们在金字塔中越靠上时（即分辨率下降），这种模式就会继续。</span><br><span class=\"line\">同样，在扩展时，每个级别的面积变为4倍。我们可以使用**cv.pyrDown**()和**cv.pyrUp**()函数找到高斯金字塔。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\messi5.jpg&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">pyrDown(src, dst=None, dstsize=None, borderType=None):</span><br><span class=\"line\"></span><br><span class=\"line\">.   @param dstsize size of the output image.</span><br><span class=\"line\">.   @param borderType 边缘处理, see #BorderTypes (#BORDER_CONSTANT isn&#x27;t supported)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">lower_reso = cv.pyrDown(img)</span><br><span class=\"line\">lower_reso2 = cv.pyrDown(lower_reso)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">pyrUp(src, dst=None, dstsize=None, borderType=None):</span><br><span class=\"line\">.   @param dstsize size of the output image.</span><br><span class=\"line\">.   @param borderType Pixel extrapolation method, see #BorderTypes (only #BORDER_DEFAULT is supported)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">higher_reso2 = cv.pyrUp(img)</span><br><span class=\"line\"># # BGR--&gt;RGB</span><br><span class=\"line\"># img = cv.cvtColor(img, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"># lower_reso = cv.cvtColor(lower_reso, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"># # 显示方式一</span><br><span class=\"line\"># plt.subplot(1, 2, 1), plt.imshow(img), plt.title(&#x27;Original&#x27;)</span><br><span class=\"line\"># plt.subplot(1, 2, 2), plt.imshow(lower_reso), plt.title(&#x27;lower_reso&#x27;)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"># 显示方式二</span><br><span class=\"line\">cv.imshow(&#x27;img&#x27;, img)</span><br><span class=\"line\">cv.imshow(&#x27;lower_reso&#x27;, lower_reso)</span><br><span class=\"line\">cv.imshow(&#x27;lower_reso2&#x27;, lower_reso2)</span><br><span class=\"line\">cv.imshow(&#x27;higher_reso2&#x27;, higher_reso2)</span><br><span class=\"line\">cv.waitKey()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"图像金字塔学习\"><a href=\"#图像金字塔学习\" class=\"headerlink\" title=\"图像金字塔学习\"></a>图像金字塔学习</h1>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">目标</span><br><span class=\"line\">学习图像金字塔 - 我们将使用图像金字塔创建一个新的水果“Orapple” - 学习以下功能：cv.pyrUp()，cv.pyrDown()</span><br><span class=\"line\"></span><br><span class=\"line\">理论</span><br><span class=\"line\">通常，我们过去使用的是恒定大小的图像。但是在某些情况下，我们需要使用不同分辨率的（相同）图像。</span><br><span class=\"line\">例如，当在图像中搜索某些东西（例如人脸）时，我们不确定对象将以多大的尺寸显示在图像中。</span><br><span class=\"line\">在这种情况下，我们将需要创建一组具有不同分辨率的相同图像，并在所有图像中搜索对象。</span><br><span class=\"line\">这些具有不同分辨率的图像集称为“图像金字塔”（因为当它们堆叠在底部时，最高分辨率的图像位于顶部，最低分辨率的图像位于顶部时，看起来像金字塔）。</span><br><span class=\"line\">有两种图像金字塔。1）高斯金字塔   2）拉普拉斯金字塔</span><br><span class=\"line\">高斯金字塔中的较高级别（低分辨率）是通过删除较低级别（较高分辨率）图像中的连续行和列而形成的。</span><br><span class=\"line\">然后，较高级别的每个像素由基础级别的5个像素的贡献与高斯权重形成。通过这样做，</span><br><span class=\"line\">M×N图像变成M/2×N/2图像。</span><br><span class=\"line\">因此面积减少到原始面积的四分之一。它称为Octave。</span><br><span class=\"line\">当我们在金字塔中越靠上时（即分辨率下降），这种模式就会继续。</span><br><span class=\"line\">同样，在扩展时，每个级别的面积变为4倍。我们可以使用**cv.pyrDown**()和**cv.pyrUp**()函数找到高斯金字塔。</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\OpenCV\\messi5.jpg&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">pyrDown(src, dst=None, dstsize=None, borderType=None):</span><br><span class=\"line\"></span><br><span class=\"line\">.   @param dstsize size of the output image.</span><br><span class=\"line\">.   @param borderType 边缘处理, see #BorderTypes (#BORDER_CONSTANT isn&#x27;t supported)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">lower_reso = cv.pyrDown(img)</span><br><span class=\"line\">lower_reso2 = cv.pyrDown(lower_reso)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">pyrUp(src, dst=None, dstsize=None, borderType=None):</span><br><span class=\"line\">.   @param dstsize size of the output image.</span><br><span class=\"line\">.   @param borderType Pixel extrapolation method, see #BorderTypes (only #BORDER_DEFAULT is supported)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">higher_reso2 = cv.pyrUp(img)</span><br><span class=\"line\"># # BGR--&gt;RGB</span><br><span class=\"line\"># img = cv.cvtColor(img, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"># lower_reso = cv.cvtColor(lower_reso, cv.COLOR_BGR2RGB)</span><br><span class=\"line\"># # 显示方式一</span><br><span class=\"line\"># plt.subplot(1, 2, 1), plt.imshow(img), plt.title(&#x27;Original&#x27;)</span><br><span class=\"line\"># plt.subplot(1, 2, 2), plt.imshow(lower_reso), plt.title(&#x27;lower_reso&#x27;)</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"># 显示方式二</span><br><span class=\"line\">cv.imshow(&#x27;img&#x27;, img)</span><br><span class=\"line\">cv.imshow(&#x27;lower_reso&#x27;, lower_reso)</span><br><span class=\"line\">cv.imshow(&#x27;lower_reso2&#x27;, lower_reso2)</span><br><span class=\"line\">cv.imshow(&#x27;higher_reso2&#x27;, higher_reso2)</span><br><span class=\"line\">cv.waitKey()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-图像阈值学习","_content":"#  OpenCV-图像阈值学习\n涉及函数：\ncv.threshold\ncv.adaptiveThreshold\nret8, th2 = cv.threshold(img, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)\ncv.GaussianBlur\n学习代码如下：\n<!--more-->\n```\n\"\"\"\n目标\n在本教程中，您将学习简单阈值，自适应阈值和Otsu阈值。\n你将学习函数**cv.threshold**和**cv.adaptiveThreshold**。\n\"\"\"\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\n'''\n图像二值化：\n定义：图像的二值化，就是将图像上的像素点的灰度值设置为0或255，\n也就是将整个图像呈现出明显的只有黑和白的视觉效果。\n灰度值0：黑  灰度值255：白\n一幅图像包括目标物体、背景还有噪声，要想从多值的数字图像中直接提取出目标物体，\n常用的方法就是设定一个阈值T，用T将图像的数据分成两部分：\n大于T的像素群和小于T的像素群。\n这是研究灰度变换的最特殊的方法，称为图像的二值化（Binarization）。\n\nret, dst = cv.threshold( src, thresh, maxval, type[, dst] ) \n参数说明：\nsrc：原图像。\ndst：结果图像。\nthresh：当前阈值。\nmaxVal：最大阈值，一般为255.\nthresholdType:阈值类型，主要有下面几种：\nenum ThresholdTypes {\n    THRESH_BINARY     = 0,  大于阈值的部分被置为255，小于部分被置为0\n    THRESH_BINARY_INV = 1,  大于阈值部分被置为0，小于部分被置为255\n    THRESH_TRUNC      = 2,  大于阈值部分被置为threshold，小于部分保持原样\n    THRESH_TOZERO     = 3,  小于阈值部分被置为0，大于部分保持不变\n    THRESH_TOZERO_INV = 4,  大于阈值部分被置为0，小于部分保持不变 \n    THRESH_MASK       = 7,\n    THRESH_OTSU       = 8,\n    THRESH_TRIANGLE   = 16\n};\n返回值:\nret： 与参数thresh一致\ndst： 结果图像\n使用了THRESH_OTSU和THRESH_TRIANGLE两个标志时，输入图像必须为单通道。\n'''\nimg = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg', 0)\nret, thresh1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)\nret1, thresh2 = cv.threshold(img, 127, 255, cv.THRESH_BINARY_INV)\nret2, thresh3 = cv.threshold(img, 127, 255, cv.THRESH_TRUNC)\nret3, thresh4 = cv.threshold(img, 127, 255, cv.THRESH_TOZERO)\nret4, thresh5 = cv.threshold(img, 127, 255, cv.THRESH_TOZERO_INV)\ntitles = ['Original Image', 'BINARY', 'BINARY_INV', 'TRUNC', 'TOZERO', 'TOZERO_INV']\nimages = [img, thresh1, thresh2, thresh3, thresh4, thresh5]\nfor i in range(6):\n    plt.subplot(2, 3, i + 1), plt.imshow(images[i], 'gray')\n    plt.title(titles[i])\n    plt.xticks([]), plt.yticks([])\nplt.show()\n'''\n自适应阈值\n在上一节中，我们使用一个全局值作为阈值。但这可能并非在所有情况下都很好，例如，如果图像在不同区域具有不同的光照条件。\n在这种情况下，自适应阈值阈值化可以提供帮助。在此，算法基于像素周围的小区域确定像素的阈值。\n因此，对于同一图像的不同区域，我们获得了不同的阈值，这为光照度变化的图像提供了更好的结果。\nadaptiveThreshold(src, maxValue, adaptiveMethod, thresholdType, blockSize, C, dst=None):\n除上述参数外，方法**cv.adaptiveThreshold**还包含三个输入参数：\n该**adaptiveMethod**决定阈值是如何计算的：\ncv.ADAPTIVE_THRESH_MEAN_C::阈值是邻近区域的平均值减去常数**C**。 \ncv.ADAPTIVE_THRESH_GAUSSIAN_C:阈值是邻域值的高斯加权总和减去常数**C**。\n该**BLOCKSIZE**确定附近区域的大小，**C**是从邻域像素的平均或加权总和中减去的一个常数。\n下面的代码比较了光照变化的图像的全局阈值和自适应阈值：\n'''\n\nimg = cv.medianBlur(img, 5)\nret, th1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)\nth2 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_MEAN_C,\n                           cv.THRESH_BINARY, 11, 2)\nth3 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_GAUSSIAN_C,\n                           cv.THRESH_BINARY, 11, 2)\ntitles1 = ['Original Image', 'Global Thresholding (v = 127)',\n          'Adaptive Mean Thresholding', 'Adaptive Gaussian Thresholding']\nimages = [img, th1, th2, th3]\nfor i in range(4):\n    plt.subplot(2, 2, i + 1), plt.imshow(images[i], 'gray')\n    plt.title(titles1[i])\n    plt.xticks([]), plt.yticks([])\nplt.show()\n'''\nOtsu的二值化\n在全局阈值化中，我们使用任意选择的值作为阈值。相反，Otsu的方法避免了必须选择一个值并自动确定它的情况。\n考虑仅具有两个不同图像值的图像（双峰图像），其中直方图将仅包含两个峰。一个好的阈值应该在这两个值的中间。\n类似地，Otsu的方法从图像直方图中确定最佳全局阈值。\n为此，使用了**cv.threshold**作为附加标志传递。阈值可以任意选择。然后，算法找到最佳阈值，该阈值作为第一输出返回。\n'''\n\n\n# 全局阈值\nret7, th1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)\n# Otsu阈值\nret8, th2 = cv.threshold(img, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)\n'''\n高斯滤波：\nGaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None):\n参数\nsrc:输入图像\nksize:(核的宽度,核的高度)，输入高斯核的尺寸，核的宽高都必须是正奇数。否则，将会从参数sigma中计算得到。\ndst:输出图像，尺寸与输入图像一致。\nsigmaX:高斯核在X方向上的标准差。\nsigmaY:高斯核在Y方向上的标准差。默认为None，如果sigmaY=0，则它将被设置为与sigmaX相等的值。\n如果这两者都为0,则它们的值会从ksize中计算得到。计算公式为：\nsigma = 0.3*((ksize - 1)* 0.5 -1)+0.8\nborderType:像素外推法，默认为None（参考官方文档BorderTypes)\n'''\n# 高斯滤波后再采用Otsu阈值\nblur = cv.GaussianBlur(img, (5, 5), 0)\nret3, th3 = cv.threshold(blur, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)\n# 绘制所有图像及其直方图\nimages = [img, 0, th1,\n          img, 0, th2,\n          blur, 0, th3]\ntitles = ['Original Noisy Image', 'Histogram', 'Global Thresholding (v=127)',\n          'Original Noisy Image', 'Histogram', \"Otsu's Thresholding\",\n          'Gaussian filtered Image', 'Histogram', \"Otsu's Thresholding\"]\nfor i in range(3):\n    plt.subplot(3, 3, i * 3 + 1), plt.imshow(images[i * 3], 'gray')\n    plt.title(titles[i * 3]), plt.xticks([]), plt.yticks([])\n    plt.subplot(3, 3, i * 3 + 2), plt.hist(images[i * 3].ravel(), 256)\n    plt.title(titles[i * 3 + 1]), plt.xticks([]), plt.yticks([])\n    plt.subplot(3, 3, i * 3 + 3), plt.imshow(images[i * 3 + 2], 'gray')\n    plt.title(titles[i * 3 + 2]), plt.xticks([]), plt.yticks([])\nplt.show()\n\n```","source":"_posts/OpenCV/图像阈值/OpenCV-图像阈值.md","raw":"---\ntitle: OpenCV-图像阈值学习\n---\n#  OpenCV-图像阈值学习\n涉及函数：\ncv.threshold\ncv.adaptiveThreshold\nret8, th2 = cv.threshold(img, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)\ncv.GaussianBlur\n学习代码如下：\n<!--more-->\n```\n\"\"\"\n目标\n在本教程中，您将学习简单阈值，自适应阈值和Otsu阈值。\n你将学习函数**cv.threshold**和**cv.adaptiveThreshold**。\n\"\"\"\nimport numpy as np\nimport cv2 as cv\nfrom matplotlib import pyplot as plt\n\n'''\n图像二值化：\n定义：图像的二值化，就是将图像上的像素点的灰度值设置为0或255，\n也就是将整个图像呈现出明显的只有黑和白的视觉效果。\n灰度值0：黑  灰度值255：白\n一幅图像包括目标物体、背景还有噪声，要想从多值的数字图像中直接提取出目标物体，\n常用的方法就是设定一个阈值T，用T将图像的数据分成两部分：\n大于T的像素群和小于T的像素群。\n这是研究灰度变换的最特殊的方法，称为图像的二值化（Binarization）。\n\nret, dst = cv.threshold( src, thresh, maxval, type[, dst] ) \n参数说明：\nsrc：原图像。\ndst：结果图像。\nthresh：当前阈值。\nmaxVal：最大阈值，一般为255.\nthresholdType:阈值类型，主要有下面几种：\nenum ThresholdTypes {\n    THRESH_BINARY     = 0,  大于阈值的部分被置为255，小于部分被置为0\n    THRESH_BINARY_INV = 1,  大于阈值部分被置为0，小于部分被置为255\n    THRESH_TRUNC      = 2,  大于阈值部分被置为threshold，小于部分保持原样\n    THRESH_TOZERO     = 3,  小于阈值部分被置为0，大于部分保持不变\n    THRESH_TOZERO_INV = 4,  大于阈值部分被置为0，小于部分保持不变 \n    THRESH_MASK       = 7,\n    THRESH_OTSU       = 8,\n    THRESH_TRIANGLE   = 16\n};\n返回值:\nret： 与参数thresh一致\ndst： 结果图像\n使用了THRESH_OTSU和THRESH_TRIANGLE两个标志时，输入图像必须为单通道。\n'''\nimg = cv.imread(r'C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg', 0)\nret, thresh1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)\nret1, thresh2 = cv.threshold(img, 127, 255, cv.THRESH_BINARY_INV)\nret2, thresh3 = cv.threshold(img, 127, 255, cv.THRESH_TRUNC)\nret3, thresh4 = cv.threshold(img, 127, 255, cv.THRESH_TOZERO)\nret4, thresh5 = cv.threshold(img, 127, 255, cv.THRESH_TOZERO_INV)\ntitles = ['Original Image', 'BINARY', 'BINARY_INV', 'TRUNC', 'TOZERO', 'TOZERO_INV']\nimages = [img, thresh1, thresh2, thresh3, thresh4, thresh5]\nfor i in range(6):\n    plt.subplot(2, 3, i + 1), plt.imshow(images[i], 'gray')\n    plt.title(titles[i])\n    plt.xticks([]), plt.yticks([])\nplt.show()\n'''\n自适应阈值\n在上一节中，我们使用一个全局值作为阈值。但这可能并非在所有情况下都很好，例如，如果图像在不同区域具有不同的光照条件。\n在这种情况下，自适应阈值阈值化可以提供帮助。在此，算法基于像素周围的小区域确定像素的阈值。\n因此，对于同一图像的不同区域，我们获得了不同的阈值，这为光照度变化的图像提供了更好的结果。\nadaptiveThreshold(src, maxValue, adaptiveMethod, thresholdType, blockSize, C, dst=None):\n除上述参数外，方法**cv.adaptiveThreshold**还包含三个输入参数：\n该**adaptiveMethod**决定阈值是如何计算的：\ncv.ADAPTIVE_THRESH_MEAN_C::阈值是邻近区域的平均值减去常数**C**。 \ncv.ADAPTIVE_THRESH_GAUSSIAN_C:阈值是邻域值的高斯加权总和减去常数**C**。\n该**BLOCKSIZE**确定附近区域的大小，**C**是从邻域像素的平均或加权总和中减去的一个常数。\n下面的代码比较了光照变化的图像的全局阈值和自适应阈值：\n'''\n\nimg = cv.medianBlur(img, 5)\nret, th1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)\nth2 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_MEAN_C,\n                           cv.THRESH_BINARY, 11, 2)\nth3 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_GAUSSIAN_C,\n                           cv.THRESH_BINARY, 11, 2)\ntitles1 = ['Original Image', 'Global Thresholding (v = 127)',\n          'Adaptive Mean Thresholding', 'Adaptive Gaussian Thresholding']\nimages = [img, th1, th2, th3]\nfor i in range(4):\n    plt.subplot(2, 2, i + 1), plt.imshow(images[i], 'gray')\n    plt.title(titles1[i])\n    plt.xticks([]), plt.yticks([])\nplt.show()\n'''\nOtsu的二值化\n在全局阈值化中，我们使用任意选择的值作为阈值。相反，Otsu的方法避免了必须选择一个值并自动确定它的情况。\n考虑仅具有两个不同图像值的图像（双峰图像），其中直方图将仅包含两个峰。一个好的阈值应该在这两个值的中间。\n类似地，Otsu的方法从图像直方图中确定最佳全局阈值。\n为此，使用了**cv.threshold**作为附加标志传递。阈值可以任意选择。然后，算法找到最佳阈值，该阈值作为第一输出返回。\n'''\n\n\n# 全局阈值\nret7, th1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)\n# Otsu阈值\nret8, th2 = cv.threshold(img, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)\n'''\n高斯滤波：\nGaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None):\n参数\nsrc:输入图像\nksize:(核的宽度,核的高度)，输入高斯核的尺寸，核的宽高都必须是正奇数。否则，将会从参数sigma中计算得到。\ndst:输出图像，尺寸与输入图像一致。\nsigmaX:高斯核在X方向上的标准差。\nsigmaY:高斯核在Y方向上的标准差。默认为None，如果sigmaY=0，则它将被设置为与sigmaX相等的值。\n如果这两者都为0,则它们的值会从ksize中计算得到。计算公式为：\nsigma = 0.3*((ksize - 1)* 0.5 -1)+0.8\nborderType:像素外推法，默认为None（参考官方文档BorderTypes)\n'''\n# 高斯滤波后再采用Otsu阈值\nblur = cv.GaussianBlur(img, (5, 5), 0)\nret3, th3 = cv.threshold(blur, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)\n# 绘制所有图像及其直方图\nimages = [img, 0, th1,\n          img, 0, th2,\n          blur, 0, th3]\ntitles = ['Original Noisy Image', 'Histogram', 'Global Thresholding (v=127)',\n          'Original Noisy Image', 'Histogram', \"Otsu's Thresholding\",\n          'Gaussian filtered Image', 'Histogram', \"Otsu's Thresholding\"]\nfor i in range(3):\n    plt.subplot(3, 3, i * 3 + 1), plt.imshow(images[i * 3], 'gray')\n    plt.title(titles[i * 3]), plt.xticks([]), plt.yticks([])\n    plt.subplot(3, 3, i * 3 + 2), plt.hist(images[i * 3].ravel(), 256)\n    plt.title(titles[i * 3 + 1]), plt.xticks([]), plt.yticks([])\n    plt.subplot(3, 3, i * 3 + 3), plt.imshow(images[i * 3 + 2], 'gray')\n    plt.title(titles[i * 3 + 2]), plt.xticks([]), plt.yticks([])\nplt.show()\n\n```","slug":"OpenCV/图像阈值/OpenCV-图像阈值","published":1,"date":"2022-05-25T10:06:34.752Z","updated":"2022-05-07T09:55:45.831Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqe001p68urfz0290dk","content":"<h1 id=\"OpenCV-图像阈值学习\"><a href=\"#OpenCV-图像阈值学习\" class=\"headerlink\" title=\"OpenCV-图像阈值学习\"></a>OpenCV-图像阈值学习</h1><p>涉及函数：<br>cv.threshold<br>cv.adaptiveThreshold<br>ret8, th2 = cv.threshold(img, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)<br>cv.GaussianBlur<br>学习代码如下：</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">目标</span><br><span class=\"line\">在本教程中，您将学习简单阈值，自适应阈值和Otsu阈值。</span><br><span class=\"line\">你将学习函数**cv.threshold**和**cv.adaptiveThreshold**。</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像二值化：</span><br><span class=\"line\">定义：图像的二值化，就是将图像上的像素点的灰度值设置为0或255，</span><br><span class=\"line\">也就是将整个图像呈现出明显的只有黑和白的视觉效果。</span><br><span class=\"line\">灰度值0：黑  灰度值255：白</span><br><span class=\"line\">一幅图像包括目标物体、背景还有噪声，要想从多值的数字图像中直接提取出目标物体，</span><br><span class=\"line\">常用的方法就是设定一个阈值T，用T将图像的数据分成两部分：</span><br><span class=\"line\">大于T的像素群和小于T的像素群。</span><br><span class=\"line\">这是研究灰度变换的最特殊的方法，称为图像的二值化（Binarization）。</span><br><span class=\"line\"></span><br><span class=\"line\">ret, dst = cv.threshold( src, thresh, maxval, type[, dst] ) </span><br><span class=\"line\">参数说明：</span><br><span class=\"line\">src：原图像。</span><br><span class=\"line\">dst：结果图像。</span><br><span class=\"line\">thresh：当前阈值。</span><br><span class=\"line\">maxVal：最大阈值，一般为255.</span><br><span class=\"line\">thresholdType:阈值类型，主要有下面几种：</span><br><span class=\"line\">enum ThresholdTypes &#123;</span><br><span class=\"line\">    THRESH_BINARY     = 0,  大于阈值的部分被置为255，小于部分被置为0</span><br><span class=\"line\">    THRESH_BINARY_INV = 1,  大于阈值部分被置为0，小于部分被置为255</span><br><span class=\"line\">    THRESH_TRUNC      = 2,  大于阈值部分被置为threshold，小于部分保持原样</span><br><span class=\"line\">    THRESH_TOZERO     = 3,  小于阈值部分被置为0，大于部分保持不变</span><br><span class=\"line\">    THRESH_TOZERO_INV = 4,  大于阈值部分被置为0，小于部分保持不变 </span><br><span class=\"line\">    THRESH_MASK       = 7,</span><br><span class=\"line\">    THRESH_OTSU       = 8,</span><br><span class=\"line\">    THRESH_TRIANGLE   = 16</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">返回值:</span><br><span class=\"line\">ret： 与参数thresh一致</span><br><span class=\"line\">dst： 结果图像</span><br><span class=\"line\">使用了THRESH_OTSU和THRESH_TRIANGLE两个标志时，输入图像必须为单通道。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg&#x27;, 0)</span><br><span class=\"line\">ret, thresh1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)</span><br><span class=\"line\">ret1, thresh2 = cv.threshold(img, 127, 255, cv.THRESH_BINARY_INV)</span><br><span class=\"line\">ret2, thresh3 = cv.threshold(img, 127, 255, cv.THRESH_TRUNC)</span><br><span class=\"line\">ret3, thresh4 = cv.threshold(img, 127, 255, cv.THRESH_TOZERO)</span><br><span class=\"line\">ret4, thresh5 = cv.threshold(img, 127, 255, cv.THRESH_TOZERO_INV)</span><br><span class=\"line\">titles = [&#x27;Original Image&#x27;, &#x27;BINARY&#x27;, &#x27;BINARY_INV&#x27;, &#x27;TRUNC&#x27;, &#x27;TOZERO&#x27;, &#x27;TOZERO_INV&#x27;]</span><br><span class=\"line\">images = [img, thresh1, thresh2, thresh3, thresh4, thresh5]</span><br><span class=\"line\">for i in range(6):</span><br><span class=\"line\">    plt.subplot(2, 3, i + 1), plt.imshow(images[i], &#x27;gray&#x27;)</span><br><span class=\"line\">    plt.title(titles[i])</span><br><span class=\"line\">    plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">自适应阈值</span><br><span class=\"line\">在上一节中，我们使用一个全局值作为阈值。但这可能并非在所有情况下都很好，例如，如果图像在不同区域具有不同的光照条件。</span><br><span class=\"line\">在这种情况下，自适应阈值阈值化可以提供帮助。在此，算法基于像素周围的小区域确定像素的阈值。</span><br><span class=\"line\">因此，对于同一图像的不同区域，我们获得了不同的阈值，这为光照度变化的图像提供了更好的结果。</span><br><span class=\"line\">adaptiveThreshold(src, maxValue, adaptiveMethod, thresholdType, blockSize, C, dst=None):</span><br><span class=\"line\">除上述参数外，方法**cv.adaptiveThreshold**还包含三个输入参数：</span><br><span class=\"line\">该**adaptiveMethod**决定阈值是如何计算的：</span><br><span class=\"line\">cv.ADAPTIVE_THRESH_MEAN_C::阈值是邻近区域的平均值减去常数**C**。 </span><br><span class=\"line\">cv.ADAPTIVE_THRESH_GAUSSIAN_C:阈值是邻域值的高斯加权总和减去常数**C**。</span><br><span class=\"line\">该**BLOCKSIZE**确定附近区域的大小，**C**是从邻域像素的平均或加权总和中减去的一个常数。</span><br><span class=\"line\">下面的代码比较了光照变化的图像的全局阈值和自适应阈值：</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.medianBlur(img, 5)</span><br><span class=\"line\">ret, th1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)</span><br><span class=\"line\">th2 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_MEAN_C,</span><br><span class=\"line\">                           cv.THRESH_BINARY, 11, 2)</span><br><span class=\"line\">th3 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_GAUSSIAN_C,</span><br><span class=\"line\">                           cv.THRESH_BINARY, 11, 2)</span><br><span class=\"line\">titles1 = [&#x27;Original Image&#x27;, &#x27;Global Thresholding (v = 127)&#x27;,</span><br><span class=\"line\">          &#x27;Adaptive Mean Thresholding&#x27;, &#x27;Adaptive Gaussian Thresholding&#x27;]</span><br><span class=\"line\">images = [img, th1, th2, th3]</span><br><span class=\"line\">for i in range(4):</span><br><span class=\"line\">    plt.subplot(2, 2, i + 1), plt.imshow(images[i], &#x27;gray&#x27;)</span><br><span class=\"line\">    plt.title(titles1[i])</span><br><span class=\"line\">    plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">Otsu的二值化</span><br><span class=\"line\">在全局阈值化中，我们使用任意选择的值作为阈值。相反，Otsu的方法避免了必须选择一个值并自动确定它的情况。</span><br><span class=\"line\">考虑仅具有两个不同图像值的图像（双峰图像），其中直方图将仅包含两个峰。一个好的阈值应该在这两个值的中间。</span><br><span class=\"line\">类似地，Otsu的方法从图像直方图中确定最佳全局阈值。</span><br><span class=\"line\">为此，使用了**cv.threshold**作为附加标志传递。阈值可以任意选择。然后，算法找到最佳阈值，该阈值作为第一输出返回。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 全局阈值</span><br><span class=\"line\">ret7, th1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)</span><br><span class=\"line\"># Otsu阈值</span><br><span class=\"line\">ret8, th2 = cv.threshold(img, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">高斯滤波：</span><br><span class=\"line\">GaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None):</span><br><span class=\"line\">参数</span><br><span class=\"line\">src:输入图像</span><br><span class=\"line\">ksize:(核的宽度,核的高度)，输入高斯核的尺寸，核的宽高都必须是正奇数。否则，将会从参数sigma中计算得到。</span><br><span class=\"line\">dst:输出图像，尺寸与输入图像一致。</span><br><span class=\"line\">sigmaX:高斯核在X方向上的标准差。</span><br><span class=\"line\">sigmaY:高斯核在Y方向上的标准差。默认为None，如果sigmaY=0，则它将被设置为与sigmaX相等的值。</span><br><span class=\"line\">如果这两者都为0,则它们的值会从ksize中计算得到。计算公式为：</span><br><span class=\"line\">sigma = 0.3*((ksize - 1)* 0.5 -1)+0.8</span><br><span class=\"line\">borderType:像素外推法，默认为None（参考官方文档BorderTypes)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 高斯滤波后再采用Otsu阈值</span><br><span class=\"line\">blur = cv.GaussianBlur(img, (5, 5), 0)</span><br><span class=\"line\">ret3, th3 = cv.threshold(blur, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)</span><br><span class=\"line\"># 绘制所有图像及其直方图</span><br><span class=\"line\">images = [img, 0, th1,</span><br><span class=\"line\">          img, 0, th2,</span><br><span class=\"line\">          blur, 0, th3]</span><br><span class=\"line\">titles = [&#x27;Original Noisy Image&#x27;, &#x27;Histogram&#x27;, &#x27;Global Thresholding (v=127)&#x27;,</span><br><span class=\"line\">          &#x27;Original Noisy Image&#x27;, &#x27;Histogram&#x27;, &quot;Otsu&#x27;s Thresholding&quot;,</span><br><span class=\"line\">          &#x27;Gaussian filtered Image&#x27;, &#x27;Histogram&#x27;, &quot;Otsu&#x27;s Thresholding&quot;]</span><br><span class=\"line\">for i in range(3):</span><br><span class=\"line\">    plt.subplot(3, 3, i * 3 + 1), plt.imshow(images[i * 3], &#x27;gray&#x27;)</span><br><span class=\"line\">    plt.title(titles[i * 3]), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">    plt.subplot(3, 3, i * 3 + 2), plt.hist(images[i * 3].ravel(), 256)</span><br><span class=\"line\">    plt.title(titles[i * 3 + 1]), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">    plt.subplot(3, 3, i * 3 + 3), plt.imshow(images[i * 3 + 2], &#x27;gray&#x27;)</span><br><span class=\"line\">    plt.title(titles[i * 3 + 2]), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"OpenCV-图像阈值学习\"><a href=\"#OpenCV-图像阈值学习\" class=\"headerlink\" title=\"OpenCV-图像阈值学习\"></a>OpenCV-图像阈值学习</h1><p>涉及函数：<br>cv.threshold<br>cv.adaptiveThreshold<br>ret8, th2 = cv.threshold(img, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)<br>cv.GaussianBlur<br>学习代码如下：</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">目标</span><br><span class=\"line\">在本教程中，您将学习简单阈值，自适应阈值和Otsu阈值。</span><br><span class=\"line\">你将学习函数**cv.threshold**和**cv.adaptiveThreshold**。</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">图像二值化：</span><br><span class=\"line\">定义：图像的二值化，就是将图像上的像素点的灰度值设置为0或255，</span><br><span class=\"line\">也就是将整个图像呈现出明显的只有黑和白的视觉效果。</span><br><span class=\"line\">灰度值0：黑  灰度值255：白</span><br><span class=\"line\">一幅图像包括目标物体、背景还有噪声，要想从多值的数字图像中直接提取出目标物体，</span><br><span class=\"line\">常用的方法就是设定一个阈值T，用T将图像的数据分成两部分：</span><br><span class=\"line\">大于T的像素群和小于T的像素群。</span><br><span class=\"line\">这是研究灰度变换的最特殊的方法，称为图像的二值化（Binarization）。</span><br><span class=\"line\"></span><br><span class=\"line\">ret, dst = cv.threshold( src, thresh, maxval, type[, dst] ) </span><br><span class=\"line\">参数说明：</span><br><span class=\"line\">src：原图像。</span><br><span class=\"line\">dst：结果图像。</span><br><span class=\"line\">thresh：当前阈值。</span><br><span class=\"line\">maxVal：最大阈值，一般为255.</span><br><span class=\"line\">thresholdType:阈值类型，主要有下面几种：</span><br><span class=\"line\">enum ThresholdTypes &#123;</span><br><span class=\"line\">    THRESH_BINARY     = 0,  大于阈值的部分被置为255，小于部分被置为0</span><br><span class=\"line\">    THRESH_BINARY_INV = 1,  大于阈值部分被置为0，小于部分被置为255</span><br><span class=\"line\">    THRESH_TRUNC      = 2,  大于阈值部分被置为threshold，小于部分保持原样</span><br><span class=\"line\">    THRESH_TOZERO     = 3,  小于阈值部分被置为0，大于部分保持不变</span><br><span class=\"line\">    THRESH_TOZERO_INV = 4,  大于阈值部分被置为0，小于部分保持不变 </span><br><span class=\"line\">    THRESH_MASK       = 7,</span><br><span class=\"line\">    THRESH_OTSU       = 8,</span><br><span class=\"line\">    THRESH_TRIANGLE   = 16</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">返回值:</span><br><span class=\"line\">ret： 与参数thresh一致</span><br><span class=\"line\">dst： 结果图像</span><br><span class=\"line\">使用了THRESH_OTSU和THRESH_TRIANGLE两个标志时，输入图像必须为单通道。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\Admin\\Desktop\\opencv\\jumao-002.jpg&#x27;, 0)</span><br><span class=\"line\">ret, thresh1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)</span><br><span class=\"line\">ret1, thresh2 = cv.threshold(img, 127, 255, cv.THRESH_BINARY_INV)</span><br><span class=\"line\">ret2, thresh3 = cv.threshold(img, 127, 255, cv.THRESH_TRUNC)</span><br><span class=\"line\">ret3, thresh4 = cv.threshold(img, 127, 255, cv.THRESH_TOZERO)</span><br><span class=\"line\">ret4, thresh5 = cv.threshold(img, 127, 255, cv.THRESH_TOZERO_INV)</span><br><span class=\"line\">titles = [&#x27;Original Image&#x27;, &#x27;BINARY&#x27;, &#x27;BINARY_INV&#x27;, &#x27;TRUNC&#x27;, &#x27;TOZERO&#x27;, &#x27;TOZERO_INV&#x27;]</span><br><span class=\"line\">images = [img, thresh1, thresh2, thresh3, thresh4, thresh5]</span><br><span class=\"line\">for i in range(6):</span><br><span class=\"line\">    plt.subplot(2, 3, i + 1), plt.imshow(images[i], &#x27;gray&#x27;)</span><br><span class=\"line\">    plt.title(titles[i])</span><br><span class=\"line\">    plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">自适应阈值</span><br><span class=\"line\">在上一节中，我们使用一个全局值作为阈值。但这可能并非在所有情况下都很好，例如，如果图像在不同区域具有不同的光照条件。</span><br><span class=\"line\">在这种情况下，自适应阈值阈值化可以提供帮助。在此，算法基于像素周围的小区域确定像素的阈值。</span><br><span class=\"line\">因此，对于同一图像的不同区域，我们获得了不同的阈值，这为光照度变化的图像提供了更好的结果。</span><br><span class=\"line\">adaptiveThreshold(src, maxValue, adaptiveMethod, thresholdType, blockSize, C, dst=None):</span><br><span class=\"line\">除上述参数外，方法**cv.adaptiveThreshold**还包含三个输入参数：</span><br><span class=\"line\">该**adaptiveMethod**决定阈值是如何计算的：</span><br><span class=\"line\">cv.ADAPTIVE_THRESH_MEAN_C::阈值是邻近区域的平均值减去常数**C**。 </span><br><span class=\"line\">cv.ADAPTIVE_THRESH_GAUSSIAN_C:阈值是邻域值的高斯加权总和减去常数**C**。</span><br><span class=\"line\">该**BLOCKSIZE**确定附近区域的大小，**C**是从邻域像素的平均或加权总和中减去的一个常数。</span><br><span class=\"line\">下面的代码比较了光照变化的图像的全局阈值和自适应阈值：</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.medianBlur(img, 5)</span><br><span class=\"line\">ret, th1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)</span><br><span class=\"line\">th2 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_MEAN_C,</span><br><span class=\"line\">                           cv.THRESH_BINARY, 11, 2)</span><br><span class=\"line\">th3 = cv.adaptiveThreshold(img, 255, cv.ADAPTIVE_THRESH_GAUSSIAN_C,</span><br><span class=\"line\">                           cv.THRESH_BINARY, 11, 2)</span><br><span class=\"line\">titles1 = [&#x27;Original Image&#x27;, &#x27;Global Thresholding (v = 127)&#x27;,</span><br><span class=\"line\">          &#x27;Adaptive Mean Thresholding&#x27;, &#x27;Adaptive Gaussian Thresholding&#x27;]</span><br><span class=\"line\">images = [img, th1, th2, th3]</span><br><span class=\"line\">for i in range(4):</span><br><span class=\"line\">    plt.subplot(2, 2, i + 1), plt.imshow(images[i], &#x27;gray&#x27;)</span><br><span class=\"line\">    plt.title(titles1[i])</span><br><span class=\"line\">    plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">Otsu的二值化</span><br><span class=\"line\">在全局阈值化中，我们使用任意选择的值作为阈值。相反，Otsu的方法避免了必须选择一个值并自动确定它的情况。</span><br><span class=\"line\">考虑仅具有两个不同图像值的图像（双峰图像），其中直方图将仅包含两个峰。一个好的阈值应该在这两个值的中间。</span><br><span class=\"line\">类似地，Otsu的方法从图像直方图中确定最佳全局阈值。</span><br><span class=\"line\">为此，使用了**cv.threshold**作为附加标志传递。阈值可以任意选择。然后，算法找到最佳阈值，该阈值作为第一输出返回。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 全局阈值</span><br><span class=\"line\">ret7, th1 = cv.threshold(img, 127, 255, cv.THRESH_BINARY)</span><br><span class=\"line\"># Otsu阈值</span><br><span class=\"line\">ret8, th2 = cv.threshold(img, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">高斯滤波：</span><br><span class=\"line\">GaussianBlur(src, ksize, sigmaX, dst=None, sigmaY=None, borderType=None):</span><br><span class=\"line\">参数</span><br><span class=\"line\">src:输入图像</span><br><span class=\"line\">ksize:(核的宽度,核的高度)，输入高斯核的尺寸，核的宽高都必须是正奇数。否则，将会从参数sigma中计算得到。</span><br><span class=\"line\">dst:输出图像，尺寸与输入图像一致。</span><br><span class=\"line\">sigmaX:高斯核在X方向上的标准差。</span><br><span class=\"line\">sigmaY:高斯核在Y方向上的标准差。默认为None，如果sigmaY=0，则它将被设置为与sigmaX相等的值。</span><br><span class=\"line\">如果这两者都为0,则它们的值会从ksize中计算得到。计算公式为：</span><br><span class=\"line\">sigma = 0.3*((ksize - 1)* 0.5 -1)+0.8</span><br><span class=\"line\">borderType:像素外推法，默认为None（参考官方文档BorderTypes)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># 高斯滤波后再采用Otsu阈值</span><br><span class=\"line\">blur = cv.GaussianBlur(img, (5, 5), 0)</span><br><span class=\"line\">ret3, th3 = cv.threshold(blur, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)</span><br><span class=\"line\"># 绘制所有图像及其直方图</span><br><span class=\"line\">images = [img, 0, th1,</span><br><span class=\"line\">          img, 0, th2,</span><br><span class=\"line\">          blur, 0, th3]</span><br><span class=\"line\">titles = [&#x27;Original Noisy Image&#x27;, &#x27;Histogram&#x27;, &#x27;Global Thresholding (v=127)&#x27;,</span><br><span class=\"line\">          &#x27;Original Noisy Image&#x27;, &#x27;Histogram&#x27;, &quot;Otsu&#x27;s Thresholding&quot;,</span><br><span class=\"line\">          &#x27;Gaussian filtered Image&#x27;, &#x27;Histogram&#x27;, &quot;Otsu&#x27;s Thresholding&quot;]</span><br><span class=\"line\">for i in range(3):</span><br><span class=\"line\">    plt.subplot(3, 3, i * 3 + 1), plt.imshow(images[i * 3], &#x27;gray&#x27;)</span><br><span class=\"line\">    plt.title(titles[i * 3]), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">    plt.subplot(3, 3, i * 3 + 2), plt.hist(images[i * 3].ravel(), 256)</span><br><span class=\"line\">    plt.title(titles[i * 3 + 1]), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">    plt.subplot(3, 3, i * 3 + 3), plt.imshow(images[i * 3 + 2], &#x27;gray&#x27;)</span><br><span class=\"line\">    plt.title(titles[i * 3 + 2]), plt.xticks([]), plt.yticks([])</span><br><span class=\"line\">plt.show()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV解析视频流","_content":"代码如下:\n<!--more-->\n```\nimport cv2\n\nurl = 'rtsp://admin:admin@192.168.43.229:8554/live'\ncap = cv2.VideoCapture(url)\n\nwhile (cap.isOpened()):\n    ret, frame = cap.read()\n    cv2.imshow('frame', frame)\n    if cv2.waitKey(1) & 0xFF == ord('q'):\n        break\ncap.release()\ncv2.destroyAllWindows()\n\n```","source":"_posts/OpenCV/解析rtsp视频流/OpenCV解析IP摄像头视频流.md","raw":"---\ntitle: OpenCV解析视频流\n---\n代码如下:\n<!--more-->\n```\nimport cv2\n\nurl = 'rtsp://admin:admin@192.168.43.229:8554/live'\ncap = cv2.VideoCapture(url)\n\nwhile (cap.isOpened()):\n    ret, frame = cap.read()\n    cv2.imshow('frame', frame)\n    if cv2.waitKey(1) & 0xFF == ord('q'):\n        break\ncap.release()\ncv2.destroyAllWindows()\n\n```","slug":"OpenCV/解析rtsp视频流/OpenCV解析IP摄像头视频流","published":1,"date":"2022-06-20T09:31:39.530Z","updated":"2022-06-21T07:24:04.292Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqf001q68urgvioda2k","content":"<p>代码如下:</p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2</span><br><span class=\"line\"></span><br><span class=\"line\">url = &#x27;rtsp://admin:admin@192.168.43.229:8554/live&#x27;</span><br><span class=\"line\">cap = cv2.VideoCapture(url)</span><br><span class=\"line\"></span><br><span class=\"line\">while (cap.isOpened()):</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    cv2.imshow(&#x27;frame&#x27;, frame)</span><br><span class=\"line\">    if cv2.waitKey(1) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">        break</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>代码如下:</p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import cv2</span><br><span class=\"line\"></span><br><span class=\"line\">url = &#x27;rtsp://admin:admin@192.168.43.229:8554/live&#x27;</span><br><span class=\"line\">cap = cv2.VideoCapture(url)</span><br><span class=\"line\"></span><br><span class=\"line\">while (cap.isOpened()):</span><br><span class=\"line\">    ret, frame = cap.read()</span><br><span class=\"line\">    cv2.imshow(&#x27;frame&#x27;, frame)</span><br><span class=\"line\">    if cv2.waitKey(1) &amp; 0xFF == ord(&#x27;q&#x27;):</span><br><span class=\"line\">        break</span><br><span class=\"line\">cap.release()</span><br><span class=\"line\">cv2.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"OpenCV-轮廓","_content":"# 学习代码：\n<!--more-->\n```\n\"\"\"\n目标\n了解轮廓是什么。\n学习查找轮廓，绘制轮廓等。\n你将看到以下功能：cv.findContours()，cv.drawContours()\n什么是轮廓?\n轮廓可以简单地解释为连接具有相同颜色或强度的所有连续点（沿边界）的曲线。轮廓是用于形状分析以及对象检测和识别的有用工具。\n\n为了获得更高的准确性，请使用二进制图像。因此，在找到轮廓之前，请应用阈值或canny边缘检测。\n从OpenCV 3.2开始，findContours()不再修改源图像。\n在OpenCV中，找到轮廓就像从黑色背景中找到白色物体。因此请记住，要找到的对象应该是白色，背景应该是黑色。\n\"\"\"\n\nimport numpy as np\nimport cv2 as cv\n\n# 1.读入图片\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\test_picture\\test.jpg')\nimg_gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\n# Otsu二值化处理\nret, thresh = cv.threshold(img_gray, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)\n\n# 2.寻找轮廓\n'''\nfindContours(image, mode, method, contours=None, hierarchy=None, offset=None): \n参数1：源图像\n参数2：轮廓的检索方式\n参数3：一般用 cv.CHAIN_APPROX_SIMPLE，就表示用尽可能少的像素点表示轮廓\ncontours：图像轮廓坐标，是一个链表\nhierarchy：[Next, Previous, First Child, Parent]\n'''\ncontours, hierarchy = cv.findContours(thresh, cv.RETR_LIST, cv.CHAIN_APPROX_SIMPLE)\nprint(len(contours), hierarchy)\n\n# 3.绘制轮廓\n'''\ndrawContours(image, contours, contourIdx, color, thickness=None, lineType=None, hierarchy=None, maxLevel=None, offset=None):\n第一个参数是指明在哪幅图像上绘制轮廓；image为三通道才能显示轮廓\n第二个参数是轮廓本身，在Python中是一个list;\n第三个参数指定绘制轮廓list中的哪条轮廓，如果是-1，则绘制其中的所有轮廓。\n后面的参数很简单。其中thickness表明轮廓线的宽度，如果是-1（cv2.FILLED），则为填充模式。\n'''\ncv.drawContours(img, contours, -1, (0, 0, 255), 2)\n\ncv.imshow('result', img)\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n```\n\n","source":"_posts/OpenCV/轮廓/OpenCV-轮廓.md","raw":"---\ntitle: OpenCV-轮廓\n---\n# 学习代码：\n<!--more-->\n```\n\"\"\"\n目标\n了解轮廓是什么。\n学习查找轮廓，绘制轮廓等。\n你将看到以下功能：cv.findContours()，cv.drawContours()\n什么是轮廓?\n轮廓可以简单地解释为连接具有相同颜色或强度的所有连续点（沿边界）的曲线。轮廓是用于形状分析以及对象检测和识别的有用工具。\n\n为了获得更高的准确性，请使用二进制图像。因此，在找到轮廓之前，请应用阈值或canny边缘检测。\n从OpenCV 3.2开始，findContours()不再修改源图像。\n在OpenCV中，找到轮廓就像从黑色背景中找到白色物体。因此请记住，要找到的对象应该是白色，背景应该是黑色。\n\"\"\"\n\nimport numpy as np\nimport cv2 as cv\n\n# 1.读入图片\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\test_picture\\test.jpg')\nimg_gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)\n# Otsu二值化处理\nret, thresh = cv.threshold(img_gray, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)\n\n# 2.寻找轮廓\n'''\nfindContours(image, mode, method, contours=None, hierarchy=None, offset=None): \n参数1：源图像\n参数2：轮廓的检索方式\n参数3：一般用 cv.CHAIN_APPROX_SIMPLE，就表示用尽可能少的像素点表示轮廓\ncontours：图像轮廓坐标，是一个链表\nhierarchy：[Next, Previous, First Child, Parent]\n'''\ncontours, hierarchy = cv.findContours(thresh, cv.RETR_LIST, cv.CHAIN_APPROX_SIMPLE)\nprint(len(contours), hierarchy)\n\n# 3.绘制轮廓\n'''\ndrawContours(image, contours, contourIdx, color, thickness=None, lineType=None, hierarchy=None, maxLevel=None, offset=None):\n第一个参数是指明在哪幅图像上绘制轮廓；image为三通道才能显示轮廓\n第二个参数是轮廓本身，在Python中是一个list;\n第三个参数指定绘制轮廓list中的哪条轮廓，如果是-1，则绘制其中的所有轮廓。\n后面的参数很简单。其中thickness表明轮廓线的宽度，如果是-1（cv2.FILLED），则为填充模式。\n'''\ncv.drawContours(img, contours, -1, (0, 0, 255), 2)\n\ncv.imshow('result', img)\ncv.waitKey(0)\ncv.destroyAllWindows()\n\n```\n\n","slug":"OpenCV/轮廓/OpenCV-轮廓","published":1,"date":"2022-05-27T08:13:51.173Z","updated":"2022-05-27T08:21:56.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqg001r68ur2n2z5ozh","content":"<h1 id=\"学习代码：\"><a href=\"#学习代码：\" class=\"headerlink\" title=\"学习代码：\"></a>学习代码：</h1><span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">目标</span><br><span class=\"line\">了解轮廓是什么。</span><br><span class=\"line\">学习查找轮廓，绘制轮廓等。</span><br><span class=\"line\">你将看到以下功能：cv.findContours()，cv.drawContours()</span><br><span class=\"line\">什么是轮廓?</span><br><span class=\"line\">轮廓可以简单地解释为连接具有相同颜色或强度的所有连续点（沿边界）的曲线。轮廓是用于形状分析以及对象检测和识别的有用工具。</span><br><span class=\"line\"></span><br><span class=\"line\">为了获得更高的准确性，请使用二进制图像。因此，在找到轮廓之前，请应用阈值或canny边缘检测。</span><br><span class=\"line\">从OpenCV 3.2开始，findContours()不再修改源图像。</span><br><span class=\"line\">在OpenCV中，找到轮廓就像从黑色背景中找到白色物体。因此请记住，要找到的对象应该是白色，背景应该是黑色。</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"># 1.读入图片</span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\test_picture\\test.jpg&#x27;)</span><br><span class=\"line\">img_gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class=\"line\"># Otsu二值化处理</span><br><span class=\"line\">ret, thresh = cv.threshold(img_gray, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.寻找轮廓</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">findContours(image, mode, method, contours=None, hierarchy=None, offset=None): </span><br><span class=\"line\">参数1：源图像</span><br><span class=\"line\">参数2：轮廓的检索方式</span><br><span class=\"line\">参数3：一般用 cv.CHAIN_APPROX_SIMPLE，就表示用尽可能少的像素点表示轮廓</span><br><span class=\"line\">contours：图像轮廓坐标，是一个链表</span><br><span class=\"line\">hierarchy：[Next, Previous, First Child, Parent]</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">contours, hierarchy = cv.findContours(thresh, cv.RETR_LIST, cv.CHAIN_APPROX_SIMPLE)</span><br><span class=\"line\">print(len(contours), hierarchy)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.绘制轮廓</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">drawContours(image, contours, contourIdx, color, thickness=None, lineType=None, hierarchy=None, maxLevel=None, offset=None):</span><br><span class=\"line\">第一个参数是指明在哪幅图像上绘制轮廓；image为三通道才能显示轮廓</span><br><span class=\"line\">第二个参数是轮廓本身，在Python中是一个list;</span><br><span class=\"line\">第三个参数指定绘制轮廓list中的哪条轮廓，如果是-1，则绘制其中的所有轮廓。</span><br><span class=\"line\">后面的参数很简单。其中thickness表明轮廓线的宽度，如果是-1（cv2.FILLED），则为填充模式。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.drawContours(img, contours, -1, (0, 0, 255), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">cv.imshow(&#x27;result&#x27;, img)</span><br><span class=\"line\">cv.waitKey(0)</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h1 id=\"学习代码：\"><a href=\"#学习代码：\" class=\"headerlink\" title=\"学习代码：\"></a>学习代码：</h1>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\">目标</span><br><span class=\"line\">了解轮廓是什么。</span><br><span class=\"line\">学习查找轮廓，绘制轮廓等。</span><br><span class=\"line\">你将看到以下功能：cv.findContours()，cv.drawContours()</span><br><span class=\"line\">什么是轮廓?</span><br><span class=\"line\">轮廓可以简单地解释为连接具有相同颜色或强度的所有连续点（沿边界）的曲线。轮廓是用于形状分析以及对象检测和识别的有用工具。</span><br><span class=\"line\"></span><br><span class=\"line\">为了获得更高的准确性，请使用二进制图像。因此，在找到轮廓之前，请应用阈值或canny边缘检测。</span><br><span class=\"line\">从OpenCV 3.2开始，findContours()不再修改源图像。</span><br><span class=\"line\">在OpenCV中，找到轮廓就像从黑色背景中找到白色物体。因此请记住，要找到的对象应该是白色，背景应该是黑色。</span><br><span class=\"line\">&quot;&quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\"># 1.读入图片</span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\test_picture\\test.jpg&#x27;)</span><br><span class=\"line\">img_gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)</span><br><span class=\"line\"># Otsu二值化处理</span><br><span class=\"line\">ret, thresh = cv.threshold(img_gray, 0, 255, cv.THRESH_BINARY + cv.THRESH_OTSU)</span><br><span class=\"line\"></span><br><span class=\"line\"># 2.寻找轮廓</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">findContours(image, mode, method, contours=None, hierarchy=None, offset=None): </span><br><span class=\"line\">参数1：源图像</span><br><span class=\"line\">参数2：轮廓的检索方式</span><br><span class=\"line\">参数3：一般用 cv.CHAIN_APPROX_SIMPLE，就表示用尽可能少的像素点表示轮廓</span><br><span class=\"line\">contours：图像轮廓坐标，是一个链表</span><br><span class=\"line\">hierarchy：[Next, Previous, First Child, Parent]</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">contours, hierarchy = cv.findContours(thresh, cv.RETR_LIST, cv.CHAIN_APPROX_SIMPLE)</span><br><span class=\"line\">print(len(contours), hierarchy)</span><br><span class=\"line\"></span><br><span class=\"line\"># 3.绘制轮廓</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">drawContours(image, contours, contourIdx, color, thickness=None, lineType=None, hierarchy=None, maxLevel=None, offset=None):</span><br><span class=\"line\">第一个参数是指明在哪幅图像上绘制轮廓；image为三通道才能显示轮廓</span><br><span class=\"line\">第二个参数是轮廓本身，在Python中是一个list;</span><br><span class=\"line\">第三个参数指定绘制轮廓list中的哪条轮廓，如果是-1，则绘制其中的所有轮廓。</span><br><span class=\"line\">后面的参数很简单。其中thickness表明轮廓线的宽度，如果是-1（cv2.FILLED），则为填充模式。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.drawContours(img, contours, -1, (0, 0, 255), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">cv.imshow(&#x27;result&#x27;, img)</span><br><span class=\"line\">cv.waitKey(0)</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"轮廓属性","_content":"# 轮廓属性学习\n<!--more-->\n```\nimport numpy as np\nimport cv2 as cv\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\test_picture\\maomao.jpg', 0)\nret, thresh = cv.threshold(img, 127, 255, 0)\ncontours, hierarchy = cv.findContours(thresh, 1, 2)\ncnt = contours[0]\n\n# 长宽比（高度与宽度的比值）\nx, y, w, h = cv.boundingRect(cnt)\naspect_ratio = float(w) / h\n# 范围(范围是轮廓区域与边界矩形区域的比值)\narea = cv.contourArea(cnt)\nrect_area = w * h\nextent = float(area) / rect_area\n# 坚实度(坚实度是等高线面积与其凸包面积之比)\nhull = cv.convexHull(cnt)\nhull_area = cv.contourArea(hull)\nsolidity = float(area) / hull_area\n# 等效直径(等效直径是面积与轮廓面积相同的圆的直径)\narea = cv.contourArea(cnt)\nequi_diameter = np.sqrt(4 * area / np.pi)\n#  取向(取向是物体指向的角度。以下方法还给出了主轴和副轴的长度)\n(x1, y1), (MA, ma), angle = cv.fitEllipse(cnt)\n# 掩码和像素点(在某些情况下，我们可能需要构成该对象的所有点)\nmask = np.zeros(img.shape, np.uint8)\ncv.drawContours(mask, [cnt], 0, 255, -1)\n# pixelpoints = np.transpose(np.nonzero(mask))      #numpy\npixelpoints = cv.findNonZero(mask)  # opencv\n# 最大值，最小值和它们的位置\nmin_val, max_val, min_loc, max_loc = cv.minMaxLoc(img, mask=mask)\n# 平均颜色或平均强度(在这里，我们可以找到对象的平均颜色。或者可以是灰度模式下物体的平均强度。我们再次使用相同的掩码进行此操作)\nmean_val = cv.mean(img, mask=mask)\n# 极端点(极点是指对象的最顶部，最底部，最右侧和最左侧的点)\nleftmost = tuple(cnt[cnt[:, :, 0].argmin()][0])\nrightmost = tuple(cnt[cnt[:, :, 0].argmax()][0])\ntopmost = tuple(cnt[cnt[:, :, 1].argmin()][0])\nbottommost = tuple(cnt[cnt[:, :, 1].argmax()][0])\n\n```","source":"_posts/OpenCV/轮廓/轮廓属性.md","raw":"---\ntitle: 轮廓属性\n---\n# 轮廓属性学习\n<!--more-->\n```\nimport numpy as np\nimport cv2 as cv\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\test_picture\\maomao.jpg', 0)\nret, thresh = cv.threshold(img, 127, 255, 0)\ncontours, hierarchy = cv.findContours(thresh, 1, 2)\ncnt = contours[0]\n\n# 长宽比（高度与宽度的比值）\nx, y, w, h = cv.boundingRect(cnt)\naspect_ratio = float(w) / h\n# 范围(范围是轮廓区域与边界矩形区域的比值)\narea = cv.contourArea(cnt)\nrect_area = w * h\nextent = float(area) / rect_area\n# 坚实度(坚实度是等高线面积与其凸包面积之比)\nhull = cv.convexHull(cnt)\nhull_area = cv.contourArea(hull)\nsolidity = float(area) / hull_area\n# 等效直径(等效直径是面积与轮廓面积相同的圆的直径)\narea = cv.contourArea(cnt)\nequi_diameter = np.sqrt(4 * area / np.pi)\n#  取向(取向是物体指向的角度。以下方法还给出了主轴和副轴的长度)\n(x1, y1), (MA, ma), angle = cv.fitEllipse(cnt)\n# 掩码和像素点(在某些情况下，我们可能需要构成该对象的所有点)\nmask = np.zeros(img.shape, np.uint8)\ncv.drawContours(mask, [cnt], 0, 255, -1)\n# pixelpoints = np.transpose(np.nonzero(mask))      #numpy\npixelpoints = cv.findNonZero(mask)  # opencv\n# 最大值，最小值和它们的位置\nmin_val, max_val, min_loc, max_loc = cv.minMaxLoc(img, mask=mask)\n# 平均颜色或平均强度(在这里，我们可以找到对象的平均颜色。或者可以是灰度模式下物体的平均强度。我们再次使用相同的掩码进行此操作)\nmean_val = cv.mean(img, mask=mask)\n# 极端点(极点是指对象的最顶部，最底部，最右侧和最左侧的点)\nleftmost = tuple(cnt[cnt[:, :, 0].argmin()][0])\nrightmost = tuple(cnt[cnt[:, :, 0].argmax()][0])\ntopmost = tuple(cnt[cnt[:, :, 1].argmin()][0])\nbottommost = tuple(cnt[cnt[:, :, 1].argmax()][0])\n\n```","slug":"OpenCV/轮廓/轮廓属性","published":1,"date":"2022-06-13T07:00:43.677Z","updated":"2022-06-13T07:02:40.878Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqh001s68ur8qr9c5m6","content":"<h1 id=\"轮廓属性学习\"><a href=\"#轮廓属性学习\" class=\"headerlink\" title=\"轮廓属性学习\"></a>轮廓属性学习</h1><span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\test_picture\\maomao.jpg&#x27;, 0)</span><br><span class=\"line\">ret, thresh = cv.threshold(img, 127, 255, 0)</span><br><span class=\"line\">contours, hierarchy = cv.findContours(thresh, 1, 2)</span><br><span class=\"line\">cnt = contours[0]</span><br><span class=\"line\"></span><br><span class=\"line\"># 长宽比（高度与宽度的比值）</span><br><span class=\"line\">x, y, w, h = cv.boundingRect(cnt)</span><br><span class=\"line\">aspect_ratio = float(w) / h</span><br><span class=\"line\"># 范围(范围是轮廓区域与边界矩形区域的比值)</span><br><span class=\"line\">area = cv.contourArea(cnt)</span><br><span class=\"line\">rect_area = w * h</span><br><span class=\"line\">extent = float(area) / rect_area</span><br><span class=\"line\"># 坚实度(坚实度是等高线面积与其凸包面积之比)</span><br><span class=\"line\">hull = cv.convexHull(cnt)</span><br><span class=\"line\">hull_area = cv.contourArea(hull)</span><br><span class=\"line\">solidity = float(area) / hull_area</span><br><span class=\"line\"># 等效直径(等效直径是面积与轮廓面积相同的圆的直径)</span><br><span class=\"line\">area = cv.contourArea(cnt)</span><br><span class=\"line\">equi_diameter = np.sqrt(4 * area / np.pi)</span><br><span class=\"line\">#  取向(取向是物体指向的角度。以下方法还给出了主轴和副轴的长度)</span><br><span class=\"line\">(x1, y1), (MA, ma), angle = cv.fitEllipse(cnt)</span><br><span class=\"line\"># 掩码和像素点(在某些情况下，我们可能需要构成该对象的所有点)</span><br><span class=\"line\">mask = np.zeros(img.shape, np.uint8)</span><br><span class=\"line\">cv.drawContours(mask, [cnt], 0, 255, -1)</span><br><span class=\"line\"># pixelpoints = np.transpose(np.nonzero(mask))      #numpy</span><br><span class=\"line\">pixelpoints = cv.findNonZero(mask)  # opencv</span><br><span class=\"line\"># 最大值，最小值和它们的位置</span><br><span class=\"line\">min_val, max_val, min_loc, max_loc = cv.minMaxLoc(img, mask=mask)</span><br><span class=\"line\"># 平均颜色或平均强度(在这里，我们可以找到对象的平均颜色。或者可以是灰度模式下物体的平均强度。我们再次使用相同的掩码进行此操作)</span><br><span class=\"line\">mean_val = cv.mean(img, mask=mask)</span><br><span class=\"line\"># 极端点(极点是指对象的最顶部，最底部，最右侧和最左侧的点)</span><br><span class=\"line\">leftmost = tuple(cnt[cnt[:, :, 0].argmin()][0])</span><br><span class=\"line\">rightmost = tuple(cnt[cnt[:, :, 0].argmax()][0])</span><br><span class=\"line\">topmost = tuple(cnt[cnt[:, :, 1].argmin()][0])</span><br><span class=\"line\">bottommost = tuple(cnt[cnt[:, :, 1].argmax()][0])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"轮廓属性学习\"><a href=\"#轮廓属性学习\" class=\"headerlink\" title=\"轮廓属性学习\"></a>轮廓属性学习</h1>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\test_picture\\maomao.jpg&#x27;, 0)</span><br><span class=\"line\">ret, thresh = cv.threshold(img, 127, 255, 0)</span><br><span class=\"line\">contours, hierarchy = cv.findContours(thresh, 1, 2)</span><br><span class=\"line\">cnt = contours[0]</span><br><span class=\"line\"></span><br><span class=\"line\"># 长宽比（高度与宽度的比值）</span><br><span class=\"line\">x, y, w, h = cv.boundingRect(cnt)</span><br><span class=\"line\">aspect_ratio = float(w) / h</span><br><span class=\"line\"># 范围(范围是轮廓区域与边界矩形区域的比值)</span><br><span class=\"line\">area = cv.contourArea(cnt)</span><br><span class=\"line\">rect_area = w * h</span><br><span class=\"line\">extent = float(area) / rect_area</span><br><span class=\"line\"># 坚实度(坚实度是等高线面积与其凸包面积之比)</span><br><span class=\"line\">hull = cv.convexHull(cnt)</span><br><span class=\"line\">hull_area = cv.contourArea(hull)</span><br><span class=\"line\">solidity = float(area) / hull_area</span><br><span class=\"line\"># 等效直径(等效直径是面积与轮廓面积相同的圆的直径)</span><br><span class=\"line\">area = cv.contourArea(cnt)</span><br><span class=\"line\">equi_diameter = np.sqrt(4 * area / np.pi)</span><br><span class=\"line\">#  取向(取向是物体指向的角度。以下方法还给出了主轴和副轴的长度)</span><br><span class=\"line\">(x1, y1), (MA, ma), angle = cv.fitEllipse(cnt)</span><br><span class=\"line\"># 掩码和像素点(在某些情况下，我们可能需要构成该对象的所有点)</span><br><span class=\"line\">mask = np.zeros(img.shape, np.uint8)</span><br><span class=\"line\">cv.drawContours(mask, [cnt], 0, 255, -1)</span><br><span class=\"line\"># pixelpoints = np.transpose(np.nonzero(mask))      #numpy</span><br><span class=\"line\">pixelpoints = cv.findNonZero(mask)  # opencv</span><br><span class=\"line\"># 最大值，最小值和它们的位置</span><br><span class=\"line\">min_val, max_val, min_loc, max_loc = cv.minMaxLoc(img, mask=mask)</span><br><span class=\"line\"># 平均颜色或平均强度(在这里，我们可以找到对象的平均颜色。或者可以是灰度模式下物体的平均强度。我们再次使用相同的掩码进行此操作)</span><br><span class=\"line\">mean_val = cv.mean(img, mask=mask)</span><br><span class=\"line\"># 极端点(极点是指对象的最顶部，最底部，最右侧和最左侧的点)</span><br><span class=\"line\">leftmost = tuple(cnt[cnt[:, :, 0].argmin()][0])</span><br><span class=\"line\">rightmost = tuple(cnt[cnt[:, :, 0].argmax()][0])</span><br><span class=\"line\">topmost = tuple(cnt[cnt[:, :, 1].argmin()][0])</span><br><span class=\"line\">bottommost = tuple(cnt[cnt[:, :, 1].argmax()][0])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"轮廓特征学习","_content":"# 轮廓特征学习\n<!--more-->\n```\nimport numpy as np\nimport cv2 as cv\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\test_picture\\maomao.jpg', 0)\nret, thresh = cv.threshold(img, 127, 255, 0)\n'''\ndef findContours(image, mode, method, contours=None, hierarchy=None, offset=None):\n@param mode Contour retrieval mode, see #RetrievalModes     轮廓检索模式\n@param method Contour approximation method, see #ContourApproximationModes     轮廓近似法\nreturn： \n        contours：图像轮廓坐标，是一个链表, 多个轮廓的坐标值\n        hierarchy：[Next, Previous, First Child, Parent]\n            Next：与当前轮廓处于同一层级的下一条轮廓    \n            Previous：与当前轮廓处于同一层级的上一条轮廓    \n            First Child：当前轮廓的第一条子轮廓\n            Parent：当前轮廓的父轮廓\n'''\ncontours, hierarchy = cv.findContours(thresh, 1, 2)\n# print(contours)\n# print('---------------------------')\n# print(hierarchy)\ncnt = contours[0]\n# cnt1 = contours[1]\n# print(cnt)\n# print(cnt1)\n# print('============================')\n'''\ndef moments(array, binaryImage=None):\n@param array Raster image (single-channel, 8-bit or floating-point 2D array) or\n       an array (\\f$1 \\times N\\f$ or \\f$N \\times 1\\f$ ) of 2D points (Point or Point2f ).\n@param binaryImage If it is true, all non-zero image pixels are treated as 1's. \n       The parameter isused for images only.\nreturn: 返回质心坐标\n'''\nM = cv.moments(cnt)\nprint(M)\n# 质心\ncx = int(M['m10'] / M['m00'])\ncy = int(M['m01'] / M['m00'])\n# print(cx, cy)\n# 轮廓面积\narea = cv.contourArea(cnt)\n# print(area)\n# 轮廓周长\n# 也称为弧长。可以使用**cv.arcLength**()函数找到它。第二个参数指定形状是闭合轮廓(True)还是曲线。\nperimeter = cv.arcLength(cnt, True)\n# print(perimeter)\n# 轮廓近似\n# 根据我们指定的精度，它可以将轮廓形状近似为顶点数量较少的其他形状。它是Douglas-Peucker算法的实现。\nepsilon = 0.1 * cv.arcLength(cnt, True)\napprox = cv.approxPolyDP(cnt, epsilon, True)\n# 轮廓凸包\n'''\ndef convexHull(points, hull=None, clockwise=None, returnPoints=None):\n参数详细信息：\n@param  points: 点**是我们传递到的轮廓。 \n@param  hull: **凸包**是输出，通常我们忽略它。 \n@param  clockwise: **顺时针方向：方向标记。如果为True，则输出凸包为顺时针方向。否则，其方向为逆时针方向。\n@param  returnPoints：默认情况下为True。然后返回凸包的坐标。如果为False，则返回与凸包点相对应的轮廓点的索引\n'''\nhull = cv.convexHull(cnt, returnPoints=True)  # True返回对应凸包的坐标值\nhull1 = cv.convexHull(cnt, returnPoints=False)  # False返回对应凸包的索引值\n'''\nhull数据解析例子：\n首先，我发现它的轮廓为cnt。现在，我发现它的带有returnPoints = True的凸包\n得到以下值：[[[234 202]]，[[51 202]]，[[51 79]]，[[234 79]]]，它们是四个角 矩形的点\n现在，如果对returnPoints = False执行相同的操作，则会得到以下结果：[[129]，[67]，[0]，[142]],这些是轮廓中相应点的索引。\n例如，检查第一个值：cnt [129] = [[234，202]]与第一个结果相同（对于其他结果依此类推）。\n'''\n# print(hull)\n# print(hull1)\n\n# 检查凸度\n'''\ncv.isContourConvex()具有检查曲线是否凸出的功能。它只是返回True还是False。\n'''\nk = cv.isContourConvex(cnt)\n\n# 直角矩形\n'''\n它是一个矩形，不考虑物体的旋转。所以边界矩形的面积不是最小的。它是由函数**cv.boundingRect**()找到的。\n令(x，y)为矩形的左上角坐标，而(w，h)为矩形的宽度和高度\n'''\nx, y, w, h = cv.boundingRect(cnt)\ncv.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)\n#  旋转矩形\n'''\n这里，边界矩形是用最小面积绘制的，所以它也考虑了旋转。使用的函数是**cv.minAreaRect**()。\n它返回一个Box2D结构，其中包含以下细节 -(中心(x,y)，(宽度，高度)，旋转角度)。\n但要画出这个矩形，我们需要矩形的四个角。它由函数**cv.boxPoints**()获得\n'''\nrect = cv.minAreaRect(cnt)\nbox = cv.boxPoints(rect)\nbox = np.int0(box)\ncv.drawContours(img, [box], 0, (0, 0, 255), 2)\n# 最小闭合圈\n'''\n接下来，使用函数**cv.minEnclosingCircle(*()查找对象的圆周。它是一个以最小面积完全覆盖物体的圆。\ndef minEnclosingCircle(points):\n@param points 轮廓list\nreturn: (x, y)圆心，radius半径\n'''\n(x, y), radius = cv.minEnclosingCircle(cnt)\ncenter = (int(x), int(y))\nradius = int(radius)\ncv.circle(img, center, radius, (0, 255, 0), 2)\n# 拟合一个椭圆\n# 下一个是把一个椭圆拟合到一个物体上。它返回内接椭圆的旋转矩形。\nellipse = cv.fitEllipse(cnt)\ncv.ellipse(img, ellipse, (0, 255, 0), 2)\n# 拟合直线\n# 同样，我们可以将一条直线拟合到一组点。下图包含一组白点。我们可以近似一条直线。\nrows, cols = img.shape[:2]\n[vx, vy, x, y] = cv.fitLine(cnt, cv.DIST_L2, 0, 0.01, 0.01)\nlefty = int((-x * vy / vx) + y)\nrighty = int(((cols - x) * vy / vx) + y)\ncv.line(img, (cols - 1, righty), (0, lefty), (0, 255, 0), 2)\n\n#\ncv.imshow('results', img)\ncv.waitKey()\ncv.destroyAllWindows()\n\n```","source":"_posts/OpenCV/轮廓/轮廓特征.md","raw":"---\ntitle: 轮廓特征学习\n---\n# 轮廓特征学习\n<!--more-->\n```\nimport numpy as np\nimport cv2 as cv\n\nimg = cv.imread(r'C:\\Users\\admin\\Desktop\\test_picture\\maomao.jpg', 0)\nret, thresh = cv.threshold(img, 127, 255, 0)\n'''\ndef findContours(image, mode, method, contours=None, hierarchy=None, offset=None):\n@param mode Contour retrieval mode, see #RetrievalModes     轮廓检索模式\n@param method Contour approximation method, see #ContourApproximationModes     轮廓近似法\nreturn： \n        contours：图像轮廓坐标，是一个链表, 多个轮廓的坐标值\n        hierarchy：[Next, Previous, First Child, Parent]\n            Next：与当前轮廓处于同一层级的下一条轮廓    \n            Previous：与当前轮廓处于同一层级的上一条轮廓    \n            First Child：当前轮廓的第一条子轮廓\n            Parent：当前轮廓的父轮廓\n'''\ncontours, hierarchy = cv.findContours(thresh, 1, 2)\n# print(contours)\n# print('---------------------------')\n# print(hierarchy)\ncnt = contours[0]\n# cnt1 = contours[1]\n# print(cnt)\n# print(cnt1)\n# print('============================')\n'''\ndef moments(array, binaryImage=None):\n@param array Raster image (single-channel, 8-bit or floating-point 2D array) or\n       an array (\\f$1 \\times N\\f$ or \\f$N \\times 1\\f$ ) of 2D points (Point or Point2f ).\n@param binaryImage If it is true, all non-zero image pixels are treated as 1's. \n       The parameter isused for images only.\nreturn: 返回质心坐标\n'''\nM = cv.moments(cnt)\nprint(M)\n# 质心\ncx = int(M['m10'] / M['m00'])\ncy = int(M['m01'] / M['m00'])\n# print(cx, cy)\n# 轮廓面积\narea = cv.contourArea(cnt)\n# print(area)\n# 轮廓周长\n# 也称为弧长。可以使用**cv.arcLength**()函数找到它。第二个参数指定形状是闭合轮廓(True)还是曲线。\nperimeter = cv.arcLength(cnt, True)\n# print(perimeter)\n# 轮廓近似\n# 根据我们指定的精度，它可以将轮廓形状近似为顶点数量较少的其他形状。它是Douglas-Peucker算法的实现。\nepsilon = 0.1 * cv.arcLength(cnt, True)\napprox = cv.approxPolyDP(cnt, epsilon, True)\n# 轮廓凸包\n'''\ndef convexHull(points, hull=None, clockwise=None, returnPoints=None):\n参数详细信息：\n@param  points: 点**是我们传递到的轮廓。 \n@param  hull: **凸包**是输出，通常我们忽略它。 \n@param  clockwise: **顺时针方向：方向标记。如果为True，则输出凸包为顺时针方向。否则，其方向为逆时针方向。\n@param  returnPoints：默认情况下为True。然后返回凸包的坐标。如果为False，则返回与凸包点相对应的轮廓点的索引\n'''\nhull = cv.convexHull(cnt, returnPoints=True)  # True返回对应凸包的坐标值\nhull1 = cv.convexHull(cnt, returnPoints=False)  # False返回对应凸包的索引值\n'''\nhull数据解析例子：\n首先，我发现它的轮廓为cnt。现在，我发现它的带有returnPoints = True的凸包\n得到以下值：[[[234 202]]，[[51 202]]，[[51 79]]，[[234 79]]]，它们是四个角 矩形的点\n现在，如果对returnPoints = False执行相同的操作，则会得到以下结果：[[129]，[67]，[0]，[142]],这些是轮廓中相应点的索引。\n例如，检查第一个值：cnt [129] = [[234，202]]与第一个结果相同（对于其他结果依此类推）。\n'''\n# print(hull)\n# print(hull1)\n\n# 检查凸度\n'''\ncv.isContourConvex()具有检查曲线是否凸出的功能。它只是返回True还是False。\n'''\nk = cv.isContourConvex(cnt)\n\n# 直角矩形\n'''\n它是一个矩形，不考虑物体的旋转。所以边界矩形的面积不是最小的。它是由函数**cv.boundingRect**()找到的。\n令(x，y)为矩形的左上角坐标，而(w，h)为矩形的宽度和高度\n'''\nx, y, w, h = cv.boundingRect(cnt)\ncv.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)\n#  旋转矩形\n'''\n这里，边界矩形是用最小面积绘制的，所以它也考虑了旋转。使用的函数是**cv.minAreaRect**()。\n它返回一个Box2D结构，其中包含以下细节 -(中心(x,y)，(宽度，高度)，旋转角度)。\n但要画出这个矩形，我们需要矩形的四个角。它由函数**cv.boxPoints**()获得\n'''\nrect = cv.minAreaRect(cnt)\nbox = cv.boxPoints(rect)\nbox = np.int0(box)\ncv.drawContours(img, [box], 0, (0, 0, 255), 2)\n# 最小闭合圈\n'''\n接下来，使用函数**cv.minEnclosingCircle(*()查找对象的圆周。它是一个以最小面积完全覆盖物体的圆。\ndef minEnclosingCircle(points):\n@param points 轮廓list\nreturn: (x, y)圆心，radius半径\n'''\n(x, y), radius = cv.minEnclosingCircle(cnt)\ncenter = (int(x), int(y))\nradius = int(radius)\ncv.circle(img, center, radius, (0, 255, 0), 2)\n# 拟合一个椭圆\n# 下一个是把一个椭圆拟合到一个物体上。它返回内接椭圆的旋转矩形。\nellipse = cv.fitEllipse(cnt)\ncv.ellipse(img, ellipse, (0, 255, 0), 2)\n# 拟合直线\n# 同样，我们可以将一条直线拟合到一组点。下图包含一组白点。我们可以近似一条直线。\nrows, cols = img.shape[:2]\n[vx, vy, x, y] = cv.fitLine(cnt, cv.DIST_L2, 0, 0.01, 0.01)\nlefty = int((-x * vy / vx) + y)\nrighty = int(((cols - x) * vy / vx) + y)\ncv.line(img, (cols - 1, righty), (0, lefty), (0, 255, 0), 2)\n\n#\ncv.imshow('results', img)\ncv.waitKey()\ncv.destroyAllWindows()\n\n```","slug":"OpenCV/轮廓/轮廓特征","published":1,"date":"2022-06-13T07:00:57.554Z","updated":"2022-06-13T07:01:47.673Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4zceeqi001t68ur0opg0102","content":"<h1 id=\"轮廓特征学习\"><a href=\"#轮廓特征学习\" class=\"headerlink\" title=\"轮廓特征学习\"></a>轮廓特征学习</h1><span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\test_picture\\maomao.jpg&#x27;, 0)</span><br><span class=\"line\">ret, thresh = cv.threshold(img, 127, 255, 0)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def findContours(image, mode, method, contours=None, hierarchy=None, offset=None):</span><br><span class=\"line\">@param mode Contour retrieval mode, see #RetrievalModes     轮廓检索模式</span><br><span class=\"line\">@param method Contour approximation method, see #ContourApproximationModes     轮廓近似法</span><br><span class=\"line\">return： </span><br><span class=\"line\">        contours：图像轮廓坐标，是一个链表, 多个轮廓的坐标值</span><br><span class=\"line\">        hierarchy：[Next, Previous, First Child, Parent]</span><br><span class=\"line\">            Next：与当前轮廓处于同一层级的下一条轮廓    </span><br><span class=\"line\">            Previous：与当前轮廓处于同一层级的上一条轮廓    </span><br><span class=\"line\">            First Child：当前轮廓的第一条子轮廓</span><br><span class=\"line\">            Parent：当前轮廓的父轮廓</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">contours, hierarchy = cv.findContours(thresh, 1, 2)</span><br><span class=\"line\"># print(contours)</span><br><span class=\"line\"># print(&#x27;---------------------------&#x27;)</span><br><span class=\"line\"># print(hierarchy)</span><br><span class=\"line\">cnt = contours[0]</span><br><span class=\"line\"># cnt1 = contours[1]</span><br><span class=\"line\"># print(cnt)</span><br><span class=\"line\"># print(cnt1)</span><br><span class=\"line\"># print(&#x27;============================&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def moments(array, binaryImage=None):</span><br><span class=\"line\">@param array Raster image (single-channel, 8-bit or floating-point 2D array) or</span><br><span class=\"line\">       an array (\\f$1 \\times N\\f$ or \\f$N \\times 1\\f$ ) of 2D points (Point or Point2f ).</span><br><span class=\"line\">@param binaryImage If it is true, all non-zero image pixels are treated as 1&#x27;s. </span><br><span class=\"line\">       The parameter isused for images only.</span><br><span class=\"line\">return: 返回质心坐标</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">M = cv.moments(cnt)</span><br><span class=\"line\">print(M)</span><br><span class=\"line\"># 质心</span><br><span class=\"line\">cx = int(M[&#x27;m10&#x27;] / M[&#x27;m00&#x27;])</span><br><span class=\"line\">cy = int(M[&#x27;m01&#x27;] / M[&#x27;m00&#x27;])</span><br><span class=\"line\"># print(cx, cy)</span><br><span class=\"line\"># 轮廓面积</span><br><span class=\"line\">area = cv.contourArea(cnt)</span><br><span class=\"line\"># print(area)</span><br><span class=\"line\"># 轮廓周长</span><br><span class=\"line\"># 也称为弧长。可以使用**cv.arcLength**()函数找到它。第二个参数指定形状是闭合轮廓(True)还是曲线。</span><br><span class=\"line\">perimeter = cv.arcLength(cnt, True)</span><br><span class=\"line\"># print(perimeter)</span><br><span class=\"line\"># 轮廓近似</span><br><span class=\"line\"># 根据我们指定的精度，它可以将轮廓形状近似为顶点数量较少的其他形状。它是Douglas-Peucker算法的实现。</span><br><span class=\"line\">epsilon = 0.1 * cv.arcLength(cnt, True)</span><br><span class=\"line\">approx = cv.approxPolyDP(cnt, epsilon, True)</span><br><span class=\"line\"># 轮廓凸包</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def convexHull(points, hull=None, clockwise=None, returnPoints=None):</span><br><span class=\"line\">参数详细信息：</span><br><span class=\"line\">@param  points: 点**是我们传递到的轮廓。 </span><br><span class=\"line\">@param  hull: **凸包**是输出，通常我们忽略它。 </span><br><span class=\"line\">@param  clockwise: **顺时针方向：方向标记。如果为True，则输出凸包为顺时针方向。否则，其方向为逆时针方向。</span><br><span class=\"line\">@param  returnPoints：默认情况下为True。然后返回凸包的坐标。如果为False，则返回与凸包点相对应的轮廓点的索引</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">hull = cv.convexHull(cnt, returnPoints=True)  # True返回对应凸包的坐标值</span><br><span class=\"line\">hull1 = cv.convexHull(cnt, returnPoints=False)  # False返回对应凸包的索引值</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">hull数据解析例子：</span><br><span class=\"line\">首先，我发现它的轮廓为cnt。现在，我发现它的带有returnPoints = True的凸包</span><br><span class=\"line\">得到以下值：[[[234 202]]，[[51 202]]，[[51 79]]，[[234 79]]]，它们是四个角 矩形的点</span><br><span class=\"line\">现在，如果对returnPoints = False执行相同的操作，则会得到以下结果：[[129]，[67]，[0]，[142]],这些是轮廓中相应点的索引。</span><br><span class=\"line\">例如，检查第一个值：cnt [129] = [[234，202]]与第一个结果相同（对于其他结果依此类推）。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># print(hull)</span><br><span class=\"line\"># print(hull1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 检查凸度</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.isContourConvex()具有检查曲线是否凸出的功能。它只是返回True还是False。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">k = cv.isContourConvex(cnt)</span><br><span class=\"line\"></span><br><span class=\"line\"># 直角矩形</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">它是一个矩形，不考虑物体的旋转。所以边界矩形的面积不是最小的。它是由函数**cv.boundingRect**()找到的。</span><br><span class=\"line\">令(x，y)为矩形的左上角坐标，而(w，h)为矩形的宽度和高度</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">x, y, w, h = cv.boundingRect(cnt)</span><br><span class=\"line\">cv.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)</span><br><span class=\"line\">#  旋转矩形</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">这里，边界矩形是用最小面积绘制的，所以它也考虑了旋转。使用的函数是**cv.minAreaRect**()。</span><br><span class=\"line\">它返回一个Box2D结构，其中包含以下细节 -(中心(x,y)，(宽度，高度)，旋转角度)。</span><br><span class=\"line\">但要画出这个矩形，我们需要矩形的四个角。它由函数**cv.boxPoints**()获得</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">rect = cv.minAreaRect(cnt)</span><br><span class=\"line\">box = cv.boxPoints(rect)</span><br><span class=\"line\">box = np.int0(box)</span><br><span class=\"line\">cv.drawContours(img, [box], 0, (0, 0, 255), 2)</span><br><span class=\"line\"># 最小闭合圈</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">接下来，使用函数**cv.minEnclosingCircle(*()查找对象的圆周。它是一个以最小面积完全覆盖物体的圆。</span><br><span class=\"line\">def minEnclosingCircle(points):</span><br><span class=\"line\">@param points 轮廓list</span><br><span class=\"line\">return: (x, y)圆心，radius半径</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">(x, y), radius = cv.minEnclosingCircle(cnt)</span><br><span class=\"line\">center = (int(x), int(y))</span><br><span class=\"line\">radius = int(radius)</span><br><span class=\"line\">cv.circle(img, center, radius, (0, 255, 0), 2)</span><br><span class=\"line\"># 拟合一个椭圆</span><br><span class=\"line\"># 下一个是把一个椭圆拟合到一个物体上。它返回内接椭圆的旋转矩形。</span><br><span class=\"line\">ellipse = cv.fitEllipse(cnt)</span><br><span class=\"line\">cv.ellipse(img, ellipse, (0, 255, 0), 2)</span><br><span class=\"line\"># 拟合直线</span><br><span class=\"line\"># 同样，我们可以将一条直线拟合到一组点。下图包含一组白点。我们可以近似一条直线。</span><br><span class=\"line\">rows, cols = img.shape[:2]</span><br><span class=\"line\">[vx, vy, x, y] = cv.fitLine(cnt, cv.DIST_L2, 0, 0.01, 0.01)</span><br><span class=\"line\">lefty = int((-x * vy / vx) + y)</span><br><span class=\"line\">righty = int(((cols - x) * vy / vx) + y)</span><br><span class=\"line\">cv.line(img, (cols - 1, righty), (0, lefty), (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\">cv.imshow(&#x27;results&#x27;, img)</span><br><span class=\"line\">cv.waitKey()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"轮廓特征学习\"><a href=\"#轮廓特征学习\" class=\"headerlink\" title=\"轮廓特征学习\"></a>轮廓特征学习</h1>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import cv2 as cv</span><br><span class=\"line\"></span><br><span class=\"line\">img = cv.imread(r&#x27;C:\\Users\\admin\\Desktop\\test_picture\\maomao.jpg&#x27;, 0)</span><br><span class=\"line\">ret, thresh = cv.threshold(img, 127, 255, 0)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def findContours(image, mode, method, contours=None, hierarchy=None, offset=None):</span><br><span class=\"line\">@param mode Contour retrieval mode, see #RetrievalModes     轮廓检索模式</span><br><span class=\"line\">@param method Contour approximation method, see #ContourApproximationModes     轮廓近似法</span><br><span class=\"line\">return： </span><br><span class=\"line\">        contours：图像轮廓坐标，是一个链表, 多个轮廓的坐标值</span><br><span class=\"line\">        hierarchy：[Next, Previous, First Child, Parent]</span><br><span class=\"line\">            Next：与当前轮廓处于同一层级的下一条轮廓    </span><br><span class=\"line\">            Previous：与当前轮廓处于同一层级的上一条轮廓    </span><br><span class=\"line\">            First Child：当前轮廓的第一条子轮廓</span><br><span class=\"line\">            Parent：当前轮廓的父轮廓</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">contours, hierarchy = cv.findContours(thresh, 1, 2)</span><br><span class=\"line\"># print(contours)</span><br><span class=\"line\"># print(&#x27;---------------------------&#x27;)</span><br><span class=\"line\"># print(hierarchy)</span><br><span class=\"line\">cnt = contours[0]</span><br><span class=\"line\"># cnt1 = contours[1]</span><br><span class=\"line\"># print(cnt)</span><br><span class=\"line\"># print(cnt1)</span><br><span class=\"line\"># print(&#x27;============================&#x27;)</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def moments(array, binaryImage=None):</span><br><span class=\"line\">@param array Raster image (single-channel, 8-bit or floating-point 2D array) or</span><br><span class=\"line\">       an array (\\f$1 \\times N\\f$ or \\f$N \\times 1\\f$ ) of 2D points (Point or Point2f ).</span><br><span class=\"line\">@param binaryImage If it is true, all non-zero image pixels are treated as 1&#x27;s. </span><br><span class=\"line\">       The parameter isused for images only.</span><br><span class=\"line\">return: 返回质心坐标</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">M = cv.moments(cnt)</span><br><span class=\"line\">print(M)</span><br><span class=\"line\"># 质心</span><br><span class=\"line\">cx = int(M[&#x27;m10&#x27;] / M[&#x27;m00&#x27;])</span><br><span class=\"line\">cy = int(M[&#x27;m01&#x27;] / M[&#x27;m00&#x27;])</span><br><span class=\"line\"># print(cx, cy)</span><br><span class=\"line\"># 轮廓面积</span><br><span class=\"line\">area = cv.contourArea(cnt)</span><br><span class=\"line\"># print(area)</span><br><span class=\"line\"># 轮廓周长</span><br><span class=\"line\"># 也称为弧长。可以使用**cv.arcLength**()函数找到它。第二个参数指定形状是闭合轮廓(True)还是曲线。</span><br><span class=\"line\">perimeter = cv.arcLength(cnt, True)</span><br><span class=\"line\"># print(perimeter)</span><br><span class=\"line\"># 轮廓近似</span><br><span class=\"line\"># 根据我们指定的精度，它可以将轮廓形状近似为顶点数量较少的其他形状。它是Douglas-Peucker算法的实现。</span><br><span class=\"line\">epsilon = 0.1 * cv.arcLength(cnt, True)</span><br><span class=\"line\">approx = cv.approxPolyDP(cnt, epsilon, True)</span><br><span class=\"line\"># 轮廓凸包</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">def convexHull(points, hull=None, clockwise=None, returnPoints=None):</span><br><span class=\"line\">参数详细信息：</span><br><span class=\"line\">@param  points: 点**是我们传递到的轮廓。 </span><br><span class=\"line\">@param  hull: **凸包**是输出，通常我们忽略它。 </span><br><span class=\"line\">@param  clockwise: **顺时针方向：方向标记。如果为True，则输出凸包为顺时针方向。否则，其方向为逆时针方向。</span><br><span class=\"line\">@param  returnPoints：默认情况下为True。然后返回凸包的坐标。如果为False，则返回与凸包点相对应的轮廓点的索引</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">hull = cv.convexHull(cnt, returnPoints=True)  # True返回对应凸包的坐标值</span><br><span class=\"line\">hull1 = cv.convexHull(cnt, returnPoints=False)  # False返回对应凸包的索引值</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">hull数据解析例子：</span><br><span class=\"line\">首先，我发现它的轮廓为cnt。现在，我发现它的带有returnPoints = True的凸包</span><br><span class=\"line\">得到以下值：[[[234 202]]，[[51 202]]，[[51 79]]，[[234 79]]]，它们是四个角 矩形的点</span><br><span class=\"line\">现在，如果对returnPoints = False执行相同的操作，则会得到以下结果：[[129]，[67]，[0]，[142]],这些是轮廓中相应点的索引。</span><br><span class=\"line\">例如，检查第一个值：cnt [129] = [[234，202]]与第一个结果相同（对于其他结果依此类推）。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\"># print(hull)</span><br><span class=\"line\"># print(hull1)</span><br><span class=\"line\"></span><br><span class=\"line\"># 检查凸度</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">cv.isContourConvex()具有检查曲线是否凸出的功能。它只是返回True还是False。</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">k = cv.isContourConvex(cnt)</span><br><span class=\"line\"></span><br><span class=\"line\"># 直角矩形</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">它是一个矩形，不考虑物体的旋转。所以边界矩形的面积不是最小的。它是由函数**cv.boundingRect**()找到的。</span><br><span class=\"line\">令(x，y)为矩形的左上角坐标，而(w，h)为矩形的宽度和高度</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">x, y, w, h = cv.boundingRect(cnt)</span><br><span class=\"line\">cv.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)</span><br><span class=\"line\">#  旋转矩形</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">这里，边界矩形是用最小面积绘制的，所以它也考虑了旋转。使用的函数是**cv.minAreaRect**()。</span><br><span class=\"line\">它返回一个Box2D结构，其中包含以下细节 -(中心(x,y)，(宽度，高度)，旋转角度)。</span><br><span class=\"line\">但要画出这个矩形，我们需要矩形的四个角。它由函数**cv.boxPoints**()获得</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">rect = cv.minAreaRect(cnt)</span><br><span class=\"line\">box = cv.boxPoints(rect)</span><br><span class=\"line\">box = np.int0(box)</span><br><span class=\"line\">cv.drawContours(img, [box], 0, (0, 0, 255), 2)</span><br><span class=\"line\"># 最小闭合圈</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">接下来，使用函数**cv.minEnclosingCircle(*()查找对象的圆周。它是一个以最小面积完全覆盖物体的圆。</span><br><span class=\"line\">def minEnclosingCircle(points):</span><br><span class=\"line\">@param points 轮廓list</span><br><span class=\"line\">return: (x, y)圆心，radius半径</span><br><span class=\"line\">&#x27;&#x27;&#x27;</span><br><span class=\"line\">(x, y), radius = cv.minEnclosingCircle(cnt)</span><br><span class=\"line\">center = (int(x), int(y))</span><br><span class=\"line\">radius = int(radius)</span><br><span class=\"line\">cv.circle(img, center, radius, (0, 255, 0), 2)</span><br><span class=\"line\"># 拟合一个椭圆</span><br><span class=\"line\"># 下一个是把一个椭圆拟合到一个物体上。它返回内接椭圆的旋转矩形。</span><br><span class=\"line\">ellipse = cv.fitEllipse(cnt)</span><br><span class=\"line\">cv.ellipse(img, ellipse, (0, 255, 0), 2)</span><br><span class=\"line\"># 拟合直线</span><br><span class=\"line\"># 同样，我们可以将一条直线拟合到一组点。下图包含一组白点。我们可以近似一条直线。</span><br><span class=\"line\">rows, cols = img.shape[:2]</span><br><span class=\"line\">[vx, vy, x, y] = cv.fitLine(cnt, cv.DIST_L2, 0, 0.01, 0.01)</span><br><span class=\"line\">lefty = int((-x * vy / vx) + y)</span><br><span class=\"line\">righty = int(((cols - x) * vy / vx) + y)</span><br><span class=\"line\">cv.line(img, (cols - 1, righty), (0, lefty), (0, 255, 0), 2)</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\">cv.imshow(&#x27;results&#x27;, img)</span><br><span class=\"line\">cv.waitKey()</span><br><span class=\"line\">cv.destroyAllWindows()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}